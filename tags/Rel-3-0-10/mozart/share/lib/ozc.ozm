%% Code Size:
312657 % words
		skip
lbl(1)		definition(x(0) 312654 pid('Toplevel abstraction' 0 pos('' 0 0) [native] 1474) unit [g(0)])
		allocateL(238)
		putConstant('Exception.raise' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putConstant('Exception.raiseError' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Record.record' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
		putConstant('Dictionary.member' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.get' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.put' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
lbl(63)		definition(x(2) 89 pid('`runTimePut`' 2 pos('./standard/Forward.oz' 45 3) nil 4) <P: 1> [g(0)])
		move(g(0) x(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 83)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(83)		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
		endDefinition(63)
lbl(89)		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(4) y(2) y(0) x(1))
		putConstant('Raise' x(0))
		genFastCall(<P: 1> 4)
		move(y(1) x(1))
		putConstant('RaiseError' x(0))
		genFastCall(<P: 1> 4)
		move(y(2) x(1))
		putConstant(record x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.wait' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putConstant('Value.waitOr' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Value.isFree' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
		putConstant('Value.isKinded' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
		putConstant('Value.isDet' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(6)])
		putConstant('Value.max' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(7)])
		putConstant('Value.min' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(8)])
		putConstant('Value.condSelect' x(2))
		putConstant(4 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(9)])
		putConstant('Value.hasFeature' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(10)])
		putConstant('Value.byNeed' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(11)])
		putConstant('Record.\'.\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(12)])
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYXY(x(6) y(7) x(8) y(8))
		moveMoveXYXY(x(7) y(9) x(9) y(10))
		moveMoveXYXY(x(10) y(11) x(11) y(12))
		move(x(12) x(1))
		putConstant('.' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'==\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('==' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'=\'' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'\\=\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('\\=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'<\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'=<\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('=<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'>=\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('>=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.\'>\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('>' x(0))
		genFastCall(<P: 1> 4)
		move(y(11) x(1))
		putConstant(hasFeature x(0))
		genFastCall(<P: 1> 4)
		move(y(12) x(1))
		putConstant(byNeed x(0))
		genFastCall(<P: 1> 4)
		putConstant('Value.future' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('!!' x(0))
		genFastCall(<P: 1> 4)
		putRecord(value ['.' '<' '=' '=<' '==' '>' '>=' '\\=' byNeed condSelect hasFeature isDet isFree isKinded max min status type 'wait' waitOr] y(13))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setValue(y(12))
		setValue(y(10))
		setValue(y(11))
		setValue(y(7))
		setValue(y(5))
		setValue(y(6))
		setValue(y(9))
		setValue(y(8))
		setVariable(x(8))
		setVariable(x(9))
		setValue(y(3))
		setValue(y(4))
		putConstant('Value.\'=<\'' x(10))
		putConstant(3 x(11))
		callBI('Boot.builtin' [x(10) x(11)]#[x(12)])
		unify(x(12) x(3))
		putConstant('Value.\'<\'' x(3))
		putConstant(3 x(10))
		callBI('Boot.builtin' [x(3) x(10)]#[x(11)])
		unify(x(11) x(1))
		putConstant('Value.\'>=\'' x(3))
		putConstant(3 x(10))
		callBI('Boot.builtin' [x(3) x(10)]#[x(1)])
		unify(x(1) x(6))
		putConstant('Value.\'>\'' x(3))
		putConstant(3 x(6))
		callBI('Boot.builtin' [x(3) x(6)]#[x(1)])
		unify(x(1) x(5))
		putConstant('Value.\'==\'' x(3))
		putConstant(3 x(5))
		callBI('Boot.builtin' [x(3) x(5)]#[x(1)])
		unify(x(1) x(4))
		putConstant('Value.\'=\'' x(3))
		putConstant(2 x(4))
		callBI('Boot.builtin' [x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		putConstant('Value.\'\\=\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		unify(x(1) x(7))
		putConstant('Record.\'.\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('Value.status' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		unify(x(0) x(8))
		putConstant('Value.type' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		unify(x(0) x(9))
		putConstant('Literal.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putRecord(literal [is] y(14))
		setValue(x(0))
		putConstant('Name.newUnique' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
		putConstant('Unit.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putRecord('unit' [is 'unit'] y(15))
		setValue(x(1))
		setConstant(unit)
		putConstant('Lock.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
		putConstant('Lock.new' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
		putRecord('lock' [is new] y(16))
		setValue(x(4))
		setValue(x(5))
		putConstant('Cell.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(6)])
		putConstant('Cell.new' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(7)])
		putConstant('Cell.exchange' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(8)])
		putConstant('Cell.assign' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(10)])
		putConstant('Cell.access' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(11)])
		putRecord(cell [access assign exchange is new] y(17))
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		putConstant('Port.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(12)])
		putConstant('Port.new' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(13)])
		putConstant('Port.send' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(14)])
		putRecord(port [is new send] y(18))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('Atom.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(15)])
		putConstant('Atom.toString' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(16)])
		putRecord(atom [is toString] y(19))
		setValue(x(15))
		setValue(x(16))
		putConstant('Name.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(17)])
		putConstant('Name.new' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(18)])
		putRecord(name [is new] y(20))
		setValue(x(17))
		setValue(x(18))
		putConstant('Name.newUnique' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(19)])
		putConstant('Bool.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(19)])
		putConstant('Bool.not' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(20)])
		putConstant('Bool.and' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(21)])
		putConstant('Bool.or' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(22)])
		putRecord(bool [and 'false' is 'not' 'or' 'true'] y(21))
		setValue(x(21))
		setConstant(false)
		setValue(x(19))
		setValue(x(20))
		setValue(x(22))
		setConstant(true)
		putConstant('String.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(23)])
		putConstant('String.toAtom' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(24)])
		putConstant('String.toInt' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(25)])
		putConstant('String.toFloat' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(26)])
lbl(870)	definition(x(2) 925 pid('Token' 4 pos('./standard/String.oz' 44 3) nil 6) <P: 2> nil)
		match(x(0) ht(910 [onScalar(nil 879) onRecord('|' 2 886)]))
lbl(879)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(886)	getVarVar(x(0) x(4))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(5)] 900)
		getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(900)	getListValVar(x(2) x(0) x(2))
		move(x(4) x(0))
		genFastCall(<P: 2> 9)
lbl(910)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(50)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(870)
lbl(925)	definition(x(3) 1002 pid('Tokens' 5 pos('./standard/String.oz' 53 3) nil 7) <P: 3> nil)
		match(x(0) ht(987 [onScalar(nil 934) onRecord('|' 2 952)]))
lbl(934)	getLiteral(nil x(3))
		testLiteral(x(2) nil 945)
lbl(941)	getLiteral(nil x(4))
		return
lbl(945)	getList(x(4))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(952)	getVarVar(x(0) x(5))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(6)] 977)
		getLiteral(nil x(3))
		getListValVar(x(4) x(2) x(4))
		createVariable(x(2))
		move(x(5) x(0))
		move(x(2) x(3))
		genFastCall(<P: 3> 11)
lbl(977)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 3> 11)
lbl(987)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(62)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(925)
lbl(1002)	definition(x(3) 1047 pid('StringIsAtom' 2 pos('./standard/String.oz' 65 3) nil 3) <P: 4> nil)
		match(x(0) ht(1032 [onScalar(nil 1011) onRecord('|' 2 1015)]))
lbl(1011)	getLiteral(true x(1))
		return
lbl(1015)	getVarVar(x(0) x(2))
		testNumber(x(0) 0 1026)
lbl(1022)	getLiteral(false x(1))
		return
lbl(1026)	move(x(2) x(0))
		genFastCall(<P: 4> 5)
lbl(1032)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(68)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(1002)
lbl(1047)	putRecord(string [is isAtom isFloat isInt toAtom toFloat toInt token tokens] y(22))
		setValue(x(23))
		setValue(x(3))
		setVariable(y(23))
		setVariable(y(24))
		setValue(x(24))
		setValue(x(26))
		setValue(x(25))
		setValue(x(2))
		setVariable(x(27))
lbl(1069)	definition(x(3) 1116 pid('String.isInt' 2 pos('./standard/String.oz' 75 14) nil 2) <P: 5> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1102)
		move(x(0) y(0))
		createCond(1096)
lbl(1088)	lastClause
		clause
		ask
lbl(1091)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1096)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1102)	move(y(0) x(0))
		callBI('String.toInt' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1069)
lbl(1116)	unify(x(3) y(24))
lbl(1119)	definition(x(3) 1166 pid('String.isFloat' 2 pos('./standard/String.oz' 81 14) nil 2) <P: 6> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1152)
		move(x(0) y(0))
		createCond(1146)
lbl(1138)	lastClause
		clause
		ask
lbl(1141)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1146)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1152)	move(y(0) x(0))
		callBI('String.toFloat' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1119)
lbl(1166)	unify(x(3) y(23))
lbl(1169)	definition(x(3) 1191 pid('String.tokens' 3 pos('./standard/String.oz' 88 14) nil 6) <P: 7> nil)
		createVariable(x(5))
		move(x(2) x(4))
		move(x(5) x(2))
		move(x(5) x(3))
		genFastCall(<P: 3> 11)
		endDefinition(1169)
lbl(1191)	unify(x(3) x(27))
		putConstant('Char.is' x(3))
		putConstant(2 x(27))
		callBI('Boot.builtin' [x(3) x(27)]#[x(28)])
		putRecord(char [is isAlNum isAlpha isCntrl isDigit isGraph isLower isPrint isPunct isSpace isUpper isXDigit toAtom toLower toUpper type] y(25))
		setValue(x(28))
		setVariable(x(3))
		setVariable(x(27))
		setVariable(x(29))
		setVariable(x(30))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(x(33))
		setVariable(x(34))
		setVariable(x(35))
		setVariable(x(36))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setVariable(x(40))
		setVariable(x(41))
		putConstant('Char.isAlpha' x(42))
		putConstant(2 x(43))
		callBI('Boot.builtin' [x(42) x(43)]#[x(44)])
		unify(x(44) x(27))
		putConstant('Char.isUpper' x(27))
		putConstant(2 x(42))
		callBI('Boot.builtin' [x(27) x(42)]#[x(43)])
		unify(x(43) x(36))
		putConstant('Char.isLower' x(27))
		putConstant(2 x(42))
		callBI('Boot.builtin' [x(27) x(42)]#[x(43)])
		unify(x(43) x(32))
		putConstant('Char.isDigit' x(27))
		putConstant(2 x(32))
		callBI('Boot.builtin' [x(27) x(32)]#[x(42)])
		unify(x(42) x(30))
		putConstant('Char.isXDigit' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(32)])
		unify(x(32) x(37))
		putConstant('Char.isAlNum' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(32)])
		unify(x(32) x(3))
		putConstant('Char.isSpace' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(32)])
		unify(x(32) x(35))
		putConstant('Char.isGraph' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(32)])
		unify(x(32) x(31))
		putConstant('Char.isPrint' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(31)])
		unify(x(31) x(33))
		putConstant('Char.isPunct' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(31)])
		unify(x(31) x(34))
		putConstant('Char.isCntrl' x(27))
		putConstant(2 x(30))
		callBI('Boot.builtin' [x(27) x(30)]#[x(31)])
		unify(x(31) x(29))
		putConstant('Char.toUpper' x(27))
		putConstant(2 x(29))
		callBI('Boot.builtin' [x(27) x(29)]#[x(30)])
		unify(x(30) x(40))
		putConstant('Char.toLower' x(27))
		putConstant(2 x(29))
		callBI('Boot.builtin' [x(27) x(29)]#[x(30)])
		unify(x(30) x(39))
		putConstant('Char.toAtom' x(27))
		putConstant(2 x(29))
		callBI('Boot.builtin' [x(27) x(29)]#[x(30)])
		unify(x(30) x(38))
		putConstant('Char.type' x(27))
		putConstant(2 x(29))
		callBI('Boot.builtin' [x(27) x(29)]#[x(30)])
		unify(x(30) x(41))
		putConstant('Int.div' x(27))
		putConstant(3 x(29))
		callBI('Boot.builtin' [x(27) x(29)]#[x(30)])
		moveMoveXYXY(x(0) y(26) x(1) y(27))
		moveMoveXYXY(x(4) y(28) x(5) y(29))
		moveMoveXYXY(x(6) y(30) x(7) y(31))
		moveMoveXYXY(x(8) y(32) x(10) y(33))
		moveMoveXYXY(x(11) y(34) x(12) y(35))
		moveMoveXYXY(x(13) y(36) x(14) y(37))
		moveMoveXYXY(x(15) y(38) x(16) y(39))
		moveMoveXYXY(x(17) y(40) x(18) y(41))
		moveMoveXYXY(x(19) y(42) x(21) y(43))
		moveMoveXYXY(x(22) y(44) x(20) y(45))
		moveMoveXYXY(x(23) y(46) x(24) y(47))
		moveMoveXYXY(x(25) y(48) x(26) y(49))
		moveMoveXYXY(x(28) y(50) x(9) y(51))
		moveMoveXYXY(x(36) y(52) x(3) y(53))
		moveMoveXYXY(x(39) y(54) x(2) y(55))
		move(x(30) x(1))
		putConstant('div' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Int.mod' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('mod' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Int.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putConstant('Int.toFloat' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Int.toString' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
lbl(1554)	definition(x(2) 1572 pid('IsNat' 2 pos('./standard/Int.oz' 44 0) nil 4) <P: 8> nil)
		putConstant(0 x(2))
		callBI('Value.\'=<\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(1554)
lbl(1572)	definition(x(3) 1596 pid('IsOdd' 2 pos('./standard/Int.oz' 45 0) nil 4) <P: 9> nil)
		putConstant(2 x(2))
		callBI('Int.mod' [x(0) x(2)]#[x(3)])
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1572)
lbl(1596)	definition(x(5) 1620 pid('IsEven' 2 pos('./standard/Int.oz' 46 0) nil 4) <P: 10> nil)
		putConstant(2 x(2))
		callBI('Int.mod' [x(0) x(2)]#[x(3)])
		putConstant(0 x(0))
		callBI('Value.\'==\'' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1596)
lbl(1620)	putRecord(int ['div' is isEven isNat isOdd 'mod' toFloat toString] y(56))
		setVariable(x(6))
		setValue(x(0))
		setValue(x(5))
		setValue(x(2))
		setValue(x(3))
		setVariable(x(7))
		setValue(x(1))
		setValue(x(4))
		putConstant('Int.div' x(8))
		putConstant(3 x(9))
		callBI('Boot.builtin' [x(8) x(9)]#[x(10)])
		unify(x(10) x(6))
		putConstant('Int.mod' x(6))
		putConstant(3 x(8))
		callBI('Boot.builtin' [x(6) x(8)]#[x(9)])
		unify(x(9) x(7))
		putConstant('Number.\'/\'' x(6))
		putConstant(3 x(7))
		callBI('Boot.builtin' [x(6) x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(57) x(2) y(58))
		moveMoveXYXY(x(3) y(59) x(5) y(60))
		moveMoveXYXY(x(1) y(61) x(4) y(62))
		move(x(8) x(1))
		putConstant('/' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Float.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putConstant('Float.exp' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Float.log' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
		putConstant('Float.sqrt' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
		putConstant('Float.ceil' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(6)])
		putConstant('Float.floor' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(7)])
		putConstant('Float.sin' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(8)])
		putConstant('Float.cos' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(9)])
		putConstant('Float.tan' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(10)])
		putConstant('Float.asin' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(11)])
		putConstant('Float.acos' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(12)])
		putConstant('Float.atan' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(13)])
		putConstant('Float.atan2' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(14)])
		putConstant('Float.round' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(15)])
		putConstant('Float.toInt' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(16)])
		putConstant('Float.toString' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(17)])
		putRecord(float ['/' acos asin atan atan2 ceil cos exp floor is log round sin sqrt tan toInt toString] y(63))
		setVariable(x(2))
		setValue(x(12))
		setValue(x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(6))
		setValue(x(9))
		setValue(x(1))
		setValue(x(7))
		setValue(x(0))
		setValue(x(4))
		setValue(x(15))
		setValue(x(8))
		setValue(x(5))
		setValue(x(10))
		setValue(x(16))
		setValue(x(17))
		putConstant('Number.\'/\'' x(3))
		putConstant(3 x(18))
		callBI('Boot.builtin' [x(3) x(18)]#[x(19)])
		unify(x(19) x(2))
		putConstant('Number.\'+\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(18)])
		moveMoveXYXY(x(0) y(64) x(1) y(65))
		moveMoveXYXY(x(4) y(66) x(5) y(67))
		moveMoveXYXY(x(6) y(68) x(7) y(69))
		moveMoveXYXY(x(15) y(70) x(8) y(71))
		moveMoveXYXY(x(9) y(72) x(10) y(73))
		moveMoveXYXY(x(11) y(74) x(12) y(75))
		moveMoveXYXY(x(13) y(76) x(14) y(77))
		moveMoveXYXY(x(16) y(78) x(17) y(79))
		move(x(18) x(1))
		putConstant('+' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Number.\'-\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('-' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Number.\'*\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('*' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Number.\'~\'' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('~' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Number.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
		putConstant('Number.abs' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Float.fPow' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
lbl(2021)	definition(x(2) 2080 pid('IntPow' 4 pos('./standard/Number.oz' 47 3) nil 7) <P: 11> nil)
		testNumber(x(1) 0 2035)
		unify(x(3) x(2))
		return
lbl(2035)	putConstant(2 x(4))
		callBI('Int.mod' [x(1) x(4)]#[x(5)])
		testNumber(x(5) 0 2063)
		callBI('Number.\'*\'' [x(0) x(0)]#[x(4)])
		putConstant(2 x(5))
		callBI('Int.div' [x(1) x(5)]#[x(6)])
		move(x(4) x(0))
		move(x(6) x(1))
		genFastCall(<P: 11> 9)
lbl(2063)	inlineMinus1(x(1) x(4))
		callBI('Number.\'*\'' [x(2) x(0)]#[x(5)])
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<P: 11> 9)
		endDefinition(2021)
lbl(2080)	definition(x(2) 2175 pid('Pow' 3 pos('./standard/Number.oz' 54 3) nil 5) <P: 12> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('Int.is' [x(0)]#[x(3)] 2129)
lbl(2099)	testBI('Int.is' [x(1)]#[x(3)] 2129)
lbl(2103)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2121)
		move(y(2) x(3))
		putConstant(1 x(2))
		deAllocateL3
		genFastCall(<P: 11> 9)
lbl(2121)	getNumber(0 y(1))
		getNumber(1 y(2))
		deAllocateL3
		return
lbl(2129)	move(y(0) x(0))
		testBI('Float.is' [x(0)]#[x(1)] 2162)
lbl(2136)	move(y(1) x(1))
		testBI('Float.is' [x(1)]#[x(2)] 2151)
lbl(2143)	callBI('Float.fPow' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL3
		return
lbl(2151)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(2162)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2080)
lbl(2175)	putRecord(number ['*' '+' '-' abs is pow '~'] y(80))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setValue(x(1))
		setValue(x(0))
		setValue(x(2))
		setVariable(x(6))
		putConstant('Number.\'+\'' x(7))
		putConstant(3 x(8))
		callBI('Boot.builtin' [x(7) x(8)]#[x(9)])
		unify(x(9) x(4))
		putConstant('Number.\'-\'' x(4))
		putConstant(3 x(7))
		callBI('Boot.builtin' [x(4) x(7)]#[x(8)])
		unify(x(8) x(5))
		putConstant('Number.\'*\'' x(4))
		putConstant(3 x(5))
		callBI('Boot.builtin' [x(4) x(5)]#[x(7)])
		unify(x(7) x(3))
		putConstant('Number.\'~\'' x(3))
		putConstant(2 x(4))
		callBI('Boot.builtin' [x(3) x(4)]#[x(5)])
		unify(x(5) x(6))
		putConstant('Tuple.is' x(3))
		putConstant(2 x(4))
		callBI('Boot.builtin' [x(3) x(4)]#[x(5)])
		putConstant('Tuple.make' x(3))
		putConstant(3 x(4))
		callBI('Boot.builtin' [x(3) x(4)]#[x(7)])
lbl(2259)	definition(x(3) 2294 pid('Copy' 4 pos('./standard/Tuple.oz' 42 3) nil 6) <P: 13> nil)
		testNumber(x(0) 0 2270)
		return
lbl(2270)	inlinePlus(x(0) x(1) x(4))
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		callBI('Record.\'.\'' [x(2) x(0)]#[x(4)])
		unify(x(4) x(5))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 13> 9)
		endDefinition(2259)
lbl(2294)	createVariable(y(81))
		createVariable(y(82))
		createVariable(y(83))
lbl(2300)	definition(x(3) 2409 pid('Append' 3 pos('./standard/Tuple.oz' 45 3) nil 5) <P: 14> [y(81) y(82) y(83)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testNumber(y(3) 0 2339)
		unify(y(2) y(1))
		deAllocateL6
		return
lbl(2339)	testNumber(y(4) 0 2355)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		genCall(gci(g(1) false '' true 3) 0)
lbl(2355)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(5) x(3))
		callBI('Tuple.make' [x(3) x(2)]#[x(4)])
		unify(x(4) y(2))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		putConstant(0 x(1))
		genFastCall(<P: 13> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 13> 9)
		endDefinition(2300)
lbl(2409)	createVariable(y(84))
lbl(2411)	definition(x(4) 2478 pid('TupleToArray' 3 pos('./standard/Tuple.oz' 55 3) nil 6) <P: 15> [y(84)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 2475)
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) put x(4) cache)
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		move(y(0) x(1))
		move(x(5) x(2))
		call(x(4) 3)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 15> 7)
lbl(2475)	return
		endDefinition(2411)
lbl(2478)	putRecord(tuple [append is make toArray] y(85))
		setValue(x(3))
		setValue(x(5))
		setValue(x(7))
		setVariable(x(4))
lbl(2490)	definition(x(8) 2550 pid('Tuple.toArray' 2 pos('./standard/Tuple.oz' 64 12) nil 5) <P: 16> [y(81) y(84)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) new x(4) cache)
		move(y(2) x(1))
		putConstant(1 x(0))
		putConstant(unit x(2))
		createVariableMove(y(3) x(3))
		call(x(4) 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 15> 6)
		unify(y(3) y(1))
		deAllocateL4
		return
		endDefinition(2490)
lbl(2550)	unify(x(8) x(4))
lbl(2553)	definition(x(4) 2599 pid('Match' 3 pos('./standard/Tuple.oz' 78 3) nil 5) <P: 17> nil)
		match(x(0) ht(2584 [onScalar(nil 2562) onRecord('|' 2 2563)]))
lbl(2562)	return
lbl(2563)	getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 17> 7)
lbl(2584)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(81)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2553)
lbl(2599)	definition(x(4) 2625 pid('DoTuple' 4 pos('./standard/Tuple.oz' 84 3) nil 5) <P: 18> nil)
		callBI('Tuple.make' [x(0) x(2)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 17> 7)
		endDefinition(2599)
lbl(2625)	moveMoveXYXY(x(0) y(86) x(2) y(87))
		moveMoveXYXY(x(1) y(88) x(7) y(89))
		moveMoveXYXY(x(5) y(90) x(6) y(91))
		move(x(3) y(92))
		move(x(4) x(1))
		putConstant(tuple x(0))
		genFastCall(<P: 1> 4)
lbl(2652)	definition(x(0) 2687 pid('MakeList' 2 pos('./standard/List.oz' 35 0) nil 4) <P: 19> nil)
		putConstant(0 x(2))
		testLT(x(2) x(0) x(3) 2681)
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		genFastCall(<P: 19> 5)
lbl(2681)	getLiteral(nil x(1))
		return
		endDefinition(2652)
lbl(2687)	definition(x(1) 2715 pid('IsList' 2 pos('./standard/List.oz' 39 0) nil 4) <P: 20> nil)
		testList(x(0) 2703)
lbl(2696)	getVoid(1)
		getVariable(x(0))
		genFastCall(<P: 20> 5)
lbl(2703)	putConstant(nil x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(2687)
lbl(2715)	definition(x(2) 2753 pid('Append' 3 pos('./standard/List.oz' 43 0) nil 4) <P: 21> nil)
		match(x(0) ht(2738 [onScalar(nil 2724) onRecord('|' 2 2728)]))
lbl(2724)	unify(x(2) x(1))
		return
lbl(2728)	getVarVar(x(3) x(0))
		getListValVar(x(2) x(3) x(2))
		genFastCall(<P: 21> 7)
lbl(2738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(46)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2715)
lbl(2753)	definition(x(3) 2798 pid('Member' 3 pos('./standard/List.oz' 49 0) nil 5) <P: 22> nil)
		match(x(1) ht(2783 [onScalar(nil 2762) onRecord('|' 2 2766)]))
lbl(2762)	getLiteral(false x(2))
		return
lbl(2766)	getVarVar(x(1) x(3))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 2777)
		getLiteral(true x(2))
		return
lbl(2777)	move(x(3) x(1))
		genFastCall(<P: 22> 7)
lbl(2783)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(52)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2753)
lbl(2798)	definition(x(4) 2839 pid('DoLength' 3 pos('./standard/List.oz' 56 3) nil 4) <P: 23> nil)
		match(x(0) ht(2824 [onScalar(nil 2807) onRecord('|' 2 2811)]))
lbl(2807)	unify(x(2) x(1))
		return
lbl(2811)	getVoid(1)
		getVariable(x(0))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 23> 7)
lbl(2824)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(59)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2798)
lbl(2839)	definition(x(4) 2856 pid('Length' 2 pos('./standard/List.oz' 62 3) nil 3) <P: 24> nil)
		move(x(1) x(2))
		putConstant(0 x(1))
		genFastCall(<P: 23> 7)
		endDefinition(2839)
lbl(2856)	definition(x(5) 2890 pid('DoNth' 3 pos('./standard/List.oz' 66 3) nil 5) <P: 25> nil)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testNumber(x(1) 1 2876)
lbl(2872)	unify(x(2) x(0))
		return
lbl(2876)	inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 25> 7)
		endDefinition(2856)
lbl(2890)	definition(x(5) 2920 pid('Nth' 3 pos('./standard/List.oz' 70 3) nil 5) <P: 26> nil)
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2907)
		genFastCall(<P: 25> 7)
lbl(2907)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2890)
lbl(2920)	definition(x(6) 2963 pid('DoReverse' 3 pos('./standard/List.oz' 74 3) nil 5) <P: 27> nil)
		match(x(0) ht(2948 [onScalar(nil 2929) onRecord('|' 2 2933)]))
lbl(2929)	unify(x(2) x(1))
		return
lbl(2933)	getVarVar(x(3) x(0))
		putList(x(4))
		setValue(x(3))
		setValue(x(1))
		move(x(4) x(1))
		genFastCall(<P: 27> 7)
lbl(2948)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2920)
lbl(2963)	definition(x(6) 2980 pid('Reverse' 2 pos('./standard/List.oz' 80 3) nil 3) <P: 28> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 27> 7)
		endDefinition(2963)
lbl(2980)	definition(x(7) 3039 pid('Map' 3 pos('./standard/List.oz' 83 0) nil 3) <P: 29> nil)
		match(x(0) ht(3024 [onScalar(nil 2989) onRecord('|' 2 2993)]))
lbl(2989)	getLiteral(nil x(2))
		return
lbl(2993)	allocateL3
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(x(2) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 29> 7)
lbl(3024)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2980)
lbl(3039)	definition(x(8) 3102 pid('FoldL' 4 pos('./standard/List.oz' 89 0) nil 5) <P: 30> nil)
		match(x(0) ht(3087 [onScalar(nil 3048) onRecord('|' 2 3052)]))
lbl(3048)	unify(x(3) x(2))
		return
lbl(3052)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
lbl(3087)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(92)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3039)
lbl(3102)	definition(x(9) 3166 pid('FoldLTail' 4 pos('./standard/List.oz' 95 0) nil 4) <P: 31> nil)
		match(x(0) ht(3151 [onScalar(nil 3111) onRecord('|' 2 3115)]))
lbl(3111)	unify(x(3) x(2))
		return
lbl(3115)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(0) x(1))
		move(x(2) x(0))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 31> 9)
lbl(3151)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3102)
lbl(3166)	definition(x(10) 3223 pid('FoldR' 4 pos('./standard/List.oz' 101 0) nil 4) <P: 32> nil)
		match(x(0) ht(3208 [onScalar(nil 3175) onRecord('|' 2 3179)]))
lbl(3175)	unify(x(3) x(2))
		return
lbl(3179)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3166)
lbl(3223)	definition(x(11) 3287 pid('FoldRTail' 4 pos('./standard/List.oz' 107 0) nil 5) <P: 33> nil)
		match(x(0) ht(3272 [onScalar(nil 3232) onRecord('|' 2 3236)]))
lbl(3232)	unify(x(3) x(2))
		return
lbl(3236)	allocateL4
		getVoid(1)
		getVariable(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 33> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3272)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3223)
lbl(3287)	definition(x(12) 3331 pid('ForAll' 2 pos('./standard/List.oz' 113 0) nil 2) <P: 34> nil)
		match(x(0) ht(3316 [onScalar(nil 3296) onRecord('|' 2 3297)]))
lbl(3296)	return
lbl(3297)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(3316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(116)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3287)
lbl(3331)	definition(x(13) 3406 pid('All' 3 pos('./standard/List.oz' 119 0) nil 3) <P: 35> nil)
		match(x(0) ht(3391 [onScalar(nil 3340) onRecord('|' 2 3344)]))
lbl(3340)	getLiteral(true x(2))
		return
lbl(3344)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3375 3380)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 35> 7)
lbl(3375)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3380)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3391)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(122)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3331)
lbl(3406)	definition(x(14) 3481 pid('Some' 3 pos('./standard/List.oz' 125 0) nil 3) <P: 36> nil)
		match(x(0) ht(3466 [onScalar(nil 3415) onRecord('|' 2 3419)]))
lbl(3415)	getLiteral(false x(2))
		return
lbl(3419)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3443 3455)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(3443)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 36> 7)
lbl(3455)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(127)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3466)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3406)
lbl(3481)	definition(x(15) 3526 pid('ForAllTail' 2 pos('./standard/List.oz' 131 0) nil 2) <P: 37> nil)
		match(x(0) ht(3511 [onScalar(nil 3490) onRecord('|' 2 3491)]))
lbl(3490)	return
lbl(3491)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 37> 5)
lbl(3511)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3481)
lbl(3526)	definition(x(16) 3602 pid('AllTail' 3 pos('./standard/List.oz' 137 0) nil 3) <P: 38> nil)
		match(x(0) ht(3587 [onScalar(nil 3535) onRecord('|' 2 3539)]))
lbl(3535)	getLiteral(true x(2))
		return
lbl(3539)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3571 3576)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 38> 7)
lbl(3571)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3587)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(140)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3526)
lbl(3602)	definition(x(17) 3689 pid('Filter' 3 pos('./standard/List.oz' 143 0) nil 3) <P: 39> nil)
		match(x(0) ht(3674 [onScalar(nil 3611) onRecord('|' 2 3615)]))
lbl(3611)	getLiteral(nil x(2))
		return
lbl(3615)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 3651 3663)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3651)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3602)
lbl(3689)	definition(x(18) 3786 pid('DoFlatten' 4 pos('./standard/List.oz' 150 3) nil 4) <P: 40> nil)
		match(x(0) ht(3780 [onScalar(nil 3698) onRecord('|' 2 3705)]))
lbl(3698)	unify(x(1) x(2))
		getLiteral(true x(3))
		return
lbl(3705)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(7) 3752 3769)
		unify(y(5) y(2))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3752)	getList(y(2))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(153)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3780)	getLiteral(false x(3))
		return
		endDefinition(3689)
lbl(3786)	definition(x(18) 3837 pid('Flatten' 2 pos('./standard/List.oz' 162 3) nil 4) <P: 41> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(3) 3819 3824)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(3819)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(3824)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(163)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3786)
lbl(3837)	definition(x(19) 3944 pid('DoMerge' 5 pos('./standard/List.oz' 169 3) nil 5) <P: 42> nil)
		match(x(2) ht(3929 [onScalar(nil 3846) onRecord('|' 2 3853)]))
lbl(3846)	getList(x(4))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(3853)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
		testBool(y(6) 3899 3918)
		getList(y(5))
		unifyValVar(y(2) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3899)	getList(y(5))
		unifyValVar(y(0) x(4))
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(172)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3929)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3837)
lbl(3944)	definition(x(19) 4379 pid('DoSort' 5 pos('./standard/List.oz' 177 3) nil 7) <P: 43> nil)
		match(x(0) ht(4297 [onScalar(0 3953) onScalar(1 3960) onScalar(2 3973) onScalar(3 4041)]))
lbl(3953)	getLiteral(nil x(2))
		getLiteral(nil x(4))
		return
lbl(3960)	getList(x(1))
		unifyVariable(x(0))
		unifyValue(x(2))
		getList(x(4))
		unifyValue(x(0))
		unifyLiteral(nil)
		return
lbl(3973)	allocateL4
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyValue(x(2))
		moveMoveXYYX(x(4) y(2) y(0) x(0))
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 4017 4030)
		getList(y(2))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4017)	getList(y(2))
		unifyValVar(y(1) x(0))
		getList(x(0))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4041)	allocateL6
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(2))
		unifyValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4183 4286)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4112 4172)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4112)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4144 4161)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4144)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4161)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(186)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4172)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(185)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4183)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4215 4275)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4215)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4247 4264)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4247)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4264)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4297)	allocateL8
		putConstant(2 x(5))
		callBI('Int.div' [x(0) x(5)]#[x(6)])
		putList(x(5))
		setVariable(y(0))
		setVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYYX(x(6) y(6) y(6) x(0))
		move(x(5) x(4))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		inlineMinus(x(0) x(1) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(7) x(1) y(3) x(2))
		move(y(4) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL8
		genFastCall(<P: 42> 11)
		endDefinition(3944)
lbl(4379)	definition(x(19) 4419 pid('Sort' 3 pos('./standard/List.oz' 203 3) nil 5) <P: 44> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<P: 43> 11)
		endDefinition(4379)
lbl(4419)	definition(x(20) 4465 pid('Merge' 4 pos('./standard/List.oz' 206 3) nil 6) <P: 45> nil)
		match(x(0) ht(4450 [onScalar(nil 4428) onRecord('|' 2 4432)]))
lbl(4428)	unify(x(3) x(1))
		return
lbl(4432)	getVarVar(x(0) x(5))
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 42> 11)
lbl(4450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4419)
lbl(4465)	definition(x(21) 4515 pid('ListTail' 3 pos('./standard/List.oz' 217 3) nil 5) <P: 46> nil)
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 4494)
		getList(x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 46> 7)
lbl(4494)	testNumber(x(0) 0 4502)
		unify(x(2) x(1))
		return
lbl(4502)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(218)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4465)
lbl(4515)	definition(x(22) 4564 pid('Subtract' 3 pos('./standard/List.oz' 221 3) nil 5) <P: 47> nil)
		match(x(0) ht(4549 [onScalar(nil 4524) onRecord('|' 2 4528)]))
lbl(4524)	getLiteral(nil x(2))
		return
lbl(4528)	getVarVar(x(0) x(3))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(4)] 4545)
		getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 47> 7)
lbl(4545)	unify(x(2) x(3))
		return
lbl(4549)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(224)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4515)
lbl(4564)	definition(x(23) 4598 pid('Last' 3 pos('./standard/List.oz' 227 3) nil 3) <P: 48> nil)
		match(x(1) ht(4583 [onScalar(nil 4573) onRecord('|' 2 4577)]))
lbl(4573)	unify(x(2) x(0))
		return
lbl(4577)	getVarVar(x(0) x(1))
		genFastCall(<P: 48> 7)
lbl(4583)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(230)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4564)
lbl(4598)	definition(x(23) 4651 pid('Find' 4 pos('./standard/List.oz' 234 6) nil 6) <P: 49> nil)
		match(x(2) ht(4636 [onScalar(nil 4607) onRecord('|' 2 4611)]))
lbl(4607)	getLiteral(false x(3))
		return
lbl(4611)	getVarVar(x(2) x(4))
		testBI('Value.\'==\'' [x(0) x(2)]#[x(5)] 4630)
		move(x(1) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		genFastCall(<P: 50> 7)
lbl(4630)	move(x(4) x(2))
		genFastCall(<P: 49> 9)
lbl(4636)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(238)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4598)
lbl(4651)	definition(x(23) 4694 pid('Sub' 3 pos('./standard/List.oz' 241 6) nil 5) <P: 50> nil)
		match(x(0) ht(4679 [onScalar(nil 4660) onRecord('|' 2 4664)]))
lbl(4660)	getLiteral(true x(2))
		return
lbl(4664)	getVarVar(x(0) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 49> 9)
lbl(4679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4651)
lbl(4694)	definition(x(24) 4753 pid('Take' 3 pos('./standard/List.oz' 249 3) nil 6) <P: 51> nil)
		match(x(0) ht(4738 [onScalar(nil 4703) onRecord('|' 2 4707)]))
lbl(4703)	getLiteral(nil x(2))
		return
lbl(4707)	getVarVar(x(3) x(0))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4731)
		getListValVar(x(2) x(3) x(2))
		inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 51> 7)
lbl(4731)	getNumber(0 x(1))
		getLiteral(nil x(2))
		return
lbl(4738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4694)
lbl(4753)	definition(x(25) 4812 pid('Drop' 3 pos('./standard/List.oz' 255 3) nil 6) <P: 52> nil)
		match(x(0) ht(4797 [onScalar(nil 4762) onRecord('|' 2 4766)]))
lbl(4762)	getLiteral(nil x(2))
		return
lbl(4766)	getVoid(1)
		getVariable(x(3))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4790)
		inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 52> 7)
lbl(4790)	getNumber(0 x(1))
		unify(x(0) x(2))
		return
lbl(4797)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(258)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4753)
lbl(4812)	definition(x(26) 4880 pid('TakeDrop' 4 pos('./standard/List.oz' 261 3) nil 8) <P: 53> nil)
		match(x(0) ht(4865 [onScalar(nil 4821) onRecord('|' 2 4828)]))
lbl(4821)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4828)	getVarVar(x(4) x(5))
		putConstant(0 x(6))
		testLT(x(6) x(1) x(7) 4855)
		getListValVar(x(2) x(4) x(2))
		inlineMinus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 53> 9)
lbl(4855)	getNumber(0 x(1))
		getLiteral(nil x(2))
		unify(x(3) x(0))
		return
lbl(4865)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(267)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4812)
lbl(4880)	definition(x(27) 4980 pid('Partition' 4 pos('./standard/List.oz' 273 3) nil 4) <P: 54> nil)
		match(x(0) ht(4965 [onScalar(nil 4889) onRecord('|' 2 4896)]))
lbl(4889)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4896)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		call(y(2) 2)
		testBool(y(5) 4937 4954)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4937)	getList(y(4))
		unifyValVar(y(0) x(3))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(276)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4965)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(279)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4880)
lbl(4980)	definition(x(28) 5060 pid('TakeWhile' 3 pos('./standard/List.oz' 282 3) nil 3) <P: 55> nil)
		match(x(0) ht(5045 [onScalar(nil 4989) onRecord('|' 2 4993)]))
lbl(4989)	getLiteral(nil x(2))
		return
lbl(4993)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5029 5034)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 55> 7)
lbl(5029)	getLiteral(nil y(3))
		deAllocateL5
		return
lbl(5034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5045)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(285)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4980)
lbl(5060)	definition(x(29) 5141 pid('DropWhile' 3 pos('./standard/List.oz' 288 3) nil 4) <P: 56> nil)
		match(x(0) ht(5126 [onScalar(nil 5069) onRecord('|' 2 5073)]))
lbl(5069)	getLiteral(nil x(2))
		return
lbl(5073)	allocateL5
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5110 5115)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 56> 7)
lbl(5110)	unify(y(3) y(1))
		deAllocateL5
		return
lbl(5115)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(290)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5126)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(291)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5060)
lbl(5141)	definition(x(30) 5235 pid('TakeDropWhile' 4 pos('./standard/List.oz' 294 3) nil 4) <P: 57> nil)
		match(x(0) ht(5220 [onScalar(nil 5150) onRecord('|' 2 5157)]))
lbl(5150)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(5157)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(3) 2)
		testBool(y(6) 5201 5209)
		getList(y(4))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(5) x(3))
		deAllocateL7
		genFastCall(<P: 57> 9)
lbl(5201)	getLiteral(nil y(4))
		unify(y(5) y(2))
		deAllocateL7
		return
lbl(5209)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5220)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5141)
lbl(5235)	definition(x(31) 5308 pid('MapInd' 4 pos('./standard/List.oz' 306 3) nil 5) <P: 58> nil)
		match(x(0) ht(5293 [onScalar(nil 5244) onRecord('|' 2 5248)]))
lbl(5244)	getLiteral(nil x(3))
		return
lbl(5248)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		call(y(3) 3)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<P: 58> 9)
lbl(5293)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(309)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5235)
lbl(5308)	definition(x(31) 5383 pid('FoldLInd' 5 pos('./standard/List.oz' 312 3) nil 6) <P: 59> nil)
		match(x(0) ht(5368 [onScalar(nil 5317) onRecord('|' 2 5321)]))
lbl(5317)	unify(x(4) x(3))
		return
lbl(5321)	allocateL5
		getVarVar(x(5) y(0))
		inlinePlus1(x(1) x(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(0) y(3))
		move(x(1) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 59> 11)
lbl(5368)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(315)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5308)
lbl(5383)	definition(x(31) 5452 pid('FoldRInd' 5 pos('./standard/List.oz' 318 3) nil 6) <P: 60> nil)
		match(x(0) ht(5437 [onScalar(nil 5392) onRecord('|' 2 5396)]))
lbl(5392)	unify(x(4) x(3))
		return
lbl(5396)	allocateL5
		getVarVar(y(0) x(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(5) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 60> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5383)
lbl(5452)	definition(x(31) 5528 pid('FoldLTailInd' 5 pos('./standard/List.oz' 324 3) nil 6) <P: 61> nil)
		match(x(0) ht(5513 [onScalar(nil 5461) onRecord('|' 2 5465)]))
lbl(5461)	unify(x(4) x(3))
		return
lbl(5465)	allocateL5
		getVoid(1)
		getVariable(y(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(5) y(3))
		move(x(0) x(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 61> 11)
lbl(5513)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(327)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5452)
lbl(5528)	definition(x(31) 5603 pid('FoldRTailInd' 5 pos('./standard/List.oz' 330 3) nil 7) <P: 62> nil)
		match(x(0) ht(5588 [onScalar(nil 5537) onRecord('|' 2 5541)]))
lbl(5537)	unify(x(4) x(3))
		return
lbl(5541)	allocateL5
		getVoid(1)
		getVariable(x(5))
		inlinePlus1(x(1) x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 62> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5528)
lbl(5603)	definition(x(31) 5661 pid('ForAllInd' 3 pos('./standard/List.oz' 336 3) nil 4) <P: 63> nil)
		match(x(0) ht(5646 [onScalar(nil 5612) onRecord('|' 2 5613)]))
lbl(5612)	return
lbl(5613)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(x(3) x(1))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 63> 7)
lbl(5646)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(339)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5603)
lbl(5661)	definition(x(31) 5750 pid('AllInd' 4 pos('./standard/List.oz' 342 3) nil 5) <P: 64> nil)
		match(x(0) ht(5735 [onScalar(nil 5670) onRecord('|' 2 5674)]))
lbl(5670)	getLiteral(true x(3))
		return
lbl(5674)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5719 5724)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 64> 9)
lbl(5719)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(344)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5735)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(345)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5661)
lbl(5750)	definition(x(31) 5809 pid('ForAllTailInd' 3 pos('./standard/List.oz' 348 3) nil 3) <P: 65> nil)
		match(x(0) ht(5794 [onScalar(nil 5759) onRecord('|' 2 5760)]))
lbl(5759)	return
lbl(5760)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) x(1))
		move(y(1) x(0))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 65> 7)
lbl(5794)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(351)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5750)
lbl(5809)	definition(x(31) 5900 pid('AllTailInd' 4 pos('./standard/List.oz' 354 3) nil 4) <P: 66> nil)
		match(x(0) ht(5885 [onScalar(nil 5818) onRecord('|' 2 5822)]))
lbl(5818)	getLiteral(true x(3))
		return
lbl(5822)	allocateL5
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(1))
		move(y(1) x(0))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5869 5874)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 66> 9)
lbl(5869)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5885)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5809)
lbl(5900)	definition(x(31) 5989 pid('SomeInd' 4 pos('./standard/List.oz' 360 3) nil 5) <P: 67> nil)
		match(x(0) ht(5974 [onScalar(nil 5909) onRecord('|' 2 5913)]))
lbl(5909)	getLiteral(false x(3))
		return
lbl(5913)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5945 5963)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(5945)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 67> 9)
lbl(5963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(362)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(363)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5900)
lbl(5989)	definition(x(31) 6093 pid('FilterInd' 4 pos('./standard/List.oz' 366 3) nil 4) <P: 68> nil)
		match(x(0) ht(6078 [onScalar(nil 5998) onRecord('|' 2 6002)]))
lbl(5998)	getLiteral(nil x(3))
		return
lbl(6002)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6049 6067)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6049)	move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6078)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5989)
lbl(6093)	definition(x(31) 6210 pid('PartitionInd' 5 pos('./standard/List.oz' 375 3) nil 5) <P: 69> nil)
		match(x(0) ht(6195 [onScalar(nil 6102) onRecord('|' 2 6109)]))
lbl(6102)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6109)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(3) 3)
		testBool(y(6) 6161 6184)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(5) x(4))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6161)	getList(y(5))
		unifyValVar(y(0) x(4))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6184)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6195)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6093)
lbl(6210)	definition(x(31) 6301 pid('TakeWhileInd' 4 pos('./standard/List.oz' 384 3) nil 4) <P: 70> nil)
		match(x(0) ht(6286 [onScalar(nil 6219) onRecord('|' 2 6223)]))
lbl(6219)	getLiteral(nil x(3))
		return
lbl(6223)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6270 6275)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 70> 9)
lbl(6270)	getLiteral(nil y(4))
		deAllocateL6
		return
lbl(6275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(386)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6286)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(387)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6210)
lbl(6301)	definition(x(31) 6393 pid('DropWhileInd' 4 pos('./standard/List.oz' 390 3) nil 5) <P: 71> nil)
		match(x(0) ht(6378 [onScalar(nil 6310) onRecord('|' 2 6314)]))
lbl(6310)	getLiteral(nil x(3))
		return
lbl(6314)	allocateL6
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6362 6367)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 71> 9)
lbl(6362)	unify(y(4) y(1))
		deAllocateL6
		return
lbl(6367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6378)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(393)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6301)
lbl(6393)	definition(x(31) 6498 pid('TakeDropWhileInd' 5 pos('./standard/List.oz' 396 3) nil 5) <P: 72> nil)
		match(x(0) ht(6483 [onScalar(nil 6402) onRecord('|' 2 6409)]))
lbl(6402)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6409)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYYX(x(4) y(6) y(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(7) x(2))
		call(y(4) 3)
		testBool(y(7) 6464 6472)
		getList(y(5))
		unifyValVar(y(0) x(3))
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(6) x(4))
		deAllocateL8
		genFastCall(<P: 72> 11)
lbl(6464)	getLiteral(nil y(5))
		unify(y(6) y(2))
		deAllocateL8
		return
lbl(6472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(399)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6483)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(402)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6393)
lbl(6498)	definition(x(31) 6595 pid('Zip' 4 pos('./standard/List.oz' 406 3) nil 4) <P: 73> nil)
		match(x(0) ht(6580 [onScalar(nil 6507) onRecord('|' 2 6528)]))
lbl(6507)	testLiteral(x(1) nil 6515)
lbl(6511)	getLiteral(nil x(3))
		return
lbl(6515)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(407)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6528)	allocateL4
		getVarVar(x(0) y(0))
		testList(x(1) 6567)
lbl(6535)	getVarVar(x(1) y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(3) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 73> 9)
lbl(6567)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(408)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(409)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6498)
lbl(6595)	definition(x(32) 6626 pid('NumberInc' 4 pos('./standard/List.oz' 412 3) nil 5) <P: 74> nil)
		testLT(x(1) x(0) x(4) 6610)
		getLiteral(nil x(3))
		return
lbl(6610)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 74> 9)
		endDefinition(6595)
lbl(6626)	definition(x(32) 6657 pid('NumberDec' 4 pos('./standard/List.oz' 416 3) nil 5) <P: 75> nil)
		testLT(x(0) x(1) x(4) 6641)
		getLiteral(nil x(3))
		return
lbl(6641)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 75> 9)
		endDefinition(6626)
lbl(6657)	definition(x(32) 6703 pid('EnterArgs' 3 pos('./standard/List.oz' 421 6) nil 5) <P: 76> nil)
		match(x(0) ht(6688 [onScalar(nil 6666) onRecord('|' 2 6667)]))
lbl(6666)	return
lbl(6667)	getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 76> 7)
lbl(6688)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(424)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6657)
lbl(6703)	definition(x(32) 6751 pid('ToTuple' 3 pos('./standard/List.oz' 427 6) nil 3) <P: 77> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		callBI('Tuple.make' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		putConstant(1 x(1))
		deAllocateL4
		genFastCall(<P: 76> 7)
		endDefinition(6703)
lbl(6751)	definition(x(33) 6822 pid('IsPrefix' 3 pos('./standard/List.oz' 433 3) nil 6) <P: 78> nil)
		match(x(0) ht(6807 [onScalar(nil 6760) onRecord('|' 2 6764)]))
lbl(6760)	getLiteral(true x(2))
		return
lbl(6764)	getVarVar(x(0) x(3))
		match(x(1) ht(6794 [onScalar(nil 6770) onRecord('|' 2 6774)]))
lbl(6770)	getLiteral(false x(2))
		return
lbl(6774)	getVarVar(x(1) x(4))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(5)] 6790)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 78> 7)
lbl(6790)	getLiteral(false x(2))
		return
lbl(6794)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(438)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6807)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6751)
lbl(6822)	putRecord(list [all allInd allTail allTailInd append drop dropWhile dropWhileInd filter filterInd flatten foldL foldLInd foldLTail foldLTailInd foldR foldRInd foldRTail foldRTailInd forAll forAllInd forAllTail forAllTailInd is isPrefix last length make map mapInd member merge nth number partition partitionInd reverse some someInd sort sub subtract take takeDrop takeDropWhile takeDropWhileInd takeWhile takeWhileInd toRecord toTuple withTail zip] y(93))
		setValue(x(13))
		setVariable(x(34))
		setValue(x(16))
		setVariable(x(35))
		setValue(x(2))
		setValue(x(25))
		setValue(x(29))
		setVariable(x(36))
		setValue(x(17))
		setVariable(x(37))
		setValue(x(18))
		setValue(x(8))
		setVariable(y(94))
		setValue(x(9))
		setVariable(x(38))
		setValue(x(10))
		setVariable(y(95))
		setValue(x(11))
		setVariable(x(39))
		setValue(x(12))
		setVariable(y(96))
		setValue(x(15))
		setVariable(y(97))
		setValue(x(1))
		setValue(x(33))
		setVariable(y(98))
		setValue(x(4))
		setValue(x(0))
		setValue(x(7))
		setVariable(y(99))
		setValue(x(3))
		setValue(x(20))
		setValue(x(5))
		setVariable(y(100))
		setValue(x(27))
		setVariable(x(40))
		setValue(x(6))
		setValue(x(14))
		setVariable(x(41))
		setValue(x(19))
		setValue(x(23))
		setValue(x(22))
		setValue(x(24))
		setValue(x(26))
		setValue(x(30))
		setVariable(x(42))
		setValue(x(28))
		setVariable(x(43))
		setValue(y(2))
		setValue(x(32))
		setValue(x(21))
		setValue(x(31))
lbl(6930)	definition(x(21) 6966 pid('List.last' 2 pos('./standard/List.oz' 452 4) nil 4) <P: 79> nil)
		testList(x(0) 6951)
lbl(6939)	getVarVar(x(0) x(3))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 48> 7)
lbl(6951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(453)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6930)
lbl(6966)	unify(x(21) y(98))
lbl(6969)	definition(x(21) 6991 pid('List.number' 4 pos('./standard/List.oz' 463 4) nil 6) <P: 80> nil)
		putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 6986)
		genFastCall(<P: 74> 9)
lbl(6986)	genFastCall(<P: 75> 9)
		endDefinition(6969)
lbl(6991)	unify(x(21) y(100))
lbl(6994)	definition(x(21) 7014 pid('List.mapInd' 3 pos('./standard/List.oz' 489 4) nil 4) <P: 81> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 58> 9)
		endDefinition(6994)
lbl(7014)	unify(x(21) y(99))
lbl(7017)	definition(x(21) 7040 pid('List.foldLInd' 4 pos('./standard/List.oz' 493 4) nil 5) <P: 82> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 59> 11)
		endDefinition(7017)
lbl(7040)	unify(x(21) y(94))
lbl(7043)	definition(x(21) 7066 pid('List.foldRInd' 4 pos('./standard/List.oz' 497 4) nil 5) <P: 83> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 60> 11)
		endDefinition(7043)
lbl(7066)	unify(x(21) y(95))
lbl(7069)	definition(x(21) 7092 pid('List.foldLTailInd' 4 pos('./standard/List.oz' 501 4) nil 5) <P: 84> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 61> 11)
		endDefinition(7069)
lbl(7092)	unify(x(21) x(38))
lbl(7095)	definition(x(21) 7118 pid('List.foldRTailInd' 4 pos('./standard/List.oz' 505 4) nil 5) <P: 85> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 62> 11)
		endDefinition(7095)
lbl(7118)	unify(x(21) x(39))
lbl(7121)	definition(x(21) 7138 pid('List.forAllInd' 2 pos('./standard/List.oz' 509 4) nil 3) <P: 86> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 63> 7)
		endDefinition(7121)
lbl(7138)	unify(x(21) y(96))
lbl(7141)	definition(x(21) 7161 pid('List.allInd' 3 pos('./standard/List.oz' 513 4) nil 4) <P: 87> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 64> 9)
		endDefinition(7141)
lbl(7161)	unify(x(21) x(34))
lbl(7164)	definition(x(21) 7184 pid('List.someInd' 3 pos('./standard/List.oz' 517 4) nil 4) <P: 88> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 67> 9)
		endDefinition(7164)
lbl(7184)	unify(x(21) x(41))
lbl(7187)	definition(x(21) 7204 pid('List.forAllTailInd' 2 pos('./standard/List.oz' 521 4) nil 3) <P: 89> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 65> 7)
		endDefinition(7187)
lbl(7204)	unify(x(21) y(97))
lbl(7207)	definition(x(21) 7227 pid('List.allTailInd' 3 pos('./standard/List.oz' 525 4) nil 4) <P: 90> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 66> 9)
		endDefinition(7207)
lbl(7227)	unify(x(21) x(35))
lbl(7230)	definition(x(21) 7250 pid('List.filterInd' 3 pos('./standard/List.oz' 529 4) nil 4) <P: 91> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 68> 9)
		endDefinition(7230)
lbl(7250)	unify(x(21) x(37))
lbl(7253)	definition(x(21) 7276 pid('List.partitionInd' 4 pos('./standard/List.oz' 533 4) nil 5) <P: 92> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 69> 11)
		endDefinition(7253)
lbl(7276)	unify(x(21) x(40))
lbl(7279)	definition(x(21) 7299 pid('List.takeWhileInd' 3 pos('./standard/List.oz' 537 4) nil 4) <P: 93> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 70> 9)
		endDefinition(7279)
lbl(7299)	unify(x(21) x(43))
lbl(7302)	definition(x(21) 7322 pid('List.dropWhileInd' 3 pos('./standard/List.oz' 541 4) nil 4) <P: 94> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 71> 9)
		endDefinition(7302)
lbl(7322)	unify(x(21) x(36))
lbl(7325)	definition(x(21) 7348 pid('List.takeDropWhileInd' 4 pos('./standard/List.oz' 545 4) nil 5) <P: 95> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 72> 11)
		endDefinition(7325)
lbl(7348)	unify(x(21) x(42))
		putConstant('Procedure.is' x(21))
		putConstant(2 x(23))
		callBI('Boot.builtin' [x(21) x(23)]#[x(24)])
		putConstant('Procedure.arity' x(21))
		putConstant(2 x(23))
		callBI('Boot.builtin' [x(21) x(23)]#[x(25)])
		putRecord(procedure [arity is] y(101))
		setValue(x(25))
		setValue(x(24))
lbl(7377)	definition(x(21) 7421 pid('HelpPlusOne' 3 pos('./standard/Loop.oz' 36 3) nil 4) <P: 96> nil)
		testLE(x(0) x(1) x(3) 7418)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 96> 7)
lbl(7418)	return
		endDefinition(7377)
lbl(7421)	definition(x(21) 7465 pid('HelpMinusOne' 3 pos('./standard/Loop.oz' 42 3) nil 4) <P: 97> nil)
		testLE(x(1) x(0) x(3) 7462)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 97> 7)
lbl(7462)	return
		endDefinition(7421)
lbl(7465)	definition(x(21) 7517 pid('HelpPlus' 4 pos('./standard/Loop.oz' 47 3) nil 5) <P: 98> nil)
		testLE(x(0) x(1) x(4) 7514)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 98> 9)
lbl(7514)	return
		endDefinition(7465)
lbl(7517)	definition(x(21) 7569 pid('HelpMinus' 4 pos('./standard/Loop.oz' 52 3) nil 5) <P: 99> nil)
		testLE(x(1) x(0) x(4) 7566)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 99> 9)
lbl(7566)	return
		endDefinition(7517)
lbl(7569)	definition(x(21) 7611 pid('For' 4 pos('./standard/Loop.oz' 58 3) nil 6) <P: 100> nil)
		testNumber(x(2) 1 7585)
		move(x(3) x(2))
		genFastCall(<P: 96> 7)
lbl(7585)	testNumber(x(2) ~1 7595)
		move(x(3) x(2))
		genFastCall(<P: 97> 7)
lbl(7595)	putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 7606)
		genFastCall(<P: 98> 9)
lbl(7606)	genFastCall(<P: 99> 9)
		endDefinition(7569)
lbl(7611)	definition(x(23) 7671 pid('HelpPlusOne' 5 pos('./standard/Loop.oz' 71 3) nil 6) <P: 101> nil)
		testLE(x(0) x(1) x(5) 7665)
		allocateL5
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 101> 11)
lbl(7665)	unify(x(4) x(3))
		return
		endDefinition(7611)
lbl(7671)	definition(x(23) 7731 pid('HelpMinusOne' 5 pos('./standard/Loop.oz' 76 3) nil 6) <P: 102> nil)
		testLE(x(1) x(0) x(5) 7725)
		allocateL5
		inlineMinus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 102> 11)
lbl(7725)	unify(x(4) x(3))
		return
		endDefinition(7671)
lbl(7731)	definition(x(23) 7797 pid('HelpPlus' 6 pos('./standard/Loop.oz' 81 3) nil 7) <P: 103> nil)
		testLE(x(0) x(1) x(6) 7791)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 103> 13)
lbl(7791)	unify(x(5) x(4))
		return
		endDefinition(7731)
lbl(7797)	definition(x(23) 7863 pid('HelpMinus' 6 pos('./standard/Loop.oz' 86 3) nil 7) <P: 104> nil)
		testLE(x(1) x(0) x(6) 7857)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 104> 13)
lbl(7857)	unify(x(5) x(4))
		return
		endDefinition(7797)
lbl(7863)	definition(x(23) 7917 pid('ForThread' 6 pos('./standard/Loop.oz' 92 3) nil 8) <P: 105> nil)
		testNumber(x(2) 1 7885)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 101> 11)
lbl(7885)	testNumber(x(2) ~1 7901)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 102> 11)
lbl(7901)	putConstant(0 x(6))
		testLT(x(6) x(2) x(7) 7912)
		genFastCall(<P: 103> 13)
lbl(7912)	genFastCall(<P: 104> 13)
		endDefinition(7863)
lbl(7917)	definition(x(26) 8016 pid('MultiFor' 2 pos('./standard/Loop.oz' 103 3) nil 4) <P: 106> nil)
		createVariable(x(2))
lbl(7925)	definition(x(3) 8005 pid('Help' 2 pos('./standard/Loop.oz' 104 6) nil 6) unit [x(1) x(2)])
		match(x(0) ht(7990 [onScalar(nil 7934) onRecord('|' 2 7951)]))
lbl(7934)	allocateL1
		move(x(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(7951)	getVarVar(x(4) x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyVariable(x(2))
lbl(7964)	definition(x(3) 7984 pid('' 1 pos('./standard/Loop.oz' 107 24) nil 2) unit [x(1) g(1) x(5)])
		putList(x(1))
		setValue(x(0))
		setValue(g(0))
		move(g(2) x(0))
		tailCall(g(1) 2)
		endDefinition(7964)
lbl(7984)	move(x(4) x(1))
		genFastCall(<P: 100> 9)
lbl(7990)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(108)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(7925)
lbl(8005)	unify(x(3) x(2))
		putConstant(nil x(1))
		tailCall(x(2) 2)
		endDefinition(7917)
lbl(8016)	definition(x(28) 8146 pid('MultiForThread' 4 pos('./standard/Loop.oz' 114 3) nil 6) <P: 107> nil)
		createVariable(x(4))
lbl(8024)	definition(x(5) 8135 pid('Help' 4 pos('./standard/Loop.oz' 115 6) nil 10) unit [x(1) x(4)])
		match(x(0) ht(8120 [onScalar(nil 8033) onRecord('|' 2 8060)]))
lbl(8033)	allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailCall(g(0) 3)
lbl(8060)	getVarVar(x(6) x(7))
		getRecord('#' 3 x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		unifyVariable(x(8))
lbl(8073)	definition(x(9) 8102 pid('' 3 pos('./standard/Loop.oz' 119 6) nil 5) unit [x(1) g(1) x(7)])
		putList(x(4))
		setValue(x(1))
		setValue(g(0))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(2) x(0))
		move(x(4) x(1))
		tailCall(g(1) 4)
		endDefinition(8073)
lbl(8102)	move(x(6) x(1))
		move(x(2) x(4))
		move(x(8) x(2))
		move(x(3) x(5))
		move(x(9) x(3))
		genFastCall(<P: 105> 13)
lbl(8120)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(120)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8024)
lbl(8135)	unify(x(5) x(4))
		putConstant(nil x(1))
		tailCall(x(4) 4)
		endDefinition(8016)
lbl(8146)	putRecord(loop [for forThread multiFor multiForThread] y(102))
		setValue(x(21))
		setValue(x(23))
		setValue(x(26))
		setValue(x(28))
		putConstant('Dictionary.new' x(26))
		putConstant(1 x(28))
		callBI('Boot.builtin' [x(26) x(28)]#[x(29)])
		putConstant('Dictionary.is' x(26))
		putConstant(2 x(28))
		callBI('Boot.builtin' [x(26) x(28)]#[x(34)])
		putConstant('Dictionary.entries' x(26))
		putConstant(2 x(28))
		callBI('Boot.builtin' [x(26) x(28)]#[x(35)])
		putRecord(dictionary [clone condGet entries get is items keys member new put remove removeAll toRecord] y(103))
		setVariable(x(26))
		setVariable(x(28))
		setValue(x(35))
		setVariable(x(36))
		setValue(x(34))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setValue(x(29))
		setVariable(x(40))
		setVariable(x(41))
		setVariable(x(42))
		setVariable(y(104))
		putConstant('Dictionary.put' x(43))
		putConstant(3 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(40))
		putConstant('Dictionary.get' x(43))
		putConstant(3 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(36))
		putConstant('Dictionary.condGet' x(43))
		putConstant(4 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(28))
		putConstant('Dictionary.keys' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(38))
		putConstant('Dictionary.items' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(37))
		putConstant('Dictionary.remove' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(41))
		putConstant('Dictionary.removeAll' x(43))
		putConstant(1 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(42))
		putConstant('Dictionary.clone' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(26))
		putConstant('Dictionary.member' x(43))
		putConstant(3 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		unify(x(45) x(39))
lbl(8323)	definition(x(43) 8341 pid('Dictionary.toRecord' 3 pos('./standard/Dictionary.oz' 51 21) nil 4) <P: 108> nil)
		callBI('Dictionary.entries' [x(1)]#[x(3)])
		callBI('Record.record' [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
		endDefinition(8323)
lbl(8341)	unify(x(43) y(104))
		putConstant('Record.arity' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(45)])
		putConstant('Record.is' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(46)])
		putConstant('Record.label' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(47)])
		unify(x(47) y(83))
		putConstant('Record.width' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(47)])
		unify(x(47) y(81))
		putConstant('Record.adjoin' x(43))
		putConstant(3 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(47)])
		unify(x(47) y(82))
		putConstant('Record.adjoinList' x(43))
		putConstant(3 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(47)])
		putConstant('Record.adjoinAt' x(43))
		putConstant(4 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(48)])
		putConstant('Record.isC' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(49)])
		putConstant('Record.widthC' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(50)])
		putConstant('Record.tellRecord' x(43))
		putConstant(2 x(44))
		callBI('Boot.builtin' [x(43) x(44)]#[x(51)])
lbl(8443)	definition(x(43) 8494 pid('MakeEmpty' 2 pos('./standard/Record.oz' 45 3) nil 4) <P: 109> nil)
		match(x(0) ht(8479 [onScalar(nil 8452) onRecord('|' 2 8456)]))
lbl(8452)	getLiteral(nil x(1))
		return
lbl(8456)	getVarVar(x(2) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('#' 2 x(1))
		unifyValue(x(2))
		unifyVoid(1)
		move(x(3) x(1))
		genFastCall(<P: 109> 5)
lbl(8479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(48)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8443)
lbl(8494)	definition(x(43) 8530 pid('MakeRecord' 3 pos('./standard/Record.oz' 51 3) nil 3) <P: 110> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 109> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(8494)
lbl(8530)	createVariable(y(105))
lbl(8532)	definition(x(44) 8606 pid('DescendArity' 2 pos('./standard/Record.oz' 61 3) nil 6) <P: 111> [y(105)])
		match(x(0) ht(8591 [onScalar(nil 8541) onRecord('|' 2 8542)]))
lbl(8541)	return
lbl(8542)	getVarVar(x(2) x(3))
		testList(x(1) 8570)
lbl(8548)	getVarVar(x(1) x(4))
		testBI('Value.\'==\'' [x(2) x(1)]#[x(5)] 8564)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8564)	move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8570)	move(g(0) x(0))
		inlineDot(x(0) raiseError x(3) cache)
		move(x(2) x(1))
		putConstant(arityMismatchDefaultMethod x(0))
		tailSendMsg(object x(3) 2 cache)
lbl(8591)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(70)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8532)
lbl(8606)	definition(x(44) 8629 pid('AritySublist' 2 pos('./standard/Record.oz' 73 3) nil 4) <P: 112> nil)
		callBI('Record.arity' [x(0)]#[x(2)])
		callBI('Record.arity' [x(1)]#[x(3)])
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 111> 5)
		endDefinition(8606)
lbl(8629)	moveMoveXYXY(x(0) y(106) x(1) y(107))
		moveMoveXYXY(x(2) y(108) x(3) y(109))
		moveMoveXYXY(x(4) y(110) x(5) y(111))
		moveMoveXYXY(x(6) y(112) x(7) y(113))
		moveMoveXYXY(x(8) y(114) x(10) y(115))
		moveMoveXYXY(x(9) y(116) x(11) y(117))
		moveMoveXYXY(x(12) y(118) x(13) y(119))
		moveMoveXYXY(x(15) y(120) x(16) y(121))
		moveMoveXYXY(x(14) y(122) x(17) y(123))
		moveMoveXYXY(x(19) y(124) x(20) y(125))
		moveMoveXYXY(x(18) y(126) x(24) y(127))
		moveMoveXYXY(x(25) y(128) x(21) y(129))
		moveMoveXYXY(x(23) y(130) x(34) y(131))
		moveMoveXYXY(x(29) y(132) x(46) y(133))
		moveMoveXYXY(x(43) y(134) x(45) y(135))
		moveMoveXYXY(x(47) y(136) x(48) y(137))
		moveMoveXYXY(x(49) y(138) x(50) y(139))
		moveMoveXYXY(x(51) y(140) x(22) y(141))
		moveMoveXYXY(x(27) y(142) x(30) y(143))
		moveMoveXYXY(x(31) y(144) x(32) y(145))
		moveMoveXYXY(x(33) y(146) x(35) y(147))
		moveMoveXYXY(x(40) y(148) x(36) y(149))
		moveMoveXYXY(x(28) y(150) x(38) y(151))
		moveMoveXYXY(x(37) y(152) x(41) y(153))
		moveMoveXYXY(x(42) y(154) x(26) y(155))
		moveMoveXYXY(x(39) y(156) x(44) y(157))
		move(y(81) x(1))
		putConstant(width x(0))
		genFastCall(<P: 1> 4)
		putConstant('Record.\'^\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('^' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Record.tellRecordSize' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant(tellRecordSize x(0))
		genFastCall(<P: 1> 4)
		move(y(157) x(1))
		putConstant(aritySublist x(0))
		genFastCall(<P: 1> 4)
		putConstant('Record.monitorArity' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
lbl(8816)	definition(x(2) 8845 pid('MonitorArity' 3 pos('./standard/Record.oz' 91 6) nil 4) <P: 113> nil)
		createVariable(x(3))
		callBI('Record.monitorArity' [x(0) x(3) x(2)]#nil)
lbl(8827)	definition(x(0) 8839 pid('P' 0 pos('./standard/Record.oz' 94 2) nil 0) unit [x(3)])
		getLiteral(unit g(0))
		return
		endDefinition(8827)
lbl(8839)	unify(x(0) x(1))
		return
		endDefinition(8816)
lbl(8845)	definition(x(0) 8860 pid('ReflectArity' 2 pos('./standard/Record.oz' 97 6) nil 3) <P: 114> nil)
		putConstant(unit x(2))
		callBI('Record.monitorArity' [x(0) x(2) x(1)]#nil)
		return
		endDefinition(8845)
lbl(8860)	definition(x(3) 8919 pid('MakePairs' 3 pos('./standard/Record.oz' 102 3) nil 6) <P: 115> nil)
		match(x(0) ht(8904 [onScalar(nil 8869) onRecord('|' 2 8873)]))
lbl(8869)	getLiteral(nil x(2))
		return
lbl(8873)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 115> 7)
lbl(8904)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(105)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8860)
lbl(8919)	definition(x(3) 8975 pid('Subtract' 3 pos('./standard/Record.oz' 108 3) nil 5) <P: 116> [y(141)])
		allocateL5
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 47> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 115> 6)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(8919)
lbl(8975)	definition(x(4) 9051 pid('Map' 4 pos('./standard/Record.oz' 115 3) nil 5) <P: 117> nil)
		match(x(0) ht(9036 [onScalar(nil 8984) onRecord('|' 2 8988)]))
lbl(8984)	getLiteral(nil x(3))
		return
lbl(8988)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 117> 9)
lbl(9036)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8975)
lbl(9051)	definition(x(4) 9117 pid('MapT' 5 pos('./standard/Record.oz' 121 3) nil 7) <P: 118> nil)
		testLE(x(0) x(1) x(5) 9114)
		allocateL5
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 118> 11)
lbl(9114)	return
		endDefinition(9051)
lbl(9117)	definition(x(4) 9189 pid('FoldL' 5 pos('./standard/Record.oz' 127 3) nil 6) <P: 119> nil)
		match(x(0) ht(9174 [onScalar(nil 9126) onRecord('|' 2 9130)]))
lbl(9126)	unify(x(4) x(3))
		return
lbl(9130)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 119> 11)
lbl(9174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(130)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9117)
lbl(9189)	definition(x(4) 9265 pid('FoldLT' 6 pos('./standard/Record.oz' 133 3) nil 8) <P: 120> nil)
		testLT(x(0) x(1) x(6) 9251)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(x(7) x(1))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 120> 13)
lbl(9251)	callBI('Record.\'.\'' [x(2) x(0)]#[x(1)])
		move(x(4) x(0))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9189)
lbl(9265)	definition(x(4) 9331 pid('FoldR' 5 pos('./standard/Record.oz' 139 3) nil 7) <P: 121> nil)
		match(x(0) ht(9316 [onScalar(nil 9274) onRecord('|' 2 9278)]))
lbl(9274)	unify(x(4) x(3))
		return
lbl(9278)	allocateL4
		getVarVar(x(0) x(5))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(6) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 121> 10)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9265)
lbl(9331)	definition(x(4) 9397 pid('FoldRT' 6 pos('./standard/Record.oz' 145 3) nil 8) <P: 122> nil)
		testLT(x(0) x(1) x(6) 9380)
		allocateL4
		callBI('Record.\'.\'' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		move(x(6) y(2))
		move(x(7) x(0))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 122> 12)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9380)	callBI('Record.\'.\'' [x(2) x(0)]#[x(6)])
		move(x(6) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9331)
lbl(9397)	definition(x(4) 9452 pid('ForAll' 3 pos('./standard/Record.oz' 151 3) nil 4) <P: 123> nil)
		match(x(0) ht(9437 [onScalar(nil 9406) onRecord('|' 2 9407)]))
lbl(9406)	return
lbl(9407)	allocateL3
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		call(y(2) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 123> 7)
lbl(9437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(154)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9397)
lbl(9452)	definition(x(4) 9507 pid('ForAllT' 4 pos('./standard/Record.oz' 157 3) nil 5) <P: 124> nil)
		testLE(x(0) x(1) x(4) 9504)
		allocateL4
		callBI('Record.\'.\'' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		call(y(3) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 124> 9)
lbl(9504)	return
		endDefinition(9452)
lbl(9507)	definition(x(4) 9593 pid('All' 4 pos('./standard/Record.oz' 163 3) nil 5) <P: 125> nil)
		match(x(0) ht(9578 [onScalar(nil 9516) onRecord('|' 2 9520)]))
lbl(9516)	getLiteral(true x(3))
		return
lbl(9520)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9562 9567)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 125> 9)
lbl(9562)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(9567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(165)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9578)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9507)
lbl(9593)	definition(x(4) 9679 pid('AllT' 5 pos('./standard/Record.oz' 169 3) nil 6) <P: 126> nil)
		testLE(x(0) x(1) x(5) 9673)
		allocateL6
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9657 9662)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 126> 11)
lbl(9657)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(9662)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9673)	getLiteral(true x(4))
		return
		endDefinition(9593)
lbl(9679)	definition(x(4) 9765 pid('Some' 4 pos('./standard/Record.oz' 175 3) nil 5) <P: 127> nil)
		match(x(0) ht(9750 [onScalar(nil 9688) onRecord('|' 2 9692)]))
lbl(9688)	getLiteral(false x(3))
		return
lbl(9692)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9725 9739)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(9725)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 127> 9)
lbl(9739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(177)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9750)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9679)
lbl(9765)	definition(x(4) 9851 pid('SomeT' 5 pos('./standard/Record.oz' 181 3) nil 6) <P: 128> nil)
		testLE(x(0) x(1) x(5) 9845)
		allocateL6
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9811 9834)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(9811)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 128> 11)
lbl(9834)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9845)	getLiteral(false x(4))
		return
		endDefinition(9765)
lbl(9851)	definition(x(4) 9962 pid('Filter' 4 pos('./standard/Record.oz' 185 3) nil 5) <P: 129> nil)
		match(x(0) ht(9947 [onScalar(nil 9860) onRecord('|' 2 9864)]))
lbl(9860)	getLiteral(nil x(3))
		return
lbl(9864)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 9922 9936)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9922)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9947)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(191)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9851)
lbl(9962)	definition(x(4) 10095 pid('Part' 5 pos('./standard/Record.oz' 194 3) nil 6) <P: 130> nil)
		match(x(0) ht(10080 [onScalar(nil 9971) onRecord('|' 2 9978)]))
lbl(9971)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(9978)	allocateL8
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(2) 2)
		testBool(y(7) 10041 10069)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10041)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(197)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10080)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(200)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9962)
lbl(10095)	definition(x(4) 10197 pid('Take' 4 pos('./standard/Record.oz' 203 3) nil 5) <P: 131> nil)
		match(x(0) ht(10182 [onScalar(nil 10104) onRecord('|' 2 10108)]))
lbl(10104)	getLiteral(nil x(3))
		return
lbl(10108)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10166 10171)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 131> 9)
lbl(10166)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10182)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10095)
lbl(10197)	definition(x(4) 10299 pid('Drop' 4 pos('./standard/Record.oz' 210 3) nil 5) <P: 132> nil)
		match(x(0) ht(10284 [onScalar(nil 10206) onRecord('|' 2 10210)]))
lbl(10206)	getLiteral(nil x(3))
		return
lbl(10210)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10247 10273)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10247)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 132> 9)
lbl(10273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(213)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10284)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(214)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10197)
lbl(10299)	definition(x(4) 10421 pid('TakeDrop' 5 pos('./standard/Record.oz' 217 3) nil 7) <P: 133> nil)
		match(x(0) ht(10406 [onScalar(nil 10308) onRecord('|' 2 10315)]))
lbl(10308)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(10315)	allocateL9
		getVarVar(x(5) y(0))
		callBI('Record.\'.\'' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(3) 2)
		testBool(y(8) 10380 10395)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 133> 11)
lbl(10380)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(10395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(220)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(223)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10299)
lbl(10421)	definition(x(4) 10497 pid('MapInd' 4 pos('./standard/Record.oz' 229 3) nil 5) <P: 134> nil)
		match(x(0) ht(10482 [onScalar(nil 10430) onRecord('|' 2 10434)]))
lbl(10430)	getLiteral(nil x(3))
		return
lbl(10434)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(1))
		move(x(4) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 134> 9)
lbl(10482)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(232)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10421)
lbl(10497)	definition(x(4) 10563 pid('MapIndT' 5 pos('./standard/Record.oz' 235 3) nil 7) <P: 135> nil)
		testLE(x(0) x(1) x(5) 10560)
		allocateL5
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		move(x(6) x(2))
		call(y(3) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 135> 11)
lbl(10560)	return
		endDefinition(10497)
lbl(10563)	definition(x(4) 10635 pid('FoldLInd' 5 pos('./standard/Record.oz' 241 3) nil 6) <P: 136> nil)
		match(x(0) ht(10620 [onScalar(nil 10572) onRecord('|' 2 10576)]))
lbl(10572)	unify(x(4) x(3))
		return
lbl(10576)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 136> 11)
lbl(10620)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(244)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10563)
lbl(10635)	definition(x(4) 10703 pid('FoldLIndT' 6 pos('./standard/Record.oz' 247 3) nil 8) <P: 137> nil)
		testLE(x(0) x(1) x(6) 10697)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 137> 13)
lbl(10697)	unify(x(5) x(4))
		return
		endDefinition(10635)
lbl(10703)	definition(x(4) 10774 pid('FoldRInd' 5 pos('./standard/Record.oz' 253 3) nil 7) <P: 138> nil)
		match(x(0) ht(10759 [onScalar(nil 10712) onRecord('|' 2 10716)]))
lbl(10712)	unify(x(4) x(3))
		return
lbl(10716)	allocateL5
		getVarVar(x(0) x(5))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		moveMoveXYXY(x(0) y(2) x(6) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 138> 10)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(1) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10759)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10703)
lbl(10774)	definition(x(4) 10834 pid('FoldRIndT' 6 pos('./standard/Record.oz' 259 3) nil 8) <P: 139> nil)
		testLE(x(0) x(1) x(6) 10828)
		allocateL5
		callBI('Record.\'.\'' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(7) x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<P: 139> 12)
		moveMoveYXYX(y(1) x(4) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(2) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10828)	unify(x(5) x(4))
		return
		endDefinition(10774)
lbl(10834)	definition(x(4) 10889 pid('ForAllInd' 3 pos('./standard/Record.oz' 265 3) nil 4) <P: 140> nil)
		match(x(0) ht(10874 [onScalar(nil 10843) onRecord('|' 2 10844)]))
lbl(10843)	return
lbl(10844)	allocateL3
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 140> 7)
lbl(10874)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(268)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10834)
lbl(10889)	definition(x(4) 10944 pid('ForAllIndT' 4 pos('./standard/Record.oz' 271 3) nil 5) <P: 141> nil)
		testLE(x(0) x(1) x(4) 10941)
		allocateL4
		callBI('Record.\'.\'' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 141> 9)
lbl(10941)	return
		endDefinition(10889)
lbl(10944)	definition(x(4) 11030 pid('AllInd' 4 pos('./standard/Record.oz' 277 3) nil 5) <P: 142> nil)
		match(x(0) ht(11015 [onScalar(nil 10953) onRecord('|' 2 10957)]))
lbl(10953)	getLiteral(true x(3))
		return
lbl(10957)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 10999 11004)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 142> 9)
lbl(10999)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(11004)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(279)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11015)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(280)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10944)
lbl(11030)	definition(x(4) 11116 pid('AllIndT' 5 pos('./standard/Record.oz' 283 3) nil 6) <P: 143> nil)
		testLE(x(0) x(1) x(5) 11110)
		allocateL6
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11094 11099)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 143> 11)
lbl(11094)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(11099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11110)	getLiteral(true x(4))
		return
		endDefinition(11030)
lbl(11116)	definition(x(4) 11202 pid('SomeInd' 4 pos('./standard/Record.oz' 289 3) nil 5) <P: 144> nil)
		match(x(0) ht(11187 [onScalar(nil 11125) onRecord('|' 2 11129)]))
lbl(11125)	getLiteral(false x(3))
		return
lbl(11129)	allocateL5
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 11162 11176)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(11162)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 144> 9)
lbl(11176)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(291)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11187)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(292)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11116)
lbl(11202)	definition(x(4) 11288 pid('SomeIndT' 5 pos('./standard/Record.oz' 295 3) nil 6) <P: 145> nil)
		testLE(x(0) x(1) x(5) 11282)
		allocateL6
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11248 11271)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(11248)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 145> 11)
lbl(11271)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11282)	getLiteral(false x(4))
		return
		endDefinition(11202)
lbl(11288)	definition(x(4) 11399 pid('FilterInd' 4 pos('./standard/Record.oz' 299 3) nil 5) <P: 146> nil)
		match(x(0) ht(11384 [onScalar(nil 11297) onRecord('|' 2 11301)]))
lbl(11297)	getLiteral(nil x(3))
		return
lbl(11301)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11359 11373)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11359)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11373)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(305)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11288)
lbl(11399)	definition(x(4) 11532 pid('PartInd' 5 pos('./standard/Record.oz' 308 3) nil 6) <P: 147> nil)
		match(x(0) ht(11517 [onScalar(nil 11408) onRecord('|' 2 11415)]))
lbl(11408)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11415)	allocateL8
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(1))
		createVariableMove(y(7) x(2))
		call(y(2) 3)
		testBool(y(7) 11478 11506)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11478)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11506)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(311)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11517)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(314)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11399)
lbl(11532)	definition(x(4) 11634 pid('TakeInd' 4 pos('./standard/Record.oz' 317 3) nil 5) <P: 148> nil)
		match(x(0) ht(11619 [onScalar(nil 11541) onRecord('|' 2 11545)]))
lbl(11541)	getLiteral(nil x(3))
		return
lbl(11545)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11603 11608)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 148> 9)
lbl(11603)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11608)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(320)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11619)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11532)
lbl(11634)	definition(x(4) 11736 pid('DropInd' 4 pos('./standard/Record.oz' 324 3) nil 5) <P: 149> nil)
		match(x(0) ht(11721 [onScalar(nil 11643) onRecord('|' 2 11647)]))
lbl(11643)	getLiteral(nil x(3))
		return
lbl(11647)	allocateL7
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11684 11710)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11684)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 149> 9)
lbl(11710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11634)
lbl(11736)	definition(x(4) 11861 pid('TakeDropInd' 5 pos('./standard/Record.oz' 331 3) nil 7) <P: 150> nil)
		match(x(0) ht(11846 [onScalar(nil 11745) onRecord('|' 2 11752)]))
lbl(11745)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11752)	allocateL9
		getVarVar(x(5) y(0))
		callBI('Record.\'.\'' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(6) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		call(y(3) 3)
		testBool(y(8) 11820 11835)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 150> 11)
lbl(11820)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(11835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(334)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(337)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11736)
lbl(11861)	definition(x(4) 11960 pid('Zip' 5 pos('./standard/Record.oz' 340 3) nil 7) <P: 151> nil)
		match(x(0) ht(11945 [onScalar(nil 11870) onRecord('|' 2 11874)]))
lbl(11870)	getLiteral(nil x(4))
		return
lbl(11874)	allocateL5
		getVarVar(x(0) y(0))
		testBI('Value.hasFeature' [x(1) x(0)]#[x(5)] 11938)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 2 x(4))
		unifyValVar(x(0) x(5))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(2) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		move(x(4) x(0))
		move(x(6) x(1))
		move(x(5) x(2))
		call(y(4) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11938)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11945)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11861)
lbl(11960)	definition(x(4) 12037 pid('ZipT' 6 pos('./standard/Record.oz' 349 3) nil 9) <P: 152> nil)
		testLE(x(0) x(1) x(6) 12034)
		allocateL6
		callBI('Record.\'.\'' [x(5) x(0)]#[x(6)])
		callBI('Record.\'.\'' [x(2) x(0)]#[x(7)])
		callBI('Record.\'.\'' [x(3) x(0)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(6) x(2))
		call(y(4) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(6))
		move(x(6) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(12034)	return
		endDefinition(11960)
lbl(12037)	definition(x(4) 12089 pid('ToList' 3 pos('./standard/Record.oz' 354 3) nil 6) <P: 153> nil)
		match(x(0) ht(12074 [onScalar(nil 12046) onRecord('|' 2 12050)]))
lbl(12046)	getLiteral(nil x(2))
		return
lbl(12050)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 153> 7)
lbl(12074)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12037)
lbl(12089)	definition(x(4) 12130 pid('ToListT' 4 pos('./standard/Record.oz' 360 3) nil 6) <P: 154> nil)
		testLT(x(1) x(0) x(4) 12104)
		getLiteral(nil x(3))
		return
lbl(12104)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		unify(x(5) x(3))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 154> 9)
		endDefinition(12089)
lbl(12130)	definition(x(4) 12189 pid('ToListInd' 3 pos('./standard/Record.oz' 364 3) nil 6) <P: 155> nil)
		match(x(0) ht(12174 [onScalar(nil 12139) onRecord('|' 2 12143)]))
lbl(12139)	getLiteral(nil x(2))
		return
lbl(12143)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 155> 7)
lbl(12174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(367)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12130)
lbl(12189)	definition(x(4) 12237 pid('ToListIndT' 4 pos('./standard/Record.oz' 370 3) nil 6) <P: 156> nil)
		testLT(x(1) x(0) x(4) 12204)
		getLiteral(nil x(3))
		return
lbl(12204)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 156> 9)
		endDefinition(12189)
lbl(12237)	definition(x(4) 12265 pid('TupleToDictionary' 3 pos('./standard/Record.oz' 374 3) nil 4) <P: 157> [y(148)])
		testNumber(x(0) 0 12248)
		return
lbl(12248)	callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
		endDefinition(12237)
lbl(12265)	definition(x(4) 12305 pid('RecordToDictionary' 3 pos('./standard/Record.oz' 380 3) nil 5) <P: 158> [y(148)])
		match(x(0) ht(12290 [onScalar(nil 12274) onRecord('|' 2 12275)]))
lbl(12274)	return
lbl(12275)	getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
lbl(12290)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(384)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12265)
lbl(12305)	putRecord(record ['^' adjoin adjoinAt adjoinList all allInd arity dropWhile dropWhileInd filter filterInd foldL foldLInd foldR foldRInd forAll forAllInd hasLabel is isC label make map mapInd monitorArity partition partitionInd reflectArity some someInd subtract takeDropWhile takeDropWhileInd takeWhile takeWhileInd tell toDictionary toList toListInd width widthC zip] y(141))
		setVariable(x(1))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setVariable(y(157))
		setVariable(x(4))
		setValue(y(135))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setVariable(y(158))
		setVariable(x(8))
		setVariable(y(159))
		setVariable(y(160))
		setVariable(x(9))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(x(10))
		setValue(y(133))
		setValue(y(138))
		setValue(y(83))
		setValue(y(134))
		setVariable(y(163))
		setVariable(y(164))
		setValue(x(2))
		setVariable(x(11))
		setVariable(x(12))
		setValue(x(0))
		setVariable(x(13))
		setVariable(x(14))
		setValue(x(3))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setValue(y(140))
		setVariable(x(19))
		setVariable(y(165))
		setVariable(y(166))
		setValue(y(81))
		setValue(y(139))
		setVariable(x(20))
		putConstant('Record.\'^\'' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(21)])
		unify(x(21) x(1))
		putConstant('Record.hasLabel' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		unify(x(1) x(10))
lbl(12417)	definition(x(1) 12462 pid('Record.toList' 2 pos('./standard/Record.oz' 411 8) nil 5) <P: 159> nil)
		testBI('Tuple.is' [x(0)]#[x(2)] 12445)
		callBI('Record.width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 154> 9)
lbl(12445)	callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 153> 7)
		endDefinition(12417)
lbl(12462)	unify(x(1) y(165))
lbl(12465)	definition(x(1) 12510 pid('Record.toListInd' 2 pos('./standard/Record.oz' 417 8) nil 5) <P: 160> nil)
		testBI('Tuple.is' [x(0)]#[x(2)] 12493)
		callBI('Record.width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 156> 9)
lbl(12493)	callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 155> 7)
		endDefinition(12465)
lbl(12510)	unify(x(1) y(166))
lbl(12513)	definition(x(1) 12598 pid('Record.map' 3 pos('./standard/Record.oz' 424 8) nil 6) <P: 161> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 12556)
		callBI('Record.width' [x(0)]#[x(3)])
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Tuple.make' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 118> 11)
lbl(12556)	allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 117> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12513)
lbl(12598)	unify(x(1) y(163))
lbl(12601)	definition(x(1) 12666 pid('Record.foldL' 4 pos('./standard/Record.oz' 434 8) nil 7) <P: 162> nil)
		testBI('Tuple.is' [x(0)]#[x(4)] 12643)
		testBI('Literal.is' [x(0)]#[x(4)] 12619)
		unify(x(3) x(2))
		return
lbl(12619)	callBI('Record.width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 120> 13)
lbl(12643)	callBI('Record.arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 119> 11)
		endDefinition(12601)
lbl(12666)	unify(x(1) x(8))
lbl(12669)	definition(x(1) 12734 pid('Record.foldR' 4 pos('./standard/Record.oz' 443 8) nil 7) <P: 163> nil)
		testBI('Tuple.is' [x(0)]#[x(4)] 12711)
		testBI('Literal.is' [x(0)]#[x(4)] 12687)
		unify(x(3) x(2))
		return
lbl(12687)	callBI('Record.width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 122> 13)
lbl(12711)	callBI('Record.arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 121> 11)
		endDefinition(12669)
lbl(12734)	unify(x(1) y(160))
lbl(12737)	definition(x(1) 12782 pid('Record.forAll' 2 pos('./standard/Record.oz' 452 8) nil 5) <P: 164> nil)
		testBI('Tuple.is' [x(0)]#[x(2)] 12765)
		callBI('Record.width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 124> 9)
lbl(12765)	callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 123> 7)
		endDefinition(12737)
lbl(12782)	unify(x(1) y(161))
lbl(12785)	definition(x(1) 12836 pid('Record.all' 3 pos('./standard/Record.oz' 458 8) nil 6) <P: 165> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 12816)
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 126> 11)
lbl(12816)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 125> 9)
		endDefinition(12785)
lbl(12836)	unify(x(1) y(157))
lbl(12839)	definition(x(1) 12890 pid('Record.some' 3 pos('./standard/Record.oz' 464 8) nil 6) <P: 166> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 12870)
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 128> 11)
lbl(12870)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 127> 9)
		endDefinition(12839)
lbl(12890)	unify(x(1) x(13))
lbl(12893)	definition(x(1) 12941 pid('Record.filter' 3 pos('./standard/Record.oz' 470 8) nil 5) <P: 167> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 129> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12893)
lbl(12941)	unify(x(1) x(7))
lbl(12944)	definition(x(1) 13007 pid('Record.partition' 4 pos('./standard/Record.oz' 474 8) nil 6) <P: 168> nil)
		allocateL5
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 130> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(12944)
lbl(13007)	unify(x(1) x(11))
lbl(13010)	definition(x(1) 13058 pid('Record.takeWhile' 3 pos('./standard/Record.oz' 482 8) nil 5) <P: 169> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 131> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13010)
lbl(13058)	unify(x(1) x(17))
lbl(13061)	definition(x(1) 13109 pid('Record.dropWhile' 3 pos('./standard/Record.oz' 486 8) nil 5) <P: 170> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 132> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13061)
lbl(13109)	unify(x(1) x(5))
lbl(13112)	definition(x(1) 13175 pid('Record.takeDropWhile' 4 pos('./standard/Record.oz' 490 8) nil 6) <P: 171> nil)
		allocateL5
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 133> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13112)
lbl(13175)	unify(x(1) x(15))
lbl(13178)	definition(x(1) 13263 pid('Record.mapInd' 3 pos('./standard/Record.oz' 499 8) nil 6) <P: 172> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 13221)
		callBI('Record.width' [x(0)]#[x(3)])
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Tuple.make' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 135> 11)
lbl(13221)	allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 134> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13178)
lbl(13263)	unify(x(1) y(164))
lbl(13266)	definition(x(1) 13331 pid('Record.foldLInd' 4 pos('./standard/Record.oz' 510 8) nil 7) <P: 173> nil)
		testBI('Tuple.is' [x(0)]#[x(4)] 13308)
		testBI('Literal.is' [x(0)]#[x(4)] 13284)
		unify(x(3) x(2))
		return
lbl(13284)	callBI('Record.width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 137> 13)
lbl(13308)	callBI('Record.arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 136> 11)
		endDefinition(13266)
lbl(13331)	unify(x(1) y(159))
lbl(13334)	definition(x(1) 13399 pid('Record.foldRInd' 4 pos('./standard/Record.oz' 519 8) nil 7) <P: 174> nil)
		testBI('Tuple.is' [x(0)]#[x(4)] 13376)
		testBI('Literal.is' [x(0)]#[x(4)] 13352)
		unify(x(3) x(2))
		return
lbl(13352)	callBI('Record.width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 139> 13)
lbl(13376)	callBI('Record.arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 138> 11)
		endDefinition(13334)
lbl(13399)	unify(x(1) x(9))
lbl(13402)	definition(x(1) 13447 pid('Record.forAllInd' 2 pos('./standard/Record.oz' 528 8) nil 5) <P: 175> nil)
		testBI('Tuple.is' [x(0)]#[x(2)] 13430)
		callBI('Record.width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 141> 9)
lbl(13430)	callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 140> 7)
		endDefinition(13402)
lbl(13447)	unify(x(1) y(162))
lbl(13450)	definition(x(1) 13501 pid('Record.allInd' 3 pos('./standard/Record.oz' 534 8) nil 6) <P: 176> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 13481)
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 143> 11)
lbl(13481)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 142> 9)
		endDefinition(13450)
lbl(13501)	unify(x(1) x(4))
lbl(13504)	definition(x(1) 13555 pid('Record.someInd' 3 pos('./standard/Record.oz' 540 8) nil 6) <P: 177> nil)
		testBI('Tuple.is' [x(0)]#[x(3)] 13535)
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 145> 11)
lbl(13535)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 144> 9)
		endDefinition(13504)
lbl(13555)	unify(x(1) x(14))
lbl(13558)	definition(x(1) 13606 pid('Record.filterInd' 3 pos('./standard/Record.oz' 546 8) nil 5) <P: 178> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 146> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13558)
lbl(13606)	unify(x(1) y(158))
lbl(13609)	definition(x(1) 13672 pid('Record.partitionInd' 4 pos('./standard/Record.oz' 550 8) nil 6) <P: 179> nil)
		allocateL5
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 147> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13609)
lbl(13672)	unify(x(1) x(12))
lbl(13675)	definition(x(1) 13723 pid('Record.takeWhileInd' 3 pos('./standard/Record.oz' 558 8) nil 5) <P: 180> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 148> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13675)
lbl(13723)	unify(x(1) x(18))
lbl(13726)	definition(x(1) 13774 pid('Record.dropWhileInd' 3 pos('./standard/Record.oz' 562 8) nil 5) <P: 181> nil)
		allocateL3
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 149> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13726)
lbl(13774)	unify(x(1) x(6))
lbl(13777)	definition(x(1) 13840 pid('Record.takeDropWhileInd' 4 pos('./standard/Record.oz' 566 8) nil 6) <P: 182> nil)
		allocateL5
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 150> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13777)
lbl(13840)	unify(x(1) x(16))
lbl(13843)	definition(x(1) 13950 pid('Record.zip' 4 pos('./standard/Record.oz' 575 8) nil 7) <P: 183> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Tuple.is' [x(0)]#[x(4)] 13906)
lbl(13864)	testBI('Tuple.is' [x(1)]#[x(4)] 13906)
lbl(13868)	callBI('Record.width' [x(0)]#[x(4)])
		callBI('Record.width' [x(1)]#[x(5)])
		callBI('Value.min' [x(4) x(5)]#[x(6)])
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Tuple.make' [x(4) x(6)]#[x(5)])
		unify(x(5) y(3))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(1 x(0))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(13906)	move(y(0) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		callBI('Record.arity' [x(0)]#[x(5)])
		move(x(1) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 151> 10)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL6
		return
		endDefinition(13843)
lbl(13950)	unify(x(1) x(20))
lbl(13953)	definition(x(1) 14001 pid('Record.toDictionary' 2 pos('./standard/Record.oz' 586 8) nil 4) <P: 184> [y(132)])
		callBI('Dictionary.new' nil#[x(2)])
		unify(x(2) x(1))
		testBI('Tuple.is' [x(0)]#[x(2)] 13984)
		callBI('Record.width' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
lbl(13984)	callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
		endDefinition(13953)
lbl(14001)	unify(x(1) x(19))
		putConstant('Chunk.new' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('Chunk.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
lbl(14022)	definition(x(2) 14072 pid('ChunkSelectFeature' 3 pos('./standard/Chunk.oz' 42 3) nil 5) <P: 185> nil)
		testBI('Chunk.is' [x(0)]#[x(3)] 14039)
		callBI('Record.\'.\'' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14039)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkSelectFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14022)
lbl(14072)	definition(x(3) 14122 pid('ChunkHasFeature' 3 pos('./standard/Chunk.oz' 47 3) nil 5) <P: 186> nil)
		testBI('Chunk.is' [x(0)]#[x(3)] 14089)
		callBI('Value.hasFeature' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14089)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkHasFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14072)
lbl(14122)	putRecord(chunk [hasFeature is new selectFeature] y(167))
		setValue(x(3))
		setValue(x(4))
		setValue(x(1))
		setValue(x(2))
		putConstant('VirtualString.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(5)])
lbl(14143)	definition(x(2) 14214 pid('AllToString' 4 pos('./standard/VirtualString.oz' 35 6) nil 6) <P: 187> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14208)
		allocateL6
		inlineMinus1(x(0) x(4))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 188> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 187> 9)
lbl(14208)	unify(x(3) x(2))
		return
		endDefinition(14143)
lbl(14214)	definition(x(2) 14278 pid('SignOzToOS' 2 pos('./standard/VirtualString.oz' 40 6) nil 4) <P: 189> nil)
		match(x(0) ht(14263 [onScalar(nil 14223) onRecord('|' 2 14227)]))
lbl(14223)	getLiteral(nil x(1))
		return
lbl(14227)	allocateL2
		getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		testNumber(x(0) 126 14251)
lbl(14246)	getNumber(45 x(1))
		branch(14254)
lbl(14251)	unify(x(1) x(0))
lbl(14254)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 189> 5)
lbl(14263)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(44)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14214)
lbl(14278)	definition(x(2) 14404 pid('ToString' 2 pos('./standard/VirtualString.oz' 47 6) nil 5) <P: 188> [y(51) y(62) y(79) y(39)])
		callBI('Value.type' [x(0)]#[x(2)])
		match(x(2) ht(14389 [onScalar(int 14290) onScalar(float 14321) onScalar(atom 14330) onScalar(tuple 14348)]))
lbl(14290)	putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 14314)
		getList(x(1))
		unifyNumber(45)
		unifyVariable(x(1))
		callBI('Number.abs' [x(0)]#[x(2)])
		callBI('Int.toString' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(14314)	callBI('Int.toString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14321)	callBI('Float.toString' [x(0)]#[x(2)])
		move(x(2) x(0))
		genFastCall(<P: 189> 5)
lbl(14330)	match(x(0) ht(14341 [onScalar('#' 14333) onScalar(nil 14337)]))
lbl(14333)	getLiteral(nil x(1))
		return
lbl(14337)	getLiteral(nil x(1))
		return
lbl(14341)	callBI('Atom.toString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14348)	callBI('Record.label' [x(0)]#[x(2)])
		match(x(2) ht(14376 [onScalar('#' 14354) onScalar('|' 14372)]))
lbl(14354)	callBI('Record.width' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 187> 9)
lbl(14372)	unify(x(1) x(0))
		return
lbl(14376)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14389)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14278)
lbl(14404)	definition(x(2) 14471 pid('ChangeSignAll' 4 pos('./standard/VirtualString.oz' 70 6) nil 6) <P: 190> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14468)
		allocateL4
		callBI('Record.\'.\'' [x(3) x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		move(y(2) x(1))
		move(x(4) x(2))
		genFastCall(<P: 191> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 190> 9)
lbl(14468)	return
		endDefinition(14404)
lbl(14471)	definition(x(2) 14533 pid('ChangeLast' 5 pos('./standard/VirtualString.oz' 78 6) nil 6) <P: 192> nil)
		match(x(0) ht(14518 [onScalar(nil 14480) onRecord('|' 2 14487)]))
lbl(14480)	getLiteral(nil x(3))
		unify(x(2) x(4))
		return
lbl(14487)	getVarVar(x(0) x(5))
		testNumber(x(0) 126 14508)
lbl(14494)	getLiteral(nil x(3))
		getRecord('#' 3 x(4))
		unifyValue(x(2))
		unifyValue(x(1))
		unifyValue(x(5))
		return
lbl(14508)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 192> 11)
lbl(14518)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(84)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14471)
lbl(14533)	definition(x(2) 14599 pid('ChangeSignFloat' 3 pos('./standard/VirtualString.oz' 87 6) nil 6) <P: 193> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 14580)
lbl(14551)	getVarVar(x(3) x(4))
		testNumber(x(3) 126 14580)
		getRecord('#' 2 y(2))
		unifyValVar(y(1) x(5))
		createVariable(x(2))
		move(x(4) x(0))
		move(x(2) x(3))
		move(x(5) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
lbl(14580)	createVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(x(2) x(3))
		move(y(2) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
		endDefinition(14533)
lbl(14599)	definition(x(2) 14723 pid('ChangeSign' 3 pos('./standard/VirtualString.oz' 93 6) nil 6) <P: 191> [y(51) y(79)])
		callBI('Value.type' [x(0)]#[x(3)])
		match(x(3) ht(14708 [onScalar(int 14611) onScalar(float 14637) onScalar(atom 14646) onScalar(tuple 14650)]))
lbl(14611)	putConstant(0 x(3))
		testLT(x(0) x(3) x(4) 14633)
		getRecord('#' 2 x(2))
		unifyValVar(x(1) x(2))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(14633)	unify(x(2) x(0))
		return
lbl(14637)	callBI('Float.toString' [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 193> 7)
lbl(14646)	unify(x(2) x(0))
		return
lbl(14650)	callBI('Record.label' [x(0)]#[x(3)])
		match(x(3) ht(14695 [onScalar('#' 14656) onScalar('|' 14691)]))
lbl(14656)	allocateL2
		callBI('Record.width' [x(0)]#[x(3)])
		putConstant('#' x(4))
		callBI('Tuple.make' [x(4) x(3)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		move(y(1) x(3))
		genFastCall(<P: 190> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(14691)	unify(x(2) x(0))
		return
lbl(14695)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(104)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14708)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(105)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14599)
lbl(14723)	putConstant('VirtualString.length' x(3))
		putConstant(3 x(6))
		callBI('Boot.builtin' [x(3) x(6)]#[x(7)])
		putRecord(virtualString [changeSign is length toAtom toString] y(51))
		setValue(x(2))
		setValue(x(5))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
lbl(14746)	definition(x(2) 14768 pid('VirtualString.toString' 2 pos('./standard/VirtualString.oz' 114 17) nil 2) <P: 194> nil)
		match(x(0) ht(14763 [onScalar(nil 14755) onRecord('|' 2 14759)]))
lbl(14755)	getLiteral(nil x(1))
		return
lbl(14759)	unify(x(1) x(0))
		return
lbl(14763)	genFastCall(<P: 188> 5)
		endDefinition(14746)
lbl(14768)	unify(x(2) y(170))
lbl(14771)	definition(x(2) 14808 pid('VirtualString.toAtom' 2 pos('./standard/VirtualString.oz' 120 17) nil 3) <P: 195> nil)
		testBI('Atom.is' [x(0)]#[x(2)] 14785)
		unify(x(1) x(0))
		return
lbl(14785)	allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 188> 4)
		move(y(1) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(14771)
lbl(14808)	unify(x(2) y(169))
lbl(14811)	definition(x(2) 14835 pid('VirtualString.length' 2 pos('./standard/VirtualString.oz' 127 17) nil 6) <P: 196> nil)
		move(x(0) x(2))
		putConstant(0 x(4))
		move(x(4) x(3))
		callBI('VirtualString.length' [x(2) x(3)]#[x(5)])
		unify(x(5) x(1))
		return
		endDefinition(14811)
lbl(14835)	unify(x(2) y(168))
		putConstant('Array.new' x(2))
		putConstant(4 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(6)])
		putConstant('Array.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(7)])
		putConstant('Array.put' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(8)])
		putConstant('Array.get' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(9)])
lbl(14874)	definition(x(2) 14909 pid('ArrayToRecord' 3 pos('./standard/Array.oz' 34 3) nil 5) <P: 197> nil)
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		callBI('Array.get' [x(1) x(0)]#[x(4)])
		unify(x(4) x(3))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(4) 14906)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 197> 7)
lbl(14906)	return
		endDefinition(14874)
lbl(14909)	definition(x(2) 14938 pid('ArrayToArray' 4 pos('./standard/Array.oz' 37 3) nil 5) <P: 198> nil)
		testLT(x(1) x(0) x(4) 14921)
		return
lbl(14921)	callBI('Array.get' [x(2) x(0)]#[x(4)])
		callBI('Array.put' [x(3) x(0) x(4)]#nil)
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 198> 9)
		endDefinition(14909)
lbl(14938)	definition(x(2) 14986 pid('MakePairs' 4 pos('./standard/Array.oz' 43 3) nil 6) <P: 199> nil)
		testLT(x(1) x(0) x(4) 14953)
		getLiteral(nil x(3))
		return
lbl(14953)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('Array.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 199> 9)
		endDefinition(14938)
lbl(14986)	putConstant('Array.low' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(11)])
		putConstant('Array.high' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(12)])
		getRecord(array [clone get high is low new put toRecord] y(84))
		unifyVariable(x(2))
		unifyValue(x(9))
		unifyValue(x(12))
		unifyValue(x(7))
		unifyValue(x(11))
		unifyValue(x(6))
		unifyValVar(x(8) x(3))
lbl(15023)	definition(x(13) 15072 pid('Array.clone' 2 pos('./standard/Array.oz' 58 13) nil 6) <P: 200> nil)
		allocateL2
		callBI('Array.low' [x(0)]#[x(2)])
		callBI('Array.high' [x(0)]#[x(3)])
		putConstant(unit x(4))
		callBI('Array.new' [x(2) x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(3) x(1))
		move(y(1) x(3))
		genFastCall(<P: 198> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15023)
lbl(15072)	unify(x(13) x(2))
lbl(15075)	definition(x(2) 15150 pid('Array.toRecord' 3 pos('./standard/Array.oz' 65 13) nil 5) <P: 201> nil)
		allocateL4
		callBI('Array.low' [x(1)]#[x(3)])
		callBI('Array.high' [x(1)]#[x(4)])
		move(x(2) y(0))
		createVariable(y(1))
		testNumber(x(3) 1 15114)
		callBI('Tuple.make' [x(0) x(4)]#[x(3)])
		unify(x(3) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<P: 197> 6)
		branch(15143)
lbl(15114)	move(x(0) y(2))
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 199> 8)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(15143)	unify(y(1) y(0))
		deAllocateL4
		return
		endDefinition(15075)
lbl(15150)	unify(x(2) x(3))
		putConstant('Space.is' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(13)])
		putRecord(space ['ask' askVerbose clone commit inject is merge new] y(171))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setValue(x(13))
		setVariable(x(17))
		setVariable(x(18))
		putConstant('Space.new' x(20))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(20) x(21)]#[x(22)])
		unify(x(22) x(18))
		putConstant('Space.ask' x(20))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(20) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('Space.askVerbose' x(20))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(20) x(21)]#[x(22)])
		unify(x(22) x(3))
		putConstant('Space.clone' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(21)])
		unify(x(21) x(14))
		putConstant('Space.merge' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(21)])
		unify(x(21) x(17))
		putConstant('Space.inject' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(21)])
		unify(x(21) x(16))
		putConstant('Space.commit' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(21)])
		unify(x(21) x(15))
		putConstant('Object.is' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(21)])
		putConstant('Object.new' x(3))
		putConstant(3 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(22)])
		putConstant('Name.newUnique' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(23)])
		putConstant('Name.newUnique' x(3))
		putConstant(2 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(23)])
lbl(15302)	definition(x(3) 15376 pid('FbApply' 2 pos('./standard/Object.oz' 84 6) nil 6) <P: 202> [y(150)])
		inlineDot(x(0) <U: ooMeth> x(2) cache)
		callBI('Record.label' [x(1)]#[x(3)])
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15368)
lbl(15327)	putConstant(otherwise x(3))
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15359)
lbl(15340)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(2))
		setConstant(lookup)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(15359)	move(x(1) x(0))
		tailSendMsg(otherwise x(5) 1 cache)
lbl(15368)	move(x(1) x(0))
		tailCall(x(5) 1)
		endDefinition(15302)
lbl(15376)	putConstant('Object.newObject' x(20))
		putConstant(2 x(23))
		callBI('Boot.builtin' [x(20) x(23)]#[x(24)])
lbl(15385)	definition(x(20) 15413 pid('FbNew' 3 pos('./standard/Object.oz' 100 2) nil 4) <P: 203> nil)
		allocateL2
		callBI('Object.newObject' [x(0)]#[x(3)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		call(y(1) 1)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15385)
lbl(15413)	putRecord(fallback [apply new] x(23))
		setValue(x(3))
		setValue(x(20))
		putConstant('Object.makeClass' x(3))
		putConstant(7 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(24)])
		putConstant('Dictionary.markSafe' x(3))
		putConstant(1 x(20))
		callBI('Boot.builtin' [x(3) x(20)]#[x(24)])
lbl(15439)	definition(x(3) 15548 pid('InitMap' 5 pos('./standard/Object.oz' 118 6) nil 8) <P: 204> [y(156) y(148)])
		match(x(0) ht(15533 [onScalar(nil 15448) onRecord('|' 2 15452)]))
lbl(15448)	unify(x(4) x(3))
		return
lbl(15452)	allocateL5
		getVarVar(x(0) x(5))
		inlineDot(x(0) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		createVariable(y(4))
		testBI('Dictionary.member' [x(1) x(6)]#[x(7)] 15483)
		unify(y(4) x(3))
		branch(15516)
lbl(15483)	callBI('Dictionary.put' [x(1) x(6) x(0)]#nil)
		putConstant(nil x(7))
		callBI('Dictionary.put' [x(2) x(6) x(7)]#nil)
		inlineDot(x(0) <U: ooParents> x(6) cache)
		putList(x(7))
		setValue(x(0))
		setValue(x(3))
		move(x(6) x(0))
		move(x(7) x(3))
		move(y(4) x(4))
		genFastCall(<P: 204> 10)
lbl(15516)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 204> 11)
lbl(15533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15439)
lbl(15548)	definition(x(3) 15658 pid('AddIG' 3 pos('./standard/Object.oz' 132 6) nil 4) <P: 205> [y(149) y(148)])
		match(x(1) ht(15643 [onScalar(nil 15557) onRecord('|' 2 15558)]))
lbl(15557)	return
lbl(15558)	allocateL7
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(1) cache)
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(6))
		testBool(y(5) 15601 15609)
		unify(y(6) y(4))
		branch(15620)
lbl(15601)	getList(y(6))
		unifyValue(y(1))
		unifyValue(y(4))
		branch(15620)
lbl(15609)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(15620)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 205> 7)
lbl(15643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(141)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15548)
lbl(15658)	definition(x(3) 15720 pid('InitIG' 2 pos('./standard/Object.oz' 144 6) nil 4) <P: 206> nil)
		match(x(0) ht(15705 [onScalar(nil 15667) onRecord('|' 2 15668)]))
lbl(15667)	return
lbl(15668)	allocateL2
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(0) cache)
		inlineDot(x(3) <U: ooParents> x(3) cache)
		move(x(1) y(1))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<P: 205> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 206> 5)
lbl(15705)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(147)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15658)
lbl(15720)	definition(x(3) 15769 pid('Remove' 3 pos('./standard/Object.oz' 152 2) nil 5) <P: 207> nil)
		match(x(0) ht(15754 [onScalar(nil 15729) onRecord('|' 2 15733)]))
lbl(15729)	getLiteral(nil x(2))
		return
lbl(15733)	getVarVar(x(0) x(3))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 15744)
		unify(x(2) x(3))
		return
lbl(15744)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 207> 7)
lbl(15754)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(155)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15720)
lbl(15769)	definition(x(3) 15907 pid('RemoveBefore' 6 pos('./standard/Object.oz' 158 2) nil 7) <P: 208> [y(156) y(149) y(153) y(148)])
		match(x(0) ht(15892 [onScalar(nil 15778) onRecord('|' 2 15782)]))
lbl(15778)	unify(x(5) x(4))
		return
lbl(15782)	allocateL8
		getVarVar(x(0) y(0))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 15885)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(0) y(6))
		move(x(6) x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 207> 6)
		testLiteral(y(7) nil 15855)
lbl(15821)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(2) x(2))
		callBI('Dictionary.get' [x(2) x(1)]#[x(6)])
		putList(x(4))
		setValue(x(6))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15855)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		move(y(7) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15885)	move(y(0) x(0))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15892)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15769)
lbl(15907)	definition(x(3) 15986 pid('RemoveLeader' 6 pos('./standard/Object.oz' 176 2) nil 7) <P: 209> nil)
		match(x(0) ht(15971 [onScalar(nil 15916) onRecord('|' 2 15920)]))
lbl(15916)	unify(x(5) x(4))
		return
lbl(15920)	allocateL6
		getVarVar(x(6) y(0))
		inlineDot(x(6) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(5) y(4))
		move(y(1) x(0))
		move(x(6) x(1))
		createVariableMove(y(5) x(5))
		genFastCall(<P: 208> 12)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(5) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<P: 209> 13)
lbl(15971)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(182)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15907)
lbl(15986)	definition(x(3) 16110 pid('GetPairs' 3 pos('./standard/Object.oz' 185 2) nil 5) <P: 210> [y(147) y(149)])
		callBI('Dictionary.entries' [x(1)]#[x(4)])
lbl(15995)	definition(x(1) 16096 pid('' 3 pos('./standard/Object.oz' 188 6) nil 7) unit [g(1) x(0)])
		shallowGuard(16083)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(16011)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.get' [x(0) x(3)]#[x(5)])
lbl(16018)	definition(x(6) 16068 pid('' 3 pos('./standard/Object.oz' 191 12) nil 6) unit [g(0) g(1) x(5)])
		move(g(1) x(3))
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getList(x(2))
		unifyVariable(x(0))
		unifyValue(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(5))
		move(g(2) x(0))
		inlineDot(x(0) <U: ooPrintName> x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(4) <U: ooPrintName> x(1) cache)
		unify(x(1) x(5))
		return
		endDefinition(16018)
lbl(16068)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(6) x(1))
		genFastCall(<P: 32> 9)
lbl(16083)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15995)
lbl(16096)	move(x(4) x(0))
		move(x(2) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(15986)
lbl(16110)	definition(x(3) 16205 pid('Iterate' 4 pos('./standard/Object.oz' 199 2) nil 7) <P: 211> [y(151)])
		allocateL4
		callBI('Dictionary.keys' [x(2)]#[x(6)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(nil x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 209> 12)
		testLiteral(y(3) nil 16186)
lbl(16149)	move(y(1) x(0))
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		testLiteral(x(1) nil 16164)
		getLiteral(nil y(2))
		deAllocateL4
		return
lbl(16164)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 210> 6)
		putRecord(object 2 x(0))
		setConstant(order)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(16186)	getList(y(2))
		unifyValVar(y(3) x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 211> 9)
		endDefinition(16110)
lbl(16205)	definition(x(3) 16294 pid('Precedence' 2 pos('./standard/Object.oz' 209 6) nil 6) <P: 212> [y(132) y(153)])
		allocateL5
		callBI('Dictionary.new' nil#[x(2)])
		callBI('Dictionary.new' nil#[x(3)])
		putList(x(5))
		setValue(x(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		putConstant(nil x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 204> 10)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		genFastCall(<P: 206> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooId> x(1) cache)
		move(y(3) x(2))
		callBI('Dictionary.remove' [x(2) x(1)]#nil)
		putList(x(4))
		setValue(y(0))
		setConstant(nil)
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		deAllocateL5
		genFastCall(<P: 211> 9)
		endDefinition(16205)
lbl(16294)	definition(x(3) 16383 pid('SetOne' 4 pos('./standard/Object.oz' 227 6) nil 10) <P: 213> [y(148) y(153)])
		allocateL3
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(5) cache)
		putConstant(fast x(6))
		putConstant(<N: NoArg> x(7))
		callBI('Value.condSelect' [x(0) x(6) x(7)]#[x(8)])
		putConstant(default x(6))
		putConstant(<N: NoArg> x(7))
		callBI('Value.condSelect' [x(0) x(6) x(7)]#[x(9)])
		callBI('Dictionary.put' [x(1) x(4) x(5)]#nil)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(9) y(2))
		testLiteral(x(8) <N: NoArg> 16351)
		callBI('Dictionary.remove' [x(2) x(4)]#nil)
		branch(16354)
lbl(16351)	callBI('Dictionary.put' [x(2) x(4) x(8)]#nil)
lbl(16354)	testLiteral(y(2) <N: NoArg> 16368)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL3
		return
lbl(16368)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
		endDefinition(16294)
lbl(16383)	definition(x(3) 16450 pid('SetMethods' 5 pos('./standard/Object.oz' 243 6) nil 6) <P: 214> nil)
		testNumber(x(0) 0 16394)
		return
lbl(16394)	allocateL5
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
		move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 214> 11)
		endDefinition(16383)
lbl(16450)	definition(x(3) 16529 pid('AddMethods' 5 pos('./standard/Object.oz' 256 2) nil 8) <P: 215> [y(156)])
		testNumber(x(0) 0 16461)
		return
lbl(16461)	allocateL5
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		inlineDot(x(5) 1 x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('Dictionary.member' [x(2) x(6)]#[x(7)] 16490)
		branch(16504)
lbl(16490)	move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
lbl(16504)	move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 215> 11)
		endDefinition(16450)
lbl(16529)	definition(x(3) 16657 pid('SafeAdd' 7 pos('./standard/Object.oz' 266 2) nil 11) <P: 216> [y(156) y(149) y(148)])
		testNumber(x(0) 0 16540)
		return
lbl(16540)	allocateL7
		callBI('Record.\'.\'' [x(1) x(0)]#[x(7)])
		inlineDot(x(7) 1 x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		testBI('Dictionary.member' [x(3) x(8)]#[x(9)] 16604)
		callBI('Dictionary.get' [x(3) x(8)]#[x(7)])
		inlineDot(x(2) <U: ooPrintName> x(9) cache)
		inlineDot(x(7) <U: ooPrintName> x(7) cache)
		putRecord(object 5 x(10))
		setConstant(sharing)
		setValue(x(9))
		setValue(x(7))
		setConstant(method)
		setValue(x(8))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(16604)	testBI('Dictionary.member' [x(4) x(8)]#[x(9)] 16610)
		branch(16627)
lbl(16610)	callBI('Dictionary.put' [x(3) x(8) x(2)]#nil)
		move(x(7) x(0))
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		move(y(6) x(3))
		genFastCall(<P: 213> 8)
lbl(16627)	move(y(0) x(0))
		inlineMinus1(x(0) x(7))
		move(x(7) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		deAllocateL7
		genFastCall(<P: 216> 15)
		endDefinition(16529)
lbl(16657)	definition(x(3) 16744 pid('SafeAddMethods' 5 pos('./standard/Object.oz' 285 2) nil 9) <P: 217> nil)
		match(x(0) ht(16729 [onScalar(nil 16666) onRecord('|' 2 16667)]))
lbl(16666)	return
lbl(16667)	allocateL5
		getVarVar(x(7) y(0))
		inlineDot(x(7) <U: ooNewMeth> x(0) cache)
		callBI('Record.width' [x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) x(1))
		move(x(8) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		moveMoveYXYX(y(3) x(5) y(4) x(6))
		genFastCall(<P: 216> 14)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 217> 11)
lbl(16729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(290)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16657)
lbl(16744)	definition(x(3) 16852 pid('InheritMethods' 4 pos('./standard/Object.oz' 293 2) nil 7) <P: 218> [y(132)])
		match(x(0) ht(16837 [onScalar(nil 16753) onRecord('|' 2 16754)]))
lbl(16753)	return
lbl(16754)	allocateL4
		getVarVar(x(0) x(5))
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		testLiteral(x(4) nil 16806)
		inlineDot(x(6) <U: ooNewMeth> x(0) cache)
		callBI('Record.width' [x(0)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 215> 10)
		branch(16823)
lbl(16806)	callBI('Dictionary.new' nil#[x(6)])
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 217> 10)
lbl(16823)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 218> 9)
lbl(16837)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(302)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16744)
lbl(16852)	definition(x(3) 16913 pid('AddOther' 3 pos('./standard/Object.oz' 312 6) nil 5) <P: 219> [y(156) y(148)])
		match(x(0) ht(16898 [onScalar(nil 16861) onRecord('|' 2 16862)]))
lbl(16861)	return
lbl(16862)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(4)] 16880)
		branch(16886)
lbl(16880)	callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
lbl(16886)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 219> 7)
lbl(16898)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(319)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16852)
lbl(16913)	definition(x(3) 17023 pid('SafeAdd' 5 pos('./standard/Object.oz' 322 6) nil 9) <P: 220> [y(156) y(149) y(148)])
		match(x(0) ht(17008 [onScalar(nil 16922) onRecord('|' 2 16923)]))
lbl(16922)	return
lbl(16923)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 16976)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		inlineDot(x(2) <U: ooPrintName> x(7) cache)
		inlineDot(x(6) <U: ooPrintName> x(6) cache)
		putRecord(object 5 x(8))
		setConstant(sharing)
		setValue(x(7))
		setValue(x(6))
		setConstant('feature or attribute')
		setValue(x(0))
		callBI('Exception.raiseError' [x(8)]#nil)
lbl(16976)	testBI('Dictionary.member' [x(4) x(0)]#[x(6)] 16982)
		branch(16991)
lbl(16982)	callBI('Record.\'.\'' [x(1) x(0)]#[x(6)])
		callBI('Dictionary.put' [x(4) x(0) x(6)]#nil)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
lbl(16991)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 220> 11)
lbl(17008)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(338)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16913)
lbl(17023)	definition(x(3) 17097 pid('SafeAddOther' 4 pos('./standard/Object.oz' 341 6) nil 6) <P: 221> nil)
		match(x(0) ht(17082 [onScalar(nil 17032) onRecord('|' 2 17033)]))
lbl(17032)	return
lbl(17033)	allocateL4
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(0) x(3)]#[x(4)])
		callBI('Record.arity' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		genFastCall(<P: 220> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<P: 221> 9)
lbl(17082)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17023)
lbl(17097)	definition(x(3) 17190 pid('InheritOther' 3 pos('./standard/Object.oz' 349 6) nil 6) <P: 222> [y(132)])
		match(x(0) ht(17175 [onScalar(nil 17106) onRecord('|' 2 17107)]))
lbl(17106)	return
lbl(17107)	allocateL3
		getVarVar(x(0) x(3))
		getList(x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(5) nil 17149)
		callBI('Record.\'.\'' [x(4) x(2)]#[x(0)])
		callBI('Record.arity' [x(0)]#[x(4)])
		move(x(0) x(1))
		move(x(4) x(0))
		move(y(0) x(2))
		genFastCall(<P: 219> 6)
		branch(17163)
lbl(17149)	callBI('Dictionary.new' nil#[x(4)])
		move(x(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<P: 221> 8)
lbl(17163)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 222> 7)
lbl(17175)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(356)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17097)
lbl(17190)	definition(x(3) 17277 pid('Free' 3 pos('./standard/Object.oz' 365 6) nil 6) <P: 223> nil)
		match(x(0) ht(17262 [onScalar(nil 17199) onRecord('|' 2 17203)]))
lbl(17199)	getLiteral(nil x(2))
		return
lbl(17203)	allocateL3
		getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Value.isDet' [x(4)]#[x(5)] 17250)
lbl(17222)	testLiteral(x(4) <U: ooFreeFlag> 17250)
lbl(17226)	getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17250)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17262)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17190)
lbl(17277)	definition(x(3) 17318 pid('MakeFree' 2 pos('./standard/Object.oz' 375 6) nil 4) <P: 224> [y(2)])
		allocateL2
		callBI('Record.arity' [x(0)]#[x(3)])
		move(x(1) y(0))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 223> 6)
		putConstant(free x(0))
		move(y(1) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(17277)
lbl(17318)	definition(x(3) 17335 pid('Add' 2 pos('./standard/Object.oz' 382 6) nil 2) <P: 225> nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		return
		endDefinition(17318)
lbl(17335)	definition(x(20) 17374 pid('AddFree' 3 pos('./standard/Object.oz' 386 6) nil 3) <P: 226> [x(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Record.adjoinList' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(17335)
lbl(17374)	definition(x(3) 17465 pid('CheckParents' 2 pos('./standard/Object.oz' 395 3) nil 5) <P: 227> nil)
		match(x(0) ht(17450 [onScalar(nil 17383) onRecord('|' 2 17384)]))
lbl(17383)	return
lbl(17384)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(<U: ooPrintName> x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(4)] 17428)
		putConstant(<U: ooParents> x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(4)] 17409)
		branch(17441)
lbl(17409)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(3))
		setConstant(final)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17428)	putRecord(object 3 x(3))
		setConstant(inheritanceFromNonClass)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17441)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 227> 5)
lbl(17450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(406)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17374)
lbl(17465)	definition(x(3) 17524 pid('HasPropertyParents' 3 pos('./standard/Object.oz' 412 3) nil 5) <P: 228> nil)
		match(x(0) ht(17509 [onScalar(nil 17474) onRecord('|' 2 17478)]))
lbl(17474)	getLiteral(false x(2))
		return
lbl(17478)	getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(4)])
		testBool(x(4) 17492 17498)
		getLiteral(true x(2))
		return
lbl(17492)	move(x(3) x(0))
		genFastCall(<P: 228> 7)
lbl(17498)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17509)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(415)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17465)
lbl(17524)	definition(x(3) 18113 pid('`class`' 7 pos('./standard/Object.oz' 423 3) nil 7) <P: 229> [x(23) y(132) y(155) x(19) y(104)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYYX(x(6) y(6) y(5) x(1))
		genFastCall(<P: 227> 4)
		move(y(4) x(1))
		putConstant(locking x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(8))
		testBool(y(7) 17578 17591)
		getLiteral(true y(8))
		branch(17602)
lbl(17578)	moveMoveYXYX(y(0) x(0) y(8) x(2))
		putConstant(<U: ooLocking> x(1))
		genFastCall(<P: 228> 6)
		branch(17602)
lbl(17591)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(432)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17602)	move(y(4) x(1))
		putConstant(native x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(9))
		testBool(y(7) 17625 17638)
		getLiteral(true y(9))
		branch(17649)
lbl(17625)	moveMoveYXYX(y(0) x(0) y(9) x(2))
		putConstant(<U: ooNative> x(1))
		genFastCall(<P: 228> 6)
		branch(17649)
lbl(17638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(433)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17649)	move(y(4) x(1))
		putConstant(final x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooId> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooNewAttr> <U: ooNewFeat> <U: ooNewMeth> <U: ooParents> <U: ooPrintName> <U: ooUnFreeFeat>] y(4))
		setVariable(y(10))
		setVariable(y(11))
		setValue(g(0))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(x(0))
		setValue(y(8))
		setVariable(y(14))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(1))
		setVariable(x(1))
		setValue(y(5))
		setVariable(y(15))
		callBI('Name.new' nil#[x(2)])
		unify(x(2) x(0))
		move(y(0) x(0))
		genFastCall(<P: 28> 4)
		match(y(0) ht(18009 [onScalar(nil 17710) onRecord('|' 2 17766)]))
lbl(17710)	callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(14))
		callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(12))
		callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		unify(y(10) y(2))
		unify(y(15) y(3))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17766)	getVarVar(y(0) x(0))
		testLiteral(x(0) nil 17875)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(14))
		inlineDot(x(0) <U: ooFastMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(12))
		inlineDot(x(0) <U: ooDefaults> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(11))
		move(y(1) x(1))
		callBI('Record.width' [x(1)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(14) x(2) y(12) x(3))
		move(y(11) x(4))
		genFastCall(<P: 214> 10)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		move(y(2) x(2))
		callBI('Record.adjoin' [x(1) x(2)]#[x(3)])
		unify(x(3) y(10))
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		move(y(3) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(15))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17875)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 212> 4)
		callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(14))
		callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(12))
		callBI('Dictionary.new' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Record.width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		moveMoveYXYX(y(0) x(0) y(14) x(1))
		moveMoveYXYX(y(12) x(2) y(11) x(3))
		genFastCall(<P: 218> 8)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewAttr> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(10) x(2))
		putConstant(a x(0))
		genFastCall(<P: 108> 6)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewFeat> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(15) x(2))
		putConstant(f x(0))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(18009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(503)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18022)	move(y(14) x(0))
		callBI('Dictionary.markSafe' [x(0)]#nil)
		move(y(12) x(1))
		callBI('Dictionary.markSafe' [x(1)]#nil)
		move(y(11) x(2))
		callBI('Dictionary.markSafe' [x(2)]#nil)
		createVariable(y(0))
		testBool(y(7) 18072 18077)
		getRecord('class' [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] y(0))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(g(0))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(8))
		unifyValue(y(14))
		unifyValue(y(9))
		unifyValue(y(5))
		unifyValue(y(15))
		branch(18088)
lbl(18072)	unify(y(0) y(4))
		branch(18088)
lbl(18077)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(512)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18088)	moveMoveYXYX(y(12) x(0) y(0) x(1))
		moveMoveYXYX(y(15) x(2) y(11) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		callBI('Object.makeClass' [x(0) x(1) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(6))
		deAllocateL
		return
		endDefinition(17524)
lbl(18113)	definition(x(19) 18259 pid('`extend`' 4 pos('./standard/Object.oz' 527 3) nil 12) <P: 230> [x(23)])
		allocateL10
		inlineDot(x(0) <U: ooDefaults> x(4) cache)
		inlineDot(x(0) <U: ooLocking> x(5) cache)
		inlineDot(x(0) <U: ooNative> x(6) cache)
		inlineDot(x(0) <U: ooMeth> x(7) cache)
		inlineDot(x(0) <U: ooFastMeth> x(8) cache)
		inlineDot(x(0) <U: ooAttr> x(9) cache)
		inlineDot(x(0) <U: ooPrintName> x(10) cache)
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		callBI('Record.adjoin' [x(0) x(1)]#[x(11)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 226> 6)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 224> 4)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] x(0))
		setValue(y(6))
		setValue(y(1))
		setValue(g(0))
		setValue(y(5))
		setValue(y(9))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		setValue(y(7))
		setValue(y(8))
		moveMoveYXYX(y(5) x(1) y(8) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		move(y(3) x(5))
		callBI('Object.makeClass' [x(1) x(0) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(0))
		deAllocateL10
		return
		endDefinition(18113)
lbl(18259)	putConstant('Name.new' x(20))
		putConstant(1 x(23))
		callBI('Boot.builtin' [x(20) x(23)]#[x(24)])
		moveMoveXYXY(x(1) y(172) x(4) y(173))
		moveMoveXYXY(x(5) y(174) x(6) y(175))
		moveMoveXYXY(x(7) y(176) x(8) y(177))
		moveMoveXYXY(x(9) y(178) x(13) y(179))
		moveMoveXYXY(x(21) y(180) x(22) y(181))
		moveMoveXYXY(x(19) y(182) x(18) y(183))
		moveMoveXYXY(x(2) y(184) x(14) y(185))
		moveMoveXYXY(x(17) y(186) x(16) y(187))
		moveMoveXYXY(x(15) y(188) x(0) y(189))
		moveMoveXYXY(x(10) y(190) x(11) y(191))
		moveMoveXYXY(x(12) y(192) x(3) y(193))
		move(x(24) x(1))
		putConstant(ooPrivate x(0))
		genFastCall(<P: 1> 4)
		putConstant('Object.\'@\'' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('@' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Object.\'<-\'' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant('<-' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Object.ooExch' x(2))
		putConstant(3 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant(ooExch x(0))
		genFastCall(<P: 1> 4)
		putConstant('Object.\',\'' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant(',' x(0))
		genFastCall(<P: 1> 4)
		putConstant('Object.ooGetLock' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		putConstant(ooGetLock x(0))
		genFastCall(<P: 1> 4)
		move(y(193) x(1))
		putConstant('class' x(0))
		genFastCall(<P: 1> 4)
lbl(18416)	definition(x(7) 18425 pid('BaseObject,noop/fast' 0 pos('./standard/Object.oz' 572 6) nil 0) <P: 231> nil)
		return
		endDefinition(18416)
lbl(18425)	definition(x(8) 18439 pid('BaseObject,noop/slow' 1 pos('./standard/Object.oz' 572 6) nil 1) unit nil)
		getLiteral(noop x(0))
		genFastCall(<P: 231> 1)
		endDefinition(18425)
lbl(18439)	putRecord('#' [1 2 fast] x(9))
		setConstant(noop)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('BaseObject' x(5))
		createVariableMove(y(194) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Slaves>] x(2))
		setConstant(nil)
lbl(18488)	definition(x(7) 18505 pid('MasterObject,init/fast' 0 pos('./standard/Object.oz' 590 2) nil 1) <P: 232> nil)
		putConstant(nil x(0))
		inlineAssign(<N: Slaves> x(0) cache)
		return
		endDefinition(18488)
lbl(18505)	definition(x(8) 18519 pid('MasterObject,init/slow' 1 pos('./standard/Object.oz' 590 2) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 232> 1)
		endDefinition(18505)
lbl(18519)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(18529)	definition(x(7) 18546 pid('MasterObject,getSlaves/fast' 1 pos('./standard/Object.oz' 593 2) nil 2) <P: 233> nil)
		inlineAt(<N: Slaves> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(18529)
lbl(18546)	definition(x(8) 18572 pid('MasterObject,getSlaves/slow' 1 pos('./standard/Object.oz' 593 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 233> 3)
		endDefinition(18546)
lbl(18572)	putRecord('#' [1 2 fast] x(10))
		setConstant(getSlaves)
		setValue(x(8))
		setValue(x(7))
lbl(18582)	definition(x(7) 18606 pid('MasterObject,AddSlave/fast' 1 pos('./standard/Object.oz' 596 2) nil 4) <P: 234> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		putConstant(<N: Slaves> x(0))
		callBI('Object.ooExch' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(18582)
lbl(18606)	definition(x(8) 18632 pid('MasterObject,AddSlave/slow' 1 pos('./standard/Object.oz' 596 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 234> 3)
		endDefinition(18606)
lbl(18632)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: AddSlave>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(195))
lbl(18644)	definition(x(7) 18676 pid('MasterObject,DoDel/fast' 3 pos('./standard/Object.oz' 601 2) nil 5) <P: 235> [y(195)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 18664)
		unify(x(2) x(3))
		return
lbl(18664)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18644)
lbl(18676)	definition(x(8) 18717 pid('MasterObject,DoDel/slow' 1 pos('./standard/Object.oz' 601 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 235> 7)
		endDefinition(18676)
lbl(18717)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: DoDel>)
		setValue(x(8))
		setValue(x(7))
lbl(18727)	definition(x(7) 18755 pid('MasterObject,DelSlave/fast' 1 pos('./standard/Object.oz' 606 2) nil 5) <P: 236> [y(195)])
		putConstant(<N: Slaves> x(3))
		createVariable(x(1))
		callBI('Object.ooExch' [x(3) x(1)]#[x(4)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18727)
lbl(18755)	definition(x(8) 18781 pid('MasterObject,DelSlave/slow' 1 pos('./standard/Object.oz' 606 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 236> 3)
		endDefinition(18755)
lbl(18781)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: DelSlave>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(195) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MasterObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Master>] x(2))
		setConstant(unit)
lbl(18832)	definition(x(7) 18883 pid('SlaveObject,becomeSlave/fast' 1 pos('./standard/Object.oz' 617 2) nil 4) <P: 237> nil)
		putConstant(<N: Master> x(1))
		createVariable(x(2))
		callBI('Object.ooExch' [x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 18869)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(<N: AddSlave> y(0) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(18869)	unify(x(2) x(3))
		putRecord(object 1 x(0))
		setConstant(slaveNotFree)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(18832)
lbl(18883)	definition(x(8) 18909 pid('SlaveObject,becomeSlave/slow' 1 pos('./standard/Object.oz' 617 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 237> 3)
		endDefinition(18883)
lbl(18909)	putRecord('#' [1 2 fast] x(9))
		setConstant(becomeSlave)
		setValue(x(8))
		setValue(x(7))
lbl(18919)	definition(x(7) 18942 pid('SlaveObject,isFree/fast' 1 pos('./standard/Object.oz' 629 2) nil 4) <P: 238> nil)
		inlineAt(<N: Master> x(1) cache)
		putConstant(unit x(2))
		callBI('Value.\'==\'' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(18919)
lbl(18942)	definition(x(8) 18968 pid('SlaveObject,isFree/slow' 1 pos('./standard/Object.oz' 629 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 238> 3)
		endDefinition(18942)
lbl(18968)	putRecord('#' [1 2 fast] x(10))
		setConstant(isFree)
		setValue(x(8))
		setValue(x(7))
lbl(18978)	definition(x(7) 19024 pid('SlaveObject,free/fast' 0 pos('./standard/Object.oz' 632 2) nil 3) <P: 239> nil)
		putConstant(<N: Master> x(0))
		createVariable(x(1))
		callBI('Object.ooExch' [x(0) x(1)]#[x(2)])
		testLiteral(x(2) unit 19005)
		putRecord(object 1 x(0))
		setConstant(slaveAlreadyFree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(19005)	allocateL1
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(<N: DelSlave> x(2) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(18978)
lbl(19024)	definition(x(8) 19038 pid('SlaveObject,free/slow' 1 pos('./standard/Object.oz' 632 2) nil 1) unit nil)
		getLiteral(free x(0))
		genFastCall(<P: 239> 1)
		endDefinition(19024)
lbl(19038)	putRecord('#' [1 2 fast] x(11))
		setConstant(free)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SlaveObject' x(5))
		createVariableMove(y(196) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(19073)	definition(x(7) 19134 pid('MetaObject,GetAttr/fast' 2 pos('./standard/Object.oz' 651 2) nil 5) <P: 240> nil)
		match(x(0) ht(19119 [onScalar(nil 19082) onRecord('|' 2 19086)]))
lbl(19082)	getLiteral(nil x(1))
		return
lbl(19086)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		callBI('Object.\'@\'' [x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetAttr> x(4) 2 cache)
lbl(19119)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(654)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19073)
lbl(19134)	definition(x(8) 19169 pid('MetaObject,GetAttr/slow' 1 pos('./standard/Object.oz' 651 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 240> 5)
		endDefinition(19134)
lbl(19169)	putRecord('#' [1 2 fast] x(9))
		setConstant(<N: GetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19179)	definition(x(7) 19242 pid('MetaObject,GetFeat/fast' 2 pos('./standard/Object.oz' 657 2) nil 6) <P: 241> nil)
		match(x(0) ht(19227 [onScalar(nil 19188) onRecord('|' 2 19192)]))
lbl(19188)	getLiteral(nil x(1))
		return
lbl(19192)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		getSelf(x(5))
		callBI('Record.\'.\'' [x(5) x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetFeat> x(4) 2 cache)
lbl(19227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(660)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19179)
lbl(19242)	definition(x(8) 19277 pid('MetaObject,GetFeat/slow' 1 pos('./standard/Object.oz' 657 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 241> 5)
		endDefinition(19242)
lbl(19277)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: GetFeat>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(197))
lbl(19289)	definition(x(7) 19394 pid('MetaObject,toChunk/fast' 1 pos('./standard/Object.oz' 663 2) nil 4) <P: 242> [y(197) y(172)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Record.arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(1) cache)
		callBI('Record.arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		putRecord(o ['attr' 'class' 'feat'] x(1))
		setValue(y(2))
		setValue(y(1))
		setValue(y(3))
		putRecord(c [<N: PRIVATE>] x(0))
		setValue(x(1))
		callBI('Chunk.new' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL4
		return
		endDefinition(19289)
lbl(19394)	definition(x(8) 19420 pid('MetaObject,toChunk/slow' 1 pos('./standard/Object.oz' 663 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 242> 3)
		endDefinition(19394)
lbl(19420)	putRecord('#' [1 2 fast] x(11))
		setConstant(toChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19430)	definition(x(7) 19475 pid('MetaObject,SetAttr/fast' 1 pos('./standard/Object.oz' 673 2) nil 3) <P: 243> nil)
		match(x(0) ht(19460 [onScalar(nil 19439) onRecord('|' 2 19440)]))
lbl(19439)	return
lbl(19440)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('Object.\'<-\'' [x(1) x(2)]#nil)
		getSelf(x(2))
		tailSendMsg(<N: SetAttr> x(2) 1 cache)
lbl(19460)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(676)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19430)
lbl(19475)	definition(x(8) 19501 pid('MetaObject,SetAttr/slow' 1 pos('./standard/Object.oz' 673 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 243> 3)
		endDefinition(19475)
lbl(19501)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: SetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19511)	definition(x(7) 19561 pid('MetaObject,SetFeat/fast' 1 pos('./standard/Object.oz' 679 2) nil 5) <P: 244> nil)
		match(x(0) ht(19546 [onScalar(nil 19520) onRecord('|' 2 19521)]))
lbl(19520)	return
lbl(19521)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getSelf(x(3))
		callBI('Record.\'.\'' [x(3) x(1)]#[x(4)])
		unify(x(4) x(2))
		getSelf(x(2))
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
lbl(19546)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(682)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19511)
lbl(19561)	definition(x(8) 19587 pid('MetaObject,SetFeat/slow' 1 pos('./standard/Object.oz' 679 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 244> 3)
		endDefinition(19561)
lbl(19587)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: SetFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(19597)	definition(x(7) 19662 pid('MetaObject,frmChunk/fast' 1 pos('./standard/Object.oz' 685 2) nil 4) <P: 245> [y(197)])
		allocateL2
		putRecord(o ['attr' 'class' 'feat'] x(2))
		setVariable(y(0))
		setVariable(x(1))
		setVariable(y(1))
		inlineDot(x(0) <N: PRIVATE> x(3) cache)
		unify(x(3) x(2))
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		getSelf(x(0))
		call(x(2) 2)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(<N: SetAttr> x(1) 1 cache)
		getSelf(x(2))
		move(y(1) x(0))
		deAllocateL2
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
		endDefinition(19597)
lbl(19662)	definition(x(8) 19688 pid('MetaObject,frmChunk/slow' 1 pos('./standard/Object.oz' 685 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 245> 3)
		endDefinition(19662)
lbl(19688)	putRecord('#' [1 2 fast] x(14))
		setConstant(frmChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19698)	definition(x(7) 19816 pid('MetaObject,clone/fast' 1 pos('./standard/Object.oz' 693 2) nil 4) <P: 246> [y(197)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Record.arity' [x(1)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(<N: SetAttr> y(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Record.arity' [x(0)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		move(y(1) x(0))
		sendMsg(<N: SetFeat> y(3) 1 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(19698)
lbl(19816)	definition(x(8) 19842 pid('MetaObject,clone/slow' 1 pos('./standard/Object.oz' 693 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 246> 3)
		endDefinition(19816)
lbl(19842)	putRecord('#' [1 2 fast] x(15))
		setConstant(clone)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MetaObject' x(5))
		createVariableMove(y(198) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(object [',' '<-' '@' base 'class' is master meta new send slave] y(199))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setValue(y(194))
		setValue(y(193))
		setValue(y(180))
		setValue(y(195))
		setValue(y(198))
		setValue(y(181))
		setVariable(x(3))
		setValue(y(196))
		putConstant('Object.\',\'' x(4))
		putConstant(2 x(5))
		callBI('Boot.builtin' [x(4) x(5)]#[x(6)])
		unify(x(6) x(0))
		putConstant('Object.\'@\'' x(4))
		putConstant(2 x(5))
		callBI('Boot.builtin' [x(4) x(5)]#[x(0)])
		unify(x(0) x(2))
		putConstant('Object.\'<-\'' x(2))
		putConstant(2 x(4))
		callBI('Boot.builtin' [x(2) x(4)]#[x(0)])
		unify(x(0) x(1))
		putConstant('Object.send' x(2))
		putConstant(3 x(4))
		callBI('Boot.builtin' [x(2) x(4)]#[x(0)])
		unify(x(0) x(3))
lbl(19965)	definition(x(0) 19991 pid('IsClass' 2 pos('./standard/Class.oz' 29 0) nil 4) <P: 247> nil)
		testBI('Chunk.is' [x(0)]#[x(2)] 19985)
		putConstant(<U: ooPrintName> x(2))
		callBI('Value.hasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(19985)	getLiteral(false x(1))
		return
		endDefinition(19965)
lbl(19991)	putConstant('Class.get' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
lbl(20000)	definition(x(2) 20062 pid('AssertClass' 2 pos('./standard/Class.oz' 36 3) nil 2) <P: 248> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 20024 20049)
		deAllocateL3
		return
lbl(20024)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setConstant('class')
		setConstant(1)
		setConstant('Module Class')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20049)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(37)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20000)
lbl(20062)	definition(x(2) 20110 pid('AssertNonFinal' 2 pos('./standard/Class.oz' 43 3) nil 3) <P: 249> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 20089)
		deAllocateL2
		return
lbl(20089)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(1))
		setConstant(fromFinalClass)
		setValue(x(0))
		setValue(y(1))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20062)
lbl(20110)	definition(x(2) 20144 pid('GetParents' 2 pos('./standard/Class.oz' 50 3) nil 2) <P: 250> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.parents' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooParents> x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20110)
lbl(20144)	definition(x(3) 20181 pid('MethodNames' 2 pos('./standard/Class.oz' 55 3) nil 2) <P: 251> [y(151)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.methodNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20144)
lbl(20181)	definition(x(4) 20218 pid('AttrNames' 2 pos('./standard/Class.oz' 60 3) nil 2) <P: 252> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.attrNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(0) cache)
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20181)
lbl(20218)	definition(x(5) 20255 pid('FeatNames' 2 pos('./standard/Class.oz' 65 3) nil 2) <P: 253> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.featNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20218)
lbl(20255)	definition(x(6) 20362 pid('PropNames' 2 pos('./standard/Class.oz' 70 3) nil 3) <P: 254> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.propNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(1)] 20326)
		getList(y(1))
		unifyLiteral(final)
		unifyVariable(x(1))
		inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20310 20315)
		getList(x(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20310)	getLiteral(nil x(1))
		deAllocateL2
		return
lbl(20315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20326)	inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20344 20349)
		getList(y(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20344)	getLiteral(nil y(1))
		deAllocateL2
		return
lbl(20349)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(76)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20255)
lbl(20362)	definition(x(7) 20432 pid('HasProperty' 3 pos('./standard/Class.oz' 80 3) nil 3) <P: 255> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		putConstant('Class.property' x(1))
		genFastCall(<P: 248> 4)
		match(y(1) ht(20417 [onScalar(final 20386) onScalar(locking 20403)]))
lbl(20386)	move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		callBI('Bool.not' [x(2)]#[x(0)])
		unify(x(0) y(2))
		deAllocateL3
		return
lbl(20403)	move(y(0) x(0))
		inlineDot(x(0) <U: ooLocking> x(1) cache)
		unify(x(1) y(2))
		deAllocateL3
		return
lbl(20417)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20362)
lbl(20432)	definition(x(8) 20507 pid('SubClassOfParent' 3 pos('./standard/Class.oz' 92 6) nil 3) <P: 256> nil)
		match(x(0) ht(20492 [onScalar(nil 20441) onRecord('|' 2 20445)]))
lbl(20441)	getLiteral(false x(2))
		return
lbl(20445)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 257> 6)
		testBool(y(3) 20469 20481)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20469)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
lbl(20481)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20492)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(95)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20432)
lbl(20507)	definition(x(8) 20573 pid('SubClass' 3 pos('./standard/Class.oz' 98 6) nil 3) <P: 257> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 248> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 20544)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20544)	putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 250> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
		endDefinition(20507)
lbl(20573)	definition(x(8) 20590 pid('IsInstanceOf' 3 pos('./standard/Class.oz' 106 6) nil 4) <P: 258> nil)
		callBI('Class.get' [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 257> 7)
		endDefinition(20573)
lbl(20590)	getRecord('class' [attrNames extendFeatures featNames get getFeature hasFeature hasProperty is isInstanceOf methodNames parents propNames] y(197))
		unifyValue(x(4))
		unifyValue(y(182))
		unifyValue(x(5))
		unifyValVar(x(1) x(9))
		unifyVariable(x(10))
		unifyValue(x(7))
		unifyValue(x(0))
		unifyValue(x(8))
		unifyValue(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
lbl(20617)	definition(x(2) 20666 pid('Class.getFeature' 3 pos('./standard/Class.oz' 120 19) nil 5) <P: 259> nil)
		allocateL2
		inlineDot(x(0) <U: ooUnFreeFeat> x(3) cache)
		callBI('Record.\'.\'' [x(3) x(1)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		testBI('Value.isDet' [x(4)]#[x(3)] 20659)
lbl(20642)	testLiteral(y(1) <U: ooFreeFlag> 20659)
lbl(20646)	putRecord(kernel 3 x(2))
		setConstant('.')
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(20659)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(20617)
lbl(20666)	unify(x(2) x(9))
lbl(20669)	definition(x(2) 20711 pid('Class.hasFeature' 3 pos('./standard/Class.oz' 128 19) nil 5) <P: 260> nil)
		allocateL1
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		putConstant(<U: ooFreeFlag> x(3))
		callBI('Value.condSelect' [x(0) x(1) x(3)]#[x(4)])
		move(x(2) y(0))
		testBI('Value.isDet' [x(4)]#[x(0)] 20704)
lbl(20695)	testLiteral(x(4) <U: ooFreeFlag> 20704)
lbl(20699)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(20704)	getLiteral(true y(0))
		deAllocateL1
		return
		endDefinition(20669)
lbl(20711)	unify(x(2) x(10))
		putConstant('BitArray.is' x(2))
		putConstant(2 x(7))
		callBI('Boot.builtin' [x(2) x(7)]#[x(8)])
		putRecord(bitArray [and card clear clone complementToList disjoint high is low new nimpl 'or' set test toList] y(182))
		setVariable(x(2))
		setVariable(x(7))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setValue(x(8))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putConstant('BitArray.new' x(21))
		putConstant(3 x(22))
		callBI('Boot.builtin' [x(21) x(22)]#[x(23)])
		unify(x(23) x(15))
		putConstant('BitArray.set' x(21))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(21) x(22)]#[x(23)])
		unify(x(23) x(18))
		putConstant('BitArray.clear' x(21))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(21) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('BitArray.test' x(9))
		putConstant(3 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(19))
		putConstant('BitArray.low' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(14))
		putConstant('BitArray.high' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(13))
		putConstant('BitArray.clone' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(10))
		putConstant('BitArray.or' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(17))
		putConstant('BitArray.and' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('BitArray.nimpl' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(16))
		putConstant('BitArray.disjoint' x(9))
		putConstant(3 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(12))
		putConstant('BitArray.card' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(7))
		putConstant('BitArray.toList' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(20))
		putConstant('BitArray.complementToList' x(9))
		putConstant(2 x(21))
		callBI('Boot.builtin' [x(9) x(21)]#[x(22)])
		unify(x(22) x(11))
		putConstant('ForeignPointer.is' x(9))
		putConstant(2 x(11))
		callBI('Boot.builtin' [x(9) x(11)]#[x(21)])
		putRecord(foreignPointer [is toInt] y(195))
		setValue(x(21))
		setVariable(x(9))
		putConstant('ForeignPointer.toInt' x(11))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(11) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('Thread.is' x(11))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(11) x(22)]#[x(23)])
		putConstant('Thread.getPriority' x(11))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(11) x(22)]#[x(24)])
		putConstant('Thread.setPriority' x(11))
		putConstant(2 x(22))
		callBI('Boot.builtin' [x(11) x(22)]#[x(25)])
		putConstant('Thread.this' x(11))
		putConstant(1 x(22))
		callBI('Boot.builtin' [x(11) x(22)]#[x(26)])
lbl(20990)	definition(x(11) 21008 pid('GetThisPriority' 1 pos('./standard/Thread.oz' 46 3) nil 3) <P: 261> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.getPriority' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(20990)
lbl(21008)	definition(x(22) 21023 pid('SetThisPriority' 1 pos('./standard/Thread.oz' 49 3) nil 2) <P: 262> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.setPriority' [x(1) x(0)]#nil)
		return
		endDefinition(21008)
lbl(21023)	putRecord('thread' [getPriority getThisPriority injectException is isSuspended preempt resume setPriority setThisPriority state suspend terminate this] y(196))
		setValue(x(24))
		setValue(x(11))
		setVariable(x(27))
		setValue(x(23))
		setVariable(x(28))
		setVariable(x(29))
		setVariable(x(30))
		setValue(x(25))
		setValue(x(22))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(y(198))
		setValue(x(26))
		putConstant('Thread.suspend' x(11))
		putConstant(1 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(32))
		putConstant('Thread.resume' x(11))
		putConstant(1 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(30))
		putConstant('Thread.preempt' x(11))
		putConstant(1 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(29))
lbl(21089)	definition(x(11) 21134 pid('Thread.terminate' 1 pos('./standard/Thread.oz' 63 26) nil 4) <P: 263> [x(27) y(105)])
		allocateL2
		move(g(1) x(1))
		inlineDot(x(1) system x(2) cache)
		putRecord(kernel 1 x(3))
		setConstant(terminate)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailCall(g(0) 2)
		endDefinition(21089)
lbl(21134)	unify(x(11) y(198))
		putConstant('Thread.injectException' x(11))
		putConstant(2 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(27))
		putConstant('Thread.state' x(11))
		putConstant(2 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(31))
		putConstant('Thread.isSuspended' x(11))
		putConstant(2 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		unify(x(25) x(28))
		putConstant('Exception.raiseDebugCheck' x(11))
		putConstant(2 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(25)])
		putConstant('Exception.taskStackError' x(11))
		putConstant(1 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(28)])
		putConstant('Exception.location' x(11))
		putConstant(1 x(24))
		callBI('Boot.builtin' [x(11) x(24)]#[x(28)])
		createVariable(y(200))
lbl(21202)	definition(x(11) 21291 pid('RaiseDebugExtend' 2 pos('./standard/Exception.oz' 35 3) nil 7) <P: 264> [y(200)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Record.label' [x(2)]#[x(3)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Exception.taskStackError' nil#[x(4)])
		callBI('Exception.location' nil#[x(5)])
		putRecord('#' 2 x(6))
		setConstant(stack)
		setValue(x(4))
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putRecord('#' 2 x(6))
		setConstant(loc)
		setValue(x(5))
		putList(x(5))
		setValue(x(6))
		setValue(x(4))
		putRecord('#' 2 x(4))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(4))
		setValue(x(5))
		callBI('Record.record' [x(3) x(1)]#[x(4)])
		callBI('Record.adjoin' [x(2) x(4)]#[x(1)])
		putConstant(debug x(2))
		callBI('Record.adjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(21202)
lbl(21291)	moveMoveXYXY(x(0) y(201) x(8) y(202))
		moveMoveXYXY(x(21) y(203) x(23) y(204))
		moveMoveXYXY(x(15) y(205) x(18) y(206))
		moveMoveXYXY(x(19) y(207) x(14) y(208))
		moveMoveXYXY(x(13) y(209) x(10) y(210))
		moveMoveXYXY(x(17) y(211) x(2) y(212))
		moveMoveXYXY(x(16) y(213) x(12) y(214))
		moveMoveXYXY(x(7) y(215) x(20) y(216))
		moveMoveXYXY(x(9) y(217) x(1) y(218))
		moveMoveXYXY(x(3) y(219) x(4) y(220))
		moveMoveXYXY(x(5) y(221) x(6) y(222))
		moveMoveXYXY(x(26) y(223) x(22) y(224))
		moveMoveXYXY(x(27) y(225) x(11) y(226))
		move(x(25) x(1))
		putConstant('RaiseDebugCheck' x(0))
		genFastCall(<P: 1> 4)
		move(y(226) x(1))
		putConstant('RaiseDebugExtend' x(0))
		genFastCall(<P: 1> 4)
		unify(y(200) y(0))
lbl(21377)	definition(x(7) 21398 pid('FailureX' 2 pos('./standard/Exception.oz' 57 3) nil 2) <P: 265> nil)
		getRecord('failure' [debug] x(1))
		unifyVariable(x(1))
		getRecord('failure' [info] x(1))
		unifyValue(x(0))
		return
		endDefinition(21377)
lbl(21398)	definition(x(0) 21420 pid('PredefX' 2 pos('./standard/Exception.oz' 61 3) nil 3) <P: 266> nil)
		getRecord(system [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Record.label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21398)
lbl(21420)	definition(x(8) 21459 pid('PredefXD' 3 pos('./standard/Exception.oz' 65 3) nil 4) <P: 267> nil)
		callBI('Record.label' [x(0)]#[x(3)])
		getRecord(system [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI('Record.record' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21420)
lbl(21459)	definition(x(9) 21498 pid('ErrorXD' 3 pos('./standard/Exception.oz' 72 3) nil 4) <P: 268> nil)
		callBI('Record.label' [x(0)]#[x(3)])
		getRecord(error [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI('Record.record' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21459)
lbl(21498)	definition(x(10) 21520 pid('ErrorX' 2 pos('./standard/Exception.oz' 79 3) nil 3) <P: 269> nil)
		getRecord(error [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Record.label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21498)
lbl(21520)	getRecord(exception [error errorDebug 'failure' 'raise' raiseError system systemDebug] y(105))
		unifyValue(x(10))
		unifyValue(x(9))
		unifyValue(x(7))
		unifyValue(y(200))
		unifyValue(y(1))
		unifyValue(x(0))
		unifyValue(x(8))
		putConstant('Time.alarm' x(7))
		putConstant(2 x(8))
		callBI('Boot.builtin' [x(7) x(8)]#[x(1)])
		putConstant('Time.delay' x(7))
		putConstant(1 x(8))
		callBI('Boot.builtin' [x(7) x(8)]#[x(2)])
lbl(21556)	definition(x(7) 21671 pid('AddWaiter' 4 pos('./standard/Time.oz' 38 3) nil 9) <P: 270> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(x(0) 21653)
lbl(21574)	getVarVar(x(0) x(4))
		createVariable(y(3))
		shallowGuard(21653)
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(21589)	shallowThen
		testLT(x(1) x(5) x(0) 21632)
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		getList(x(3))
		unifyVariable(x(7))
		unifyValue(x(4))
		getRecord('#' 2 x(7))
		unifyVariable(x(8))
		unifyValue(x(6))
		inlineMinus(x(5) x(1) x(0))
		unify(x(0) x(8))
		deAllocateL4
		return
lbl(21632)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(x(5))
		unifyValue(x(6))
		move(x(4) x(0))
		deAllocateL4
		genFastCall(<P: 270> 9)
lbl(21653)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
		endDefinition(21556)
lbl(21671)	definition(x(7) 21683 pid('DefaultFun' 1 pos('./standard/Time.oz' 53 23) nil 1) <P: 271> nil)
		getNumber(1000 x(0))
		return
		endDefinition(21671)
lbl(21683)	putList(x(8))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: ActDelay> <N: Action> <N: DelayFun> <N: Final> <N: NumReset> <N: NumberA> <N: Stop>] x(9))
		setConstant(1000)
		setConstant(dummyRep)
		setValue(x(7))
		setConstant(finalRep)
		setConstant(~1)
		setConstant(~1)
		setConstant(unit)
		putRecord(messagePattern [action delay delayFun final number] x(10))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(21729)	definition(x(11) 21916 pid('Repeat,setRepAll' 1 pos('./standard/Time.oz' 86 6) nil 3) unit [x(10) x(7) y(0)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 21768)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
		branch(21771)
lbl(21768)	getLiteral(dummyRep y(1))
lbl(21771)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 21794)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(2))
		branch(21797)
lbl(21794)	getLiteral(finalRep y(2))
lbl(21797)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 21820)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
		branch(21823)
lbl(21820)	getNumber(1000 y(3))
lbl(21823)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 21846)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
		branch(21849)
lbl(21846)	unify(y(4) g(1))
lbl(21849)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(number x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 21872)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(5))
		branch(21875)
lbl(21872)	getNumber(~1 y(5))
lbl(21875)	move(y(1) x(0))
		genCall(gci(g(2) true setRepAction false 1) 0)
		move(y(2) x(0))
		genCall(gci(g(2) true setRepFinal false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true setRepNum false 1) 0)
		move(y(4) x(0))
		move(g(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 21910)
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(2) true setRepDelay true 1) 0)
lbl(21910)	deAllocateL6
		genCall(gci(g(2) true setRepDelayFun true 1) 0)
		endDefinition(21729)
lbl(21916)	putList(x(10))
		setConstant(setRepAll)
		setValue(x(11))
lbl(21922)	definition(x(11) 21979 pid('Repeat,getRep/fast' [action actual delay delayFun final number] pos('./standard/Time.oz' 102 6) nil 7) <P: 272> nil)
		inlineAt(<N: Action> x(6) cache)
		unify(x(6) x(0))
		inlineAt(<N: Final> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<N: ActDelay> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<N: DelayFun> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<N: NumReset> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<N: NumberA> x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(21922)
lbl(21979)	putRecord(messagePattern [action actual delay delayFun final number] x(12))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(21995)	definition(x(13) 22158 pid('Repeat,getRep/slow' 1 pos('./standard/Time.oz' 102 6) nil 7) unit [x(12)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22032)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
lbl(22032)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(actual x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22053)
		inlineDot(x(0) actual x(1) cache)
		unify(x(1) y(2))
lbl(22053)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22074)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
lbl(22074)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22095)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
lbl(22095)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22116)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(5))
lbl(22116)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(number x(6))
		testBI('Value.hasFeature' [x(0) x(6)]#[x(1)] 22137)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(6))
lbl(22137)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		deAllocateL7
		genFastCall(<P: 272> 13)
		endDefinition(21995)
lbl(22158)	putRecord(getRep [action actual delay delayFun final number] x(12))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(14))
		setConstant(getRep)
		setValue(x(13))
		setValue(x(12))
		setValue(x(11))
		putRecord(messagePattern 1 x(11))
		setConstant(unit)
lbl(22192)	definition(x(12) 22246 pid('Repeat,setRepAction' 1 pos('./standard/Time.oz' 117 6) nil 3) unit [x(11)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22231)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22234)
lbl(22231)	getLiteral(dummyRep y(1))
lbl(22234)	move(y(1) x(0))
		inlineAssign(<N: Action> x(0) cache)
		deAllocateL2
		return
		endDefinition(22192)
lbl(22246)	putList(x(11))
		setConstant(setRepAction)
		setValue(x(12))
		putRecord(messagePattern 1 x(12))
		setConstant(unit)
lbl(22258)	definition(x(13) 22312 pid('Repeat,setRepFinal' 1 pos('./standard/Time.oz' 121 6) nil 3) unit [x(12)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22297)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22300)
lbl(22297)	getLiteral(finalRep y(1))
lbl(22300)	move(y(1) x(0))
		inlineAssign(<N: Final> x(0) cache)
		deAllocateL2
		return
		endDefinition(22258)
lbl(22312)	putList(x(12))
		setConstant(setRepFinal)
		setValue(x(13))
		putRecord(messagePattern 1 x(13))
		setConstant(unit)
lbl(22324)	definition(x(15) 22395 pid('Repeat,setRepDelay' 1 pos('./standard/Time.oz' 125 6) nil 3) unit [x(13)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22363)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22366)
lbl(22363)	getNumber(1000 y(1))
lbl(22366)	move(y(1) x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
lbl(22374)	definition(x(1) 22386 pid('' 1 pos('./standard/Time.oz' 127 14) nil 1) unit [y(1)])
		unify(x(0) g(0))
		return
		endDefinition(22374)
lbl(22386)	inlineAssign(<N: DelayFun> x(1) cache)
		deAllocateL2
		return
		endDefinition(22324)
lbl(22395)	putList(x(13))
		setConstant(setRepDelay)
		setValue(x(15))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22407)	definition(x(16) 22469 pid('Repeat,setRepDelayFun' 1 pos('./standard/Time.oz' 130 6) nil 3) unit [x(15) x(7)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22446)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22449)
lbl(22446)	unify(y(1) g(1))
lbl(22449)	putConstant(~1 x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: DelayFun> x(0) cache)
		deAllocateL2
		return
		endDefinition(22407)
lbl(22469)	putList(x(7))
		setConstant(setRepDelayFun)
		setValue(x(16))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22481)	definition(x(16) 22540 pid('Repeat,setRepNum' 1 pos('./standard/Time.oz' 135 6) nil 3) unit [x(15)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 22520)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22523)
lbl(22520)	getNumber(~1 y(1))
lbl(22523)	move(y(1) x(0))
		inlineAssign(<N: NumberA> x(0) cache)
		inlineAssign(<N: NumReset> x(0) cache)
		deAllocateL2
		return
		endDefinition(22481)
lbl(22540)	putList(x(15))
		setConstant(setRepNum)
		setValue(x(16))
lbl(22546)	definition(x(16) 22611 pid('Repeat,go/fast' 0 pos('./standard/Time.oz' 144 6) nil 2) <P: 273> [y(0)])
		allocateL1
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(22588 x(0))
		inlineAt(<N: Stop> x(0) cache)
		createVariable(y(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 22584)
		createVariable(x(0))
		inlineAssign(<N: Stop> x(0) cache)
		getLiteral(true y(0))
		branch(22587)
lbl(22584)	getLiteral(false y(0))
lbl(22587)	return
lbl(22588)	testBool(y(0) 22596 22598)
		deAllocateL1
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22596)	deAllocateL1
		return
lbl(22598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22546)
lbl(22611)	definition(x(17) 22625 pid('Repeat,go/slow' 1 pos('./standard/Time.oz' 144 6) nil 1) unit nil)
		getLiteral(go x(0))
		genFastCall(<P: 273> 1)
		endDefinition(22611)
lbl(22625)	putRecord('#' [1 2 fast] x(18))
		setConstant(go)
		setValue(x(17))
		setValue(x(16))
lbl(22635)	definition(x(16) 22674 pid('Repeat,stop/fast' 0 pos('./standard/Time.oz' 155 6) nil 2) <P: 274> nil)
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(22671 x(0))
		putConstant(unit x(0))
		inlineAt(<N: Stop> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<N: NumReset> x(0) cache)
		inlineAssign(<N: NumberA> x(0) cache)
		return
lbl(22671)	return
		endDefinition(22635)
lbl(22674)	definition(x(17) 22688 pid('Repeat,stop/slow' 1 pos('./standard/Time.oz' 155 6) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 274> 1)
		endDefinition(22674)
lbl(22688)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(17))
		setValue(x(16))
lbl(22698)	definition(x(16) 22860 pid('Repeat,Run/fast' 0 pos('./standard/Time.oz' 162 6) nil 5) <P: 275> [y(0)])
		allocateL5
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(22752 x(0))
		inlineAt(<N: Stop> x(0) cache)
		inlineAt(<N: ActDelay> x(1) cache)
		inlineAt(<N: Action> x(2) cache)
		inlineAt(<N: Final> x(3) cache)
		inlineAt(<N: NumberA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) y(4))
		return
lbl(22752)	move(y(0) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 22761)
		deAllocateL5
		return
lbl(22761)	testNumber(y(3) 0 22785)
		getSelf(x(1))
		sendMsg(stop x(1) 0 cache)
		getSelf(x(2))
		move(y(4) x(0))
		deAllocateL5
		tailSendMsg(<N: Do> x(2) 1 cache)
lbl(22785)	move(y(1) x(1))
		createVariable(x(2))
		callBI('Time.alarm' [x(1) x(2)]#nil)
		move(x(2) y(1))
		getSelf(x(3))
		move(y(2) x(0))
		sendMsg(<N: Do> x(3) 1 cache)
		move(y(3) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 22826)
		inlineMinus1(x(0) x(1))
		inlineAssign(<N: NumberA> x(1) cache)
lbl(22826)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('Value.waitOr' [x(0) x(1)]#nil)
		callBI('Value.isDet' [x(0)]#[x(1)])
		testBool(x(1) 22845 22847)
		deAllocateL5
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22845)	deAllocateL5
		return
lbl(22847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22698)
lbl(22860)	definition(x(17) 22874 pid('Repeat,Run/slow' 1 pos('./standard/Time.oz' 162 6) nil 1) unit nil)
		getLiteral(<N: Run> x(0))
		genFastCall(<P: 275> 1)
		endDefinition(22860)
lbl(22874)	putRecord('#' [1 2 fast] x(20))
		setConstant(<N: Run>)
		setValue(x(17))
		setValue(x(16))
lbl(22884)	definition(x(16) 22904 pid('Repeat,Do/fast' 1 pos('./standard/Time.oz' 195 6) nil 2) <P: 276> nil)
		testBI('Procedure.is' [x(0)]#[x(1)] 22897)
		tailCall(x(0) 0)
lbl(22897)	getSelf(x(1))
		tailCall(x(1) 1)
		endDefinition(22884)
lbl(22904)	definition(x(17) 22930 pid('Repeat,Do/slow' 1 pos('./standard/Time.oz' 195 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 276> 3)
		endDefinition(22904)
lbl(22930)	putRecord('#' [1 2 fast] x(21))
		setConstant(<N: Do>)
		setValue(x(17))
		setValue(x(16))
lbl(22940)	definition(x(16) 22949 pid('Repeat,finalRep/fast' 0 pos('./standard/Time.oz' 204 6) nil 0) <P: 277> nil)
		return
		endDefinition(22940)
lbl(22949)	definition(x(17) 22963 pid('Repeat,finalRep/slow' 1 pos('./standard/Time.oz' 204 6) nil 1) unit nil)
		getLiteral(finalRep x(0))
		genFastCall(<P: 277> 1)
		endDefinition(22949)
lbl(22963)	putRecord('#' [1 2 fast] x(22))
		setConstant(finalRep)
		setValue(x(17))
		setValue(x(16))
lbl(22973)	definition(x(16) 22982 pid('Repeat,dummyRep/fast' 0 pos('./standard/Time.oz' 208 6) nil 0) <P: 278> nil)
		return
		endDefinition(22973)
lbl(22982)	definition(x(17) 22996 pid('Repeat,dummyRep/slow' 1 pos('./standard/Time.oz' 208 6) nil 1) unit nil)
		getLiteral(dummyRep x(0))
		genFastCall(<P: 278> 1)
		endDefinition(22982)
lbl(22996)	putRecord('#' [1 2 fast] x(23))
		setConstant(dummyRep)
		setValue(x(17))
		setValue(x(16))
		putRecord('#' 13 x(16))
		setValue(x(10))
		setValue(x(14))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(7))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		moveMoveXYXY(x(1) y(226) x(2) y(227))
		move(x(0) y(228))
		move(x(8) x(0))
		move(x(16) x(1))
		move(x(9) x(2))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('Repeat' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(time [alarm delay repeat time] y(229))
		setValue(y(226))
		setValue(y(227))
		setValue(y(0))
		setVariable(x(0))
		putConstant('Time.time' x(2))
		putConstant(1 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('Name.newUnique' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(4)])
lbl(23098)	definition(x(0) 23124 pid('IsFunctor' 2 pos('./standard/Functor.oz' 30 3) nil 4) <P: 279> nil)
		testBI('Chunk.is' [x(0)]#[x(2)] 23118)
		putConstant(<U: functorID> x(2))
		callBI('Value.hasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(23118)	getLiteral(false x(1))
		return
		endDefinition(23098)
lbl(23124)	definition(x(1) 23151 pid('NewFunctor' 4 pos('./standard/Functor.oz' 34 3) nil 5) <P: 280> nil)
		putRecord(f [<U: functorID> apply 'export' 'import'] x(4))
		setConstant(unit)
		setValue(x(2))
		setValue(x(1))
		setValue(x(0))
		callBI('Chunk.new' [x(4)]#[x(0)])
		unify(x(0) x(3))
		return
		endDefinition(23124)
lbl(23151)	moveMoveXYXY(x(0) y(0) x(1) y(230))
		putConstant('NewFunctor' x(0))
		genFastCall(<P: 1> 4)
lbl(23162)	definition(x(3) 23187 pid('GetFeatures' 2 pos('./standard/Functor.oz' 44 3) nil 2) <P: 281> nil)
		inlineDot(x(0) type x(0) cache)
		testList(x(0) 23181)
lbl(23177)	unify(x(1) x(0))
		return
lbl(23181)	getLiteral(nil x(1))
		return
		endDefinition(23162)
lbl(23187)	putRecord('functor' [getFeatures is new] y(231))
		setValue(x(3))
		setValue(y(0))
		setValue(y(230))
		move(g(0) x(1))
		putConstant('export' x(0))
		createVariableMove(y(230) x(2))
		genFastCall(<P: 108> 6)
lbl(23209)	definition(x(0) 23227 pid('IsNotNL' 2 pos('./sp/Error.oz' 38 13) nil 4) <P: 282> nil)
		putConstant(10 x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23209)
lbl(23227)	definition(x(3) 23258 pid('ToLower' 2 pos('./sp/Error.oz' 39 13) nil 3) <P: 283> [y(54)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(23227)
lbl(23258)	definition(x(3) 23535 pid('EscapeVariableChar' 3 pos('./sp/Error.oz' 45 6) nil 6) <P: 284> nil)
		shallowGuard(23522)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23272)	shallowThen
		testLiteral(x(4) nil 23284)
lbl(23277)	getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(23284)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 23311)
lbl(23297)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23311)	testNumber(y(2) 92 23317)
		branch(23297)
lbl(23317)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 23361)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(23361)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 23412)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23412)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 23463)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23463)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 23514)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23514)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23522)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(45)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23258)
lbl(23535)	definition(x(4) 23619 pid('PrintNameToVS' 2 pos('./sp/Error.oz' 56 6) nil 4) <P: 285> [y(39) x(3)])
		allocateL3
		callBI('Atom.toString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 23581)
lbl(23553)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 23581)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(23581)	match(y(0) ht(23612 [onScalar(nil 23584) onScalar('#' 23604)]))
lbl(23584)	getList(y(1))
		unifyNumber(110)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(105)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(108)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23604)	getList(y(1))
		unifyNumber(35)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23612)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(23535)
lbl(23619)	definition(x(3) 23721 pid('ListToVS' 3 pos('./sp/Error.oz' 66 3) nil 5) <P: 286> nil)
		testLiteral(x(0) nil 23633)
lbl(23629)	getLiteral('' x(2))
		return
lbl(23633)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 23660)
lbl(23645)	getVarVar(x(3) x(4))
		testLiteral(x(4) nil 23660)
		getRecord(oz 1 y(2))
		unifyValue(x(3))
		deAllocateL3
		return
lbl(23660)	testList(y(0) 23706)
lbl(23663)	getVarVar(x(0) x(1))
		shallowGuard(23706)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(23674)	shallowThen
		getRecord('#' 3 y(2))
		unifyVariable(x(1))
		unifyValVar(y(1) x(4))
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 286> 7)
lbl(23706)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(74)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23619)
lbl(23721)	definition(x(1) 23907 pid('PosToVS' 5 pos('./sp/Error.oz' 77 3) nil 5) <P: 287> nil)
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		testLiteral(x(0) '' 23749)
		getLiteral(nil y(4))
		branch(23759)
lbl(23749)	getRecord('#' 3 y(4))
		unifyLiteral('file "')
		unifyValue(x(0))
		unifyLiteral('"')
lbl(23759)	createVariable(y(5))
		testLiteral(y(0) unit 23770)
		getLiteral(nil y(5))
		branch(23778)
lbl(23770)	getRecord('#' 2 y(5))
		unifyLiteral('line ')
		unifyValue(y(0))
lbl(23778)	createVariable(y(0))
		match(y(1) ht(23793 [onScalar(unit 23783) onScalar(~1 23788)]))
lbl(23783)	getLiteral(nil y(0))
		branch(23801)
lbl(23788)	getLiteral(nil y(0))
		branch(23801)
lbl(23793)	getRecord('#' 2 y(0))
		unifyLiteral('column ')
		unifyValue(y(1))
lbl(23801)	createVariable(y(1))
		testLiteral(y(2) unit 23812)
		getLiteral(nil y(1))
		branch(23820)
lbl(23812)	getRecord('#' 2 y(1))
		unifyLiteral('PC = ')
		unifyValue(y(2))
lbl(23820)	definition(x(1) 23838 pid('' 2 pos('./sp/Error.oz' 84 7) nil 4) unit nil)
		putConstant(nil x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23820)
lbl(23838)	putList(x(4))
		setValue(y(1))
		setConstant(nil)
		putList(x(3))
		setValue(y(0))
		setValue(x(4))
		putList(x(2))
		setValue(y(5))
		setValue(x(3))
		putList(x(0))
		setValue(y(4))
		setValue(x(2))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testList(y(0) 23900)
lbl(23871)	getVarVar(x(2) x(0))
lbl(23874)	definition(x(1) 23893 pid('' 3 pos('./sp/Error.oz' 87 12) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(', ')
		unifyValue(x(1))
		return
		endDefinition(23874)
lbl(23893)	move(y(3) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
lbl(23900)	getLiteral(nil y(3))
		deAllocateL6
		return
		endDefinition(23721)
lbl(23907)	definition(x(2) 23926 pid('StarLine' 2 pos('./sp/Error.oz' 92 3) nil 2) <P: 288> nil)
		getRecord('#' 3 x(1))
		unifyLiteral('%** ')
		unifyValue(x(0))
		unifyLiteral('\n')
		return
		endDefinition(23907)
lbl(23926)	definition(x(3) 23965 pid('Repeat' 3 pos('./sp/Error.oz' 96 3) nil 3) <P: 289> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(23944)	definition(x(1) 23956 pid('' 1 pos('./sp/Error.oz' 98 16) nil 1) unit [y(0)])
		unify(x(0) g(0))
		return
		endDefinition(23944)
lbl(23956)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(23926)
lbl(23965)	definition(x(3) 24022 pid('MaxLeftSize' 2 pos('./sp/Error.oz' 101 3) nil 5) <P: 290> nil)
lbl(23971)	definition(x(4) 24008 pid('' 3 pos('./sp/Error.oz' 102 16) nil 5) unit nil)
		shallowGuard(23995)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23987)	shallowThen
		callBI('Value.max' [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(23995)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(102)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23971)
lbl(24008)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(0 x(2))
		genFastCall(<P: 30> 9)
		endDefinition(23965)
lbl(24022)	putRecord('#' 3 y(232))
		setConstant('%**')
		setVariable(x(3))
		setConstant('\n')
		putConstant(65 x(4))
		putConstant(3 x(5))
		inlineMinus(x(4) x(5) x(6))
		moveMoveXYXY(x(4) y(233) x(0) y(234))
		moveMoveXYXY(x(1) y(235) x(2) y(236))
		move(x(6) x(0))
		move(x(3) x(2))
		putConstant(45 x(1))
		genFastCall(<P: 289> 6)
		putConstant('%***' x(0))
		createVariableMove(y(237) x(1))
		genFastCall(<P: 196> 4)
		putConstant(0 x(4))
lbl(24076)	definition(x(2) 27815 pid('' 2 pos('./sp/Error.oz' 111 3) nil 4) <P: 291> [y(143) y(234) y(39) y(130) y(163) x(4) y(233) y(237) y(236) y(232) y(134) y(224) y(235)])
		putList(x(2))
		setPredicateRef(<Q: 292>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 294>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 327>)
		setValue(x(2))
lbl(24298)	definitionCopy(x(3) 27810 pid('/body' 0 pos('./sp/Error.oz' 111 3) [once] 14) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) x(1) g(12)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(2) printError x(4) cache)
lbl(24333)	definition(x(5) 24428 pid('DoFormatTypes' 3 pos('./sp/Error.oz' 151 2) nil 5) <Q: 292> [g(1) g(2)])
		testLiteral(x(1) nil 24347)
lbl(24343)	getLiteral(nil x(2))
		return
lbl(24347)	allocateL4
		inlineDot(x(1) 2 x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		move(x(3) y(1))
		testLiteral(y(0) '' 24401)
lbl(24387)	getRecord(hint [m] x(2))
		unifyVariable(x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
		branch(24414)
lbl(24401)	getRecord(hint [l m] x(2))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
lbl(24414)	moveMoveYXYX(y(3) x(1) y(1) x(2))
		putConstant('' x(0))
		deAllocateL4
		genFastCall(<Q: 292> 7)
		endDefinition(24333)
lbl(24428)	definition(x(5) 24457 pid('FormatTypes' 2 pos('./sp/Error.oz' 166 2) nil 5) <Q: 293> [g(3)])
		callBI('Atom.toString' [x(0)]#[x(3)])
		putList(x(4))
		setConstant(10)
		setValue(x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant('Expected type' x(0))
		genFastCall(<Q: 292> 7)
		endDefinition(24428)
lbl(24457)	definition(x(6) 24571 pid('FormatPartialAppl' 4 pos('./sp/Error.oz' 171 6) nil 6) <Q: 294> [g(4)])
		allocateL2
		getRecord('#' 4 x(3))
		unifyLiteral('{')
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(oz 1 x(3))
		unifyValue(x(0))
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		testLiteral(x(1) nil 24496)
lbl(24491)	getLiteral('' x(4))
		branch(24512)
lbl(24496)	getRecord('#' 2 x(4))
		unifyLiteral(' ')
		unifyVariable(x(0))
		getRecord(list 2 x(0))
		unifyValue(x(1))
		unifyLiteral(' ')
lbl(24512)	testNumber(y(0) 0 24524)
		getList(y(1))
		unifyNumber(125)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(24524)	getRecord('#' 2 y(1))
		unifyVariable(x(5))
		unifyLiteral('}')
lbl(24532)	definition(x(3) 24553 pid('' 3 pos('./sp/Error.oz' 176 8) nil 3) unit nil)
		getList(x(2))
		unifyNumber(32)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(95)
		unifyValue(x(0))
		return
		endDefinition(24532)
lbl(24553)	move(y(0) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		putConstant(nil x(4))
		deAllocateL2
		genFastCall(<P: 105> 13)
		endDefinition(24457)
lbl(24571)	definition(x(6) 24588 pid('FormatAppl' 3 pos('./sp/Error.oz' 180 6) nil 4) <Q: 295> nil)
		move(x(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 294> 9)
		endDefinition(24571)
lbl(24588)	definition(x(7) 24645 pid('DoFormatHint' 2 pos('./sp/Error.oz' 185 2) nil 4) <Q: 296> [g(1) g(2)])
		testLiteral(x(0) nil 24602)
lbl(24598)	getLiteral(nil x(1))
		return
lbl(24602)	allocateL3
		inlineDot(x(0) 2 x(0) cache)
		move(x(1) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 57> 8)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(line 1 x(0))
		unifyValue(y(1))
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 296> 5)
		endDefinition(24588)
lbl(24645)	definition(x(7) 24738 pid('FormatHint' 2 pos('./sp/Error.oz' 193 2) nil 4) <Q: 297> [x(1)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		inlineDot(x(0) hints x(0) cache)
		testBool(x(0) 24692 24725)
lbl(24688)	testLiteral(y(0) nil 24697)
lbl(24692)	getLiteral(nil y(1))
		deAllocateL3
		return
lbl(24697)	getList(y(1))
		unifyLiteral(unit)
		unifyVariable(y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 194> 4)
		putList(x(0))
		setConstant(10)
		setValue(y(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 296> 5)
lbl(24725)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(24645)
lbl(24738)	definition(x(8) 24786 pid('InfoField' 2 pos('./sp/Error.oz' 203 6) nil 3) <Q: 298> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		testBI('Record.is' [x(0)]#[x(1)] 24779)
lbl(24761)	putConstant(info x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 24779)
lbl(24768)	inlineDot(x(0) info x(1) cache)
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(24779)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(24738)
lbl(24786)	definition(x(9) 24825 pid('DebugField' 2 pos('./sp/Error.oz' 211 6) nil 4) <Q: 299> nil)
		allocateL1
		move(x(1) y(0))
		testBI('Record.is' [x(0)]#[x(2)] 24818)
lbl(24800)	putConstant(debug x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 24818)
lbl(24807)	inlineDot(x(0) debug x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24818)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24786)
lbl(24825)	definition(x(9) 24864 pid('DispatchField' 2 pos('./sp/Error.oz' 217 6) nil 4) <Q: 300> nil)
		allocateL1
		move(x(1) y(0))
		testBI('Record.is' [x(0)]#[x(2)] 24857)
lbl(24839)	putConstant(1 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 24857)
lbl(24846)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24857)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24825)
lbl(24864)	definition(x(10) 24904 pid('HasDispatchField' 2 pos('./sp/Error.oz' 223 6) nil 4) <Q: 301> nil)
		testBI('Record.is' [x(0)]#[x(2)] 24898)
		putConstant(1 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 24894)
		inlineDot(x(0) 1 x(0) cache)
		callBI('Record.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(24894)	getLiteral(false x(1))
		return
lbl(24898)	getLiteral(false x(1))
		return
		endDefinition(24864)
lbl(24904)	definition(x(10) 25026 pid('DebugInfo' 2 pos('./sp/Error.oz' 229 6) nil 6) <Q: 302> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 298> 4)
		match(y(1) ht(25019 [onScalar(unit 24923) onScalar(nil 24928) onRecord('|' 2 24933)]))
lbl(24923)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24928)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24933)	getVarVar(x(0) x(3))
		getList(y(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		match(x(0) ht(24997 [onRecord(apply 2 24950) onRecord(fapply 3 24966) onRecord(vs 1 24987)]))
lbl(24950)	getVarVar(x(0) x(1))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		genFastCall(<Q: 295> 6)
		branch(25010)
lbl(24966)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		move(x(4) x(3))
		genFastCall(<Q: 294> 8)
		branch(25010)
lbl(24987)	getVariable(x(0))
		getRecord(hint [l] x(4))
		unifyValue(x(0))
		branch(25010)
lbl(24997)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(242)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(25010)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 302> 5)
lbl(25019)	getLiteral(nil y(0))
		deAllocateL2
		return
		endDefinition(24904)
lbl(25026)	definition(x(10) 25061 pid('DebugLoc' 2 pos('./sp/Error.oz' 249 6) nil 4) <Q: 303> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		putConstant(loc x(1))
		putConstant(unit x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(0))
		deAllocateL2
		return
		endDefinition(25026)
lbl(25061)	definition(x(10) 25145 pid('DebugStack' 2 pos('./sp/Error.oz' 255 6) nil 4) <Q: 304> [x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 299> 4)
		move(y(3) x(0))
		putConstant(stack x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 25138)
lbl(25110)	move(y(2) x(1))
		inlineDot(x(1) 'thread' x(1) cache)
		putConstant(0 x(2))
		testLT(x(2) x(1) x(3) 25138)
lbl(25127)	inlineDot(x(0) stack x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
lbl(25138)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(25061)
lbl(25145)	definition(x(10) 25214 pid('OzValueToVS' 2 pos('./sp/Error.oz' 275 6) nil 6) <Q: 305> [x(1) x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(1))
		inlineDot(x(1) depth x(5) cache)
		inlineDot(x(1) width x(2) cache)
		move(y(0) x(0))
		move(x(5) x(1))
		move(y(1) x(3))
		deAllocateL3
		tailCall(x(4) 4)
		endDefinition(25145)
lbl(25214)	createVariable(y(0))
lbl(25216)	definition(x(10) 25327 pid('AlmostVSToVS' 2 pos('./sp/Error.oz' 280 6) nil 6) <Q: 306> [g(5) y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('Value.isDet' [x(0)]#[x(2)] 25316)
lbl(25232)	testBI('Record.is' [x(0)]#[x(2)] 25316)
lbl(25236)	match(y(0) ht(25290 [onRecord(oz 1 25239) onRecord(pn 1 25245) onRecord('pos' 3 25251) onRecord(list 2 25269)]))
lbl(25239)	getVariable(x(0))
		deAllocateL2
		genFastCall(<Q: 305> 5)
lbl(25245)	getVariable(x(0))
		deAllocateL2
		genFastCall(<P: 285> 5)
lbl(25251)	getVarVar(x(0) x(5))
		getVariable(x(2))
		move(x(5) x(1))
		move(y(1) x(4))
		putConstant(unit x(3))
		deAllocateL2
		genFastCall(<P: 287> 11)
lbl(25269)	getVarVar(x(0) x(3))
		move(x(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 286> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 306> 5)
lbl(25290)	testBI('Tuple.is' [x(0)]#[x(2)] 25311)
lbl(25294)	callBI('Record.label' [x(0)]#[x(2)])
		testLiteral(x(2) '#' 25311)
lbl(25301)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 161> 7)
lbl(25311)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(25316)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 305> 5)
		endDefinition(25216)
lbl(25327)	unify(x(10) y(0))
lbl(25330)	definition(x(10) 25425 pid('AttachLeftSizes' 2 pos('./sp/Error.oz' 301 6) nil 4) <Q: 307> nil)
lbl(25336)	definition(x(3) 25414 pid('' 2 pos('./sp/Error.oz' 303 3) nil 3) unit nil)
		match(x(0) ht(25403 [onRecord(hint [l] 25345) onRecord(hint [l m] 25374)]))
lbl(25345)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25374)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25403)	getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyValue(x(0))
		return
		endDefinition(25336)
lbl(25414)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(25330)
lbl(25425)	definition(x(10) 25510 pid('LineOutput' 2 pos('./sp/Error.oz' 317 6) nil 5) <Q: 308> [x(4)])
		testLiteral(x(1) none 25436)
lbl(25435)	return
lbl(25436)	allocateL1
		putConstant(nil x(2))
		callBI('Cell.new' [x(2)]#[x(3)])
lbl(25443)	definition(x(2) 25483 pid('' 1 pos('./sp/Error.oz' 325 6) nil 3) unit [x(3)])
		allocateL2
		move(g(0) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Cell.assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(25443)
lbl(25483)	move(x(3) y(0))
		move(x(0) x(4))
		move(x(2) x(0))
		call(x(4) 2)
		move(y(0) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		move(x(1) x(0))
		deAllocateL1
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(25425)
lbl(25510)	definition(x(4) 25527 pid('Spaces' 2 pos('./sp/Error.oz' 333 6) nil 3) <Q: 309> nil)
		move(x(1) x(2))
		putConstant(32 x(1))
		genFastCall(<P: 289> 7)
		endDefinition(25510)
lbl(25527)	definition(x(4) 25808 pid('Lines' 2 pos('./sp/Error.oz' 337 6) nil 4) <Q: 310> [g(6)])
		allocateL3
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 307> 4)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 290> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		inlinePlus(x(0) x(1) x(2))
lbl(25565)	definition(x(3) 25796 pid('' 1 pos('./sp/Error.oz' 342 3) nil 5) unit [y(0) x(2)])
		shallowGuard(25783)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(25581)	shallowThen
		match(x(2) ht(25782 [onScalar(unit 25585) onScalar(hint 25602) onRecord(line 1 25619) onRecord('pos' 3 25635) onRecord(hint [l] 25671) onRecord(hint [m] 25687) onRecord(hint [l m] 25734)]))
lbl(25585)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25602)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25619)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25635)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		genFastCall(<P: 287> 10)
		putRecord('#' 2 x(0))
		setConstant('in ')
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25671)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25687)	allocateL2
		getVariable(y(0))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		putConstant(2 x(3))
		inlinePlus(x(2) x(3) x(4))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL2
		tailCall(g(0) 1)
lbl(25734)	allocateL3
		getVarVar(y(0) y(1))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		inlinePlus1(x(2) x(3))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(':')
		setValue(y(2))
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(0) 1)
lbl(25782)	return
lbl(25783)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(25565)
lbl(25796)	move(y(1) x(0))
		move(x(3) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(25527)
lbl(25808)	definition(x(4) 25881 pid('Location' 2 pos('./sp/Error.oz' 368 6) nil 4) <Q: 311> nil)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) nil 25827)
lbl(25822)	getLiteral(nil y(0))
		deAllocateL1
		return
lbl(25827)	testLiteral(x(0) unit 25833)
		branch(25822)
lbl(25833)	getList(y(0))
		unifyLiteral('')
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 2 x(2))
		unifyLiteral('Level: ')
		unifyVariable(x(3))
lbl(25853)	definition(x(1) 25872 pid('' 3 pos('./sp/Error.oz' 373 33) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' ')
		unifyValue(x(1))
		return
		endDefinition(25853)
lbl(25872)	putConstant('' x(2))
		deAllocateL1
		genFastCall(<P: 32> 9)
		endDefinition(25808)
lbl(25881)	definition(x(4) 26223 pid('DoStack' 3 pos('./sp/Error.oz' 382 2) nil 10) <Q: 312> [x(2)])
		match(x(0) ht(26208 [onScalar(nil 25890) onRecord('|' 2 25894)]))
lbl(25890)	getLiteral(nil x(2))
		return
lbl(25894)	allocateL8
		getVarVar(x(0) y(0))
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26200)
		putConstant(file x(5))
		putConstant('' x(6))
		callBI('Value.condSelect' [x(0) x(5) x(6)]#[x(7)])
		putConstant(line x(5))
		putConstant(unit x(6))
		callBI('Value.condSelect' [x(0) x(5) x(6)]#[x(8)])
		putConstant(column x(5))
		putConstant(unit x(6))
		callBI('Value.condSelect' [x(0) x(5) x(6)]#[x(9)])
		putConstant('PC' x(5))
		putConstant(unit x(6))
		callBI('Value.condSelect' [x(0) x(5) x(6)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(2))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 287> 10)
		move(y(3) x(0))
		inlineDot(x(0) kind x(1) cache)
		createVariable(y(5))
		match(x(1) ht(26059 [onScalar('call/c' 25979) onScalar('call/f' 25984) onScalar('lock/c' 25989) onScalar('lock/f' 25994) onScalar('exception handler/c' 25999) onScalar('exception handler/f' 26004) onScalar('conditional/c' 26009) onScalar('conditional/f' 26014) onScalar('definition/c' 26019) onScalar('definition/f' 26024) onScalar('skip/c' 26029) onScalar('skip/f' 26034) onScalar('fail/c' 26039) onScalar('fail/f' 26044) onScalar('thread/c' 26049) onScalar('thread/f' 26054)]))
lbl(25979)	getLiteral('call' y(5))
		branch(26062)
lbl(25984)	getLiteral('call' y(5))
		branch(26062)
lbl(25989)	getLiteral('lock' y(5))
		branch(26062)
lbl(25994)	getLiteral('lock' y(5))
		branch(26062)
lbl(25999)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26004)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26009)	getLiteral(conditional y(5))
		branch(26062)
lbl(26014)	getLiteral(conditional y(5))
		branch(26062)
lbl(26019)	getLiteral('definition' y(5))
		branch(26062)
lbl(26024)	getLiteral('definition' y(5))
		branch(26062)
lbl(26029)	getLiteral('skip' y(5))
		branch(26062)
lbl(26034)	getLiteral('skip' y(5))
		branch(26062)
lbl(26039)	getLiteral('fail' y(5))
		branch(26062)
lbl(26044)	getLiteral('fail' y(5))
		branch(26062)
lbl(26049)	getLiteral('thread' y(5))
		branch(26062)
lbl(26054)	getLiteral('thread' y(5))
		branch(26062)
lbl(26059)	unify(y(5) x(1))
lbl(26062)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(y(2))
		getRecord('#' 2 x(0))
		unifyVariable(y(6))
		unifyVariable(y(7))
		testLiteral(y(5) 'call' 26165)
lbl(26080)	move(y(3) x(0))
		inlineDot(x(0) data x(0) cache)
		testBI('Value.isDet' [x(0)]#[x(1)] 26160)
		move(g(0) x(1))
		inlineDot(x(1) printName x(2) cache)
		move(x(0) y(3))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(3) x(0))
		testBI('Object.is' [x(0)]#[x(1)] 26139)
		testLiteral(y(5) '' 26127)
		getLiteral('object application' y(6))
		branch(26168)
lbl(26127)	getRecord('#' 3 y(6))
		unifyLiteral('object application of class \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26139)	testLiteral(y(5) '' 26148)
		getLiteral(procedure y(6))
		branch(26168)
lbl(26148)	getRecord('#' 3 y(6))
		unifyLiteral('procedure \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26160)	getLiteral('procedure _' y(6))
		branch(26168)
lbl(26165)	unify(y(6) y(5))
lbl(26168)	testLiteral(y(4) nil 26177)
		getLiteral(nil y(7))
		branch(26185)
lbl(26177)	getRecord('#' 2 y(7))
		unifyLiteral(' in ')
		unifyValue(y(4))
lbl(26185)	move(y(1) x(0))
		inlineMinus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL8
		genFastCall(<Q: 312> 7)
lbl(26200)	getList(x(2))
		unifyLiteral('...')
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(26208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(25881)
lbl(26223)	definition(x(4) 26337 pid('GetStack' 3 pos('./sp/Error.oz' 442 2) nil 5) <Q: 313> nil)
		testLiteral(x(0) unit 26237)
		getLiteral(nil x(2))
		return
lbl(26237)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26331)
		allocateL4
lbl(26246)	definition(x(3) 26264 pid('' 2 pos('./sp/Error.oz' 446 21) nil 4) unit nil)
		putConstant(toplevel x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(26246)
lbl(26264)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 26299 26320)
		getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('On toplevel')
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(26299)	getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('CallStack: ')
		unifyVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 312> 7)
lbl(26320)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(446)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(26331)	getLiteral(nil x(2))
		return
		endDefinition(26223)
lbl(26337)	definition(x(4) 26485 pid('ErrorTitle' 2 pos('./sp/Error.oz' 488 2) nil 6) <Q: 314> [g(7) g(8)])
		allocateL5
		putConstant(kind x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(4) unit 26367)
lbl(26362)	getLiteral('' y(1))
		branch(26377)
lbl(26367)	getRecord('#' 3 y(1))
		unifyLiteral(' ')
		unifyValue(x(4))
		unifyLiteral(' ')
lbl(26377)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		move(g(0) x(0))
		move(y(2) x(1))
		inlineMinus(x(0) x(1) x(2))
		move(g(1) x(1))
		inlineMinus(x(2) x(1) x(3))
		putConstant(2 x(4))
		callBI('Int.div' [x(3) x(4)]#[x(5)])
		inlinePlus1(x(3) x(2))
		putConstant(2 x(3))
		callBI('Int.div' [x(2) x(3)]#[x(4)])
		move(x(4) y(2))
		move(x(5) x(0))
		putConstant(42 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 289> 6)
		move(y(2) x(0))
		putConstant(42 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 289> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		move(y(4) x(3))
		putConstant('%***' x(0))
		putConstant('\n' x(4))
		sendMsg('#' y(0) 5 cache)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL5
		tailCall(x(1) 1)
		endDefinition(26337)
lbl(26485)	definition(x(4) 26544 pid('ErrorMsgLine' 2 pos('./sp/Error.oz' 503 2) nil 5) <Q: 315> nil)
		putConstant(msg x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26505)
lbl(26504)	return
lbl(26505)	allocateL2
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		move(y(1) x(0))
		call(y(0) 1)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(26485)
lbl(26544)	definition(x(4) 26572 pid('ErrorItems' 2 pos('./sp/Error.oz' 512 2) nil 5) <Q: 316> nil)
		putConstant(items x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26564)
lbl(26563)	return
lbl(26564)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26544)
lbl(26572)	definition(x(4) 26628 pid('ErrorLoc' 2 pos('./sp/Error.oz' 521 2) nil 5) <Q: 317> [g(9)])
		putConstant(loc x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26592)
lbl(26591)	return
lbl(26592)	allocateL3
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 311> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26572)
lbl(26628)	definition(x(4) 26713 pid('ErrorStack' 2 pos('./sp/Error.oz' 532 2) nil 5) <Q: 318> [x(1) g(9)])
		putConstant(stack x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26648)
lbl(26647)	return
lbl(26648)	allocateL3
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(y(2) x(0))
		inlineDot(x(0) 'thread' x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 313> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26628)
lbl(26713)	definition(x(4) 26755 pid('ErrorFooter' 2 pos('./sp/Error.oz' 544 2) nil 5) <Q: 319> [g(10)])
		putConstant(footer x(2))
		putConstant(false x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testBool(x(4) 26741 26742)
		move(x(0) x(1))
		move(g(0) x(0))
		tailCall(x(1) 1)
lbl(26741)	return
lbl(26742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(26713)
lbl(26755)	definition(x(4) 26783 pid('ErrorInfo' 2 pos('./sp/Error.oz' 550 2) nil 5) <Q: 320> nil)
		putConstant(info x(2))
		putConstant(unit x(3))
		callBI('Value.condSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26775)
lbl(26774)	return
lbl(26775)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26755)
lbl(26783)	definition(x(4) 26841 pid('ErrorMsg' 2 pos('./sp/Error.oz' 559 2) nil 2) <Q: 321> nil)
		testLiteral(x(1) none 26794)
lbl(26793)	return
lbl(26794)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26783)
lbl(26841)	definition(x(10) 26923 pid('ErrorMsgDebug' 2 pos('./sp/Error.oz' 571 2) nil 2) <Q: 322> nil)
		testLiteral(x(1) none 26852)
lbl(26851)	return
lbl(26852)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 317> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 320> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 318> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26841)
lbl(26923)	definition(x(11) 27159 pid('Format' 5 pos('./sp/Error.oz' 591 6) nil 10) <Q: 323> [g(11)])
		allocateL7
		putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(footer)
		setValue(x(9))
		putList(x(7))
		setConstant(stack)
		setValue(x(8))
		putList(x(6))
		setConstant(loc)
		setValue(x(7))
		putList(x(5))
		setConstant(items)
		setValue(x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(error y(5))
		createVariable(y(6))
		testLiteral(y(0) unit 26999)
		testLiteral(y(1) unit 26991)
		unify(y(6) x(5))
		branch(27023)
lbl(26991)	getList(y(6))
		unifyLiteral(msg)
		unifyValue(x(5))
		branch(27023)
lbl(26999)	testLiteral(y(1) unit 27011)
		getList(y(6))
		unifyLiteral(kind)
		unifyValue(x(5))
		branch(27023)
lbl(27011)	getList(y(6))
		unifyLiteral(kind)
		unifyVariable(x(6))
		getList(x(6))
		unifyLiteral(msg)
		unifyValue(x(5))
lbl(27023)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		move(y(4) x(2))
		genFastCall(<P: 110> 6)
		testLiteral(y(0) unit 27040)
		branch(27052)
lbl(27040)	move(y(4) x(0))
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(0))
lbl(27052)	move(y(1) x(0))
		putConstant(unit x(1))
		callBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 27090 27079)
		move(y(4) x(1))
		inlineDot(x(1) msg x(2) cache)
		unify(x(2) y(1))
		branch(27090)
lbl(27079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(608)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27090)	move(y(4) x(0))
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(2))
		inlineDot(x(0) loc x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 303> 4)
		move(y(4) x(0))
		inlineDot(x(0) stack x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 304> 4)
		putConstant(true x(2))
		move(y(4) x(0))
		inlineDot(x(0) footer x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) info x(1) cache)
		move(y(3) x(0))
		deAllocateL7
		genFastCall(<Q: 302> 5)
		endDefinition(26923)
lbl(27159)	definition(x(12) 27281 pid('FormatReRaiseExc' 3 pos('./sp/Error.oz' 619 6) nil 14) <Q: 324> nil)
		allocateL3
		getRecord(error [items loc stack title] x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('Unable to Print Error Message')
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(hint [l m] x(3))
		unifyLiteral('Initial exception')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(0))
		getList(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(hint [l m] x(6))
		unifyLiteral('Format exception Kind')
		unifyVariable(x(8))
		getList(x(7))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(hint [l m] x(9))
		unifyLiteral('Format exception')
		unifyVariable(x(11))
		getRecord(oz 1 x(11))
		unifyVariable(x(12))
		getList(x(10))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(line 1 x(13))
		unifyLiteral('Please send bug report to oz@ps.uni-sb.de')
		callBI('Record.label' [x(1)]#[x(2)])
		unify(x(2) x(8))
		move(x(0) y(2))
		move(x(1) x(0))
		move(x(12) x(1))
		genFastCall(<Q: 300> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 303> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 304> 5)
		endDefinition(27159)
lbl(27281)	definition(x(12) 27325 pid('GenericFormatter' 3 pos('./sp/Error.oz' 635 6) nil 6) <Q: 325> nil)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(line 1 x(3))
		setValue(x(4))
		putList(x(5))
		setValue(x(3))
		setConstant(nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(unit x(0))
		genFastCall(<Q: 323> 11)
		endDefinition(27281)
lbl(27325)	definition(x(13) 27619 pid('FormatOzError' 2 pos('./sp/Error.oz' 643 6) nil 5) <Q: 326> [x(3)])
		testBI('Record.is' [x(0)]#[x(2)] 27605)
		callBI('Record.label' [x(0)]#[x(2)])
		testLiteral(x(2) 'failure' 27378)
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('failure' x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(27378)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Error: unhandled exception' y(2))
		testLiteral(x(2) error 27519)
lbl(27391)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 301> 4)
		testBool(y(3) 27496 27508)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 300> 4)
		move(y(3) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) exists x(2) cache)
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 27473 27485)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27473)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27485)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(655)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27496)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27508)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27519)	testLiteral(x(2) system 27525)
		branch(27391)
lbl(27525)	callBI('Record.label' [x(0)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) exists x(4) cache)
		moveMoveXYYX(x(2) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(4) 2)
		testBool(y(4) 27582 27594)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27582)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(665)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27605)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant('Error: unhandled exception' x(0))
		genFastCall(<Q: 325> 7)
		endDefinition(27325)
lbl(27619)	definition(x(3) 27715 pid('DefExHdl' 1 pos('./sp/Error.oz' 681 2) nil 3) <Q: 327> [x(10) g(12) x(2)])
		allocateL2
		move(x(0) y(0))
		exHandler(27654)
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 324> 6)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		branch(27679)
lbl(27654)	putConstant(high x(0))
		genFastCall(<P: 262> 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 326> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		popEx
lbl(27679)	move(g(2) x(0))
		inlineDot(x(0) onToplevel x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		testBool(y(0) 27700 27702)
		deAllocateL2
		return
lbl(27700)	deAllocateL2
		failure
lbl(27702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(27619)
lbl(27715)	inlineDot(x(1) put x(2) cache)
		moveMoveXYXY(x(1) y(1) x(5) y(2))
		moveMoveXYXY(x(6) y(3) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYXY(x(4) y(7) x(10) y(8))
		moveMoveXYXY(x(11) y(9) x(12) y(10))
		move(x(13) y(11))
		move(x(3) x(1))
		putConstant('errors.handler' x(0))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('errors.handler' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		getRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] g(13))
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(g(14))
		unifyValue(y(2))
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(1))
		deAllocateL
		return
		endDefinition(24298)
lbl(27810)	tailCall(x(3) 0)
		endDefinition(24076)
lbl(27815)	putList(x(4))
		setConstant(exists)
		setConstant(nil)
		putList(x(3))
		setConstant(get)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putList(x(6))
		setConstant(get)
		setValue(x(7))
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(12))
		setConstant(onToplevel)
		setConstant(nil)
		putList(x(11))
		setConstant(valueToVirtualString)
		setValue(x(12))
		putList(x(10))
		setConstant(printError)
		setValue(x(11))
		putList(x(9))
		setConstant(printName)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord('import' ['ErrorRegistry' 'Property' 'System'] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putConstant('procedure/2' x(4))
		putConstant('procedure/5' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/3' x(8))
		putConstant('procedure/2' x(9))
		putConstant('procedure/2' x(10))
		putConstant('procedure/5' x(11))
		putConstant('procedure/2' x(12))
		putConstant('procedure/2' x(13))
		putConstant('procedure/2' x(14))
		putConstant('procedure/2' x(15))
		putConstant(value x(16))
		putRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		createVariableMove(y(224) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(27966)	definition(x(4) 28131 pid('LayoutDot' 5 pos('./sp/ErrorRegistry.oz' 33 3) nil 11) <P: 328> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('Value.isDet' [x(0)]#[x(5)] 28112)
lbl(27990)	testBI('Record.is' [x(0)]#[x(5)] 28112)
lbl(27994)	callBI('Record.arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		putConstant(5 x(1))
		testLT(x(1) x(0) x(2) 28112)
lbl(28017)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		getRecord('#' 6 x(2))
		unifyLiteral('R ')
		unifyValue(y(3))
		unifyLiteral(' ')
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(1))
		getRecord(oz 1 x(4))
		unifyValue(y(2))
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(hint [l m] x(5))
		unifyLiteral('Expected fields')
		unifyVariable(x(7))
		getRecord(list 2 x(7))
		unifyVariable(x(8))
		unifyLiteral(' ')
		getList(x(6))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(hint [l m] x(9))
		unifyLiteral('Record value')
		unifyVariable(x(10))
		getRecord(oz 1 x(10))
		unifyValue(y(0))
		move(y(0) x(0))
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) x(8))
		deAllocateL6
		return
lbl(28112)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		genFastCall(<P: 329> 11)
		endDefinition(27966)
lbl(28131)	definition(x(4) 28188 pid('LayoutComma' 3 pos('./sp/ErrorRegistry.oz' 46 3) nil 8) <P: 330> nil)
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(hint [l m] x(2))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		getRecord('#' 2 x(4))
		unifyLiteral('C, ')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(1))
		getList(x(3))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(hint [l m] x(6))
		unifyLiteral('Class value')
		unifyVariable(x(7))
		getRecord(oz 1 x(7))
		unifyValue(x(0))
		return
		endDefinition(28131)
lbl(28188)	definition(x(4) 28247 pid('LayoutBin' 5 pos('./sp/ErrorRegistry.oz' 51 3) nil 9) <P: 329> nil)
		getList(x(4))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(5))
		getRecord('#' 7 x(5))
		unifyVariable(x(6))
		unifyLiteral(' ')
		unifyValue(x(3))
		unifyLiteral(' ')
		unifyVariable(x(7))
		unifyLiteral(' = ')
		unifyVariable(x(8))
		getRecord(oz 1 x(6))
		unifyValue(x(0))
		getRecord(oz 1 x(7))
		unifyValue(x(1))
		getRecord(oz 1 x(8))
		unifyValue(x(2))
		return
		endDefinition(28188)
lbl(28247)	definition(x(2) 34810 pid('' 2 pos('./sp/ErrorRegistry.oz' 57 3) nil 4) <P: 331> [y(128) y(151) y(191) y(192) y(208) y(209) y(1) y(148) y(149) y(156)])
		putList(x(2))
		setPredicateRef(<Q: 332>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 341>)
		setValue(x(2))
lbl(28313)	definitionCopy(x(3) 34805 pid('/body' 0 pos('./sp/ErrorRegistry.oz' 57 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) x(1)])
		allocateL9
		move(g(0) x(0))
		inlineDot(x(0) 'Error' x(2) cache)
lbl(28329)	definition(x(1) 31295 pid('KernelFormatter' 2 pos('./sp/ErrorRegistry.oz' 79 6) nil 20) <Q: 332> [x(2) g(1) g(2) g(3) g(4) g(5) g(6)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) kernel 6 29165)
lbl(28361)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) type 29165)
		putRecord('#' 2 y(2))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		move(x(5) y(8))
		testRecord(y(2) '#' 2 28475)
lbl(28402)	getVarVar(x(0) x(6))
		shallowGuard(28475)
		getLiteral('.' x(0))
		getList(x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(28428)	shallowThen
		move(x(6) x(1))
		move(x(8) x(2))
		putConstant('.' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28475)	testRecord(y(2) '#' 2 28550)
lbl(28480)	getVarVar(x(0) x(1))
		shallowGuard(28550)
		getLiteral('^' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28506)	shallowThen
		move(x(3) x(2))
		putConstant('^' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28550)	testRecord(y(2) '#' 2 28616)
lbl(28555)	getVarVar(x(0) x(1))
		shallowGuard(28616)
		getLiteral(',' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28575)	shallowThen
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 330> 6)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28616)	testRecord(y(2) '#' 2 28747)
lbl(28621)	getVarVar(x(0) x(1))
		shallowGuard(28747)
		getLiteral('+1' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28641)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' + 1 = ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(9))
		setValue(x(0))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord('#' 4 x(8))
		setConstant('1 + ')
		setValue(x(9))
		setConstant(' = ')
		setValue(x(10))
		putRecord(hint [l m] x(7))
		setConstant('Possible origin')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(y(2))
		setValue(x(1))
		setValue(x(6))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28747)	testRecord(y(2) '#' 2 28842)
lbl(28752)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(28842)
		getLiteral(fdTellConstraint x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28774)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' :: ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putList(y(6))
		setValue(x(1))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28842)	putList(x(8))
		setConstant('\\=')
		setConstant(nil)
		putList(x(7))
		setConstant('>=')
		setValue(x(8))
		putList(x(6))
		setConstant('=<')
		setValue(x(7))
		putList(x(5))
		setConstant('>')
		setValue(x(6))
		putList(x(4))
		setConstant('<')
		setValue(x(5))
		putList(x(3))
		setConstant('/')
		setValue(x(4))
		putList(x(2))
		setConstant('*')
		setValue(x(3))
		putList(x(0))
		setConstant('-')
		setValue(x(2))
		putList(x(1))
		setConstant('+')
		setValue(x(0))
		move(y(6) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 29007 29069)
		createVariable(y(9))
		testList(y(7) 28945)
lbl(28914)	getVarVar(x(0) x(1))
		shallowGuard(28945)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28931)	shallowThen
		move(x(3) x(2))
		moveMoveYXYX(y(6) x(3) y(9) x(4))
		genFastCall(<P: 329> 10)
		branch(28976)
lbl(28945)	getList(y(9))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(28976)	move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29007)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setVariable(x(2))
		putList(y(9))
		setValue(x(0))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(117)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(29080)	move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('type error' y(3))
		createVariable(y(7))
		testNumber(y(4) 0 29120)
lbl(29115)	unify(y(7) y(5))
		branch(29134)
lbl(29120)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(4))
lbl(29134)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29165)	testRecord(y(2) kernel 6 29338)
lbl(29170)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) instantiation 29338)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(5) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setConstant(nil)
		move(y(6) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('instantiation error' y(2))
		createVariable(y(7))
		testNumber(y(3) 0 29293)
lbl(29288)	unify(y(7) y(4))
		branch(29307)
lbl(29293)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(3))
lbl(29307)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29338)	testRecord(y(2) kernel 3 29414)
lbl(29343)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) apply 29414)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		inlineDot(x(0) formatAppl x(4) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(4) 3)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(3))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(5) y(0) x(3))
		move(y(1) x(4))
		putConstant('error in application' x(0))
		putConstant('Application of non-procedure and non-object' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29414)	testRecord(y(2) kernel 3 29477)
lbl(29419)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '.' 29477)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariable(x(2))
		putConstant('.' x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 328> 10)
		moveMoveYXYX(y(2) x(5) y(3) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: illegal field selection' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29477)	testRecord(y(2) kernel 3 29560)
lbl(29482)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) recordConstruction 29560)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Label')
		setValue(x(4))
		putRecord(list 2 x(9))
		setValue(x(2))
		setConstant(' ')
		putRecord(hint [l m] x(8))
		setConstant('Feature-field Pairs')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: duplicate fields' x(0))
		putConstant('Duplicate fields in record construction' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29560)	testRecord(y(2) kernel 3 29744)
lbl(29565)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) arity 29744)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariable(y(4))
		testBI('Procedure.is' [x(1)]#[x(0)] 29593)
		callBI('Procedure.arity' [x(1)]#[x(0)])
		unify(x(0) y(4))
		branch(29596)
lbl(29593)	getNumber(1 y(4))
lbl(29596)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(7) x(2))
		call(x(3) 3)
		putConstant('Error: illegal number of arguments' y(2))
		createVariable(y(3))
		testNumber(y(4) 1 29648)
		getLiteral('' y(3))
		branch(29651)
lbl(29648)	getLiteral(s y(3))
lbl(29651)	createVariable(y(8))
		testNumber(y(5) 1 29662)
		getLiteral('' y(8))
		branch(29665)
lbl(29662)	getLiteral(s y(8))
lbl(29665)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(7))
		putRecord('#' 3 x(4))
		setValue(y(4))
		setConstant(' argument')
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('Expected')
		setValue(x(4))
		putRecord('#' 3 x(7))
		setValue(y(5))
		setConstant(' argument')
		setValue(y(8))
		putRecord(hint [l m] x(6))
		setConstant('Found')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(2) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29744)	testRecord(y(2) kernel 2 29794)
lbl(29749)	getVarVar(x(0) x(1))
		testLiteral(x(0) noElse 29794)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29794)	testRecord(y(2) kernel 3 29869)
lbl(29799)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) noElse 29869)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Matching')
		setValue(x(8))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29869)	testRecord(y(2) kernel 2 29919)
lbl(29874)	getVarVar(x(0) x(1))
		testLiteral(x(0) boolCaseType 29919)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: boolean conditional failed' x(0))
		putConstant('Non-boolean value found' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29919)	testRecord(y(2) kernel 2 29985)
lbl(29924)	getVarVar(x(0) x(1))
		testLiteral(x(0) div0 29985)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' div 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29985)	testRecord(y(2) kernel 2 30051)
lbl(29990)	getVarVar(x(0) x(1))
		testLiteral(x(0) mod0 30051)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' mod 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30051)	testRecord(y(2) kernel 3 30155)
lbl(30056)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) dict 30155)
		callBI('Dictionary.keys' [x(1)]#[x(5)])
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Dictionary')
		setValue(x(4))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Key found')
		setValue(x(10))
		putRecord(oz 1 x(13))
		setValue(x(5))
		putRecord(hint [l m] x(12))
		setConstant('Legal keys')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(3))
		setValue(x(8))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Dictionary' x(0))
		putConstant('Key not found' x(1))
		deAllocateL10
		tailCall(x(6) 5)
lbl(30155)	testRecord(y(2) kernel 3 30260)
lbl(30160)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) array 30260)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Array.low' [x(1)]#[x(6)])
		callBI('Array.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index Found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Array' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30260)	testRecord(y(2) kernel 3 30329)
lbl(30265)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.new' 30329)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Lower bound')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Upper bound')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Illegal boundaries to BitArray.new' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30329)	testRecord(y(2) kernel 3 30434)
lbl(30334)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.index' 30434)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Bit array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30434)	testRecord(y(2) kernel 3 30575)
lbl(30439)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.binop' 30575)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		callBI('BitArray.low' [x(2)]#[x(8)])
		callBI('BitArray.high' [x(2)]#[x(9)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('First bit array')
		setValue(x(4))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('First bounds')
		setValue(x(13))
		putRecord(oz 1 x(16))
		setValue(x(2))
		putRecord(hint [l m] x(15))
		setConstant('Second bit array')
		setValue(x(16))
		putRecord('#' 3 x(19))
		setValue(x(8))
		setConstant(' - ')
		setValue(x(9))
		putRecord(hint [l m] x(18))
		setConstant('Second bounds')
		setValue(x(19))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(14))
		setValue(x(15))
		setValue(x(17))
		putList(x(11))
		setValue(x(12))
		setValue(x(14))
		putList(x(10))
		setValue(x(3))
		setValue(x(11))
		move(x(10) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Incompatible bounds in binary operation on BitArrays' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30575)	testRecord(y(2) kernel 2 30635)
lbl(30580)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoFloat 30635)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to float failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30635)	testRecord(y(2) kernel 2 30695)
lbl(30640)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoInt 30695)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to integer failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30695)	testRecord(y(2) kernel 2 30755)
lbl(30700)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoAtom 30755)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to atom failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30755)	testRecord(y(2) kernel 2 30815)
lbl(30760)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoValue 30815)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to Oz value failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30815)	testRecord(y(2) kernel 2 30918)
lbl(30820)	getVarVar(x(0) x(1))
		testLiteral(x(0) globalState 30918)
		createVariable(y(2))
		testLiteral(x(1) array 30838)
lbl(30833)	getLiteral('Assignment to global array' y(2))
		branch(30886)
lbl(30838)	testLiteral(x(1) dict 30847)
lbl(30842)	getLiteral('Assignment to global dictionary' y(2))
		branch(30886)
lbl(30847)	testLiteral(x(1) cell 30856)
lbl(30851)	getLiteral('Assignment to global cell' y(2))
		branch(30886)
lbl(30856)	testLiteral(x(1) io 30865)
lbl(30860)	getLiteral('Input/Output' y(2))
		branch(30886)
lbl(30865)	testLiteral(x(1) object 30874)
lbl(30869)	getLiteral('Assignment to global object' y(2))
		branch(30886)
lbl(30874)	testLiteral(x(1) 'lock' 30883)
lbl(30878)	getLiteral('Request of global lock' y(2))
		branch(30886)
lbl(30883)	unify(y(2) x(1))
lbl(30886)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 2 x(1))
		setValue(y(2))
		setConstant(' from local space')
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: space hierarchy' x(0))
		putConstant(nil x(2))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30918)	testRecord(y(2) kernel 2 30974)
lbl(30923)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceMerged 30974)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Space already merged' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30974)	testRecord(y(2) kernel 2 31030)
lbl(30979)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceSuper 31030)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Merge of superordinated space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31030)	testRecord(y(2) kernel 2 31086)
lbl(31035)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceParent 31086)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Current space must be parent space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31086)	testRecord(y(2) kernel 2 31142)
lbl(31091)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceNoChoice 31142)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('No choices left' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31142)	testRecord(y(2) kernel 2 31198)
lbl(31147)	getVarVar(x(0) x(1))
		testLiteral(x(0) portClosed 31198)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Port')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Port' x(0))
		putConstant('Port already closed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31198)	testRecord(y(2) kernel 1 31214)
lbl(31203)	getVariable(x(0))
		testLiteral(x(0) terminate 31214)
		getLiteral(none y(1))
		deAllocateL10
		return
lbl(31214)	testRecord(y(2) kernel 2 31272)
lbl(31219)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) block 31272)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Thread')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Thread' x(0))
		putConstant('Purely sequential thread blocked' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31272)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('Kernel' x(0))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(28329)
lbl(31295)	definition(x(3) 32387 pid('ObjectFormatter' 2 pos('./sp/ErrorRegistry.oz' 470 6) nil 16) <Q: 333> [x(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in object system' y(3))
		testRecord(y(2) object 4 31448)
lbl(31330)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) '<-' 31448)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Record.arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(oz 1 x(9))
		setValue(x(3))
		putRecord('#' 3 x(4))
		setValue(x(8))
		setConstant(' <- ')
		setValue(x(9))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(4))
		putRecord(oz 1 x(12))
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Attribute does not exist')
		setValue(x(12))
		putRecord(list 2 x(15))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(14))
		setConstant('Expected Attribute(s)')
		setValue(x(15))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(13))
		putList(x(7))
		setValue(x(1))
		setValue(x(10))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31448)	testRecord(y(2) object 3 31564)
lbl(31453)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '@' 31564)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Record.arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(4))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setConstant('@')
		setValue(x(4))
		setConstant(' = _')
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Attribute does not exist')
		setValue(x(10))
		putRecord(list 2 x(13))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(12))
		setConstant('Expected attribute(s)')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31564)	testRecord(y(2) object 5 31668)
lbl(31569)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		testLiteral(x(0) sharing 31668)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(8))
		setValue(x(1))
		setConstant(' and ')
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Classes')
		setValue(x(8))
		putRecord('#' 2 x(11))
		setConstant('Shared ')
		setValue(x(3))
		putRecord(oz 1 x(13))
		setValue(x(4))
		putRecord('#' 2 x(12))
		setValue(x(13))
		setConstant(' (is not redefined)')
		putRecord(hint [l m] x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes not ordered by inheritance' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31668)	testRecord(y(2) object 2 31832)
lbl(31673)	getVarVar(x(0) x(1))
		shallowGuard(31832)
		getLiteral(order x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31695)	shallowThen
lbl(31696)	definition(x(0) 31715 pid('Rel' 3 pos('./sp/ErrorRegistry.oz' 498 5) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' < ')
		unifyValue(x(1))
		return
		endDefinition(31696)
lbl(31715)	move(g(0) x(4))
		inlineDot(x(4) format x(5) cache)
		moveMoveXYXY(x(1) y(2) x(0) y(4))
		move(x(5) y(5))
		move(x(2) x(0))
		move(x(3) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
lbl(31744)	definition(x(1) 31792 pid('' 2 pos('./sp/ErrorRegistry.oz' 503 16) nil 5) unit [y(4)])
		shallowGuard(31779)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31760)	shallowThen
		getRecord(hint [m] x(1))
		unifyVariable(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		tailCall(g(0) 3)
lbl(31779)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(31744)
lbl(31792)	move(y(2) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		putRecord(hint [l m] x(0))
		setConstant('Relation found')
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(y(4))
		moveMoveYXYX(y(5) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes cannot be ordered' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31832)	testRecord(y(2) object 3 31928)
lbl(31837)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) lookup 31928)
		putRecord(oz 1 x(0))
		setValue(x(1))
		putRecord(hint [l m] y(2))
		setConstant('Class')
		setValue(x(0))
		putRecord(oz 1 x(0))
		setValue(x(2))
		putRecord(hint [l m] y(4))
		setConstant('Message')
		setValue(x(0))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('Method undefined and no otherwise method given' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method lookup in message sending' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31928)	testRecord(y(2) object 3 32012)
lbl(31933)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) final 32012)
		putRecord(hint [l m] y(2))
		setConstant('Final class used as parent')
		setValue(x(1))
		putRecord(hint [l m] y(4))
		setConstant('Class to be created')
		setValue(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('remove prop final from parent class or change inheritance relation' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Inheritance from final class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32012)	testRecord(y(2) object 3 32087)
lbl(32017)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) inheritanceFromNonClass 32087)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Non-class used as parent')
		setValue(x(4))
		putRecord(hint [l m] x(8))
		setConstant('Class to be created')
		setValue(x(2))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Inheritance from non-class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32087)	testRecord(y(2) object 2 32143)
lbl(32092)	getVarVar(x(0) x(1))
		testLiteral(x(0) arityMismatchDefaultMethod 32143)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Unexpected feature')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Arity mismatch for method with defaults' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32143)	testRecord(y(2) object 1 32190)
lbl(32148)	getVariable(x(0))
		testLiteral(x(0) slaveNotFree 32190)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is not free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method becomeSlave' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32190)	testRecord(y(2) object 1 32237)
lbl(32195)	getVariable(x(0))
		testLiteral(x(0) slaveAlreadyFree 32237)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is already free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method free' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32237)	testRecord(y(2) object 2 32293)
lbl(32242)	getVarVar(x(0) x(1))
		testLiteral(x(0) locking 32293)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Object')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Attempt to lock unlockable object' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32293)	testRecord(y(2) object 3 32364)
lbl(32298)	getVarVar(x(0) x(1))
		getVariable(x(2))
		createVariable(y(2))
		testLiteral(x(0) fromFinalClass 32364)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Final class')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Operation')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Final class not allowed' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32364)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(31295)
lbl(32387)	definition(x(4) 33160 pid('FailureFormatter' 2 pos('./sp/ErrorRegistry.oz' 574 6) nil 12) <Q: 334> [x(2)])
		allocateL8
		move(g(0) x(2))
		inlineDot(x(2) info x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testLiteral(y(2) unit 32439)
lbl(32418)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('failure' x(0))
		deAllocateL8
		tailCall(x(3) 3)
lbl(32439)	testLiteral(y(2) 'fail' 32481)
lbl(32443)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setConstant('fail')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32481)	testRecord(y(2) apply 2 32958)
lbl(32486)	getVarVar(x(0) x(1))
		move(g(0) x(2))
		inlineDot(x(2) format x(3) cache)
		putRecord('#' 2 y(2))
		setValue(x(0))
		setValue(x(1))
		putConstant('failure' y(3))
		move(x(3) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(0) y(6) x(1) y(7))
		testRecord(y(2) '#' 2 32585)
lbl(32524)	getVarVar(x(4) x(5))
		shallowGuard(32585)
		getLiteral('^' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(32544)	shallowThen
		getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Tell')
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyVariable(x(5))
		unifyLiteral(' ^ ')
		unifyVariable(x(7))
		unifyLiteral(' = _')
		getRecord(oz 1 x(5))
		unifyValue(x(4))
		getRecord(oz 1 x(7))
		unifyValue(x(6))
		branch(32938)
lbl(32585)	testRecord(y(2) '#' 2 32649)
lbl(32590)	getVarVar(x(0) x(1))
		shallowGuard(32649)
		getLiteral('=' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32610)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' = ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32649)	testRecord(y(2) '#' 2 32713)
lbl(32654)	getVarVar(x(0) x(1))
		shallowGuard(32713)
		getLiteral(fdPutList x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32674)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' :: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32713)	testRecord(y(2) '#' 2 32777)
lbl(32718)	getVarVar(x(0) x(1))
		shallowGuard(32777)
		getLiteral(fdPutGe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32738)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' >: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32777)	testRecord(y(2) '#' 2 32841)
lbl(32782)	getVarVar(x(0) x(1))
		shallowGuard(32841)
		getLiteral(fdPutLe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32802)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' <: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32841)	testRecord(y(2) '#' 2 32907)
lbl(32846)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(32907)
		getLiteral(fdPutNot x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32868)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' \\=: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32907)	getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(32938)	moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32958)	testRecord(y(2) eq 2 33026)
lbl(32963)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33026)	testRecord(y(2) tell 2 33114)
lbl(33031)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putRecord(oz 1 x(11))
		setValue(x(5))
		putRecord(hint [l m] x(10))
		setConstant('Store')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(9))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33114)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(1))
		setConstant('??? ')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
		endDefinition(32387)
lbl(33160)	definition(x(5) 33330 pid('RecordCFormatter' 2 pos('./sp/ErrorRegistry.oz' 645 6) nil 7) <Q: 335> [x(2)])
		allocateL9
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: records' y(3))
		testRecord(y(2) record 5 33307)
lbl(33195)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) width 33307)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(x(5) y(6))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(7) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(3))
		setConstant('Statement')
		setValue(y(7))
		putList(x(1))
		setValue(x(3))
		setValue(y(8))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL9
		tailCall(x(5) 5)
lbl(33307)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL9
		tailCall(x(3) 3)
		endDefinition(33160)
lbl(33330)	definition(x(6) 34066 pid('SystemFormatter' 2 pos('./sp/ErrorRegistry.oz' 670 6) nil 11) <Q: 336> [x(2)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('system error' y(3))
		testRecord(y(2) system 2 33416)
lbl(33365)	getVarVar(x(0) x(1))
		testLiteral(x(0) parameter 33416)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Illegal system parameter ')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33416)	testRecord(y(2) system 2 33466)
lbl(33421)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitInternal 33466)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Internal System Limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33466)	testRecord(y(2) system 2 33516)
lbl(33471)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitExternal 33516)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('External system limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33516)	testRecord(y(2) system 2 33566)
lbl(33521)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackInstalledTwice 33566)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure installed twice')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33566)	testRecord(y(2) system 2 33616)
lbl(33571)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackNotInstalled 33616)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure not installed')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33616)	testRecord(y(2) system 2 33666)
lbl(33621)	getVarVar(x(0) x(1))
		testLiteral(x(0) builtinUndefined 33666)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Requested')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Undefined builtin' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33666)	testRecord(y(2) system 4 33750)
lbl(33671)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) builtinArity 33750)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in Oz-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33750)	testRecord(y(2) system 4 33834)
lbl(33755)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) inconsistentArity 33834)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in emulator-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33834)	testRecord(y(2) system 1 33893)
lbl(33839)	getVariable(x(0))
		testLiteral(x(0) inconsistentFastcall 33893)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Inconsistency in optimized application')
		putRecord(hint [l] x(4))
		setConstant('Maybe due to previous toplevel failure')
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal inconsistency' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33893)	testRecord(y(2) system 1 33931)
lbl(33898)	getVariable(x(0))
		testLiteral(x(0) onceOnlyFunctor 33931)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Procedure definition with flag `once\' executed more than once' x(1))
		putConstant(nil x(2))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33931)	testRecord(y(2) system 2 33991)
lbl(33936)	getVarVar(x(0) x(1))
		testLiteral(x(0) fatal 33991)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(line 1 x(3))
		setValue(x(1))
		putRecord(line 1 x(6))
		setConstant('Please send bug report to oz@ps.uni-sb.de')
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Fatal exception' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33991)	testRecord(y(2) system 2 34043)
lbl(33996)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) reinstallFormatter 34043)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Exception name already in use')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Registration of error formatter failed' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34043)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(33330)
lbl(34066)	definition(x(7) 34283 pid('OSFormatter' 2 pos('./sp/ErrorRegistry.oz' 796 6) nil 11) <Q: 337> [x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) os 4 34260)
lbl(34098)	getVarVar(x(0) x(5))
		getVarVar(x(6) x(7))
		match(x(0) ht(34239 [onScalar(os 34107) onScalar(host 34173)]))
lbl(34107)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Operating system error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34173)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Network Error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34239)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(34260)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(34066)
lbl(34283)	definition(x(8) 34610 pid('DPFormatter' 2 pos('./sp/ErrorRegistry.oz' 834 6) nil 6) <Q: 338> [x(2)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: distributed programming' y(3))
		testRecord(y(2) dp 3 34417)
lbl(34318)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) generic 34417)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
lbl(34336)	definition(x(4) 34380 pid('' 2 pos('./sp/ErrorRegistry.oz' 843 17) nil 4) unit nil)
		shallowGuard(34367)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(34352)	shallowThen
		getRecord(hint [l m] x(1))
		unifyValVar(x(2) x(0))
		getRecord(oz 1 x(0))
		unifyValue(x(3))
		return
lbl(34367)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(843)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34336)
lbl(34380)	moveMoveXYXY(x(1) y(2) x(3) y(3))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(5) y(2) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34417)	testRecord(y(2) dp 1 34473)
lbl(34422)	getVariable(x(0))
		shallowGuard(34473)
		getRecord(connection 2 x(0))
		unifyLiteral(illegalTicket)
		unifyVariable(x(1))
lbl(34434)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal ticket for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34473)	testRecord(y(2) dp 1 34529)
lbl(34478)	getVariable(x(0))
		shallowGuard(34529)
		getRecord(connection 2 x(0))
		unifyLiteral(refusedTicket)
		unifyVariable(x(1))
lbl(34490)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34529)	testRecord(y(2) dp 1 34587)
lbl(34534)	getVariable(x(0))
		createVariable(y(2))
		shallowGuard(34587)
		getRecord(connection 2 x(0))
		unifyLiteral(ticketToDeadSite)
		unifyVariable(x(1))
lbl(34548)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused: refers to dead site' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34587)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(34283)
lbl(34610)	callBI('Dictionary.new' nil#[x(2)])
lbl(34613)	definition(x(9) 34672 pid('NewFormatter' 2 pos('./sp/ErrorRegistry.oz' 874 6) nil 3) <Q: 339> [g(7) g(8) x(2)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 341> 4)
		testBool(y(2) 34646 34659)
		putRecord(system 2 x(0))
		setConstant(reinstallFormatter)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(34646)	move(g(2) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(34659)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(876)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34613)
lbl(34672)	definition(x(10) 34690 pid('GetFormatter' 2 pos('./sp/ErrorRegistry.oz' 886 6) nil 4) <Q: 340> [g(9) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34672)
lbl(34690)	definition(x(11) 34708 pid('ExFormatter' 2 pos('./sp/ErrorRegistry.oz' 892 6) nil 4) <Q: 341> [g(10) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34690)
lbl(34708)	moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) y(8))
		putConstant(kernel x(0))
		genFastCall(<Q: 339> 4)
		move(y(0) x(1))
		putConstant(object x(0))
		genFastCall(<Q: 339> 4)
		move(y(1) x(1))
		putConstant('failure' x(0))
		genFastCall(<Q: 339> 4)
		move(y(2) x(1))
		putConstant(recordC x(0))
		genFastCall(<Q: 339> 4)
		move(y(3) x(1))
		putConstant(system x(0))
		genFastCall(<Q: 339> 4)
		move(y(5) x(1))
		putConstant(dp x(0))
		genFastCall(<Q: 339> 4)
		move(y(4) x(1))
		putConstant(os x(0))
		genFastCall(<Q: 339> 4)
		getRecord('export' [exists get put] g(11))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(6))
		deAllocateL9
		return
		endDefinition(28313)
lbl(34805)	tailCall(x(3) 0)
		endDefinition(28247)
lbl(34810)	putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(dispatch)
		setValue(x(9))
		putList(x(7))
		setConstant(format)
		setValue(x(8))
		putList(x(6))
		setConstant(formatHint)
		setValue(x(7))
		putList(x(5))
		setConstant(formatTypes)
		setValue(x(6))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord('import' ['Error'] x(0))
		setValue(x(1))
		putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/2' x(6))
		putRecord('export' [exists get put] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(191) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		createVariable(x(4))
lbl(34891)	definition(x(0) 34977 pid('VectorToType' 2 pos('./cp/FD.oz' 33 3) nil 3) <P: 342> [y(1) x(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 34918 34964)
		getLiteral(list y(1))
		deAllocateL3
		return
lbl(34918)	move(y(0) x(0))
		testBI('Tuple.is' [x(0)]#[x(1)] 34930)
		getLiteral(tuple y(1))
		deAllocateL3
		return
lbl(34930)	testBI('Record.is' [x(0)]#[x(1)] 34939)
		getLiteral(record y(1))
		deAllocateL3
		return
lbl(34939)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setValue(g(1))
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('Vector as input argument expected.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(34964)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34891)
lbl(34977)	unify(x(0) x(4))
lbl(34980)	definition(x(4) 35018 pid('VectorToList' 2 pos('./cp/FD.oz' 44 3) nil 2) <P: 343> [y(165)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) list 35007)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(35007)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
		endDefinition(34980)
lbl(35018)	definition(x(5) 35049 pid('VectorsToLists' 2 pos('./cp/FD.oz' 50 3) nil 3) <P: 344> [x(4)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(35018)
lbl(35049)	definition(x(4) 35098 pid('RecordToTuple' 4 pos('./cp/FD.oz' 55 6) nil 6) <P: 345> nil)
		match(x(0) ht(35083 [onScalar(nil 35058) onRecord('|' 2 35059)]))
lbl(35058)	return
lbl(35059)	getVarVar(x(0) x(4))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(3) x(1)]#[x(0)])
		unify(x(0) x(5))
		inlinePlus1(x(1) x(5))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 345> 9)
lbl(35083)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(58)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35049)
lbl(35098)	definition(x(4) 35184 pid('VectorToTuple' 2 pos('./cp/FD.oz' 61 6) nil 5) <P: 346> [y(145)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(35169 [onScalar(list 35119) onScalar(tuple 35131) onScalar(record 35136)]))
lbl(35119)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL3
		genFastCall(<P: 77> 7)
lbl(35131)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(35136)	move(y(0) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('Tuple.make' [x(4) x(1)]#[x(2)])
		unify(x(2) y(1))
		callBI('Record.arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(1 x(1))
		deAllocateL3
		genFastCall(<P: 345> 9)
lbl(35169)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(67)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(35098)
lbl(35184)	definition(x(4) 35225 pid('CloneList' 2 pos('./cp/FD.oz' 71 3) nil 2) <P: 347> nil)
		match(x(0) ht(35210 [onScalar(nil 35193) onRecord('|' 2 35197)]))
lbl(35193)	getLiteral(nil x(1))
		return
lbl(35197)	getVoid(1)
		getVariable(x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		genFastCall(<P: 347> 5)
lbl(35210)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(74)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35184)
lbl(35225)	definition(x(5) 35255 pid('ExpandPair' 4 pos('./cp/FD.oz' 78 6) nil 5) <P: 348> nil)
		testLE(x(0) x(1) x(4) 35249)
		getListValVar(x(3) x(0) x(3))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 348> 9)
lbl(35249)	unify(x(3) x(2))
		return
		endDefinition(35225)
lbl(35255)	definition(x(5) 35331 pid('Expand' 2 pos('./cp/FD.oz' 82 6) nil 4) <P: 349> nil)
		match(x(0) ht(35316 [onScalar(nil 35264) onRecord('|' 2 35268)]))
lbl(35264)	getLiteral(nil x(1))
		return
lbl(35268)	getVarVar(x(0) x(2))
		testRecord(x(0) '#' 2 35306)
lbl(35276)	allocateL4
		getVarVar(y(0) y(1))
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 349> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 348> 9)
lbl(35306)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 349> 5)
lbl(35316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(88)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35255)
lbl(35331)	putRecord(fwdRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(5))
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord(negRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(6))
		setConstant('>=:')
		setConstant('\\=:')
		setConstant('>:')
		setConstant('=<:')
		setConstant('<:')
		setConstant('=:')
lbl(35363)	definition(x(7) 35375 pid('WaitStable' 0 pos('./cp/FD.oz' 110 3) nil 0) <P: 350> nil)
		createChoice
lbl(35370)	lastClause
		emptyClause
lbl(35372)	return
		endDefinition(35363)
lbl(35375)	putList(x(8))
		setConstant('>=:')
		setConstant(nil)
		putList(x(3))
		setConstant('>:')
		setValue(x(8))
		putList(x(2))
		setConstant('=<:')
		setValue(x(3))
		putList(x(1))
		setConstant('<:')
		setValue(x(2))
		putList(x(0))
		setConstant('\\=:')
		setValue(x(1))
		putList(x(7))
		setConstant('=:')
		setValue(x(0))
		putList(x(1))
		setConstant(nil)
		setConstant(nil)
		putList(x(0))
		setConstant('FD.atLeast')
		setValue(x(1))
		putList(x(3))
		setConstant(nil)
		setConstant(nil)
		putList(x(2))
		setConstant('FD.atMost')
		setValue(x(3))
		putList(x(10))
		setConstant(nil)
		setConstant(nil)
		putList(x(9))
		setConstant('FD.reified.card')
		setValue(x(10))
		putList(x(12))
		setConstant(nil)
		setConstant(nil)
		putList(x(11))
		setConstant('FD.conj')
		setValue(x(12))
		putList(x(14))
		setConstant(nil)
		setConstant(nil)
		putList(x(13))
		setConstant('FD.disj')
		setValue(x(14))
		putList(x(16))
		setConstant(nil)
		setConstant(nil)
		putList(x(15))
		setConstant('FD.disjoint')
		setValue(x(16))
		putList(x(18))
		setConstant(nil)
		setConstant(nil)
		putList(x(17))
		setConstant('FD.disjointC')
		setValue(x(18))
		putList(x(20))
		setConstant(nil)
		setConstant(nil)
		putList(x(19))
		setConstant('FD.distance')
		setValue(x(20))
		putList(x(22))
		setConstant(nil)
		setConstant(nil)
		putList(x(21))
		setConstant('FD.distinct')
		setValue(x(22))
		putList(x(24))
		setConstant(nil)
		setConstant(nil)
		putList(x(23))
		setConstant('FD.distinctOffset')
		setValue(x(24))
		putList(x(26))
		setConstant(nil)
		setConstant(nil)
		putList(x(25))
		setConstant('FD.divD')
		setValue(x(26))
		putList(x(28))
		setConstant(nil)
		setConstant(nil)
		putList(x(27))
		setConstant('FD.divI')
		setValue(x(28))
		putList(x(30))
		setConstant(nil)
		setConstant(nil)
		putList(x(29))
		setConstant('FD.element')
		setValue(x(30))
		putList(x(32))
		setConstant(nil)
		setConstant(nil)
		putList(x(31))
		setConstant('FD.equi')
		setValue(x(32))
		putList(x(34))
		setConstant(nil)
		setConstant(nil)
		putList(x(33))
		setConstant('FD.exactly')
		setValue(x(34))
		putList(x(36))
		setConstant(nil)
		setConstant(nil)
		putList(x(35))
		setConstant('FD.exor')
		setValue(x(36))
		putList(x(39))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(38))
		setValue(x(39))
		setConstant(nil)
		putList(x(37))
		setConstant(fdConstrDisj)
		setValue(x(38))
		putList(x(42))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(41))
		setValue(x(42))
		setConstant(nil)
		putList(x(40))
		setConstant(fdConstrDisjSetUp)
		setValue(x(41))
		putList(x(44))
		setConstant(nil)
		setConstant(nil)
		putList(x(43))
		setConstant('FD.reflect.size')
		setValue(x(44))
		putList(x(47))
		setConstant('FD.reflect.domList')
		setConstant(nil)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant('FD.reflect.dom')
		setValue(x(46))
		putList(x(49))
		setConstant(nil)
		setConstant(nil)
		putList(x(48))
		setConstant('FD.reflect.max')
		setValue(x(49))
		putList(x(51))
		setConstant(nil)
		setConstant(nil)
		putList(x(50))
		setConstant('FD.reflect.mid')
		setValue(x(51))
		putList(x(53))
		setConstant(nil)
		setConstant(nil)
		putList(x(52))
		setConstant('FD.reflect.min')
		setValue(x(53))
		putList(x(55))
		setConstant(nil)
		setConstant(nil)
		putList(x(54))
		setConstant('FD.reflect.nextLarger')
		setValue(x(55))
		putList(x(57))
		setConstant(nil)
		setConstant(nil)
		putList(x(56))
		setConstant('FD.reflect.nextSmaller')
		setValue(x(57))
		putList(x(59))
		setConstant(nil)
		setConstant(nil)
		putList(x(58))
		setConstant('FD.watch.max')
		setValue(x(59))
		putList(x(61))
		setConstant(nil)
		setConstant(nil)
		putList(x(60))
		setConstant('FD.watch.min')
		setValue(x(61))
		putList(x(63))
		setConstant(nil)
		setConstant(nil)
		putList(x(62))
		setConstant('FD.watch.size')
		setValue(x(63))
		putList(x(65))
		setConstant(nil)
		setConstant(nil)
		putList(x(64))
		setConstant('FD.impl')
		setValue(x(65))
		putList(x(68))
		setConstant('FD.reified.dom')
		setConstant(nil)
		putList(x(67))
		setValue(x(68))
		setConstant(nil)
		putList(x(66))
		setConstant('FD.refied.int')
		setValue(x(67))
		putList(x(70))
		setConstant(nil)
		setConstant(nil)
		putList(x(69))
		setConstant('FD.inter')
		setValue(x(70))
		putList(x(84))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(83))
		setConstant('FD.disjointC')
		setValue(x(84))
		putList(x(82))
		setConstant('FD.disjoint')
		setValue(x(83))
		putList(x(81))
		setConstant('FD.modI')
		setValue(x(82))
		putList(x(80))
		setConstant('FD.modD')
		setValue(x(81))
		putList(x(79))
		setConstant('FD.max')
		setValue(x(80))
		putList(x(78))
		setConstant('FD.min')
		setValue(x(79))
		putList(x(77))
		setConstant('>:')
		setValue(x(78))
		putList(x(76))
		setConstant('>=:')
		setValue(x(77))
		putList(x(75))
		setConstant('<:')
		setValue(x(76))
		putList(x(74))
		setConstant('=<:')
		setValue(x(75))
		putList(x(73))
		setConstant('FD.sumC')
		setValue(x(74))
		putList(x(72))
		setValue(x(73))
		setConstant(nil)
		putList(x(71))
		setConstant('FD.lesseq')
		setValue(x(72))
		putList(x(86))
		setConstant(nil)
		setConstant(nil)
		putList(x(85))
		setConstant('FD.max')
		setValue(x(86))
		putList(x(88))
		setConstant(nil)
		setConstant(nil)
		putList(x(87))
		setConstant('FD.min')
		setValue(x(88))
		putList(x(90))
		setConstant(nil)
		setConstant(nil)
		putList(x(89))
		setConstant('FD.minus')
		setValue(x(90))
		putList(x(92))
		setConstant(nil)
		setConstant(nil)
		putList(x(91))
		setConstant('FD.modD')
		setValue(x(92))
		putList(x(94))
		setConstant(nil)
		setConstant(nil)
		putList(x(93))
		setConstant('FD.modI')
		setValue(x(94))
		putList(x(99))
		setConstant('FD.equi')
		setConstant(nil)
		putList(x(98))
		setConstant('FD.impl')
		setValue(x(99))
		putList(x(97))
		setConstant('FD.exor')
		setValue(x(98))
		putList(x(96))
		setValue(x(97))
		setConstant(nil)
		putList(x(95))
		setConstant('FD.nega')
		setValue(x(96))
		putList(x(103))
		setConstant('\\=:')
		setConstant(nil)
		putList(x(102))
		setConstant('FD.sumC')
		setValue(x(103))
		putList(x(101))
		setValue(x(102))
		setConstant(nil)
		putList(x(100))
		setConstant(notEqOff)
		setValue(x(101))
		putList(x(106))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(105))
		setValue(x(106))
		setConstant(nil)
		putList(x(104))
		setConstant('FD.plus')
		setValue(x(105))
		putList(x(110))
		setConstant('+')
		setConstant(nil)
		putList(x(109))
		setConstant('FD.distance')
		setValue(x(110))
		putList(x(108))
		setValue(x(109))
		setConstant(nil)
		putList(x(107))
		setConstant('FD.plus')
		setValue(x(108))
		putList(x(112))
		setConstant(nil)
		setConstant(nil)
		putList(x(111))
		setConstant('FD.schedule.serialized')
		setValue(x(112))
		putList(x(114))
		setConstant(nil)
		setConstant(nil)
		putList(x(113))
		setConstant('FD.schedule.disjoint')
		setValue(x(114))
		putList(x(116))
		setConstant(nil)
		setConstant(nil)
		putList(x(115))
		setConstant('FD.schedule.serializedDisj')
		setValue(x(116))
		putList(x(119))
		setConstant('FD.times')
		setConstant(nil)
		putList(x(118))
		setValue(x(119))
		setConstant(nil)
		putList(x(117))
		setConstant(square)
		setValue(x(118))
		putList(x(123))
		setConstant('FD.inter')
		setConstant(nil)
		putList(x(122))
		setConstant('FD.union')
		setValue(x(123))
		putList(x(121))
		setValue(x(122))
		setConstant(nil)
		putList(x(120))
		setConstant(subset)
		setValue(x(121))
		putList(x(125))
		setConstant(nil)
		setConstant(nil)
		putList(x(124))
		setConstant('FD.sumAC')
		setValue(x(125))
		putList(x(129))
		setConstant('FD.reified.sumC')
		setValue(x(7))
		putList(x(128))
		setConstant('FD.sumCN')
		setValue(x(129))
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant('FD.sumC')
		setValue(x(127))
		putList(x(132))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(131))
		setValue(x(132))
		setConstant(nil)
		putList(x(130))
		setConstant(sumCCD)
		setValue(x(131))
		putList(x(135))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(134))
		setValue(x(135))
		setConstant(nil)
		putList(x(133))
		setConstant(sumCD)
		setValue(x(134))
		putList(x(137))
		setValue(x(7))
		setConstant(nil)
		putList(x(136))
		setConstant('FD.sumCN')
		setValue(x(137))
		putList(x(140))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(139))
		setValue(x(140))
		setConstant(nil)
		putList(x(138))
		setConstant(sumCNCD)
		setValue(x(139))
		putList(x(142))
		setValue(x(7))
		setConstant(nil)
		putList(x(141))
		setConstant('FD.reified.sumC')
		setValue(x(142))
		putList(x(144))
		setConstant(nil)
		setConstant(nil)
		putList(x(143))
		setConstant('FD.times')
		setValue(x(144))
		putList(x(148))
		setConstant('*')
		setConstant(nil)
		putList(x(147))
		setConstant('FD.distance')
		setValue(x(148))
		putList(x(146))
		setValue(x(147))
		setConstant(nil)
		putList(x(145))
		setConstant('FD.plus')
		setValue(x(146))
		putList(x(152))
		setConstant('FD.minus')
		setConstant(nil)
		putList(x(151))
		setConstant('FD.plus')
		setValue(x(152))
		putList(x(150))
		setValue(x(151))
		setConstant(nil)
		putList(x(149))
		setConstant(twice)
		setValue(x(150))
		putList(x(154))
		setConstant(nil)
		setConstant(nil)
		putList(x(153))
		setConstant('FD.union')
		setValue(x(154))
		putRecord(bi [atLeast atMost card conj disj disjoint disjointC distance distinct distinctOffset divD divI element equi exactly exor fdConstrDisj fdConstrDisjSetUp fdGetCard fdGetDom fdGetMax fdGetMid fdGetMin fdGetNextLarger fdGetNextSmaller fdWatchMax fdWatchMin fdWatchSize impl intR inter lessEqOff maximum minimum minus modD modI nega notEqOff plus plus_rel sched_cpIterate sched_disjoint_card sched_disjunctive square subset sumAC sumC sumCCD sumCD sumCN sumCNCD sumCR times times_rel twice union] x(8))
		setValue(x(0))
		setValue(x(2))
		setValue(x(9))
		setValue(x(11))
		setValue(x(13))
		setValue(x(15))
		setValue(x(17))
		setValue(x(19))
		setValue(x(21))
		setValue(x(23))
		setValue(x(25))
		setValue(x(27))
		setValue(x(29))
		setValue(x(31))
		setValue(x(33))
		setValue(x(35))
		setValue(x(37))
		setValue(x(40))
		setValue(x(43))
		setValue(x(45))
		setValue(x(48))
		setValue(x(50))
		setValue(x(52))
		setValue(x(54))
		setValue(x(56))
		setValue(x(58))
		setValue(x(60))
		setValue(x(62))
		setValue(x(64))
		setValue(x(66))
		setValue(x(69))
		setValue(x(71))
		setValue(x(85))
		setValue(x(87))
		setValue(x(89))
		setValue(x(91))
		setValue(x(93))
		setValue(x(95))
		setValue(x(100))
		setValue(x(104))
		setValue(x(107))
		setValue(x(111))
		setValue(x(113))
		setValue(x(115))
		setValue(x(117))
		setValue(x(120))
		setValue(x(124))
		setValue(x(126))
		setValue(x(130))
		setValue(x(133))
		setValue(x(136))
		setValue(x(138))
		setValue(x(141))
		setValue(x(143))
		setValue(x(145))
		setValue(x(149))
		setValue(x(153))
lbl(36429)	definition(x(7) 36473 pid('BIPrintName' 2 pos('./cp/FD.oz' 190 6) nil 4) <P: 351> [x(8)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('Atom.is' [x(0)]#[x(2)] 36466)
lbl(36445)	move(g(0) x(2))
		testBI('Value.hasFeature' [x(2) x(0)]#[x(3)] 36466)
lbl(36452)	callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 1 x(0) cache)
		unify(x(0) y(1))
		deAllocateL2
		return
lbl(36466)	unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(36429)
lbl(36473)	definition(x(7) 36503 pid('BIOrigin' 2 pos('./cp/FD.oz' 197 6) nil 4) <P: 352> [x(8)])
		move(g(0) x(2))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 2 x(0) cache)
		inlineDot(x(0) 1 x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(36473)
lbl(36503)	definition(x(7) 36611 pid('FormatOrigin' 2 pos('./cp/FD.oz' 203 6) nil 7) <P: 353> [x(8)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 351> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 36542)
lbl(36529)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 352> 4)
		testLiteral(y(2) nil 36547)
lbl(36542)	getLiteral(nil y(0))
		deAllocateL3
		return
lbl(36547)	getList(y(0))
		unifyLiteral(unit)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(hint [l m] x(1))
		unifyLiteral('Possible origin of procedure')
		unifyVariable(x(3))
		getRecord(oz 1 x(3))
		unifyVariable(x(4))
		getList(x(2))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(line 1 x(5))
		unifyVariable(x(6))
		getRecord(oz 1 x(6))
		unifyVariable(y(0))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 351> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 352> 5)
		endDefinition(36503)
lbl(36611)	definition(x(2) 42111 pid('' 2 pos('./cp/FD.oz' 218 3) nil 4) <P: 354> [y(91) x(5) x(4) y(108) y(1) x(6) y(163) y(92) y(157)])
		putList(x(2))
		setPredicateRef(<Q: 355>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 356>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 357>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 358>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 359>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 360>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 361>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 362>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 363>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 364>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 365>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 366>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 367>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 368>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 369>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 370>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 371>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 372>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 373>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 374>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 375>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 376>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 377>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 378>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 379>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 380>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 381>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ForceClone>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 391>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 392>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 393>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 394>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 395>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 403>)
		setValue(x(2))
lbl(36917)	definitionCopy(x(3) 42106 pid('/body' 0 pos('./cp/FD.oz' 218 3) [once] 54) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(53)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(1) cache)
		inlineDot(x(0) 'FDP' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Error' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(2) plus x(6) cache)
		inlineDot(x(2) minus x(7) cache)
		inlineDot(x(2) times x(8) cache)
		inlineDot(x(2) power x(9) cache)
		inlineDot(x(2) divD x(10) cache)
		inlineDot(x(2) divI x(11) cache)
		inlineDot(x(2) modD x(12) cache)
		inlineDot(x(2) modI x(13) cache)
		inlineDot(x(2) conj x(14) cache)
		inlineDot(x(2) disj x(15) cache)
		inlineDot(x(2) exor x(16) cache)
		inlineDot(x(2) impl x(17) cache)
		inlineDot(x(2) nega x(18) cache)
		inlineDot(x(2) equi x(19) cache)
		inlineDot(x(2) intR x(20) cache)
		inlineDot(x(2) card x(21) cache)
		inlineDot(x(2) exactly x(22) cache)
		inlineDot(x(2) atLeast x(23) cache)
		inlineDot(x(2) atMost x(24) cache)
		inlineDot(x(2) element x(25) cache)
		inlineDot(x(2) lessEqOff x(26) cache)
		inlineDot(x(2) minimum x(27) cache)
		inlineDot(x(2) maximum x(28) cache)
		inlineDot(x(2) distinct x(29) cache)
		inlineDot(x(2) distinct2 x(30) cache)
		inlineDot(x(2) distinctD x(31) cache)
		inlineDot(x(2) distinctOffset x(32) cache)
		inlineDot(x(2) disjoint x(33) cache)
		inlineDot(x(2) disjointC x(34) cache)
		inlineDot(x(2) distance x(35) cache)
		inlineDot(x(2) sum x(36) cache)
		inlineDot(x(2) sumC x(37) cache)
		inlineDot(x(2) dsum x(38) cache)
		inlineDot(x(2) dsumC x(39) cache)
		inlineDot(x(2) sumAC x(40) cache)
		inlineDot(x(2) sumCN x(41) cache)
		inlineDot(x(2) sumR x(42) cache)
		inlineDot(x(2) sumCR x(43) cache)
		inlineDot(x(2) sumCNR x(44) cache)
		inlineDot(x(2) sumCD x(45) cache)
		inlineDot(x(2) sumCCD x(46) cache)
		inlineDot(x(2) sumCNCD x(47) cache)
		inlineDot(x(2) selVarMin x(48) cache)
		inlineDot(x(2) selVarMax x(49) cache)
		inlineDot(x(2) selVarSize x(50) cache)
		inlineDot(x(2) selVarNaive x(51) cache)
		inlineDot(x(2) selVarNbSusps x(2) cache)
		inlineDot(x(1) tellConstraint x(52) cache)
lbl(37246)	definition(x(53) 37290 pid('ListDom' 2 pos('./cp/FD.oz' 373 2) nil 2) <Q: 355> [x(52)])
		match(x(0) ht(37275 [onScalar(nil 37255) onRecord('|' 2 37256)]))
lbl(37255)	return
lbl(37256)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 355> 5)
lbl(37275)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37246)
lbl(37290)	definition(x(53) 37346 pid('TupleDom' 3 pos('./cp/FD.oz' 379 2) nil 5) <Q: 356> [x(52)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37343)
		allocateL3
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37343)	return
		endDefinition(37290)
lbl(37346)	definition(x(53) 37404 pid('RecordDom' 3 pos('./cp/FD.oz' 385 2) nil 4) <Q: 357> [x(52)])
		match(x(0) ht(37389 [onScalar(nil 37355) onRecord('|' 2 37356)]))
lbl(37355)	return
lbl(37356)	allocateL3
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37389)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(388)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37346)
lbl(37404)	inlineDot(x(1) getLimits x(53) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		moveMoveXYXY(x(8) y(6) x(9) y(7))
		moveMoveXYXY(x(10) y(8) x(11) y(9))
		moveMoveXYXY(x(12) y(10) x(13) y(11))
		moveMoveXYXY(x(14) y(12) x(15) y(13))
		moveMoveXYXY(x(16) y(14) x(17) y(15))
		moveMoveXYXY(x(18) y(16) x(19) y(17))
		moveMoveXYXY(x(20) y(18) x(21) y(19))
		moveMoveXYXY(x(22) y(20) x(23) y(21))
		moveMoveXYXY(x(24) y(22) x(25) y(23))
		moveMoveXYXY(x(26) y(24) x(27) y(25))
		moveMoveXYXY(x(28) y(26) x(29) y(27))
		moveMoveXYXY(x(30) y(28) x(31) y(29))
		moveMoveXYXY(x(32) y(30) x(33) y(31))
		moveMoveXYXY(x(34) y(32) x(35) y(33))
		moveMoveXYXY(x(36) y(34) x(37) y(35))
		moveMoveXYXY(x(38) y(36) x(39) y(37))
		moveMoveXYXY(x(40) y(38) x(41) y(39))
		moveMoveXYXY(x(42) y(40) x(43) y(41))
		moveMoveXYXY(x(44) y(42) x(45) y(43))
		moveMoveXYXY(x(46) y(44) x(47) y(45))
		moveMoveXYXY(x(48) y(46) x(49) y(47))
		moveMoveXYXY(x(50) y(48) x(51) y(49))
		moveMoveXYXY(x(2) y(50) x(52) y(51))
		createVariable(x(0))
		createVariableMove(y(52) x(1))
		call(x(53) 2)
lbl(37548)	definition(x(0) 37568 pid('FdInt' 2 pos('./cp/FD.oz' 393 2) nil 2) <Q: 358> [y(51)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37548)
lbl(37568)	putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
lbl(37582)	definition(x(1) 37596 pid('FdBool' 1 pos('./cp/FD.oz' 400 5) nil 2) <Q: 359> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37582)
lbl(37596)	putRecord('#' 2 x(3))
		setConstant(0)
		setValue(y(52))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
lbl(37610)	definition(x(3) 37624 pid('FdDecl' 1 pos('./cp/FD.oz' 408 5) nil 2) <Q: 360> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37610)
lbl(37624)	definition(x(2) 37708 pid('FdDom' 2 pos('./cp/FD.oz' 413 2) nil 4) <Q: 361> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(37693 [onScalar(list 37648) onScalar(tuple 37657) onScalar(record 37675)]))
lbl(37648)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 355> 5)
lbl(37657)	move(y(1) x(0))
		callBI('Record.width' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37675)	move(y(1) x(0))
		callBI('Record.arity' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37693)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(418)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(37624)
lbl(37708)	definition(x(4) 37764 pid('FdList' 3 pos('./cp/FD.oz' 421 2) nil 5) <Q: 362> [y(51)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37758)
		allocateL3
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) x(0))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 362> 7)
lbl(37758)	getLiteral(nil x(2))
		return
		endDefinition(37708)
lbl(37764)	definition(x(5) 37787 pid('FdTuple' 4 pos('./cp/FD.oz' 427 2) nil 5) <Q: 363> nil)
		callBI('Tuple.make' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 356> 7)
		endDefinition(37764)
lbl(37787)	definition(x(6) 37821 pid('FdRecord' 4 pos('./cp/FD.oz' 431 2) nil 4) <Q: 364> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
		endDefinition(37787)
lbl(37821)	move(y(0) x(7))
		inlineDot(x(7) is x(8) cache)
		inlineDot(x(7) getDom x(9) cache)
		putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] y(51))
		setValue(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		inlineDot(x(7) getMin x(18) cache)
		unify(x(18) x(13))
		inlineDot(x(7) getMid x(18) cache)
		unify(x(18) x(12))
		inlineDot(x(7) getMax x(18) cache)
		unify(x(18) x(11))
		inlineDot(x(7) getNextLarger x(18) cache)
		unify(x(18) x(15))
		inlineDot(x(7) getNextSmaller x(15) cache)
		unify(x(15) x(16))
		inlineDot(x(7) getCard x(15) cache)
		unify(x(15) x(17))
		move(y(3) x(15))
		inlineDot(x(15) nbSusps x(16) cache)
		unify(x(16) x(14))
lbl(37924)	definition(x(15) 37951 pid('FdReflect.domList' 2 pos('./cp/FD.oz' 453 23) nil 2) <Q: 365> [x(9)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 349> 5)
		endDefinition(37924)
lbl(37951)	unify(x(15) x(10))
		inlineDot(x(7) tellConstraintCD x(9) cache)
lbl(37960)	definition(x(10) 38009 pid('ListDomCD' 3 pos('./cp/FD.oz' 468 2) nil 3) <Q: 366> [x(9)])
		match(x(0) ht(37994 [onScalar(nil 37969) onRecord('|' 2 37970)]))
lbl(37969)	return
lbl(37970)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 366> 7)
lbl(37994)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(471)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37960)
lbl(38009)	definition(x(10) 38072 pid('TupleDomCD' 4 pos('./cp/FD.oz' 474 2) nil 6) <Q: 367> [x(9)])
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 38069)
		allocateL4
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38069)	return
		endDefinition(38009)
lbl(38072)	definition(x(10) 38137 pid('RecordDomCD' 4 pos('./cp/FD.oz' 480 2) nil 5) <Q: 368> [x(9)])
		match(x(0) ht(38122 [onScalar(nil 38081) onRecord('|' 2 38082)]))
lbl(38081)	return
lbl(38082)	allocateL4
		getVarVar(x(0) y(0))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38122)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(483)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(38072)
lbl(38137)	definition(x(10) 38157 pid('FdIntCD' 3 pos('./cp/FD.oz' 486 2) nil 3) <Q: 369> [x(9)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38137)
lbl(38157)	definition(x(9) 38252 pid('FdDomCD' 3 pos('./cp/FD.oz' 490 2) nil 5) <Q: 370> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 342> 4)
		match(y(3) ht(38237 [onScalar(list 38183) onScalar(tuple 38195) onScalar(record 38216)]))
lbl(38183)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 366> 7)
lbl(38195)	move(y(1) x(0))
		callBI('Record.width' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38216)	move(y(1) x(0))
		callBI('Record.arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38237)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(495)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(38157)
lbl(38252)	putRecord(cd ['body' dom header int sum sumC sumCN] y(3))
		setVariable(x(15))
		setValue(x(9))
		setVariable(x(16))
		setValue(x(10))
		setValue(y(43))
		setValue(y(44))
		setValue(y(45))
		inlineDot(x(7) constrDisjSetUp x(9) cache)
		unify(x(9) x(16))
		inlineDot(x(7) constrDisj x(9) cache)
		unify(x(9) x(15))
lbl(38288)	definition(x(9) 38583 pid('GenSumACN' 4 pos('./cp/FD.oz' 515 6) nil 5) <Q: 371> [g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		thread(38579)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		move(y(2) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 38378 38568)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(2) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(2) false '' true 4) 0)
lbl(38378)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(8))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(11))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(4))
		setVariable(y(11))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(2))
		call(g(5) 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(8) x(3))
		move(y(4) x(4))
		call(g(6) 5)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(11) x(4))
		call(g(6) 5)
		putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(11))
		putRecord('#' 2 x(2))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(1))
		deAllocateL
		tailCall(g(7) 3)
lbl(38568)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(38579)	deAllocateL
		return
		endDefinition(38288)
lbl(38583)	definition(x(10) 38623 pid('FdIntR' 3 pos('./cp/FD.oz' 545 2) nil 3) <Q: 372> [y(18)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 359> 2)
		move(y(1) x(0))
		genFastCall(<Q: 360> 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38583)
lbl(38623)	definition(x(18) 38662 pid('GenSumR' 4 pos('./cp/FD.oz' 549 2) nil 4) <Q: 373> [y(40)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genCall(gci(g(0) false '' true 4) 0)
		endDefinition(38623)
lbl(38662)	definition(x(19) 38706 pid('GenSumCR' 5 pos('./cp/FD.oz' 553 2) nil 5) <Q: 374> [y(41)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38662)
lbl(38706)	definition(x(20) 38750 pid('GenSumCNR' 5 pos('./cp/FD.oz' 557 2) nil 5) <Q: 375> [y(42)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38706)
lbl(38750)	definition(x(21) 38813 pid('MapIntR' 4 pos('./cp/FD.oz' 562 5) nil 6) <Q: 376> nil)
		testNumber(x(0) 0 38761)
		return
lbl(38761)	allocateL4
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<Q: 372> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 376> 9)
		endDefinition(38750)
lbl(38813)	definition(x(21) 38886 pid('FdDomR' 3 pos('./cp/FD.oz' 568 5) nil 5) <Q: 377> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		thread(38882)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		move(y(3) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('Tuple.make' [x(4) x(1)]#[x(2)])
		moveMoveXYXY(x(1) y(1) x(2) y(4))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(3))
		genFastCall(<Q: 376> 8)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		putConstant('=:' x(1))
		deAllocateL5
		genFastCall(<Q: 373> 9)
lbl(38882)	deAllocateL5
		return
		endDefinition(38813)
lbl(38886)	definition(x(22) 39096 pid('Card' 4 pos('./cp/FD.oz' 580 2) nil 5) <Q: 378> [x(8) y(52) y(19) g(5)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		thread(39092)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38924)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38937)	move(y(1) x(0))
		testBI('Literal.is' [x(0)]#[x(1)] 38982)
		createOr
lbl(38945)	nextClause(38957)
		clause
		getNumber(1 y(3))
		getNumber(0 y(0))
		waitTop
lbl(38955)	deAllocateL6
		return
lbl(38957)	lastClause
		clause
		thread(38979)
		getNumber(0 y(3))
		putRecord('#' 2 x(0))
		setConstant(1)
		setValue(g(1))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 358> 5)
lbl(38979)	waitTop
lbl(38980)	deAllocateL6
		return
lbl(38982)	createVariableMove(y(4) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(2) false '' true 4) 0)
lbl(39002)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createVariable(y(5))
		testBool(y(4) 39022 39027)
		getNumber(3 y(5))
		branch(39038)
lbl(39022)	getNumber(1 y(5))
		branch(39038)
lbl(39027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39038)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('FD.reified.card')
		setValue(x(1))
		setConstant(fd)
		setValue(y(5))
		setConstant('Cardinality limits must be finite domain.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(583)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39092)	deAllocateL6
		return
		endDefinition(38886)
lbl(39096)	definition(x(23) 39487 pid('GenSumACR' 5 pos('./cp/FD.oz' 603 2) nil 5) <Q: 379> [g(6) g(7) g(1) g(2) y(35) g(8) x(16) y(44) x(15)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39483)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 161> 6)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39267 39472)
		createOr
lbl(39180)	nextClause(39218)
		clause
		thread(39215)
		getNumber(1 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39215)	waitTop
lbl(39216)	deAllocateL
		return
lbl(39218)	nextClause(39243)
		clause
		thread(39240)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39240)	waitTop
lbl(39241)	deAllocateL
		return
lbl(39243)	lastClause
		clause
		thread(39264)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39264)	waitTop
lbl(39265)	deAllocateL
		return
lbl(39267)	createOr
lbl(39268)	nextClause(39435)
		clause
		thread(39432)
		move(y(7) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		putConstant('#' x(3))
		callBI('Tuple.make' [x(3) x(1)]#[x(2)])
		putConstant('#' x(3))
		callBI('Tuple.make' [x(3) x(1)]#[x(4)])
		putRecord(v 1 x(3))
		setVariable(y(1))
		moveMoveXYXY(x(2) y(8) x(4) y(9))
		move(x(3) x(0))
		move(y(8) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setVariable(y(11))
		move(y(9) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setValue(y(3))
		move(y(7) x(1))
		createVariableMove(y(13) x(2))
		genFastCall(<P: 14> 6)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(2))
		call(g(6) 4)
		moveMoveYXYX(y(6) x(0) y(8) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(11) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39432)	waitTop
lbl(39433)	deAllocateL
		return
lbl(39435)	lastClause
		clause
		thread(39469)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39469)	waitTop
lbl(39470)	deAllocateL
		return
lbl(39472)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(611)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39483)	deAllocateL
		return
		endDefinition(39096)
lbl(39487)	definition(x(24) 39930 pid('GenSumACNR' 5 pos('./cp/FD.oz' 642 2) nil 5) <Q: 380> [g(6) g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(17)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39926)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(2) x(0))
		move(y(2) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39658 39915)
		createOr
lbl(39571)	nextClause(39609)
		clause
		thread(39606)
		getNumber(1 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39606)	waitTop
lbl(39607)	deAllocateL
		return
lbl(39609)	nextClause(39634)
		clause
		thread(39631)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39631)	waitTop
lbl(39632)	deAllocateL
		return
lbl(39634)	lastClause
		clause
		thread(39655)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39655)	waitTop
lbl(39656)	deAllocateL
		return
lbl(39658)	createOr
lbl(39659)	nextClause(39878)
		clause
		thread(39875)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(7) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(8) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(12))
		setValue(y(11))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(13))
		createVariableMove(y(13) x(1))
		genFastCall(<P: 346> 4)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(2))
		call(g(6) 4)
		move(y(7) x(0))
		createVariableMove(y(16) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(1) x(0) y(16) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(12) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39875)	waitTop
lbl(39876)	deAllocateL
		return
lbl(39878)	lastClause
		clause
		thread(39912)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39912)	waitTop
lbl(39913)	deAllocateL
		return
lbl(39915)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(650)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39926)	deAllocateL
		return
		endDefinition(39487)
lbl(39930)	definition(x(15) 39971 pid('DistanceR' 5 pos('./cp/FD.oz' 681 2) nil 8) <Q: 381> nil)
		putList(x(6))
		setConstant(~1)
		setConstant(nil)
		putList(x(5))
		setConstant(1)
		setValue(x(6))
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		putList(x(6))
		setValue(x(0))
		setValue(x(7))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 379> 11)
		endDefinition(39930)
lbl(39971)	putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] y(18))
		setValue(x(22))
		setValue(x(15))
		setValue(x(21))
		setValue(x(10))
		setValue(x(18))
		setValue(x(23))
		setValue(x(24))
		setValue(x(19))
		setValue(x(20))
lbl(39993)	definition(x(10) 40105 pid('MakeDistrTuple' 2 pos('./cp/FD.oz' 708 5) nil 4) <Q: 382> [g(9) x(8) g(5)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) tuple 40029)
		move(y(0) x(0))
		putConstant(<M: ForceClone> x(3))
		callBI('Record.adjoin' [x(0) x(3)]#[x(1)])
		unify(x(1) y(1))
		branch(40037)
lbl(40029)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<P: 346> 4)
lbl(40037)	move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 165> 6)
		testBool(y(2) 40055 40092)
		deAllocateL3
		return
lbl(40055)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(list 1 x(3))
		setConstant(fd)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('MakeDistrTuple')
		setValue(x(1))
		setValue(x(3))
		setConstant(1)
		setConstant('Distribution vector must contain finite domains.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40092)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(39993)
lbl(40105)	putRecord(map [max mid min splitMax splitMin] x(10))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		unify(x(18) x(13))
		unify(x(15) x(11))
		unify(x(16) x(12))
lbl(40128)	definition(x(15) 40147 pid('SelVal.splitMin' 2 pos('./cp/FD.oz' 726 14) nil 2) <Q: 383> [x(12)])
		getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyVariable(x(1))
		tailCall(g(0) 2)
		endDefinition(40128)
lbl(40147)	unify(x(15) x(20))
lbl(40150)	definition(x(15) 40184 pid('SelVal.splitMax' 2 pos('./cp/FD.oz' 729 14) nil 2) <Q: 384> [y(52) x(12)])
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(g(0))
		createVariableMove(y(1) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(40150)
lbl(40184)	unify(x(15) x(19))
		putRecord(map [max min naive nbSusps size] x(12))
		setValue(y(47))
		setValue(y(46))
		setValue(y(49))
		setValue(y(50))
		setValue(y(48))
		putRecord(map [max min naive nbSusps size] x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		setVariable(x(21))
lbl(40215)	definition(x(22) 40227 pid('GenSelVar.naive' 3 pos('./cp/FD.oz' 741 30) nil 3) <Q: 385> nil)
		getLiteral(false x(2))
		return
		endDefinition(40215)
lbl(40227)	unify(x(22) x(19))
lbl(40230)	definition(x(19) 40272 pid('GenSelVar.size' 3 pos('./cp/FD.oz' 744 16) nil 3) <Q: 386> [x(17)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40230)
lbl(40272)	unify(x(19) x(21))
lbl(40275)	definition(x(19) 40362 pid('GenSelVar.nbSusps' 3 pos('./cp/FD.oz' 747 16) nil 3) <Q: 387> [x(14) x(17)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testLT(x(1) x(0) x(2) 40320)
		getLiteral(true y(2))
		deAllocateL5
		return
lbl(40320)	testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 40355)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL5
		return
lbl(40355)	getLiteral(false y(2))
		deAllocateL5
		return
		endDefinition(40275)
lbl(40362)	unify(x(19) x(20))
lbl(40365)	definition(x(14) 40407 pid('GenSelVar.min' 3 pos('./cp/FD.oz' 755 16) nil 3) <Q: 388> [x(13)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40365)
lbl(40407)	unify(x(14) x(18))
lbl(40410)	definition(x(13) 40452 pid('GenSelVar.max' 3 pos('./cp/FD.oz' 758 16) nil 3) <Q: 389> [x(11)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40410)
lbl(40452)	unify(x(13) x(16))
		putRecord(map [undet] x(11))
		setVariable(x(13))
lbl(40461)	definition(x(14) 40493 pid('GenSelFil.undet' 2 pos('./cp/FD.oz' 762 29) nil 3) <Q: 390> [x(17)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(40461)
lbl(40493)	unify(x(14) x(13))
		putRecord(map [noProc] x(13))
		setVariable(x(14))
lbl(40502)	definition(x(16) 40511 pid('GenSelPro.noProc' 0 pos('./cp/FD.oz' 766 29) nil 0) <Q: 391> nil)
		return
		endDefinition(40502)
lbl(40511)	unify(x(16) x(14))
		putRecord(map [id] x(14))
		setVariable(x(16))
lbl(40520)	definition(x(17) 40532 pid('GenSelSel.id' 2 pos('./cp/FD.oz' 770 29) nil 2) <Q: 392> nil)
		unify(x(1) x(0))
		return
		endDefinition(40520)
lbl(40532)	unify(x(17) x(16))
lbl(40535)	definition(x(16) 40558 pid('MapSelect' 3 pos('./cp/FD.oz' 774 5) nil 4) <Q: 393> nil)
		testBI('Atom.is' [x(1)]#[x(3)] 40552)
		callBI('Record.\'.\'' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(40552)	unify(x(2) x(1))
		return
		endDefinition(40535)
lbl(40558)	definition(x(16) 40829 pid('PreProcessSpec' 2 pos('./cp/FD.oz' 780 5) nil 6) <Q: 394> [x(12) x(10) x(15) x(14) x(11) x(13)])
		allocateL5
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(40594 [onScalar(naive 40573) onScalar(ff 40581) onScalar(split 40586)]))
lbl(40573)	getRecord(generic [order] y(1))
		unifyLiteral(naive)
		branch(40597)
lbl(40581)	getLiteral(generic y(1))
		branch(40597)
lbl(40586)	getRecord(generic [value] y(1))
		unifyLiteral(splitMin)
		branch(40597)
lbl(40594)	unify(y(1) x(0))
lbl(40597)	putRecord(generic [filter order procedure select value] x(0))
		setConstant(undet)
		setConstant(size)
		setConstant(noProc)
		setConstant(id)
		setConstant(min)
		move(y(1) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(2))
		testRecord(y(1) generic [filter order procedure select value] 40664)
lbl(40627)	getVarVar(x(0) x(1))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(40664)
		getLiteral(undet x(0))
		getLiteral(noProc x(3))
		getLiteral(id x(4))
lbl(40646)	shallowThen
		testBI('Atom.is' [x(1)]#[x(0)] 40659)
		callBI('Atom.is' [x(5)]#[x(0)])
		unify(x(0) y(2))
		branch(40667)
lbl(40659)	getLiteral(false y(2))
		branch(40667)
lbl(40664)	getLiteral(false y(2))
lbl(40667)	testBool(y(2) 40714 40816)
		getRecord(opt [order value] y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(1) x(2))
		inlineDot(x(2) order x(3) cache)
		move(g(0) x(4))
		callBI('Record.\'.\'' [x(4) x(3)]#[x(5)])
		unify(x(5) x(0))
		inlineDot(x(2) value x(0) cache)
		move(g(1) x(2))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		deAllocateL5
		return
lbl(40714)	getRecord(gen [filter order procedure select value] y(0))
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		move(y(1) x(0))
		inlineDot(x(0) order x(1) cache)
		move(g(2) x(0))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(1) x(0))
		move(y(4) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) select x(1) cache)
		move(g(3) x(0))
		move(y(3) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) filter x(1) cache)
		move(g(4) x(0))
		move(y(0) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		move(g(5) x(0))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 393> 7)
lbl(40816)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(800)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40558)
lbl(40829)	definition(x(10) 40918 pid('Choose' 4 pos('./cp/FD.oz' 813 2) nil 4) <Q: 395> nil)
		match(x(0) ht(40903 [onScalar(nil 40838) onRecord('|' 2 40842)]))
lbl(40838)	unify(x(3) x(1))
		return
lbl(40842)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		createVariable(y(6))
		testBool(y(5) 40873 40878)
		unify(y(6) y(0))
		branch(40889)
lbl(40873)	unify(y(6) y(2))
		branch(40889)
lbl(40878)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40889)	moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 395> 9)
lbl(40903)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(816)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(40829)
lbl(40918)	definition(x(10) 41204 pid('FdDistribute' 2 pos('./cp/FD.oz' 821 2) nil 7) <Q: 396> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 350> 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 394> 4)
		match(y(2) ht(41189 [onRecord(opt [order value] 40945) onRecord(gen [filter order procedure select value] 41044)]))
lbl(40945)	getVarVar(y(0) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 382> 4)
		createVariable(x(0))
lbl(40959)	definition(x(1) 41021 pid('Do' 0 pos('./cp/FD.oz' 826 8) nil 2) unit [y(0) y(3) y(2) x(0)])
		allocateL2
		move(g(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		call(g(2) 2)
		createChoice
lbl(40985)	nextClause(40998)
		emptyClause
lbl(40988)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 358> 4)
		branch(41012)
lbl(40998)	lastClause
		emptyClause
lbl(41000)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		genFastCall(<Q: 358> 4)
lbl(41012)	genFastCall(<P: 350> 0)
		deAllocateL2
		tailCall(g(3) 0)
		endDefinition(40959)
lbl(41021)	unify(x(1) x(0))
		move(x(0) y(0))
		exHandler(41038)
		testNumber(x(0) ~1 41035)
lbl(41033)	deAllocateL4
		return
lbl(41035)	callBI('Exception.raise' [x(0)]#nil)
lbl(41038)	call(y(0) 0)
		popEx
		deAllocateL4
		return
lbl(41044)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		getVariable(x(6))
		createVariable(y(0))
lbl(41054)	definition(x(0) 41168 pid('Do' 1 pos('./cp/FD.oz' 844 8) nil 4) unit [x(2) x(3) x(5) x(6) x(4) y(0)])
		allocateL3
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(0) nil 41076)
lbl(41074)	deAllocateL3
		return
lbl(41076)	testList(y(0) 41153)
lbl(41079)	getVarVar(x(1) x(0))
		move(g(1) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 395> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(2) 2)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(g(3) 2)
		call(g(4) 0)
		genFastCall(<P: 350> 0)
		createChoice
lbl(41116)	nextClause(41129)
		emptyClause
lbl(41119)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 358> 4)
		branch(41143)
lbl(41129)	lastClause
		emptyClause
lbl(41131)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(2) x(1))
		genFastCall(<Q: 358> 4)
lbl(41143)	genFastCall(<P: 350> 0)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(5) 1)
lbl(41153)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(854)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(41054)
lbl(41168)	unify(x(0) y(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(0) x(1) y(2) x(0))
		deAllocateL4
		tailCall(x(1) 1)
lbl(41189)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(858)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40918)
lbl(41204)	definition(x(11) 41418 pid('FdChoose' 4 pos('./cp/FD.oz' 862 2) nil 5) <Q: 397> [g(5)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		genFastCall(<P: 350> 0)
		exHandler(41274)
		testNumber(x(0) ~1 41271)
lbl(41230)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fd 5 x(0))
		setConstant(noChoice)
		setConstant('FD.choose')
		setValue(x(1))
		setConstant(2)
		setConstant('Vector must contain non-determined elements.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41271)	callBI('Exception.raise' [x(0)]#nil)
lbl(41274)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 394> 4)
		match(y(4) ht(41400 [onRecord(opt [order value] 41286) onRecord(gen [filter order procedure select value] 41316)]))
lbl(41286)	getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 382> 4)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		call(y(4) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(5) 2)
		branch(41413)
lbl(41316)	getVarVar(y(4) y(5))
		getVoid(1)
		getVarVar(y(6) y(7))
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(8) x(0) y(4) x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(9) nil 41354)
lbl(41348)	putConstant(~1 x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(41354)	testList(y(9) 41387)
lbl(41357)	getVarVar(x(1) x(0))
		move(y(5) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 395> 8)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(6) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(7) 2)
		branch(41413)
lbl(41387)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(880)
		setValue(y(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41400)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(881)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41413)	popEx
		deAllocateL10
		return
		endDefinition(41204)
lbl(41418)	putRecord(watch [max min size] y(19))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		inlineDot(x(7) watchSize x(15) cache)
		unify(x(15) x(14))
		inlineDot(x(7) watchMin x(14) cache)
		unify(x(14) x(13))
		inlineDot(x(7) watchMax x(13) cache)
		unify(x(13) x(12))
lbl(41455)	definition(x(7) 41469 pid('FdLess' 2 pos('./cp/FD.oz' 904 6) nil 3) <Q: 398> [y(24)])
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41455)
lbl(41469)	definition(x(12) 41492 pid('FdGreater' 2 pos('./cp/FD.oz' 907 6) nil 3) <Q: 399> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41469)
lbl(41492)	definition(x(13) 41506 pid('FdLesseq' 2 pos('./cp/FD.oz' 910 6) nil 3) <Q: 400> [y(24)])
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41492)
lbl(41506)	definition(x(14) 41529 pid('FdGreatereq' 2 pos('./cp/FD.oz' 913 6) nil 3) <Q: 401> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41506)
lbl(41529)	definition(x(15) 41573 pid('FdDisjointC' 5 pos('./cp/FD.oz' 916 6) nil 5) <Q: 402> [y(32)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(41529)
lbl(41573)	move(y(1) x(16))
		inlineDot(x(16) put x(16) cache)
lbl(41582)	definition(x(17) 41943 pid('' 2 pos('./cp/FD.oz' 929 7) nil 8) <Q: 403> [y(2)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in finite domain system' y(3))
		testRecord(y(2) fd 6 41781)
lbl(41617)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) scheduling 41781)
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		inlineDot(x(0) formatTypes x(7) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYXY(x(5) y(6) x(6) y(7))
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		call(x(7) 2)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(9))
		putList(x(1))
		setValue(x(0))
		setValue(y(6))
		move(y(8) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putList(x(2))
		setValue(x(0))
		setValue(y(2))
		moveMoveYXYX(y(7) x(5) y(4) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41781)	testRecord(y(2) fd 5 41920)
lbl(41786)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) noChoice 41920)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		move(y(4) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		call(x(6) 3)
		move(y(4) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(y(8))
		putList(x(1))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(7) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41920)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(41582)
lbl(41943)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(3) y(2) x(2) y(24))
		moveMoveXYXY(x(4) y(32) x(5) y(40))
		moveMoveXYXY(x(6) y(41) x(8) y(42))
		moveMoveXYXY(x(9) y(43) x(10) y(44))
		moveMoveXYXY(x(11) y(45) x(7) y(46))
		moveMoveXYXY(x(12) y(47) x(13) y(48))
		moveMoveXYXY(x(14) y(49) x(15) y(50))
		move(x(17) x(1))
		putConstant(fd x(0))
		call(x(16) 2)
		getRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] g(10))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(1))
		unifyValue(y(3))
		unifyValue(y(45))
		unifyValue(y(12))
		unifyValue(y(2))
		unifyValue(y(13))
		unifyValue(y(31))
		unifyValue(y(50))
		unifyValue(y(33))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(44))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(24))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(20))
		unifyValue(y(14))
		unifyValue(y(47))
		unifyValue(y(49))
		unifyValue(y(15))
		unifyValue(y(0))
		unifyValue(y(42))
		unifyValue(y(46))
		unifyValue(y(48))
		unifyValue(y(32))
		unifyValue(y(26))
		unifyValue(y(25))
		unifyValue(y(5))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(16))
		unifyValue(y(4))
		unifyValue(y(7))
		unifyValue(y(41))
		unifyValue(y(51))
		unifyValue(y(18))
		unifyValue(y(34))
		unifyValue(y(38))
		unifyValue(y(43))
		unifyValue(y(35))
		unifyValue(y(37))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(6))
		unifyValue(y(40))
		unifyValue(y(19))
		deAllocateL
		return
		endDefinition(36917)
lbl(42106)	tailCall(x(3) 0)
		endDefinition(36611)
lbl(42111)	putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] x(4))
		setConstant(value)
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(watch [max min size] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] x(4))
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(cd ['body' dom header int sum sumC sumCN] x(4))
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putList(x(12))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(11))
		setConstant(format)
		setValue(x(12))
		putList(x(10))
		setConstant(formatHint)
		setValue(x(11))
		putList(x(9))
		setConstant(formatTypes)
		setValue(x(10))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(9))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(14))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(13))
		setValue(x(14))
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FDB')
		setConstant(nil)
		putRecord(info ['from' type] x(16))
		setConstant('x-oz://boot/FDP')
		setConstant(nil)
		putList(x(18))
		setConstant(nbSusps)
		setConstant(nil)
		putRecord(info [type] x(17))
		setValue(x(18))
		putRecord('import' ['Error' 'ErrorRegistry' 'FDB' 'FDP' 'System'] x(0))
		setValue(x(1))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(value x(4))
		putConstant(value x(9))
		putConstant('procedure/1' x(10))
		putConstant('procedure/4' x(11))
		putConstant(value x(12))
		putConstant('procedure/1' x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant('procedure/5' x(16))
		putConstant(value x(17))
		putConstant(value x(18))
		putConstant(value x(19))
		putConstant(value x(20))
		putConstant(value x(21))
		putConstant('procedure/2' x(22))
		putConstant(value x(23))
		putConstant(value x(24))
		putConstant('procedure/2' x(25))
		putConstant(value x(26))
		putConstant(value x(27))
		putConstant(value x(28))
		putConstant(value x(29))
		putConstant('procedure/2' x(30))
		putConstant('procedure/2' x(31))
		putConstant(value x(32))
		putConstant('procedure/2' x(33))
		putConstant(value x(34))
		putConstant('procedure/2' x(35))
		putConstant('procedure/2' x(36))
		putConstant('procedure/3' x(37))
		putConstant(value x(38))
		putConstant(value x(39))
		putConstant(value x(40))
		putConstant(value x(41))
		putConstant(value x(42))
		putConstant(value x(43))
		putConstant(value x(44))
		putConstant(value x(45))
		putConstant('procedure/4' x(46))
		putConstant(value x(47))
		putConstant(value x(48))
		putConstant('procedure/4' x(49))
		putConstant(value x(50))
		putConstant(value x(51))
		putConstant(value x(52))
		putConstant(value x(53))
		putConstant(value x(54))
		putConstant(value x(55))
		putConstant('procedure/4' x(56))
		putRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] x(1))
		setValue(x(4))
		setValue(x(9))
		setValue(x(10))
		setValue(x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(5))
		setValue(x(7))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(6))
		createVariableMove(y(91) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(42566)	definition(x(2) 47991 pid('' 2 pos('./cp/FS.oz' 28 0) nil 4) <P: 404> [y(98) y(100) y(165) y(1) y(148) y(149) y(150) y(161)])
		putList(x(2))
		setPredicateRef(<Q: 405>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 406>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 407>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 408>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 409>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 410>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 411>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 412>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 413>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 414>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MINELEM>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MAXELEM>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 415>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 416>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 417>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 418>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 419>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 420>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 421>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 422>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 423>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 424>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 425>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 427>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 428>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 429>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 438>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 439>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 440>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 441>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 442>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 443>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 444>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 445>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 446>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 447>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 448>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 449>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 450>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 451>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 452>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 453>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 454>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 455>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 456>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 457>)
		setValue(x(3))
lbl(42902)	definitionCopy(x(2) 47986 pid('/body' 0 pos('./cp/FS.oz' 28 0) [once] 31) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(47)
		move(g(0) x(0))
		inlineDot(x(0) 'FSB' x(1) cache)
		inlineDot(x(0) 'FSP' x(2) cache)
		inlineDot(x(0) 'FD' x(3) cache)
lbl(42931)	definition(x(4) 42963 pid('Head' 2 pos('./cp/FS.oz' 88 10) nil 4) <Q: 405> nil)
		shallowGuard(42950)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42945)	shallowThen
		unify(x(1) x(2))
		return
lbl(42950)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42931)
lbl(42963)	definition(x(4) 42995 pid('Tail' 2 pos('./cp/FS.oz' 89 10) nil 4) <Q: 406> nil)
		shallowGuard(42982)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42977)	shallowThen
		unify(x(1) x(3))
		return
lbl(42982)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(89)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42963)
lbl(42995)	definition(x(4) 43068 pid('ExpandList' 2 pos('./cp/FS.oz' 92 3) nil 5) <Q: 407> [g(2)])
lbl(43001)	definition(x(4) 43054 pid('' 3 pos('./cp/FS.oz' 94 7) nil 5) unit [g(0)])
		testRecord(x(0) '#' 2 43045)
lbl(43012)	allocateL3
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(1 x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 80> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 21> 7)
lbl(43045)	getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(43001)
lbl(43054)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(42995)
lbl(43068)	inlineDot(x(2) include x(4) cache)
		inlineDot(x(2) exclude x(5) cache)
		inlineDot(x(2) 'match' x(6) cache)
		inlineDot(x(2) minN x(7) cache)
		inlineDot(x(2) maxN x(8) cache)
		inlineDot(x(2) seq x(9) cache)
		inlineDot(x(2) isIn x(10) cache)
		inlineDot(x(2) isInR x(11) cache)
lbl(43116)	definition(x(12) 43159 pid('FSIsInReif' 3 pos('./cp/FS.oz' 111 6) nil 5) <Q: 408> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43116)
lbl(43159)	inlineDot(x(2) equalR x(11) cache)
lbl(43165)	definition(x(12) 43208 pid('FSEqualReif' 3 pos('./cp/FS.oz' 120 6) nil 5) <Q: 409> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43165)
lbl(43208)	inlineDot(x(1) 'setValue' x(11) cache)
		inlineDot(x(1) set x(13) cache)
		inlineDot(x(2) disjoint x(14) cache)
		inlineDot(x(2) distinct x(15) cache)
lbl(43232)	definition(x(16) 43261 pid('FSDistinctWith' 2 pos('./cp/FS.oz' 135 3) nil 3) <Q: 410> [x(15)])
lbl(43238)	definition(x(2) 43255 pid('' 1 pos('./cp/FS.oz' 136 6) nil 2) unit [g(0) x(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(43238)
lbl(43255)	unify(x(2) x(1))
		return
		endDefinition(43232)
lbl(43261)	inlineDot(x(2) union x(16) cache)
		inlineDot(x(2) intersection x(17) cache)
		inlineDot(x(2) subsume x(18) cache)
		inlineDot(x(2) diff x(19) cache)
		inlineDot(x(2) min x(20) cache)
		inlineDot(x(2) max x(21) cache)
		inlineDot(x(2) convex x(22) cache)
		inlineDot(x(1) isVarB x(23) cache)
		inlineDot(x(1) isValueB x(24) cache)
		inlineDot(x(1) valueToString x(25) cache)
lbl(43321)	definition(x(26) 43482 pid('GetFeaturePath' 4 pos('./cp/FS.oz' 156 6) nil 5) <Q: 411> nil)
		allocateL10
		move(x(3) y(0))
		testList(x(2) 43475)
lbl(43334)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createCond(43475)
lbl(43344)	nextClause(43399)
		clause
		createVariable(y(5))
		createVariable(y(6))
		getRecord('#' 2 y(1))
		unifyValue(y(5))
		unifyValue(y(6))
		getLiteral(nil y(2))
		ask
lbl(43363)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 43386)
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(3) x(0))
		callBI('Record.\'.\'' [x(0) x(2)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL10
		return
lbl(43386)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL10
		return
lbl(43399)	lastClause
		clause
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		getRecord('#' 2 y(1))
		unifyValue(y(7))
		unifyValue(y(8))
		unify(y(9) y(2))
		ask
lbl(43419)	moveMoveYXYX(y(4) x(0) y(7) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 43452)
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(3) x(1))
		callBI('Record.\'.\'' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43452)	moveMoveYXYX(y(3) x(1) y(8) x(2))
		callBI('Record.\'.\'' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43475)	getLiteral(found_nil_in_path y(0))
		deAllocateL10
		return
		endDefinition(43321)
lbl(43482)	definition(x(26) 43578 pid('Find' 3 pos('./cp/FS.oz' 169 6) nil 4) <Q: 412> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 406> 4)
lbl(43503)	definition(x(0) 43551 pid('' 3 pos('./cp/FS.oz' 171 3) nil 3) unit [y(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		call(g(0) 3)
		testBool(y(3) 43533 43538)
		unify(y(2) y(0))
		deAllocateL4
		return
lbl(43533)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(43538)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(171)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(43503)
lbl(43551)	moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(43482)
lbl(43578)	definition(x(26) 43613 pid('MinElement' 2 pos('./cp/FS.oz' 176 6) nil 2) <Q: 413> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 405> 4)
		testRecord(y(1) '#' 2 43606)
lbl(43599)	getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43606)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43578)
lbl(43613)	definition(x(26) 43650 pid('MaxElement' 2 pos('./cp/FS.oz' 181 6) nil 2) <Q: 414> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(1) '#' 2 43643)
lbl(43634)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43643)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43613)
lbl(43650)	definition(x(26) 43802 pid('LESS' 3 pos('./cp/FS.oz' 189 6) nil 5) <Q: 415> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43695)
lbl(43678)	getVarVar(x(3) x(4))
		shallowGuard(43695)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43689)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43695)	testRecord(y(0) '#' 2 43711)
lbl(43700)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43711)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43711)	testRecord(y(0) '#' 2 43729)
lbl(43716)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43729)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43729)	testRecord(y(0) '#' 2 43751)
lbl(43734)	getVarVar(x(0) x(1))
		shallowGuard(43751)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43745)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43751)	testRecord(y(0) '#' 2 43767)
lbl(43756)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43767)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43767)	testRecord(y(0) '#' 2 43787)
lbl(43772)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43787)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43787)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43650)
lbl(43802)	definition(x(27) 43954 pid('GREATER' 3 pos('./cp/FS.oz' 202 6) nil 5) <Q: 416> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43847)
lbl(43830)	getVarVar(x(3) x(4))
		shallowGuard(43847)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43841)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43847)	testRecord(y(0) '#' 2 43863)
lbl(43852)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43863)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43863)	testRecord(y(0) '#' 2 43881)
lbl(43868)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43881)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43881)	testRecord(y(0) '#' 2 43903)
lbl(43886)	getVarVar(x(0) x(1))
		shallowGuard(43903)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43897)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43903)	testRecord(y(0) '#' 2 43919)
lbl(43908)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43919)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43919)	testRecord(y(0) '#' 2 43939)
lbl(43924)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43939)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43939)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43802)
lbl(43954)	definition(x(28) 44045 pid('WeightMin' 2 pos('./cp/FS.oz' 215 6) nil 3) <Q: 417> nil)
lbl(43960)	definition(x(2) 44039 pid('' 3 pos('./cp/FS.oz' 216 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 43974)
		unify(x(2) g(0))
		return
lbl(43974)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(43986)	definition(x(1) 44028 pid('' 3 pos('./cp/FS.oz' 218 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(43986)
lbl(44028)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(43960)
lbl(44039)	unify(x(2) x(1))
		return
		endDefinition(43954)
lbl(44045)	definition(x(28) 44136 pid('WeightMax' 2 pos('./cp/FS.oz' 224 6) nil 3) <Q: 418> nil)
lbl(44051)	definition(x(2) 44130 pid('' 3 pos('./cp/FS.oz' 225 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 44065)
		unify(x(2) g(0))
		return
lbl(44065)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(44077)	definition(x(1) 44119 pid('' 3 pos('./cp/FS.oz' 227 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(44077)
lbl(44119)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(44051)
lbl(44130)	unify(x(2) x(1))
		return
		endDefinition(44045)
lbl(44136)	definition(x(28) 44215 pid('WeightSum' 3 pos('./cp/FS.oz' 233 6) nil 5) <Q: 419> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) sum x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 407> 4)
lbl(44166)	definition(x(1) 44177 pid('' 2 pos('./cp/FS.oz' 234 31) nil 2) unit [y(0)])
		tailCall(g(0) 2)
		endDefinition(44166)
lbl(44177)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant('=:' x(1))
		call(y(2) 3)
		move(g(0) x(0))
		inlineDot(x(0) decl x(1) cache)
		move(y(1) x(0))
		deAllocateL4
		tailCall(x(1) 1)
		endDefinition(44136)
lbl(44215)	createVariable(y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
lbl(44227)	definition(x(29) 44788 pid('OrderFun' 4 pos('./cp/FS.oz' 238 6) nil 9) <Q: 420> [y(0) y(1) y(2) y(3) y(4) y(5) x(28) x(27) x(26)])
		allocateL(11)
		putRecord(c [lowerBound unknown upperBound] x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
lbl(44245)	definition(x(8) 44272 pid('CardTable.unknown' 2 pos('./cp/FS.oz' 241 16) nil 2) unit [x(1) g(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44245)
lbl(44272)	unify(x(8) x(6))
lbl(44275)	definition(x(6) 44302 pid('CardTable.lowerBound' 2 pos('./cp/FS.oz' 242 16) nil 2) unit [x(1) g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44275)
lbl(44302)	unify(x(6) x(5))
lbl(44305)	definition(x(5) 44332 pid('CardTable.upperBound' 2 pos('./cp/FS.oz' 243 16) nil 2) unit [x(1) g(2)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44305)
lbl(44332)	unify(x(5) x(7))
lbl(44335)	definition(x(5) 44483 pid('MakeCompTableWeight' 2 pos('./cp/FS.oz' 246 2) nil 5) unit [x(1) g(3) x(2) g(4) g(5)])
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(44351)	definition(x(4) 44391 pid('Result3.unknown' 2 pos('./cp/FS.oz' 247 19) nil 3) unit [g(0) g(1) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44351)
lbl(44391)	unify(x(4) x(2))
lbl(44394)	definition(x(2) 44434 pid('Result3.lowerBound' 2 pos('./cp/FS.oz' 248 19) nil 3) unit [g(0) g(3) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44394)
lbl(44434)	unify(x(2) x(1))
lbl(44437)	definition(x(1) 44477 pid('Result3.upperBound' 2 pos('./cp/FS.oz' 249 19) nil 3) unit [g(0) g(4) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44437)
lbl(44477)	unify(x(1) x(3))
		return
		endDefinition(44335)
lbl(44483)	putRecord(c [card weightMax weightMin weightSum] x(1))
		setValue(x(4))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		putRecord(c [card weightMax weightMin weightSum] x(2))
		setValue(x(4))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		putRecord(s [max min] y(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(7) x(3) y(8))
		move(x(5) y(9))
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(10) x(0) y(5) x(1))
		call(y(9) 2)
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(6) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(3) x(1))
		call(y(9) 2)
		putRecord(s [max min] x(0))
		setValue(g(7))
		setValue(g(8))
		move(y(7) x(1))
		testBI('Procedure.is' [x(1)]#[x(2)] 44629)
		unify(y(8) y(7))
		deAllocateL
		return
lbl(44629)	testLiteral(y(7) naive 44650)
lbl(44633)	definition(x(0) 44645 pid('' 2 pos('./cp/FS.oz' 268 29) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(44633)
lbl(44645)	unify(x(0) y(8))
		deAllocateL
		return
lbl(44650)	putRecord('#' 2 x(3))
		setConstant(sel)
		setConstant(min)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 411> 8)
		putRecord('#' 2 x(0))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(3))
		setConstant(cost)
		setConstant(card)
		putRecord('#' 2 x(5))
		setConstant(comp)
		setConstant(unknown)
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(4))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 411> 8)
lbl(44723)	definition(x(0) 44781 pid('' 2 pos('./cp/FS.oz' 276 8) nil 4) unit [y(2) y(1)])
lbl(44729)	definition(x(3) 44770 pid('' 3 pos('./cp/FS.oz' 277 12) nil 3) unit [g(0) g(1)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(g(1) 3)
		endDefinition(44729)
lbl(44770)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 44> 7)
		endDefinition(44723)
lbl(44781)	unify(x(0) y(8))
		deAllocateL
		return
		endDefinition(44227)
lbl(44788)	createVariable(y(6))
lbl(44790)	definition(x(26) 45107 pid('ElementFun' 4 pos('./cp/FS.oz' 284 6) nil 11) <Q: 421> [y(6)])
		putRecord(v [unknown weight] x(5))
		setVariable(x(6))
		setVariable(x(7))
		putRecord(v [unknown weight] x(8))
		setVariable(x(9))
		setVariable(x(10))
		putRecord(v [max min] x(4))
		setValue(x(5))
		setValue(x(8))
lbl(44820)	definition(x(5) 44867 pid('ElementFunTable.min.unknown' 2 pos('./cp/FS.oz' 286 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 413> 5)
		endDefinition(44820)
lbl(44867)	unify(x(5) x(9))
lbl(44870)	definition(x(5) 44937 pid('ElementFunTable.min.weight' 2 pos('./cp/FS.oz' 289 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 417> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44870)
lbl(44937)	unify(x(5) x(10))
lbl(44940)	definition(x(5) 44987 pid('ElementFunTable.max.unknown' 2 pos('./cp/FS.oz' 294 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 414> 5)
		endDefinition(44940)
lbl(44987)	unify(x(5) x(6))
lbl(44990)	definition(x(5) 45057 pid('ElementFunTable.max.weight' 2 pos('./cp/FS.oz' 297 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44990)
lbl(45057)	unify(x(5) x(7))
		testBI('Procedure.is' [x(0)]#[x(1)] 45068)
		unify(x(3) x(0))
		return
lbl(45068)	putRecord('#' 2 x(1))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(6))
		setConstant(wrt)
		setConstant(unknown)
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(5))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 411> 9)
		endDefinition(44790)
lbl(45107)	definition(x(26) 45220 pid('FilterFun' 3 pos('./cp/FS.oz' 310 6) nil 4) <Q: 422> [y(0)])
		testLiteral(x(0) true 45162)
lbl(45117)	definition(x(0) 45158 pid('' 2 pos('./cp/FS.oz' 313 5) nil 3) unit [x(1) g(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(45117)
lbl(45158)	unify(x(0) x(2))
		return
lbl(45162)	definition(x(3) 45214 pid('' 2 pos('./cp/FS.oz' 315 5) nil 3) unit [x(1) g(0) x(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 45207)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		tailCall(g(2) 2)
lbl(45207)	getLiteral(false y(0))
		deAllocateL3
		return
		endDefinition(45162)
lbl(45214)	unify(x(3) x(2))
		return
		endDefinition(45107)
lbl(45220)	definition(x(26) 45252 pid('SelectFun' 2 pos('./cp/FS.oz' 322 6) nil 2) <Q: 423> nil)
		testLiteral(x(0) id 45246)
lbl(45230)	definition(x(0) 45242 pid('' 2 pos('./cp/FS.oz' 324 13) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45230)
lbl(45242)	unify(x(0) x(1))
		return
lbl(45246)	unify(x(1) x(0))
		return
		endDefinition(45220)
lbl(45252)	definition(x(26) 45341 pid('RRobinFun' 2 pos('./cp/FS.oz' 330 6) nil 2) <Q: 424> nil)
		testBool(x(0) 45312 45328)
lbl(45262)	definition(x(0) 45308 pid('' 2 pos('./cp/FS.oz' 331 17) nil 5) unit nil)
		shallowGuard(45295)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(45276)	shallowThen
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 21> 7)
lbl(45295)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(331)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45262)
lbl(45308)	unify(x(0) x(1))
		return
lbl(45312)	definition(x(0) 45324 pid('' 2 pos('./cp/FS.oz' 332 7) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45312)
lbl(45324)	unify(x(0) x(1))
		return
lbl(45328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(331)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45252)
lbl(45341)	definition(x(26) 45473 pid('FSDistNaive' 1 pos('./cp/FS.oz' 337 6) nil 2) <Q: 425> [y(6) x(4) x(5)])
		testLiteral(x(0) nil 45352)
		return
lbl(45352)	allocateL4
		move(x(0) y(0))
		createChoice
lbl(45357)	lastClause
		emptyClause
lbl(45359)	move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testLiteral(y(3) nil 45408)
lbl(45392)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 406> 4)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45408)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 413> 4)
		createChoice
lbl(45418)	nextClause(45445)
		emptyClause
lbl(45421)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45445)	lastClause
		emptyClause
lbl(45447)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
		endDefinition(45341)
lbl(45473)	createVariable(y(7))
lbl(45475)	definition(x(26) 45660 pid('FSDistGeneric' 7 pos('./cp/FS.oz' 361 6) nil 7) <Q: 426> [y(7) x(4) x(5)])
		allocateL10
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createChoice
lbl(45504)	lastClause
		emptyClause
lbl(45506)	call(y(5) 0)
		createChoice
lbl(45510)	lastClause
		emptyClause
lbl(45512)	moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 39> 6)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		call(y(0) 2)
		testLiteral(y(6) nil 45538)
		deAllocateL10
		return
lbl(45538)	move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(9) x(1))
		call(y(4) 2)
		createChoice
lbl(45575)	nextClause(45617)
		emptyClause
lbl(45578)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
lbl(45617)	lastClause
		emptyClause
lbl(45619)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
		endDefinition(45475)
lbl(45660)	createVariable(y(8))
lbl(45662)	definition(x(26) 45886 pid('FSDistribute' 2 pos('./cp/FS.oz' 391 6) nil 8) <Q: 427> [y(7) y(8)])
		allocateL7
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testLiteral(y(0) naive 45692)
lbl(45685)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<Q: 425> 3)
lbl(45692)	move(y(0) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		testLiteral(x(1) generic 45873)
lbl(45702)	putConstant(select x(2))
		putConstant(id x(3))
		callBI('Value.condSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 423> 4)
		putConstant(nil x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		putConstant(weights x(4))
		move(y(3) x(1))
		callBI('Value.condSelect' [x(0) x(4) x(1)]#[x(2)])
		putConstant(order x(4))
		putConstant(order x(5))
		callBI('Value.condSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(2) y(3))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 420> 8)
		move(y(0) x(0))
		putConstant(filter x(3))
		putConstant(true x(4))
		callBI('Value.condSelect' [x(0) x(3) x(4)]#[x(5)])
		move(x(5) x(0))
		move(y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 422> 6)
		move(y(0) x(0))
		putConstant(element x(4))
		putConstant(element x(5))
		callBI('Value.condSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(6) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 421> 8)
		move(y(0) x(0))
		putConstant(rrobin x(2))
		putConstant(false x(3))
		callBI('Value.condSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 424> 4)
lbl(45836)	definition(x(0) 45845 pid('' 0 pos('./cp/FS.oz' 405 42) nil 0) unit nil)
		return
		endDefinition(45836)
lbl(45845)	move(y(0) x(1))
		putConstant(procedure x(7))
		callBI('Value.condSelect' [x(1) x(7) x(0)]#[x(6)])
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(2) x(5))
		deAllocateL7
		genFastCall(<Q: 426> 15)
lbl(45873)	putRecord('#' 2 x(1))
		setConstant('Error in FSDistribute')
		setValue(y(0))
		callBI('Exception.raise' [x(1)]#nil)
		endDefinition(45662)
lbl(45886)	definition(x(27) 45986 pid('FDWatchMax' 2 pos('./cp/FS.oz' 424 3) nil 4) <Q: 428> [x(3)])
		testBI('Value.isDet' [x(0)]#[x(2)] 45899)
		tailCall(x(1) 1)
lbl(45899)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 45971 45973)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 428> 5)
lbl(45971)	deAllocateL4
		return
lbl(45973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(430)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45886)
lbl(45986)	definition(x(27) 46086 pid('FDWatchMin' 2 pos('./cp/FS.oz' 436 3) nil 4) <Q: 429> [x(3)])
		testBI('Value.isDet' [x(0)]#[x(2)] 45999)
		tailCall(x(1) 1)
lbl(45999)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 46071 46073)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 429> 5)
lbl(46071)	deAllocateL4
		return
lbl(46073)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(442)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45986)
lbl(46086)	inlineDot(x(2) card x(27) cache)
lbl(46092)	definition(x(28) 46130 pid('FSCard' 2 pos('./cp/FS.oz' 453 6) nil 4) <Q: 430> [x(3) x(27)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) decl x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		call(x(3) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(46092)
lbl(46130)	inlineDot(x(1) cardRange x(27) cache)
		inlineDot(x(1) getUnknown x(29) cache)
		unify(x(29) y(3))
		inlineDot(x(1) getGlb x(29) cache)
		unify(x(29) y(4))
		inlineDot(x(1) getLub x(29) cache)
		unify(x(29) y(5))
		inlineDot(x(1) getCard x(29) cache)
		inlineDot(x(1) getNumOfKnownIn x(30) cache)
		unify(x(30) y(1))
		inlineDot(x(1) getNumOfKnownNotIn x(30) cache)
		unify(x(30) y(2))
		inlineDot(x(1) getNumOfUnknown x(30) cache)
		unify(x(30) y(0))
		inlineDot(x(1) sup x(1) cache)
		moveMoveXYXY(x(2) y(9) x(3) y(10))
		moveMoveXYXY(x(4) y(11) x(5) y(12))
		moveMoveXYXY(x(6) y(13) x(7) y(14))
		moveMoveXYXY(x(8) y(15) x(9) y(16))
		moveMoveXYXY(x(10) y(17) x(12) y(18))
		moveMoveXYXY(x(11) y(19) x(13) y(20))
		moveMoveXYXY(x(14) y(21) x(15) y(22))
		moveMoveXYXY(x(16) y(23) x(17) y(24))
		moveMoveXYXY(x(18) y(25) x(19) y(26))
		moveMoveXYXY(x(20) y(27) x(21) y(28))
		moveMoveXYXY(x(22) y(29) x(23) y(30))
		moveMoveXYXY(x(24) y(31) x(25) y(32))
		moveMoveXYXY(x(26) y(33) x(28) y(34))
		moveMoveXYXY(x(27) y(35) x(29) y(36))
		createVariableMove(y(37) x(0))
		call(x(1) 1)
		putRecord('#' 2 x(0))
		setConstant(0)
		setValue(y(37))
		putList(y(38))
		setValue(x(0))
		setConstant(nil)
		move(y(38) x(0))
		createVariableMove(y(39) x(1))
		call(y(19) 2)
lbl(46301)	definition(x(0) 46380 pid('VectorToList' 2 pos('./cp/FS.oz' 480 3) nil 3) <Q: 431> [g(3) g(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 46328 46367)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(46328)	move(y(0) x(0))
		testBI('Record.is' [x(0)]#[x(1)] 46342)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
lbl(46342)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setConstant('VectorToTuple')
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('A propagator expected a vector as input argument.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(46367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(481)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46301)
lbl(46380)	unify(x(0) y(7))
lbl(46383)	definition(x(0) 46417 pid('FSIntersectN' 2 pos('./cp/FS.oz' 496 3) nil 4) <Q: 432> [y(24) y(39)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 431> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(g(1) x(2))
		move(y(0) x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(46383)
lbl(46417)	definition(x(1) 46507 pid('FSUnionN' 2 pos('./cp/FS.oz' 501 3) nil 4) <Q: 433> [y(9) y(10)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unionN x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) sum x(1) cache)
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 431> 4)
lbl(46461)	definition(x(1) 46472 pid('' 2 pos('./cp/FS.oz' 503 37) nil 2) unit nil)
		genFastCall(<Q: 430> 5)
		endDefinition(46461)
lbl(46472)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 430> 4)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(y(3) x(2))
		putConstant('=:' x(1))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(46417)
lbl(46507)	move(y(9) x(2))
		inlineDot(x(2) disjointN x(3) cache)
lbl(46516)	definition(x(4) 46582 pid('FSDistinctN' 1 pos('./cp/FS.oz' 509 3) nil 2) <Q: 434> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 431> 4)
lbl(46529)	definition(x(1) 46573 pid('' 1 pos('./cp/FS.oz' 512 7) nil 2) unit nil)
		match(x(0) ht(46558 [onScalar(nil 46538) onRecord('|' 2 46539)]))
lbl(46538)	return
lbl(46539)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 410> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(46558)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(516)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(46529)
lbl(46573)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 37> 5)
		endDefinition(46516)
lbl(46582)	inlineDot(x(2) partition x(5) cache)
lbl(46588)	definition(x(6) 46829 pid('FSNewWeights' 2 pos('./cp/FS.oz' 522 3) nil 6) <Q: 435> [g(5) g(6) g(7)])
		allocateL2
		callBI('Dictionary.new' nil#[x(2)])
		createVariable(x(3))
lbl(46600)	definition(x(4) 46772 pid('ScanWeightDescr' 1 pos('./cp/FS.oz' 525 6) nil 8) unit [g(0) x(2) x(3)])
		allocateL1
		move(x(0) y(0))
		testList(y(0) 46643)
lbl(46613)	getVarVar(x(1) x(2))
		shallowGuard(46643)
		getRecord('#' 2 x(1))
		unifyLiteral(default)
		unifyVariable(x(3))
lbl(46626)	shallowThen
		move(g(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		move(x(2) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46643)	testList(y(0) 46721)
lbl(46646)	getVarVar(x(0) x(1))
		shallowGuard(46721)
		getRecord('#' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(46667)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		createVariable(y(0))
		testLT(x(3) x(4) x(5) 46711)
		getList(y(0))
		unifyVariable(x(5))
		unifyValue(x(1))
		getRecord('#' 2 x(5))
		unifyVariable(x(6))
		unifyValue(x(2))
		getRecord('#' 2 x(6))
		unifyVariable(x(7))
		unifyValue(x(4))
		inlinePlus1(x(3) x(1))
		unify(x(1) x(7))
		branch(46714)
lbl(46711)	unify(y(0) x(1))
lbl(46714)	move(y(0) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46721)	testList(y(0) 46751)
lbl(46724)	getVarVar(x(0) x(1))
		shallowGuard(46751)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(46737)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(3)]#nil)
		move(x(1) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46751)	testLiteral(y(0) nil 46757)
lbl(46755)	deAllocateL1
		return
lbl(46757)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(539)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46600)
lbl(46772)	unify(x(4) x(3))
		putConstant(default x(4))
		putConstant(0 x(5))
		callBI('Dictionary.put' [x(2) x(4) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(3) 1)
		move(y(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
lbl(46801)	definition(x(1) 46822 pid('' 2 pos('./cp/FS.oz' 547 6) nil 5) unit [g(2) y(1) x(2)])
		move(g(1) x(2))
		move(g(2) x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(46801)
lbl(46822)	unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(46588)
lbl(46829)	unify(x(6) y(8))
lbl(46832)	definition(x(6) 46852 pid('FSCompl' 2 pos('./cp/FS.oz' 553 3) nil 3) <Q: 436> [y(26) y(39)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46832)
lbl(46852)	definition(x(7) 46886 pid('FSComplIn' 3 pos('./cp/FS.oz' 557 3) nil 3) <Q: 437> [y(21) y(23)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(46852)
lbl(46886)	createVariable(y(7))
lbl(46888)	definition(x(8) 46915 pid('FSForAllIn' 2 pos('./cp/FS.oz' 563 3) nil 2) <Q: 438> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(46888)
lbl(46915)	putRecord(l [decl lowerBound new upperBound] x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		putRecord(r [decl lowerBound new upperBound] x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putRecord(t [decl lowerBound new upperBound] x(21))
		setVariable(x(22))
		setVariable(x(23))
		setVariable(x(24))
		setVariable(x(25))
		putRecord(v [decl is list lowerBound new record tuple upperBound] y(39))
		setVariable(x(9))
		setValue(y(30))
		setValue(x(10))
		setVariable(x(15))
		setValue(y(20))
		setValue(x(16))
		setValue(x(21))
		setVariable(x(26))
lbl(46971)	definition(x(10) 46991 pid('FSVar.decl' 1 pos('./cp/FS.oz' 569 14) nil 3) <Q: 439> [y(20) y(38)])
		move(x(0) x(2))
		move(g(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46971)
lbl(46991)	unify(x(10) x(9))
lbl(46994)	definition(x(10) 47014 pid('FSVar.upperBound' 2 pos('./cp/FS.oz' 573 10) nil 3) <Q: 440> [y(20)])
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46994)
lbl(47014)	unify(x(10) x(26))
lbl(47017)	definition(x(10) 47034 pid('FSVar.lowerBound' 2 pos('./cp/FS.oz' 577 19) nil 3) <Q: 441> [y(20) y(38)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47017)
lbl(47034)	unify(x(10) x(15))
lbl(47037)	definition(x(10) 47070 pid('FSVar.list.decl' 2 pos('./cp/FS.oz' 583 22) nil 2) <Q: 442> [x(9)])
		allocateL1
		move(x(1) y(0))
		genFastCall(<P: 19> 4)
lbl(47050)	definition(x(1) 47061 pid('' 1 pos('./cp/FS.oz' 586 12) nil 1) unit [g(0)])
		genFastCall(<Q: 439> 3)
		endDefinition(47050)
lbl(47061)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(47037)
lbl(47070)	unify(x(10) x(11))
lbl(47073)	definition(x(10) 47117 pid('FSVar.list.upperBound' 3 pos('./cp/FS.oz' 590 22) nil 3) <Q: 443> [x(26)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47091)	definition(x(1) 47108 pid('' 1 pos('./cp/FS.oz' 593 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47091)
lbl(47108)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47073)
lbl(47117)	unify(x(10) x(14))
lbl(47120)	definition(x(10) 47164 pid('FSVar.list.lowerBound' 3 pos('./cp/FS.oz' 597 22) nil 3) <Q: 444> [x(15)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47138)	definition(x(1) 47155 pid('' 1 pos('./cp/FS.oz' 600 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47138)
lbl(47155)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47120)
lbl(47164)	unify(x(10) x(12))
lbl(47167)	definition(x(10) 47216 pid('FSVar.list.new' 4 pos('./cp/FS.oz' 604 15) nil 4) <Q: 445> [y(20)])
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<P: 19> 4)
lbl(47187)	definition(x(1) 47207 pid('' 1 pos('./cp/FS.oz' 607 12) nil 3) unit [g(0) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47187)
lbl(47207)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(47167)
lbl(47216)	unify(x(10) x(13))
lbl(47219)	definition(x(10) 47250 pid('FSVar.tuple.decl' 3 pos('./cp/FS.oz' 612 22) nil 4) <Q: 446> [g(8) x(9)])
		callBI('Tuple.make' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
lbl(47231)	definition(x(1) 47242 pid('' 1 pos('./cp/FS.oz' 615 12) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47231)
lbl(47242)	move(x(2) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47219)
lbl(47250)	unify(x(10) x(22))
lbl(47253)	definition(x(10) 47290 pid('FSVar.tuple.upperBound' 4 pos('./cp/FS.oz' 619 22) nil 5) <Q: 447> [g(8) x(26)])
		callBI('Tuple.make' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47265)	definition(x(1) 47282 pid('' 1 pos('./cp/FS.oz' 622 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47265)
lbl(47282)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47253)
lbl(47290)	unify(x(10) x(25))
lbl(47293)	definition(x(10) 47330 pid('FSVar.tuple.lowerBound' 4 pos('./cp/FS.oz' 626 22) nil 5) <Q: 448> [g(8) x(15)])
		callBI('Tuple.make' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47305)	definition(x(1) 47322 pid('' 1 pos('./cp/FS.oz' 629 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47305)
lbl(47322)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47293)
lbl(47330)	unify(x(10) x(23))
lbl(47333)	definition(x(10) 47373 pid('FSVar.tuple.new' 5 pos('./cp/FS.oz' 633 15) nil 6) <Q: 449> [g(8) y(20)])
		callBI('Tuple.make' [x(0) x(1)]#[x(5)])
		unify(x(5) x(4))
lbl(47345)	definition(x(1) 47365 pid('' 1 pos('./cp/FS.oz' 636 12) nil 3) unit [g(1) x(2) x(3)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47345)
lbl(47365)	move(x(4) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47333)
lbl(47373)	unify(x(10) x(24))
lbl(47376)	definition(x(10) 47409 pid('FSVar.record.decl' 3 pos('./cp/FS.oz' 642 23) nil 3) <Q: 450> [g(8) x(9)])
		allocateL1
		move(x(2) y(0))
		genFastCall(<P: 110> 6)
lbl(47389)	definition(x(1) 47400 pid('' 1 pos('./cp/FS.oz' 645 6) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47389)
lbl(47400)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 164> 5)
		endDefinition(47376)
lbl(47409)	unify(x(10) x(17))
lbl(47412)	definition(x(9) 47456 pid('FSVar.record.upperBound' 4 pos('./cp/FS.oz' 649 23) nil 4) <Q: 451> [g(8) x(26)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47430)	definition(x(1) 47447 pid('' 1 pos('./cp/FS.oz' 652 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47430)
lbl(47447)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47412)
lbl(47456)	unify(x(9) x(20))
lbl(47459)	definition(x(9) 47503 pid('FSVar.record.lowerBound' 4 pos('./cp/FS.oz' 656 23) nil 4) <Q: 452> [g(8) x(15)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47477)	definition(x(1) 47494 pid('' 1 pos('./cp/FS.oz' 659 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47477)
lbl(47494)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47459)
lbl(47503)	unify(x(9) x(18))
lbl(47506)	definition(x(9) 47555 pid('FSVar.record.new' 5 pos('./cp/FS.oz' 663 16) nil 5) <Q: 453> [g(8) y(20)])
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYYX(x(4) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
lbl(47526)	definition(x(1) 47546 pid('' 1 pos('./cp/FS.oz' 666 6) nil 3) unit [g(1) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47526)
lbl(47546)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 164> 5)
		endDefinition(47506)
lbl(47555)	unify(x(9) x(19))
		putRecord(c [empty is new singl toString universal] y(20))
		setVariable(x(9))
		setValue(y(31))
		setValue(y(19))
		setVariable(y(30))
		setValue(y(32))
		setVariable(y(40))
		moveMoveXYXY(x(0) y(31) x(1) y(32))
		moveMoveXYXY(x(3) y(41) x(4) y(42))
		moveMoveXYXY(x(5) y(43) x(6) y(44))
		moveMoveXYXY(x(7) y(45) x(8) y(46))
		move(x(9) x(1))
		putConstant(nil x(0))
		call(y(19) 2)
		moveMoveYXYX(y(38) x(0) y(40) x(1))
		call(y(19) 2)
lbl(47611)	definition(x(0) 47631 pid('FSValue.singl' 2 pos('./cp/FS.oz' 675 14) nil 3) <Q: 454> [y(19)])
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(47611)
lbl(47631)	unify(x(0) y(30))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setValue(y(18))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
lbl(47652)	definition(x(7) 47695 pid('FSReified.isIn' 3 pos('./cp/FS.oz' 683 31) nil 5) <Q: 455> [y(10)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 408> 7)
		endDefinition(47652)
lbl(47695)	unify(x(7) x(5))
lbl(47698)	definition(x(5) 47774 pid('FSReified.areIn' 3 pos('./cp/FS.oz' 687 17) nil 5) <Q: 456> [y(10)])
		allocateL5
		move(g(0) x(3))
		inlineDot(x(3) list x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		call(y(3) 3)
lbl(47746)	definition(x(1) 47763 pid('' 2 pos('./cp/FS.oz' 691 9) nil 3) unit [y(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 408> 7)
		endDefinition(47746)
lbl(47763)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(47698)
lbl(47774)	unify(x(5) x(1))
lbl(47777)	definition(x(1) 47829 pid('FSReified.include' 3 pos('./cp/FS.oz' 693 17) nil 5) <Q: 457> [y(10) y(9)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		move(g(1) x(0))
		inlineDot(x(0) includeR x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(47777)
lbl(47829)	unify(x(1) x(4))
		move(y(9) x(1))
		inlineDot(x(1) bounds x(4) cache)
		unify(x(4) x(2))
		inlineDot(x(1) boundsN x(2) cache)
		unify(x(2) x(3))
		inlineDot(x(1) partitionReified x(2) cache)
		unify(x(2) x(6))
		inlineDot(x(1) monitorIn x(2) cache)
		unify(x(2) y(7))
		inlineDot(x(1) monitorOut x(1) cache)
		getRecord(r [card cardOf lowerBound unknown upperBound] y(6))
		unifyValVar(y(36) x(2))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		getRecord(c [lowerBound unknown upperBound] x(2))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		putRecord(i [convex 'match' max maxN min minN seq] x(2))
		setValue(y(29))
		setValue(y(13))
		setValue(y(28))
		setValue(y(15))
		setValue(y(27))
		setValue(y(14))
		setValue(y(16))
		getRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn monitorOut newWeights partition reflect reified subset sup union unionN value var] g(9))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(44))
		unifyValue(y(45))
		unifyValue(y(26))
		unifyValue(y(21))
		unifyValue(y(41))
		unifyValue(y(22))
		unifyValue(y(42))
		unifyValue(y(33))
		unifyValue(y(12))
		unifyValue(y(46))
		unifyValue(y(11))
		unifyNumber(0)
		unifyValue(x(2))
		unifyValue(y(24))
		unifyValue(y(31))
		unifyValue(y(17))
		unifyValue(y(7))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(43))
		unifyValue(y(6))
		unifyValue(x(0))
		unifyValue(y(25))
		unifyValue(y(37))
		unifyValue(y(23))
		unifyValue(y(32))
		unifyValue(y(20))
		unifyValue(y(39))
		deAllocateL
		return
		endDefinition(42902)
lbl(47986)	tailCall(x(2) 0)
		endDefinition(42566)
lbl(47991)	putRecord(l [decl lowerBound new upperBound] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/3')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(r [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(t [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(v [decl is list lowerBound new record tuple upperBound] x(4))
		setConstant('procedure/1')
		setConstant(value)
		setValue(x(5))
		setConstant('procedure/2')
		setConstant(value)
		setValue(x(6))
		setValue(x(7))
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(c [empty is new singl toString universal] x(4))
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(4))
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant(value)
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(c [lowerBound unknown upperBound] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(r [card cardOf lowerBound unknown upperBound] x(4))
		setConstant(value)
		setValue(x(8))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(i [convex 'match' max maxN min minN seq] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(9))
		setValue(x(4))
		putList(x(13))
		setConstant(watch)
		setConstant(nil)
		putList(x(12))
		setConstant(sum)
		setValue(x(13))
		putList(x(11))
		setConstant(reflect)
		setValue(x(12))
		putList(x(10))
		setConstant(list)
		setValue(x(11))
		putList(x(4))
		setConstant(decl)
		setValue(x(10))
		putList(x(3))
		setConstant(bool)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(14))
		setConstant('x-oz://boot/FSB')
		setConstant(nil)
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FSP')
		setConstant(nil)
		putRecord('import' ['FD' 'FSB' 'FSP'] x(0))
		setValue(x(1))
		setValue(x(14))
		setValue(x(15))
		putConstant('procedure/2' x(4))
		putConstant(value x(10))
		putConstant('procedure/2' x(11))
		putConstant('procedure/3' x(12))
		putConstant(value x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant(value x(16))
		putConstant('procedure/1' x(17))
		putConstant('procedure/2' x(18))
		putConstant(value x(19))
		putConstant('procedure/2' x(20))
		putConstant(value x(21))
		putConstant(char x(22))
		putConstant(value x(23))
		putConstant('procedure/2' x(24))
		putConstant(value x(25))
		putConstant(value x(26))
		putConstant(value x(27))
		putConstant('procedure/2' x(28))
		putConstant(value x(29))
		putConstant(value x(30))
		putConstant(value x(31))
		putConstant(value x(32))
		putConstant('procedure/2' x(33))
		putRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn monitorOut newWeights partition reflect reified subset sup union unionN value var] x(1))
		setValue(x(4))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(9))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(8))
		setValue(x(7))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(92) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(48390)	definition(x(7) 48414 pid('NewKiller' 2 pos('./cp/Search.oz' 27 3) nil 3) <P: 458> nil)
lbl(48396)	definition(x(2) 48408 pid('Killer' 0 pos('./cp/Search.oz' 28 6) nil 0) unit [x(1)])
		getLiteral(kill g(0))
		return
		endDefinition(48396)
lbl(48408)	unify(x(2) x(0))
		return
		endDefinition(48390)
lbl(48414)	definition(x(7) 48426 pid('WrapS' 2 pos('./cp/Search.oz' 36 3) nil 2) <P: 459> nil)
		unify(x(1) x(0))
		return
		endDefinition(48414)
lbl(48426)	definition(x(8) 48459 pid('WrapP' 2 pos('./cp/Search.oz' 40 3) nil 3) <P: 460> [y(186) y(185)])
lbl(48432)	definition(x(2) 48453 pid('' 1 pos('./cp/Search.oz' 41 6) nil 4) unit [g(0) g(1) x(0)])
		move(g(2) x(1))
		callBI('Space.clone' [x(1)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(48432)
lbl(48453)	unify(x(2) x(1))
		return
		endDefinition(48426)
lbl(48459)	definition(x(9) 48504 pid('ReDo' 2 pos('./cp/Search.oz' 50 6) nil 2) <P: 461> [y(188)])
		match(x(0) ht(48489 [onScalar(nil 48468) onRecord('|' 2 48469)]))
lbl(48468)	return
lbl(48469)	allocateL2
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		genFastCall(<P: 461> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(48489)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(53)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(48459)
lbl(48504)	definition(x(9) 48527 pid('Recompute' 3 pos('./cp/Search.oz' 56 6) nil 4) <P: 462> [y(185)])
		callBI('Space.clone' [x(0)]#[x(3)])
		unify(x(3) x(2))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 461> 5)
		endDefinition(48504)
lbl(48527)	definition(x(9) 48565 pid('Better' 3 pos('./cp/Search.oz' 64 3) nil 4) <P: 463> [y(185) y(187) y(186)])
		callBI('Space.clone' [x(2)]#[x(3)])
lbl(48536)	definition(x(2) 48559 pid('' 1 pos('./cp/Search.oz' 67 22) nil 3) unit [g(2) x(3) x(1)])
		move(g(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		move(x(0) x(1))
		move(x(2) x(0))
		tailCall(g(2) 2)
		endDefinition(48536)
lbl(48559)	callBI('Space.inject' [x(0) x(2)]#nil)
		return
		endDefinition(48527)
lbl(48565)	definition(x(9) 48666 pid('OneDepthNR' 3 pos('./cp/Search.oz' 74 3) nil 5) <P: 464> [y(184) y(185) y(188)])
		testBI('Value.isFree' [x(0)]#[x(3)] 48660)
		callBI('Space.ask' [x(1)]#[x(3)])
		match(x(3) ht(48647 [onScalar(failed 48581) onScalar(succeeded 48585) onRecord(alternatives 1 48589)]))
lbl(48581)	getLiteral(nil x(2))
		return
lbl(48585)	unify(x(2) x(1))
		return
lbl(48589)	allocateL5
		getVariable(y(0))
		callBI('Space.clone' [x(1)]#[x(3)])
		putConstant(1 x(4))
		callBI('Space.commit' [x(1) x(4)]#nil)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(4) nil 48642)
lbl(48619)	putRecord('#' 2 x(0))
		setConstant(2)
		setValue(y(0))
		move(y(3) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 464> 7)
lbl(48642)	unify(y(2) y(4))
		deAllocateL5
		return
lbl(48647)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(48660)	getLiteral(nil x(2))
		return
		endDefinition(48565)
lbl(48666)	definition(x(9) 48780 pid('AltCopy' 6 pos('./cp/Search.oz' 91 6) nil 8) <P: 465> [y(188) y(185)])
		testBI('Value.\'==\'' [x(1) x(2)]#[x(6)] 48697)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 466> 15)
lbl(48697)	allocateL7
		callBI('Space.clone' [x(3)]#[x(6)])
		callBI('Space.commit' [x(6) x(1)]#nil)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(1))
		move(y(3) x(2))
		move(x(7) x(3))
		move(y(4) x(5))
		putConstant(1 x(4))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 48773)
lbl(48750)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL7
		genFastCall(<P: 465> 13)
lbl(48773)	unify(y(5) y(6))
		deAllocateL7
		return
		endDefinition(48666)
lbl(48780)	definition(x(9) 48919 pid('Alt' 9 pos('./cp/Search.oz' 104 6) nil 10) <P: 467> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(9)] 48820)
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(9) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		genFastCall(<P: 466> 15)
lbl(48820)	allocateL9
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		createVariableMove(y(8) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(8) nil 48912)
lbl(48871)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(8) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		deAllocateL9
		genFastCall(<P: 467> 19)
lbl(48912)	unify(y(7) y(8))
		deAllocateL9
		return
		endDefinition(48780)
lbl(48919)	definition(x(9) 49016 pid('OneDepthR' 7 pos('./cp/Search.oz' 114 6) nil 10) <P: 466> [y(184)])
		testBI('Value.isFree' [x(0)]#[x(7)] 49010)
		callBI('Space.ask' [x(1)]#[x(7)])
		match(x(7) ht(48997 [onScalar(failed 48935) onScalar(succeeded 48939) onRecord(alternatives 1 48943)]))
lbl(48935)	getLiteral(nil x(6))
		return
lbl(48939)	unify(x(6) x(1))
		return
lbl(48943)	getVariable(x(7))
		testBI('Value.\'==\'' [x(4) x(5)]#[x(8)] 48967)
		move(x(1) x(3))
		move(x(7) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		putConstant(1 x(1))
		genFastCall(<P: 465> 13)
lbl(48967)	inlinePlus1(x(4) x(9))
		move(x(2) x(4))
		move(x(7) x(2))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(8))
		move(x(9) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 467> 19)
lbl(48997)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(123)
		setValue(x(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(49010)	getLiteral(nil x(6))
		return
		endDefinition(48919)
lbl(49016)	definition(x(9) 49082 pid('OneDepth' 4 pos('./cp/Search.oz' 130 6) nil 7) <P: 468> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 49059)
		moveMoveYXYX(y(3) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 464> 7)
lbl(49059)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(y(2) x(6))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 466> 15)
		endDefinition(49016)
lbl(49082)	definition(x(9) 49216 pid('AltCopy' 8 pos('./cp/Search.oz' 139 2) nil 10) <P: 469> [y(188) y(185) y(179)])
		testBI('Value.\'==\'' [x(1) x(2)]#[x(8)] 49116)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		putConstant(nil x(3))
		genFastCall(<P: 470> 19)
lbl(49116)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		move(x(6) x(7))
		move(y(5) x(6))
		putConstant(1 x(5))
		createVariableMove(y(7) x(8))
		genFastCall(<P: 470> 18)
		move(y(7) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 49183)
		unify(y(6) y(7))
		deAllocateL8
		return
lbl(49183)	move(y(1) x(1))
		inlinePlus1(x(1) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(7) x(6) y(6) x(7))
		deAllocateL8
		genFastCall(<P: 469> 17)
		endDefinition(49082)
lbl(49216)	definition(x(9) 49379 pid('Alt' 11 pos('./cp/Search.oz' 154 2) nil 12) <P: 471> [y(188) y(179)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(11)] 49262)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 470> 19)
lbl(49262)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(10) y(8))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		move(y(7) x(6))
		move(x(9) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<P: 470> 18)
		move(y(9) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 49331)
		unify(y(8) y(9))
		deAllocateL
		return
lbl(49331)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(10) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		moveMoveYXYX(y(9) x(9) y(8) x(10))
		deAllocateL
		genFastCall(<P: 471> 23)
		endDefinition(49216)
lbl(49379)	definition(x(9) 49506 pid('OneBoundR' 9 pos('./cp/Search.oz' 165 2) nil 13) <P: 470> [y(184)])
		testBI('Value.isFree' [x(0)]#[x(9)] 49500)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(49487 [onScalar(failed 49395) onScalar(succeeded 49399) onRecord(alternatives 1 49403)]))
lbl(49395)	unify(x(8) x(7))
		return
lbl(49399)	unify(x(8) x(1))
		return
lbl(49403)	getVariable(x(9))
		putConstant(0 x(10))
		testLE(x(4) x(10) x(11) 49417)
		getLiteral(cut x(8))
		return
lbl(49417)	testBI('Value.\'==\'' [x(5) x(6)]#[x(10)] 49448)
		inlineMinus1(x(4) x(10))
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(10) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 469> 17)
lbl(49448)	inlineMinus1(x(4) x(11))
		inlinePlus1(x(5) x(12))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		move(x(7) x(9))
		move(x(12) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 471> 23)
lbl(49487)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(49500)	getLiteral(nil x(8))
		return
		endDefinition(49379)
lbl(49506)	definition(x(9) 49594 pid('OneIterR' 5 pos('./cp/Search.oz' 180 8) nil 10) <P: 472> [y(185)])
		testBI('Value.isFree' [x(0)]#[x(5)] 49588)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(9)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(9) x(1))
		move(x(9) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(3) x(6))
		putConstant(nil x(3))
		putConstant(nil x(7))
		createVariableMove(y(5) x(8))
		genFastCall(<P: 470> 18)
		testLiteral(y(5) cut 49583)
lbl(49563)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 472> 11)
lbl(49583)	unify(y(4) y(5))
		deAllocateL6
		return
lbl(49588)	getLiteral(nil x(4))
		return
		endDefinition(49506)
lbl(49594)	definition(x(9) 49653 pid('OneBound' 5 pos('./cp/Search.oz' 191 2) nil 9) <P: 473> [y(183)])
		allocateL5
		callBI('Space.new' [x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(4))
		moveMoveYXYX(y(1) x(5) y(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 470> 19)
		endDefinition(49594)
lbl(49653)	definition(x(9) 49700 pid('OneIter' 4 pos('./cp/Search.oz' 197 2) nil 5) <P: 474> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		moveMoveYXYX(y(3) x(0) y(1) x(3))
		move(y(2) x(4))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 472> 11)
		endDefinition(49653)
lbl(49700)	definition(x(9) 49815 pid('Probe' 3 pos('./cp/Search.oz' 203 2) nil 6) <P: 475> [y(184) y(188) y(185)])
		testBI('Value.isDet' [x(2)]#[x(3)] 49716)
		putConstant(killed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(49716)	callBI('Space.ask' [x(0)]#[x(3)])
		match(x(3) ht(49800 [onScalar(failed 49722) onScalar(succeeded 49723) onRecord(alternatives 1 49732)]))
lbl(49722)	return
lbl(49723)	putRecord(succeeded 1 x(1))
		setValue(x(0))
		callBI('Exception.raise' [x(1)]#nil)
lbl(49732)	getVariable(x(3))
		testNumber(x(1) 0 49750)
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		putConstant(0 x(1))
		genFastCall(<P: 475> 7)
lbl(49750)	allocateL3
		callBI('Space.clone' [x(0)]#[x(4)])
		putRecord('#' 2 x(5))
		setConstant(2)
		setValue(x(3))
		callBI('Space.commit' [x(0) x(5)]#nil)
		inlineMinus1(x(1) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(x(3) x(1))
		genFastCall(<P: 475> 6)
		move(y(2) x(0))
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 475> 7)
lbl(49800)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(49700)
lbl(49815)	definition(x(9) 49874 pid('Iterate' 4 pos('./cp/Search.oz' 220 2) nil 5) <P: 476> [y(185)])
		testBI('Value.\'==\'' [x(2) x(1)]#[x(4)] 49831)
		move(x(3) x(2))
		genFastCall(<P: 475> 7)
lbl(49831)	allocateL4
		callBI('Space.clone' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(y(3) x(2))
		genFastCall(<P: 475> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 476> 9)
		endDefinition(49815)
lbl(49874)	definition(x(9) 49915 pid('LDS' 3 pos('./cp/Search.oz' 226 2) nil 4) <P: 477> [y(183)])
		allocateL3
		callBI('Space.new' [x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		move(y(2) x(3))
		putConstant(0 x(1))
		deAllocateL3
		genFastCall(<P: 476> 9)
		endDefinition(49874)
lbl(49915)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] y(100))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(y(187))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
lbl(49943)	definition(x(0) 49987 pid('OneModule.depth' 4 pos('./cp/Search.oz' 233 32) nil 4) <P: 478> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 49968)
lbl(49963)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(49968)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(49943)
lbl(49987)	unify(x(0) y(187))
lbl(49990)	definition(x(0) 50030 pid('OneModule.depthP' 4 pos('./cp/Search.oz' 239 18) nil 4) <P: 479> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50015)
lbl(50010)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50015)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(49990)
lbl(50030)	unify(x(0) x(12))
lbl(50033)	definition(x(0) 50068 pid('OneModule.depthS' 4 pos('./cp/Search.oz' 245 18) nil 4) <P: 480> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50058)
lbl(50053)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50058)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50033)
lbl(50068)	unify(x(0) x(13))
lbl(50071)	definition(x(0) 50119 pid('OneModule.bound' 5 pos('./cp/Search.oz' 252 18) nil 5) <P: 481> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50100 [onScalar(nil 50090) onScalar(cut 50095)]))
lbl(50090)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50095)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50100)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50071)
lbl(50119)	unify(x(0) x(9))
lbl(50122)	definition(x(0) 50166 pid('OneModule.boundP' 5 pos('./cp/Search.oz' 259 18) nil 5) <P: 482> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50151 [onScalar(nil 50141) onScalar(cut 50146)]))
lbl(50141)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50146)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50151)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50122)
lbl(50166)	unify(x(0) x(10))
lbl(50169)	definition(x(0) 50208 pid('OneModule.boundS' 5 pos('./cp/Search.oz' 266 18) nil 5) <P: 483> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50198 [onScalar(nil 50188) onScalar(cut 50193)]))
lbl(50188)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50193)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50198)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50169)
lbl(50208)	unify(x(0) x(11))
lbl(50211)	definition(x(0) 50255 pid('OneModule.iter' 4 pos('./cp/Search.oz' 274 18) nil 4) <P: 484> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50236)
lbl(50231)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50236)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50211)
lbl(50255)	unify(x(0) x(14))
lbl(50258)	definition(x(0) 50298 pid('OneModule.iterP' 4 pos('./cp/Search.oz' 280 18) nil 4) <P: 485> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50283)
lbl(50278)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50283)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50258)
lbl(50298)	unify(x(0) x(15))
lbl(50301)	definition(x(0) 50336 pid('OneModule.iterS' 4 pos('./cp/Search.oz' 286 18) nil 4) <P: 486> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50326)
lbl(50321)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50326)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50301)
lbl(50336)	unify(x(0) x(16))
lbl(50339)	definition(x(0) 50404 pid('OneModule.lds' 4 pos('./cp/Search.oz' 293 18) nil 4) <P: 487> [y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50385)
		match(x(0) ht(50382 [onScalar(killed 50361) onRecord(succeeded 1 50366)]))
lbl(50361)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50366)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.merge' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL4
		return
lbl(50382)	callBI('Exception.raise' [x(0)]#nil)
lbl(50385)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50339)
lbl(50404)	unify(x(0) x(17))
lbl(50407)	definition(x(0) 50468 pid('OneModule.ldsP' 4 pos('./cp/Search.oz' 299 18) nil 4) <P: 488> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50449)
		match(x(0) ht(50446 [onScalar(killed 50429) onRecord(succeeded 1 50434)]))
lbl(50429)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50434)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL4
		genFastCall(<P: 460> 5)
lbl(50446)	callBI('Exception.raise' [x(0)]#nil)
lbl(50449)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50407)
lbl(50468)	unify(x(0) x(18))
lbl(50471)	definition(x(0) 50530 pid('OneModule.ldsS' 4 pos('./cp/Search.oz' 305 18) nil 4) <P: 489> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50511)
		match(x(0) ht(50508 [onScalar(killed 50493) onRecord(succeeded 1 50498)]))
lbl(50493)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50498)	getVariable(x(0))
		getList(y(3))
		unifyValue(x(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(50508)	callBI('Exception.raise' [x(0)]#nil)
lbl(50511)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50471)
lbl(50530)	unify(x(0) x(19))
lbl(50533)	definition(x(9) 50643 pid('AllNR' 5 pos('./cp/Search.oz' 320 6) nil 8) <P: 490> [y(184) y(185) y(188)])
		testBI('Value.isFree' [x(0)]#[x(5)] 50637)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(50624 [onScalar(failed 50549) onScalar(succeeded 50553) onRecord(alternatives 1 50568)]))
lbl(50549)	unify(x(4) x(3))
		return
lbl(50553)	getList(x(4))
		unifyVariable(x(4))
		unifyValue(x(3))
		move(x(1) x(0))
		move(x(4) x(1))
		tailCall(x(2) 2)
lbl(50568)	allocateL5
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 490> 10)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 490> 11)
lbl(50624)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(329)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(50637)	unify(x(4) x(3))
		return
		endDefinition(50533)
lbl(50643)	definition(x(9) 50767 pid('AltCopy' 8 pos('./cp/Search.oz' 335 2) nil 10) <P: 491> [y(188) y(185)])
		testBI('Value.\'==\'' [x(1) x(2)]#[x(8)] 50680)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 492> 19)
lbl(50680)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(x(7) x(8))
		putConstant(1 x(4))
		createVariableMove(y(7) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		move(y(7) x(7))
		deAllocateL8
		genFastCall(<P: 491> 17)
		endDefinition(50643)
lbl(50767)	definition(x(9) 50921 pid('Alt' 11 pos('./cp/Search.oz' 346 2) nil 12) <P: 493> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(11)] 50813)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 492> 19)
lbl(50813)	allocateL(13)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		moveMoveXYXY(x(8) y(8) x(9) y(9))
		moveMoveXYYX(x(10) y(10) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(11) x(2))
		genFastCall(<P: 462> 6)
		putList(x(3))
		setValue(y(1))
		setValue(y(5))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(6) x(4))
		moveMoveYXYX(y(7) x(5) y(8) x(6))
		move(y(10) x(8))
		createVariableMove(y(12) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(11) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		moveMoveYXYX(y(7) x(7) y(8) x(8))
		moveMoveYXYX(y(9) x(9) y(12) x(10))
		deAllocateL
		genFastCall(<P: 493> 23)
		endDefinition(50767)
lbl(50921)	definition(x(9) 51041 pid('AllR' 9 pos('./cp/Search.oz' 356 2) nil 12) <P: 492> [y(184)])
		testBI('Value.isFree' [x(0)]#[x(9)] 51035)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51022 [onScalar(failed 50937) onScalar(succeeded 50941) onRecord(alternatives 1 50956)]))
lbl(50937)	unify(x(8) x(7))
		return
lbl(50941)	getList(x(8))
		unifyVariable(x(2))
		unifyValue(x(7))
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(6) 2)
lbl(50956)	getVariable(x(9))
		testBI('Value.\'==\'' [x(4) x(5)]#[x(10)] 50986)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 491> 17)
lbl(50986)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 493> 23)
lbl(51022)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(365)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51035)	unify(x(8) x(7))
		return
		endDefinition(50921)
lbl(51041)	definition(x(0) 51120 pid('All' 4 pos('./cp/Search.oz' 371 6) nil 9) <P: 494> [y(183) y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51091)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51091)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51041)
lbl(51120)	definition(x(1) 51199 pid('AllS' 4 pos('./cp/Search.oz' 379 6) nil 9) <P: 495> [y(183) x(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51170)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51170)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51120)
lbl(51199)	definition(x(2) 51278 pid('AllP' 4 pos('./cp/Search.oz' 387 6) nil 9) <P: 496> [y(183) x(8)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51249)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51249)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51199)
lbl(51278)	definition(x(7) 51426 pid('BABNR' 5 pos('./cp/Search.oz' 404 2) nil 8) <P: 497> [y(184) y(185) y(188)])
		testBI('Value.isFree' [x(0)]#[x(5)] 51420)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(51407 [onScalar(failed 51294) onScalar(succeeded 51298) onRecord(alternatives 1 51302)]))
lbl(51294)	unify(x(4) x(3))
		return
lbl(51298)	unify(x(4) x(1))
		return
lbl(51302)	allocateL6
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(6) y(4))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 497> 10)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 51370)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51370)	testLiteral(y(5) nil 51379)
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(51379)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51407)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(416)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51420)	getLiteral(nil x(4))
		return
		endDefinition(51278)
lbl(51426)	definition(x(7) 51631 pid('AltCopy' 8 pos('./cp/Search.oz' 422 5) nil 10) <P: 498> [y(188) y(185)])
		testBI('Value.\'==\'' [x(1) x(2)]#[x(8)] 51463)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 499> 19)
lbl(51463)	allocateL9
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(y(6) x(7))
		putConstant(1 x(4))
		createVariableMove(y(8) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(8) x(0) y(6) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 51562)
		move(y(1) x(0))
		inlinePlus1(x(0) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(6) x(6) y(7) x(7))
		deAllocateL9
		genFastCall(<P: 498> 17)
lbl(51562)	testLiteral(y(8) nil 51571)
		getLiteral(nil y(7))
		deAllocateL9
		return
lbl(51571)	move(y(1) x(1))
		inlinePlus1(x(1) x(3))
		putRecord('#' 2 x(1))
		setValue(x(3))
		setValue(y(2))
		move(y(3) x(2))
		callBI('Space.commit' [x(2) x(1)]#nil)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(8) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(8) x(7) y(7) x(8))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<P: 499> 19)
		endDefinition(51426)
lbl(51631)	definition(x(7) 51876 pid('Alt' 11 pos('./cp/Search.oz' 440 5) nil 12) <P: 500> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(11)] 51677)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 499> 19)
lbl(51677)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		moveMoveYXYX(y(7) x(6) y(8) x(7))
		createVariableMove(y(10) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(10) x(0) y(8) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 51796)
		move(y(1) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		moveMoveYXYX(y(7) x(8) y(8) x(9))
		move(y(9) x(10))
		deAllocateL
		genFastCall(<P: 500> 23)
lbl(51796)	testLiteral(y(10) nil 51805)
		getLiteral(nil y(9))
		deAllocateL
		return
lbl(51805)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(3))
		putRecord('#' 2 x(0))
		setValue(x(3))
		setValue(y(2))
		move(y(5) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(10) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(4))
		moveMoveYXYX(y(6) x(5) y(7) x(6))
		moveMoveYXYX(y(10) x(7) y(9) x(8))
		putConstant(nil x(3))
		deAllocateL
		genFastCall(<P: 499> 19)
		endDefinition(51631)
lbl(51876)	definition(x(7) 51985 pid('BABR' 9 pos('./cp/Search.oz' 458 5) nil 12) <P: 499> [y(184)])
		testBI('Value.isFree' [x(0)]#[x(9)] 51979)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51966 [onScalar(failed 51892) onScalar(succeeded 51896) onRecord(alternatives 1 51900)]))
lbl(51892)	unify(x(8) x(7))
		return
lbl(51896)	unify(x(8) x(1))
		return
lbl(51900)	getVariable(x(9))
		testBI('Value.\'==\'' [x(4) x(5)]#[x(10)] 51930)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 498> 17)
lbl(51930)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 500> 23)
lbl(51966)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(467)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51979)	getLiteral(nil x(8))
		return
		endDefinition(51876)
lbl(51985)	definition(x(7) 52064 pid('BestBAB' 5 pos('./cp/Search.oz' 474 2) nil 9) <P: 501> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52036)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 497> 11)
lbl(52036)	move(y(4) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(2) x(4) y(2) x(5))
		moveMoveYXYX(y(1) x(6) y(3) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 499> 19)
		endDefinition(51985)
lbl(52064)	definition(x(7) 52140 pid('RestartNR' 5 pos('./cp/Search.oz' 484 2) nil 6) <P: 502> [y(185)])
		testBI('Value.isFree' [x(0)]#[x(5)] 52134)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(5) nil 52106)
lbl(52101)	unify(y(3) y(2))
		deAllocateL6
		return
lbl(52106)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 502> 11)
lbl(52134)	getLiteral(nil x(4))
		return
		endDefinition(52064)
lbl(52140)	definition(x(7) 52229 pid('RestartR' 6 pos('./cp/Search.oz' 494 2) nil 7) <P: 503> [y(185)])
		testBI('Value.isFree' [x(0)]#[x(6)] 52223)
		allocateL7
		callBI('Space.clone' [x(1)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(1) x(2))
		move(y(3) x(5))
		putConstant(nil x(3))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 52193)
lbl(52188)	unify(y(4) y(2))
		deAllocateL7
		return
lbl(52193)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL7
		genFastCall(<P: 503> 13)
lbl(52223)	getLiteral(nil x(5))
		return
		endDefinition(52140)
lbl(52229)	definition(x(7) 52299 pid('BestRestart' 5 pos('./cp/Search.oz' 504 2) nil 6) <P: 504> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52280)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 502> 11)
lbl(52280)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 503> 13)
		endDefinition(52229)
lbl(52299)	putRecord(best [bab babP babS restart restartP restartS] y(192))
		setVariable(y(208))
		setVariable(x(7))
		setVariable(x(8))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
lbl(52315)	definition(x(3) 52359 pid('BestModule.bab' 5 pos('./cp/Search.oz' 516 34) nil 5) <P: 505> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52340)
lbl(52335)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52340)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52315)
lbl(52359)	unify(x(3) y(208))
lbl(52362)	definition(x(3) 52402 pid('BestModule.babP' 5 pos('./cp/Search.oz' 522 13) nil 5) <P: 506> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52387)
lbl(52382)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52387)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52362)
lbl(52402)	unify(x(3) x(7))
lbl(52405)	definition(x(3) 52440 pid('BestModule.babS' 5 pos('./cp/Search.oz' 528 13) nil 5) <P: 507> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52430)
lbl(52425)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52430)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52405)
lbl(52440)	unify(x(3) x(8))
lbl(52443)	definition(x(3) 52487 pid('BestModule.restart' 5 pos('./cp/Search.oz' 535 13) nil 5) <P: 508> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52468)
lbl(52463)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52468)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52443)
lbl(52487)	unify(x(3) x(9))
lbl(52490)	definition(x(3) 52530 pid('BestModule.restartP' 5 pos('./cp/Search.oz' 541 13) nil 5) <P: 509> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52515)
lbl(52510)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52515)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52490)
lbl(52530)	unify(x(3) x(10))
lbl(52533)	definition(x(3) 52568 pid('BestModule.restartS' 5 pos('./cp/Search.oz' 547 13) nil 5) <P: 510> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52558)
lbl(52553)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52558)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52533)
lbl(52568)	unify(x(3) x(11))
lbl(52571)	definition(x(7) 52639 pid('Recompute' 2 pos('./cp/Search.oz' 559 2) nil 4) <P: 511> [y(179) y(185) y(188)])
		shallowGuard(52626)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(52585)	shallowThen
		testBI('Space.is' [x(2)]#[x(0)] 52597)
		callBI('Space.clone' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(52597)	allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genFastCall(<P: 511> 4)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(0) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		deAllocateL2
		return
lbl(52626)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(52571)
lbl(52639)	putRecord('attr' [backtrack cur isStopped prev rd sol stack] x(7))
		setConstant(false)
		setConstant(<U: ooFreeFlag>)
		setConstant(false)
		setConstant(nil)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		setConstant(nil)
		putRecord('feat' [manager mrd order] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(52667)	definition(x(8) 52727 pid('ReClass,init/fast' 3 pos('./cp/Search.oz' 572 5) nil 4) <P: 512> [y(183)])
		callBI('Space.new' [x(0)]#[x(3)])
		inlineAssign(cur x(3) cache)
		inlineAssign(rd x(2) cache)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		putConstant(false x(0))
		inlineAssign(backtrack x(0) cache)
		getSelf(x(0))
		inlineDot(x(0) mrd x(3) cache)
		unify(x(3) x(2))
		getSelf(x(0))
		inlineDot(x(0) order x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(52667)
lbl(52727)	definition(x(9) 52768 pid('ReClass,init/slow' 1 pos('./cp/Search.oz' 572 5) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 512> 7)
		endDefinition(52727)
lbl(52768)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(52778)	definition(x(8) 52795 pid('ReClass,stop/fast' 0 pos('./cp/Search.oz' 581 5) nil 1) <P: 513> nil)
		putConstant(true x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52778)
lbl(52795)	definition(x(9) 52809 pid('ReClass,stop/slow' 1 pos('./cp/Search.oz' 581 5) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 513> 1)
		endDefinition(52795)
lbl(52809)	putRecord('#' [1 2 fast] x(11))
		setConstant(stop)
		setValue(x(9))
		setValue(x(8))
lbl(52819)	definition(x(8) 52836 pid('ReClass,resume/fast' 0 pos('./cp/Search.oz' 585 5) nil 1) <P: 514> nil)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52819)
lbl(52836)	definition(x(9) 52850 pid('ReClass,resume/slow' 1 pos('./cp/Search.oz' 585 5) nil 1) unit nil)
		getLiteral(resume x(0))
		genFastCall(<P: 514> 1)
		endDefinition(52836)
lbl(52850)	putRecord('#' [1 2 fast] x(12))
		setConstant(resume)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(209))
lbl(52862)	definition(x(8) 52918 pid('ReClass,last/fast' 1 pos('./cp/Search.oz' 589 5) nil 3) <P: 515> [y(209)])
		allocateL2
		move(x(0) y(0))
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(next x(2) 1 cache)
		match(y(1) ht(52901 [onScalar(stopped 52886) onScalar(nil 52891)]))
lbl(52886)	getLiteral(stopped y(0))
		deAllocateL2
		return
lbl(52891)	inlineAt(prev x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(52901)	move(y(1) x(0))
		inlineAssign(prev x(0) cache)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true last true 1) 0)
		endDefinition(52862)
lbl(52918)	definition(x(9) 52944 pid('ReClass,last/slow' 1 pos('./cp/Search.oz' 589 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 515> 3)
		endDefinition(52918)
lbl(52944)	putRecord('#' [1 2 fast] x(13))
		setConstant(last)
		setValue(x(9))
		setValue(x(8))
lbl(52954)	definition(x(8) 53011 pid('ReClass,next/fast' 1 pos('./cp/Search.oz' 597 5) nil 3) <P: 516> [y(209)])
		allocateL1
		inlineAt(backtrack x(1) cache)
		move(x(0) y(0))
		testBool(x(1) 52997 52986)
		genCall(gci(g(0) true backtrack false 0) 0)
		putConstant(false x(1))
		inlineAssign(backtrack x(1) cache)
		branch(52997)
lbl(52986)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(598)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(52997)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(explore x(2) 1 cache)
		endDefinition(52954)
lbl(53011)	definition(x(9) 53037 pid('ReClass,next/slow' 1 pos('./cp/Search.oz' 597 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 516> 3)
		endDefinition(53011)
lbl(53037)	putRecord('#' [1 2 fast] x(14))
		setConstant(next)
		setValue(x(9))
		setValue(x(8))
lbl(53047)	definition(x(8) 53171 pid('ReClass,push/fast' 1 pos('./cp/Search.oz' 606 5) nil 7) <P: 517> [y(185)])
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAt(rd x(2) cache)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(3)] 53124)
		putConstant(1 x(1))
		inlineAssign(rd x(1) cache)
		inlineAt(sol x(1) cache)
		inlineAt(cur x(2) cache)
		callBI('Space.clone' [x(2)]#[x(3)])
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(5))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(6))
		setValue(x(3))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		inlineAssign(stack x(4) cache)
		return
lbl(53124)	inlineAt(rd x(1) cache)
		inlinePlus1(x(1) x(2))
		inlineAssign(rd x(2) cache)
		inlineAt(sol x(1) cache)
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(4))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(x(2))
		inlineAssign(stack x(3) cache)
		return
		endDefinition(53047)
lbl(53171)	definition(x(9) 53197 pid('ReClass,push/slow' 1 pos('./cp/Search.oz' 606 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 517> 3)
		endDefinition(53171)
lbl(53197)	putRecord('#' [1 2 fast] x(15))
		setConstant(push)
		setValue(x(9))
		setValue(x(8))
lbl(53207)	definition(x(8) 53504 pid('ReClass,backtrack/fast' 0 pos('./cp/Search.oz' 616 5) nil 7) <P: 518> [y(209) y(179) y(188)])
		inlineAt(stack x(0) cache)
		match(x(0) ht(53489 [onScalar(nil 53221) onRecord('|' 2 53230)]))
lbl(53221)	putConstant(false x(0))
		inlineAssign(cur x(0) cache)
		return
lbl(53230)	getVarVar(x(0) x(1))
		testRecord(x(0) '#' 3 53481)
lbl(53238)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testBI('Value.\'==\'' [x(0) x(2)]#[x(4)] 53268)
		inlineAssign(stack x(1) cache)
		inlineAt(rd x(0) cache)
		inlineMinus1(x(0) x(1))
		inlineAssign(rd x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53268)	allocateL4
		inlinePlus1(x(0) x(4))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		testBI('Value.\'==\'' [x(2) x(4)]#[x(6)] 53350)
lbl(53292)	testBI('Space.is' [x(0)]#[x(6)] 53350)
lbl(53296)	callBI('Space.commit' [x(0) x(2)]#nil)
		inlineAssign(stack x(5) cache)
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAssign(rd x(1) cache)
		inlineAssign(cur x(0) cache)
		inlineAt(sol x(1) cache)
		testBI('Value.\'==\'' [x(1) x(3)]#[x(2)] 53333)
		deAllocateL4
		return
lbl(53333)	getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		deAllocateL4
		genFastCall(<P: 463> 7)
lbl(53350)	inlineAt(sol x(0) cache)
		move(y(2) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 53404)
		putRecord('#' 3 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(2))
		putList(x(2))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(stack x(2) cache)
		inlineAt(stack x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 511> 4)
		move(y(0) x(0))
		inlineAssign(cur x(0) cache)
		deAllocateL4
		return
lbl(53404)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 511> 4)
		move(y(2) x(0))
		inlineAssign(cur x(0) cache)
		inlineAt(cur x(0) cache)
		putRecord('#' 2 x(1))
		setValue(y(3))
		setValue(y(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		inlineAt(cur x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		genFastCall(<P: 463> 6)
		getSelf(x(0))
		inlineDot(x(0) mrd x(0) cache)
		inlineAssign(rd x(0) cache)
		move(y(0) x(0))
		inlineAssign(stack x(0) cache)
		deAllocateL4
		return
lbl(53481)	inlineAssign(stack x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53489)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(646)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(53207)
lbl(53504)	definition(x(9) 53518 pid('ReClass,backtrack/slow' 1 pos('./cp/Search.oz' 616 5) nil 1) unit nil)
		getLiteral(backtrack x(0))
		genFastCall(<P: 518> 1)
		endDefinition(53504)
lbl(53518)	putRecord('#' [1 2 fast] x(16))
		setConstant(backtrack)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 7 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		moveMoveXYXY(x(0) y(232) x(1) y(233))
		move(x(2) y(234))
		move(x(8) x(1))
		move(x(7) x(2))
		move(y(209) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('ReClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(235))
lbl(53589)	definition(x(7) 53709 pid('All,explore/fast' 1 pos('./cp/Search.oz' 653 5) nil 3) <P: 519> [y(184) y(235) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53613 53696)
		getLiteral(stopped x(0))
		return
lbl(53613)	testLiteral(x(1) false 53621)
		getLiteral(nil x(0))
		return
lbl(53621)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53683 [onScalar(failed 53627) onScalar(succeeded 53641) onRecord(alternatives 1 53653)]))
lbl(53627)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53641)	unify(x(0) x(1))
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53653)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(1) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53683)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(665)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53696)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(656)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53589)
lbl(53709)	definition(x(8) 53735 pid('All,explore/slow' 1 pos('./cp/Search.oz' 653 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 519> 3)
		endDefinition(53709)
lbl(53735)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(235) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('All' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(236))
lbl(53780)	definition(x(7) 53905 pid('Best,explore/fast' 1 pos('./cp/Search.oz' 670 5) nil 3) <P: 520> [y(184) y(236) y(209) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53804 53892)
		getLiteral(stopped x(0))
		return
lbl(53804)	testLiteral(x(1) false 53812)
		getLiteral(nil x(0))
		return
lbl(53812)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53879 [onScalar(failed 53818) onScalar(succeeded 53832) onRecord(alternatives 1 53849)]))
lbl(53818)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53832)	unify(x(0) x(1))
		inlineAssign(sol x(0) cache)
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53849)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(2) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53879)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(682)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53892)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(673)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53780)
lbl(53905)	definition(x(8) 53931 pid('Best,explore/slow' 1 pos('./cp/Search.oz' 670 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 520> 3)
		endDefinition(53905)
lbl(53931)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(236) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('Best' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(53962)	definition(x(7) 53971 pid('Dummy' 1 pos('./cp/Search.oz' 687 6) nil 1) <P: 521> nil)
		return
		endDefinition(53962)
lbl(53971)	putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: MyAgent> <N: RCD>] x(2))
		setValue(x(7))
		setConstant(1)
lbl(53991)	definition(x(8) 54115 pid('SearchObject,script' 1 pos('./cp/Search.oz' 700 2) nil 5) unit [y(236) y(235)])
		allocateL3
		inlineDot(x(0) 1 x(3) cache)
		createVariable(x(1))
		callBI('Object.ooGetLock' [x(1)]#nil)
		lockThread(54111 x(1))
		inlineAt(<N: RCD> x(1) cache)
		putConstant(rcd x(2))
		callBI('Value.condSelect' [x(0) x(2) x(1)]#[x(4)])
		move(x(4) y(0))
		createVariable(y(1))
		putConstant(2 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 54067)
		inlineDot(x(0) 2 x(1) cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(2)])
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
		branch(54094)
lbl(54067)	move(g(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		move(x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		putConstant(false x(1))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
lbl(54094)	move(y(1) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<N: RCD> x(0) cache)
		return
lbl(54111)	deAllocateL3
		return
		endDefinition(53991)
lbl(54115)	putList(x(9))
		setConstant(script)
		setValue(x(8))
lbl(54121)	definition(x(8) 54166 pid('SearchObject,Next/fast' 1 pos('./cp/Search.oz' 711 2) nil 2) <P: 522> nil)
		allocateL2
		createVariable(x(1))
		callBI('Object.ooGetLock' [x(1)]#nil)
		lockThread(54162 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(next y(1) 1 cache)
		return
lbl(54162)	deAllocateL2
		return
		endDefinition(54121)
lbl(54166)	definition(x(10) 54192 pid('SearchObject,Next/slow' 1 pos('./cp/Search.oz' 711 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 522> 3)
		endDefinition(54166)
lbl(54192)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Next>)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(184))
lbl(54204)	definition(x(8) 54251 pid('SearchObject,next/fast' 1 pos('./cp/Search.oz' 715 2) nil 3) <P: 523> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54244)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54244)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54204)
lbl(54251)	definition(x(10) 54277 pid('SearchObject,next/slow' 1 pos('./cp/Search.oz' 715 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 523> 3)
		endDefinition(54251)
lbl(54277)	putRecord('#' [1 2 fast] x(12))
		setConstant(next)
		setValue(x(10))
		setValue(x(8))
lbl(54287)	definition(x(8) 54331 pid('SearchObject,nextS/fast' 1 pos('./cp/Search.oz' 723 2) nil 3) <P: 524> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54324)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54324)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54287)
lbl(54331)	definition(x(10) 54357 pid('SearchObject,nextS/slow' 1 pos('./cp/Search.oz' 723 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 524> 3)
		endDefinition(54331)
lbl(54357)	putRecord('#' [1 2 fast] x(13))
		setConstant(nextS)
		setValue(x(10))
		setValue(x(8))
lbl(54367)	definition(x(8) 54407 pid('SearchObject,nextP/fast' 1 pos('./cp/Search.oz' 731 2) nil 2) <P: 525> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54400)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54400)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54367)
lbl(54407)	definition(x(10) 54433 pid('SearchObject,nextP/slow' 1 pos('./cp/Search.oz' 731 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 525> 3)
		endDefinition(54407)
lbl(54433)	putRecord('#' [1 2 fast] x(14))
		setConstant(nextP)
		setValue(x(10))
		setValue(x(8))
lbl(54443)	definition(x(8) 54488 pid('SearchObject,Last/fast' 1 pos('./cp/Search.oz' 739 2) nil 2) <P: 526> nil)
		allocateL2
		createVariable(x(1))
		callBI('Object.ooGetLock' [x(1)]#nil)
		lockThread(54484 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(last y(1) 1 cache)
		return
lbl(54484)	deAllocateL2
		return
		endDefinition(54443)
lbl(54488)	definition(x(10) 54514 pid('SearchObject,Last/slow' 1 pos('./cp/Search.oz' 739 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 526> 3)
		endDefinition(54488)
lbl(54514)	putRecord('#' [1 2 fast] x(15))
		setConstant(<N: Last>)
		setValue(x(10))
		setValue(x(8))
lbl(54524)	definition(x(8) 54571 pid('SearchObject,last/fast' 1 pos('./cp/Search.oz' 743 2) nil 3) <P: 527> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54564)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54564)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54524)
lbl(54571)	definition(x(10) 54597 pid('SearchObject,last/slow' 1 pos('./cp/Search.oz' 743 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 527> 3)
		endDefinition(54571)
lbl(54597)	putRecord('#' [1 2 fast] x(16))
		setConstant(last)
		setValue(x(10))
		setValue(x(8))
lbl(54607)	definition(x(8) 54651 pid('SearchObject,lastS/fast' 1 pos('./cp/Search.oz' 751 2) nil 3) <P: 528> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54644)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54644)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54607)
lbl(54651)	definition(x(10) 54677 pid('SearchObject,lastS/slow' 1 pos('./cp/Search.oz' 751 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 528> 3)
		endDefinition(54651)
lbl(54677)	putRecord('#' [1 2 fast] x(17))
		setConstant(lastS)
		setValue(x(10))
		setValue(x(8))
lbl(54687)	definition(x(8) 54727 pid('SearchObject,lastP/fast' 1 pos('./cp/Search.oz' 759 2) nil 2) <P: 529> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('Space.is' [x(0)]#[x(1)] 54720)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54720)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54687)
lbl(54727)	definition(x(10) 54753 pid('SearchObject,lastP/slow' 1 pos('./cp/Search.oz' 759 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 529> 3)
		endDefinition(54727)
lbl(54753)	putRecord('#' [1 2 fast] x(18))
		setConstant(lastP)
		setValue(x(10))
		setValue(x(8))
lbl(54763)	definition(x(8) 54782 pid('SearchObject,stop/fast' 0 pos('./cp/Search.oz' 767 2) nil 1) <P: 530> nil)
		inlineAt(<N: MyAgent> x(0) cache)
		tailSendMsg(stop x(0) 0 cache)
		endDefinition(54763)
lbl(54782)	definition(x(10) 54796 pid('SearchObject,stop/slow' 1 pos('./cp/Search.oz' 767 2) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 530> 1)
		endDefinition(54782)
lbl(54796)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(10))
		setValue(x(8))
lbl(54806)	definition(x(8) 54843 pid('SearchObject,clear/fast' 0 pos('./cp/Search.oz' 771 2) nil 1) <P: 531> [x(7)])
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(54840 x(0))
		inlineAt(<N: MyAgent> x(0) cache)
		sendMsg(stop x(0) 0 cache)
		move(g(0) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		return
lbl(54840)	return
		endDefinition(54806)
lbl(54843)	definition(x(7) 54857 pid('SearchObject,clear/slow' 1 pos('./cp/Search.oz' 771 2) nil 1) unit nil)
		getLiteral(clear x(0))
		genFastCall(<P: 531> 1)
		endDefinition(54843)
lbl(54857)	putRecord('#' [1 2 fast] x(10))
		setConstant(clear)
		setValue(x(7))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(10))
		move(y(184) x(6))
		putConstant('feat' x(3))
		putConstant('SearchObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(54905)	definition(x(4) 54924 pid('SearchOne' 2 pos('./cp/Search.oz' 784 3) nil 4) <P: 532> [y(187)])
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 478> 9)
		endDefinition(54905)
lbl(54924)	definition(x(5) 54943 pid('SearchAll' 2 pos('./cp/Search.oz' 788 3) nil 4) <P: 533> nil)
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 494> 9)
		endDefinition(54924)
lbl(54943)	definition(x(6) 54962 pid('SearchBest' 3 pos('./cp/Search.oz' 792 3) nil 5) <P: 534> [y(208)])
		move(x(2) x(4))
		putConstant(1 x(2))
		createVariable(x(3))
		genFastCall(<P: 505> 11)
		endDefinition(54943)
lbl(54962)	putRecord(base [all best one] x(7))
		setValue(x(5))
		setValue(x(6))
		setValue(x(4))
lbl(54972)	definition(x(2) 55013 pid('' 2 pos('./cp/Search.oz' 802 3) nil 2) <P: 535> [y(232) y(234) y(233) x(7) y(192) y(184) y(100)])
		putConstant(nil x(0))
lbl(54981)	definitionCopy(x(0) 55008 pid('/body' 0 pos('./cp/Search.oz' 802 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4) g(5) g(6)])
		getRecord('export' [all allP allS base best object one] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		unifyValue(g(6))
		unifyValue(g(7))
		return
		endDefinition(54981)
lbl(55008)	tailCall(x(0) 0)
		endDefinition(54972)
lbl(55013)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(best [bab babP babS restart restartP restartS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(base [all best one] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/2')
		putRecord(record 1 x(7))
		setValue(x(4))
		putConstant('procedure/4' x(4))
		putConstant('procedure/4' x(8))
		putConstant('procedure/4' x(9))
		putConstant('class' x(10))
		putRecord('export' [all allP allS base best object one] x(1))
		setValue(x(4))
		setValue(x(8))
		setValue(x(9))
		setValue(x(7))
		setValue(x(6))
		setValue(x(10))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(100) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(100) x(1))
		call(x(2) 2)
lbl(55142)	definition(x(2) 55218 pid('NewTagTest' 2 pos('./op/HtmlTable.oz' 25 3) nil 3) <P: 536> [y(2) y(165)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 159> 4)
lbl(55158)	definition(x(1) 55175 pid('' 2 pos('./op/HtmlTable.oz' 27 28) nil 2) unit nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(unit)
		return
		endDefinition(55158)
lbl(55175)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		putConstant(tags x(0))
		move(y(2) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
lbl(55193)	definition(x(0) 55211 pid('' 2 pos('./op/HtmlTable.oz' 29 6) nil 4) unit [x(2)])
		move(g(0) x(2))
		callBI('Value.hasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(55193)
lbl(55211)	unify(x(0) y(0))
		deAllocateL3
		return
		endDefinition(55142)
lbl(55218)	putRecord(tags 91 x(0))
		setConstant(a)
		setConstant(abbr)
		setConstant(acronym)
		setConstant(address)
		setConstant(applet)
		setConstant(area)
		setConstant(b)
		setConstant(base)
		setConstant(basefont)
		setConstant(bdo)
		setConstant(big)
		setConstant(blockquote)
		setConstant('body')
		setConstant(br)
		setConstant(button)
		setConstant(caption)
		setConstant(center)
		setConstant(cite)
		setConstant(code)
		setConstant(col)
		setConstant(colgroup)
		setConstant(dd)
		setConstant(del)
		setConstant(dfn)
		setConstant(dir)
		setConstant('div')
		setConstant(dl)
		setConstant(dt)
		setConstant(em)
		setConstant(fieldset)
		setConstant(font)
		setConstant(form)
		setConstant(frame)
		setConstant(frameset)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(hr)
		setConstant(html)
		setConstant(i)
		setConstant(iframe)
		setConstant(img)
		setConstant(input)
		setConstant(ins)
		setConstant(isindex)
		setConstant(kbd)
		setConstant(label)
		setConstant(legend)
		setConstant(li)
		setConstant(link)
		setConstant(map)
		setConstant(menu)
		setConstant(meta)
		setConstant(noframes)
		setConstant(noscript)
		setConstant(object)
		setConstant(ol)
		setConstant(optgroup)
		setConstant(option)
		setConstant(p)
		setConstant(param)
		setConstant(pre)
		setConstant(q)
		setConstant(s)
		setConstant(samp)
		setConstant(script)
		setConstant(select)
		setConstant(small)
		setConstant(span)
		setConstant(strike)
		setConstant(strong)
		setConstant(style)
		setConstant(sub)
		setConstant(sup)
		setConstant(table)
		setConstant(tbody)
		setConstant(td)
		setConstant(textarea)
		setConstant(tfoot)
		setConstant(th)
		setConstant(thead)
		setConstant(title)
		setConstant(tr)
		setConstant(tt)
		setConstant(u)
		setConstant(ul)
		setConstant(var)
		createVariableMove(y(184) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 13 x(0))
		setConstant(area)
		setConstant(base)
		setConstant(basefont)
		setConstant(br)
		setConstant(col)
		setConstant(frame)
		setConstant(hr)
		setConstant(img)
		setConstant(input)
		setConstant(isindex)
		setConstant(link)
		setConstant(meta)
		setConstant(param)
		createVariableMove(y(185) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 19 x(0))
		setConstant(blockquote)
		setConstant('body')
		setConstant(center)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(html)
		setConstant(map)
		setConstant(menu)
		setConstant(p)
		setConstant(pre)
		setConstant(table)
		setConstant(td)
		setConstant(th)
		setConstant(title)
		createVariableMove(y(186) x(1))
		genFastCall(<P: 536> 4)
lbl(55494)	definition(x(4) 55551 pid('GetOptions' 4 pos('./op/Open.oz' 27 3) nil 7) <P: 537> nil)
		match(x(0) ht(55536 [onScalar(nil 55503) onRecord('|' 2 55510)]))
lbl(55503)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(55510)	getVarVar(x(4) x(5))
		testBI('Int.is' [x(4)]#[x(6)] 55529)
		inlinePlus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 537> 9)
lbl(55529)	unify(x(2) x(1))
		unify(x(0) x(3))
		return
lbl(55536)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(33)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55494)
lbl(55551)	definition(x(4) 55613 pid('BuildOptions' 3 pos('./op/Open.oz' 36 3) nil 6) <P: 538> nil)
		match(x(0) ht(55598 [onScalar(nil 55560) onRecord('|' 2 55564)]))
lbl(55560)	getLiteral('' x(2))
		return
lbl(55564)	getVarVar(x(0) x(3))
		getRecord('#' 6 x(2))
		unifyLiteral(' ')
		unifyValue(x(0))
		unifyLiteral('="')
		unifyVariable(x(2))
		unifyLiteral('"')
		unifyVariable(x(4))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 538> 7)
lbl(55598)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55551)
lbl(55613)	putList(x(3))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(2))
		setConstant('S_IXGRP')
		setValue(x(3))
		putList(x(1))
		setConstant('S_IXUSR')
		setValue(x(2))
		putList(x(7))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(6))
		setConstant('S_IRGRP')
		setValue(x(7))
		putList(x(5))
		setConstant('S_IRUSR')
		setValue(x(6))
		putList(x(10))
		setConstant('S_IWOTH')
		setConstant(nil)
		putList(x(9))
		setConstant('S_IWGRP')
		setValue(x(10))
		putList(x(8))
		setConstant('S_IWUSR')
		setValue(x(9))
		putRecord(access [execute read write] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putList(x(12))
		setConstant('S_IXGRP')
		setConstant(nil)
		putList(x(13))
		setConstant('S_IRGRP')
		setConstant(nil)
		putList(x(14))
		setConstant('S_IWGRP')
		setConstant(nil)
		putRecord(access [execute read write] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(16))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(17))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(18))
		setConstant('S_IWOTH')
		setConstant(nil)
		putRecord(access [execute read write] x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(20))
		setConstant('S_IXUSR')
		setConstant(nil)
		putList(x(21))
		setConstant('S_IRUSR')
		setConstant(nil)
		putList(x(22))
		setConstant('S_IWUSR')
		setConstant(nil)
		putRecord(access [execute read write] x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		putRecord(map [all group others owner] x(4))
		setValue(x(0))
		setValue(x(11))
		setValue(x(15))
		setValue(x(19))
lbl(55773)	definition(x(5) 55871 pid('ModeToOS' 2 pos('./op/Open.oz' 77 6) nil 5) <P: 539> [y(159) x(4)])
lbl(55779)	definition(x(4) 55857 pid('' 4 pos('./op/Open.oz' 79 3) nil 5) unit [g(1)])
lbl(55785)	definition(x(4) 55843 pid('' 3 pos('./op/Open.oz' 81 7) nil 7) unit [g(0) x(0)])
		testLiteral(x(0) false 55799)
		getLiteral(false x(2))
		return
lbl(55799)	allocateL1
		move(x(2) y(0))
		move(g(0) x(3))
		move(g(1) x(4))
		testBI('Value.hasFeature' [x(3) x(4)]#[x(5)] 55836)
lbl(55813)	callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		testBI('Value.hasFeature' [x(5) x(1)]#[x(6)] 55836)
lbl(55820)	callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		callBI('Record.\'.\'' [x(5) x(1)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		deAllocateL1
		genFastCall(<P: 21> 7)
lbl(55836)	getLiteral(false y(0))
		deAllocateL1
		return
		endDefinition(55785)
lbl(55843)	move(x(2) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(55779)
lbl(55857)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 173> 9)
		endDefinition(55773)
lbl(55871)	putRecord(map [append create exclude truncate] x(4))
		setConstant('O_APPEND')
		setConstant('O_CREAT')
		setConstant('O_EXCL')
		setConstant('O_TRUNC')
lbl(55883)	definition(x(5) 56067 pid('FlagsToOS' 2 pos('./op/Open.oz' 100 6) nil 4) <P: 540> [x(4)])
		allocateL5
lbl(55890)	definition(x(2) 55953 pid('' 3 pos('./op/Open.oz' 102 3) nil 5) unit [g(0)])
		testLiteral(x(0) false 55904)
		getLiteral(false x(2))
		return
lbl(55904)	allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) read 55919)
lbl(55914)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(55919)	testLiteral(x(1) write 55925)
		branch(55914)
lbl(55925)	move(g(0) x(3))
		testBI('Value.hasFeature' [x(3) x(1)]#[x(4)] 55946)
		getList(y(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		callBI('Record.\'.\'' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		deAllocateL2
		return
lbl(55946)	getLiteral(false y(1))
		deAllocateL2
		return
		endDefinition(55890)
lbl(55953)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(1))
		putConstant(read x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		testBool(y(3) 55999 56036)
lbl(55978)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 55999 56036)
lbl(55994)	getLiteral('O_RDWR' y(4))
		branch(56047)
lbl(55999)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 56020 56025)
		getLiteral('O_WRONLY' y(4))
		branch(56047)
lbl(56020)	getLiteral('O_RDONLY' y(4))
		branch(56047)
lbl(56025)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(111)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56036)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56047)	putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(55883)
lbl(56067)	putConstant(4096 x(4))
		putConstant(1024 x(5))
		putConstant(500 x(6))
lbl(56076)	definition(x(2) 63122 pid('' 2 pos('./op/Open.oz' 120 3) nil 4) <P: 541> [y(228) y(194) x(4) x(5) x(6) y(184) y(185) y(186)])
		putList(x(2))
		setPredicateRef(<Q: 542>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 543>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 544>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 545>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 546>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 547>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 548>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 549>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 550>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 551>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 552>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 553>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 554>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 555>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 556>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 557>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 558>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 559>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 560>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 561>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 562>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 563>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 564>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 565>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 566>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 567>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 568>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 569>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PID>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 570>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: WriteTagBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 571>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 572>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 573>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 574>)
		setValue(x(3))
lbl(56292)	definitionCopy(x(2) 63117 pid('/body' 0 pos('./op/Open.oz' 120 3) [once] 21) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL8
		move(g(0) x(0))
		inlineDot(x(0) 'OS' x(1) cache)
		inlineDot(x(0) 'Error' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Resolve' x(4) cache)
lbl(56326)	definition(x(7) 56360 pid('RaiseClosed' 2 pos('./op/Open.oz' 166 6) nil 3) <Q: 542> [g(1)])
		allocateL1
		putRecord(open 3 x(2))
		setConstant(alreadyClosed)
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(56326)
lbl(56360)	definition(x(7) 56439 pid('DoWrite' 4 pos('./op/Open.oz' 173 6) nil 6) <Q: 543> [x(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 56423)
lbl(56395)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Value.wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 543> 9)
lbl(56423)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(56360)
lbl(56439)	putList(x(7))
		setConstant(0)
		setConstant(nil)
		putList(x(8))
		setValue(g(2))
		setConstant(nil)
		putList(x(9))
		setConstant(native)
		setConstant(nil)
		putRecord('attr' [<N: AtEnd> <N: Buff> <N: Last> <N: ReadDesc> <N: WriteDesc>] x(10))
		setConstant(false)
		setConstant(nil)
		setValue(x(7))
		setConstant(false)
		setConstant(false)
		putRecord('feat' [<N: ReadLock> <N: WriteLock>] x(7))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(56479)	definition(x(11) 56556 pid('DescClass,InitLocks/fast' 1 pos('./op/Open.oz' 193 2) nil 3) <Q: 544> [g(1)])
		allocateL1
		move(x(0) y(0))
		exHandler(56523)
		testRecord(x(0) 'failure' [debug] 56520)
lbl(56496)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(alreadyInitialized)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(56520)	callBI('Exception.raise' [x(0)]#nil)
lbl(56523)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		callBI('Lock.new' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		callBI('Lock.new' nil#[x(1)])
		unify(x(1) x(0))
		popEx
		deAllocateL1
		return
		endDefinition(56479)
lbl(56556)	definition(x(12) 56582 pid('DescClass,InitLocks/slow' 1 pos('./op/Open.oz' 193 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 544> 3)
		endDefinition(56556)
lbl(56582)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: InitLocks>)
		setValue(x(12))
		setValue(x(11))
		createVariable(y(0))
lbl(56594)	definition(x(11) 56640 pid('DescClass,dOpen/fast' 2 pos('./op/Open.oz' 203 2) nil 3) <Q: 545> [y(0)])
		allocateL2
		putRecord(dOpen 2 x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <N: InitLocks> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
		endDefinition(56594)
lbl(56640)	definition(x(12) 56675 pid('DescClass,dOpen/slow' 1 pos('./op/Open.oz' 203 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 545> 5)
		endDefinition(56640)
lbl(56675)	putRecord('#' [1 2 fast] x(14))
		setConstant(dOpen)
		setValue(x(12))
		setValue(x(11))
lbl(56685)	definition(x(11) 56734 pid('DescClass,getDesc/fast' 2 pos('./op/Open.oz' 209 2) nil 3) <Q: 546> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(56731 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(56730 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		unify(x(0) x(1))
		return
lbl(56730)	return
lbl(56731)	return
		endDefinition(56685)
lbl(56734)	definition(x(12) 56769 pid('DescClass,getDesc/slow' 1 pos('./op/Open.oz' 209 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 546> 5)
		endDefinition(56734)
lbl(56769)	putRecord('#' [1 2 fast] x(15))
		setConstant(getDesc)
		setValue(x(12))
		setValue(x(11))
lbl(56779)	definition(x(11) 56892 pid('DescClass,CloseDescs/fast' 0 pos('./op/Open.oz' 218 2) nil 4) <Q: 547> [x(1)])
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('Int.is' [x(0)]#[x(2)] 56889)
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) deSelect x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 56871)
lbl(56841)	move(g(0) x(0))
		inlineDot(x(0) deSelect x(2) cache)
		move(y(1) x(0))
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
lbl(56871)	putConstant(true x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		putConstant(true x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
lbl(56889)	return
		endDefinition(56779)
lbl(56892)	definition(x(12) 56906 pid('DescClass,CloseDescs/slow' 1 pos('./op/Open.oz' 218 2) nil 1) unit nil)
		getLiteral(<N: CloseDescs> x(0))
		genFastCall(<Q: 547> 1)
		endDefinition(56892)
lbl(56906)	putRecord('#' [1 2 fast] x(16))
		setConstant(<N: CloseDescs>)
		setValue(x(12))
		setValue(x(11))
lbl(56916)	definition(x(11) 56952 pid('DescClass,close/fast' 0 pos('./op/Open.oz' 232 2) nil 1) <Q: 548> [y(0)])
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(56949 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(56948 x(0))
		genCall(gci(g(0) true <N: CloseDescs> false 0) 0)
		return
lbl(56948)	return
lbl(56949)	return
		endDefinition(56916)
lbl(56952)	definition(x(12) 56966 pid('DescClass,close/slow' 1 pos('./op/Open.oz' 232 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 548> 1)
		endDefinition(56952)
lbl(56966)	putRecord('#' [1 2 fast] x(17))
		setConstant(close)
		setValue(x(12))
		setValue(x(11))
		putRecord('#' 5 x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(8) x(0))
		move(x(11) x(1))
		move(x(10) x(2))
		move(x(7) x(3))
		move(x(9) x(4))
		move(y(0) x(6))
		putConstant('DescClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(57024)	definition(x(7) 57102 pid('DoReadAll' 5 pos('./op/Open.oz' 247 2) nil 7) <Q: 549> [y(1) g(3)])
		allocateL6
		move(g(0) x(5))
		inlineDot(x(5) read x(6) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		call(x(6) 5)
		testNumber(y(5) 0 57077)
lbl(57069)	unify(y(4) y(1))
		unify(y(2) y(3))
		deAllocateL6
		return
lbl(57077)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 549> 11)
		endDefinition(57024)
lbl(57102)	definition(x(7) 57181 pid('DoWrite' 4 pos('./op/Open.oz' 256 2) nil 6) <Q: 550> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 57165)
lbl(57137)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Value.wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 550> 9)
lbl(57165)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(57102)
lbl(57181)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [flags mode name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57199)	definition(x(8) 57653 pid('File,init' 1 pos('./op/Open.oz' 268 5) nil 5) unit [x(7) y(0) g(1) y(1) y(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(flags x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57238)
		inlineDot(x(0) flags x(1) cache)
		unify(x(1) y(1))
		branch(57244)
lbl(57238)	getList(y(1))
		unifyLiteral(read)
		unifyLiteral(nil)
lbl(57244)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(mode x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57267)
		inlineDot(x(0) mode x(1) cache)
		unify(x(1) y(2))
		branch(57287)
lbl(57267)	putList(x(1))
		setConstant(read)
		setConstant(nil)
		putList(x(2))
		setConstant(write)
		setConstant(nil)
		getRecord(mode [all owner] y(2))
		unifyValue(x(1))
		unifyValue(x(2))
lbl(57287)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57310)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(57313)
lbl(57310)	getLiteral(<N: NoArg> y(3))
lbl(57313)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57336)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(57339)
lbl(57336)	getLiteral(<N: NoArg> y(4))
lbl(57339)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 540> 4)
		testLiteral(y(5) false 57382)
lbl(57358)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalFlags)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57382)	move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 539> 4)
		testLiteral(y(1) false 57419)
lbl(57395)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalModes)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57419)	testLiteral(y(3) <N: NoArg> 57451)
lbl(57423)	testLiteral(y(4) <N: NoArg> 57451)
lbl(57427)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(nameOrUrl)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57451)	testLiteral(y(3) <N: NoArg> 57645)
lbl(57455)	createVariable(y(2))
		match(y(3) ht(57608 [onScalar(stdin 57460) onScalar(stdout 57480) onScalar(stderr 57500) onScalar(<N: NoArg> 57520)]))
lbl(57460)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDIN_FILENO' x(0))
		call(x(2) 2)
		branch(57630)
lbl(57480)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDOUT_FILENO' x(0))
		call(x(2) 2)
		branch(57630)
lbl(57500)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDERR_FILENO' x(0))
		call(x(2) 2)
		branch(57630)
lbl(57520)	move(y(5) x(1))
		putConstant('O_RDWR' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57560 57597)
lbl(57536)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(urlIsReadOnly)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57560)	move(y(5) x(1))
		putConstant('O_WRONLY' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57578 57597)
		branch(57536)
lbl(57578)	move(g(4) x(0))
		inlineDot(x(0) open x(2) cache)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(x(2) 2)
		branch(57630)
lbl(57597)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(57608)	move(g(3) x(0))
		inlineDot(x(0) open x(4) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		call(x(4) 4)
lbl(57630)	move(y(2) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
lbl(57645)	testLiteral(y(4) <N: NoArg> 57427)
lbl(57649)	branch(57455)
		endDefinition(57199)
lbl(57653)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		putRecord(messagePattern [len list size tail] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57671)	definition(x(9) 57867 pid('File,read' 1 pos('./op/Open.oz' 316 5) nil 6) unit [x(8) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 57719)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(57722)
lbl(57719)	getLiteral(nil y(2))
lbl(57722)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57743)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(57743)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 57766)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(57769)
lbl(57766)	getNumber(1024 y(4))
lbl(57769)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(57863 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(57862 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 57844)
		testLiteral(y(4) all 57820)
lbl(57804)	moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(4))
		putConstant(0 x(3))
		genFastCall(<Q: 549> 10)
		branch(57861)
lbl(57820)	move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		call(x(5) 5)
		branch(57861)
lbl(57844)	putRecord(read [len list size tail] x(1))
		setValue(y(3))
		setValue(y(1))
		setValue(y(4))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57861)	return
lbl(57862)	return
lbl(57863)	deAllocateL5
		return
		endDefinition(57671)
lbl(57867)	putList(x(8))
		setConstant(read)
		setValue(x(9))
lbl(57873)	definition(x(9) 57945 pid('File,write/fast' [len vs] pos('./op/Open.oz' 332 5) nil 4) <Q: 551> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(57942 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(57941 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('Int.is' [x(2)]#[x(3)] 57924)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 550> 8)
		branch(57940)
lbl(57924)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57940)	return
lbl(57941)	return
lbl(57942)	return
		endDefinition(57873)
lbl(57945)	putRecord(messagePattern [len vs] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(57953)	definition(x(11) 58008 pid('File,write/slow' 1 pos('./op/Open.oz' 332 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 57990)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(57990)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 551> 5)
		endDefinition(57953)
lbl(58008)	putRecord(write [len vs] x(10))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(write)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58028)	definition(x(9) 58153 pid('File,seek/fast' [offset whence] pos('./op/Open.oz' 342 5) nil 6) <Q: 552> [y(1)])
		allocateL4
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(58149 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58148 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('Int.is' [x(2)]#[x(3)] 58131)
		move(g(0) x(3))
		inlineDot(x(3) lSeek x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariable(y(3))
		match(x(1) ht(58103 [onScalar(set 58088) onScalar(current 58093) onScalar('end' 58098)]))
lbl(58088)	getLiteral('SEEK_SET' y(3))
		branch(58116)
lbl(58093)	getLiteral('SEEK_CUR' y(3))
		branch(58116)
lbl(58098)	getLiteral('SEEK_END' y(3))
		branch(58116)
lbl(58103)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(350)
		setValue(x(1))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(58116)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		call(y(2) 4)
		branch(58147)
lbl(58131)	putRecord(seek [offset whence] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58147)	return
lbl(58148)	return
lbl(58149)	deAllocateL4
		return
		endDefinition(58028)
lbl(58153)	putRecord(messagePattern [offset whence] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(58161)	definition(x(11) 58240 pid('File,seek/slow' 1 pos('./op/Open.oz' 342 5) nil 3) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(offset x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 58200)
		inlineDot(x(0) offset x(1) cache)
		unify(x(1) y(1))
		branch(58203)
lbl(58200)	getNumber(0 y(1))
lbl(58203)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(whence x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 58226)
		inlineDot(x(0) whence x(1) cache)
		unify(x(1) y(2))
		branch(58229)
lbl(58226)	getLiteral(set y(2))
lbl(58229)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 552> 5)
		endDefinition(58161)
lbl(58240)	putRecord(seek [offset whence] x(10))
		setConstant(0)
		setConstant(set)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(seek)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58260)	definition(x(9) 58339 pid('File,tell/fast' [offset] pos('./op/Open.oz' 357 5) nil 5) <Q: 553> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(58336 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(58335 x(1))
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('Int.is' [x(1)]#[x(2)] 58323)
		move(g(0) x(2))
		inlineDot(x(2) lSeek x(4) cache)
		move(x(0) x(3))
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant('SEEK_CUR' x(2))
		call(x(4) 4)
		branch(58334)
lbl(58323)	putRecord(tell [offset] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58334)	return
lbl(58335)	return
lbl(58336)	return
		endDefinition(58260)
lbl(58339)	definition(x(10) 58365 pid('File,tell/slow' 1 pos('./op/Open.oz' 357 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) offset x(0) cache)
		genFastCall(<Q: 553> 3)
		endDefinition(58339)
lbl(58365)	putRecord('#' [1 2 fast] x(11))
		setConstant(tell)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 5 x(1))
		setValue(x(7))
		setValue(x(8))
		setValue(x(12))
		setValue(x(13))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('File' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [len list size tail] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(58425)	definition(x(8) 58589 pid('SockAndPipe,read' 1 pos('./op/Open.oz' 378 2) nil 6) unit [x(7) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 58462)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58462)	move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(2))
		createVariable(y(3))
		putConstant(tail x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 58494)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(3))
		branch(58497)
lbl(58494)	getLiteral(nil y(3))
lbl(58497)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 58520)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(58523)
lbl(58520)	getNumber(1024 y(4))
lbl(58523)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58585 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 58567)
		move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(1) x(4))
		call(x(5) 5)
		branch(58584)
lbl(58567)	putRecord(read [len list size tail] x(1))
		setValue(y(1))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58584)	return
lbl(58585)	deAllocateL5
		return
		endDefinition(58425)
lbl(58589)	putList(x(7))
		setConstant(read)
		setValue(x(8))
lbl(58595)	definition(x(8) 58655 pid('SockAndPipe,write/fast' [len vs] pos('./op/Open.oz' 391 2) nil 4) <Q: 554> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58652 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('Int.is' [x(2)]#[x(3)] 58635)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 543> 8)
		branch(58651)
lbl(58635)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58651)	return
lbl(58652)	return
		endDefinition(58595)
lbl(58655)	putRecord(messagePattern [len vs] x(9))
		setConstant(unit)
		setConstant(unit)
lbl(58663)	definition(x(10) 58718 pid('SockAndPipe,write/slow' 1 pos('./op/Open.oz' 391 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 58700)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58700)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 554> 5)
		endDefinition(58663)
lbl(58718)	putRecord(write [len vs] x(9))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(11))
		setConstant(write)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
lbl(58738)	definition(x(8) 58876 pid('SockAndPipe,flush/fast' [how] pos('./op/Open.oz' 399 2) nil 3) <Q: 555> nil)
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 58805 58863)
lbl(58775)	testBool(y(2) 58805 58863)
lbl(58779)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58803 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58802 x(0))
		return
lbl(58802)	return
lbl(58803)	deAllocateL3
		return
lbl(58805)	testBool(y(1) 58823 58852)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58821 x(0))
		return
lbl(58821)	deAllocateL3
		return
lbl(58823)	testBool(y(2) 58839 58841)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58839 x(0))
		return
lbl(58839)	deAllocateL3
		return
lbl(58841)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58852)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58863)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(403)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(58738)
lbl(58876)	putRecord(messagePattern [how] x(9))
		setConstant(unit)
lbl(58882)	definition(x(10) 58942 pid('SockAndPipe,flush/slow' 1 pos('./op/Open.oz' 399 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 58921)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(58933)
lbl(58921)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(58933)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 555> 3)
		endDefinition(58882)
lbl(58942)	putRecord(flush [how] x(9))
		setVariable(x(12))
		putList(x(13))
		setConstant(send)
		setConstant(nil)
		getList(x(12))
		unifyLiteral(receive)
		unifyValue(x(13))
		putRecord('#' [1 2 default fast] x(12))
		setConstant(flush)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 3 x(1))
		setValue(x(7))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SockAndPipe' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(59000)	definition(x(7) 59082 pid('DoSend' 4 pos('./op/Open.oz' 418 2) nil 6) <Q: 556> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) send x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		call(x(5) 4)
		testRecord(y(3) suspend 3 59066)
lbl(59038)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Value.wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 556> 9)
lbl(59066)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(59000)
lbl(59082)	definition(x(7) 59179 pid('DoSendTo' 6 pos('./op/Open.oz' 425 2) nil 8) <Q: 557> [y(1)])
		allocateL6
		move(g(0) x(6))
		inlineDot(x(6) sendTo x(7) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYYX(x(5) y(4) y(1) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		createVariableMove(y(5) x(5))
		call(x(7) 6)
		testRecord(y(5) suspend 3 59163)
lbl(59130)	getVarVar(x(0) x(1))
		getVariable(x(6))
		callBI('Value.wait' [x(1)]#nil)
		move(y(3) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(y(0) x(0))
		move(x(6) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 557> 13)
lbl(59163)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(4))
		deAllocateL6
		return
		endDefinition(59082)
lbl(59179)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<N: TimeOut>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [protocol time type] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(59201)	definition(x(8) 59386 pid('Socket,init' 1 pos('./op/Open.oz' 438 5) nil 4) unit [x(7) y(0) y(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(type x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59240)
		inlineDot(x(0) type x(1) cache)
		unify(x(1) y(1))
		branch(59243)
lbl(59240)	getLiteral(stream y(1))
lbl(59243)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(protocol x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59266)
		inlineDot(x(0) protocol x(1) cache)
		unify(x(1) y(2))
		branch(59269)
lbl(59266)	getLiteral(nil y(2))
lbl(59269)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(time x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59292)
		inlineDot(x(0) time x(1) cache)
		unify(x(1) y(3))
		branch(59295)
lbl(59292)	getNumber(~1 y(3))
lbl(59295)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(g(2) x(0))
		inlineDot(x(0) socket x(1) cache)
		move(x(1) y(0))
		putConstant('PF_INET' y(4))
		createVariable(y(5))
		match(y(1) ht(59331 [onScalar(stream 59321) onScalar(datagram 59326)]))
lbl(59321)	getLiteral('SOCK_STREAM' y(5))
		branch(59344)
lbl(59326)	getLiteral('SOCK_DGRAM' y(5))
		branch(59344)
lbl(59331)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(443)
		setValue(y(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(59344)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(1) x(3))
		call(y(0) 4)
		getSelf(x(0))
		inlineDot(x(0) <N: TimeOut> x(1) cache)
		unify(x(1) y(3))
		move(y(1) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
		endDefinition(59201)
lbl(59386)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		createVariable(y(6))
lbl(59394)	definition(x(8) 59491 pid('Socket,server' 1 pos('./op/Open.oz' 450 5) nil 3) unit [y(6)])
		allocateL3
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59422)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59422)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59443)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(2))
lbl(59443)	genCall(gci(g(0) true init false 0) 0)
		move(y(0) x(0))
		putConstant(takePort x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59470)
		inlineDot(x(0) takePort x(1) cache)
		move(y(1) x(0))
		genCall(gci(g(0) true bind false [port takePort]) 0)
		branch(59476)
lbl(59470)	move(y(1) x(0))
		genCall(gci(g(0) true bind false [port]) 0)
lbl(59476)	putConstant(1 x(0))
		genCall(gci(g(0) true listen false [backLog]) 0)
		move(y(2) x(0))
		deAllocateL3
		genCall(gci(g(0) true accept true [host]) 0)
		endDefinition(59394)
lbl(59491)	putList(x(9))
		setConstant(server)
		setValue(x(8))
lbl(59497)	definition(x(8) 59523 pid('Socket,client/fast' [host port] pos('./op/Open.oz' 461 5) nil 2) <Q: 558> [y(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true connect true [host port]) 0)
		endDefinition(59497)
lbl(59523)	putRecord(messagePattern [host port] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(59531)	definition(x(11) 59591 pid('Socket,client/slow' 1 pos('./op/Open.oz' 461 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 59570)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(59573)
lbl(59570)	getLiteral(localhost y(1))
lbl(59573)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 558> 5)
		endDefinition(59531)
lbl(59591)	putRecord(client [host port] x(10))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(client)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59611)	definition(x(8) 59687 pid('Socket,listen/fast' [backLog] pos('./op/Open.oz' 466 5) nil 4) <Q: 559> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(59684 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(59683 x(1))
		inlineAt(<N: ReadDesc> x(1) cache)
		testBI('Int.is' [x(1)]#[x(2)] 59671)
		move(g(0) x(2))
		inlineDot(x(2) listen x(3) cache)
		move(x(1) x(4))
		move(x(0) x(1))
		move(x(4) x(0))
		call(x(3) 2)
		branch(59682)
lbl(59671)	putRecord(listen [backLog] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59682)	return
lbl(59683)	return
lbl(59684)	return
		endDefinition(59611)
lbl(59687)	putRecord(messagePattern [backLog] x(10))
		setConstant(unit)
lbl(59693)	definition(x(11) 59744 pid('Socket,listen/slow' 1 pos('./op/Open.oz' 466 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(backLog x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59732)
		inlineDot(x(0) backLog x(1) cache)
		unify(x(1) y(1))
		branch(59735)
lbl(59732)	getNumber(5 y(1))
lbl(59735)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 559> 3)
		endDefinition(59693)
lbl(59744)	putRecord(listen [backLog] x(10))
		setConstant(5)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(listen)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59762)	definition(x(8) 59917 pid('Socket,bind' 1 pos('./op/Open.oz' 476 5) nil 5) unit [y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59790)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59790)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(59913 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(59912 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 59903)
		move(y(0) x(1))
		putConstant(takePort x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 59866)
		move(g(0) x(2))
		inlineDot(x(2) bind x(3) cache)
		inlineDot(x(1) takePort x(4) cache)
		move(x(4) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		inlineDot(x(0) takePort x(1) cache)
		unify(x(1) y(1))
		branch(59911)
lbl(59866)	move(g(0) x(1))
		inlineDot(x(1) bind x(2) cache)
		move(x(0) y(0))
		putConstant(0 x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) getSockName x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		call(x(2) 2)
		branch(59911)
lbl(59903)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59911)	return
lbl(59912)	return
lbl(59913)	deAllocateL2
		return
		endDefinition(59762)
lbl(59917)	putList(x(10))
		setConstant(bind)
		setValue(x(8))
lbl(59923)	definition(x(8) 60170 pid('Socket,accept' 1 pos('./op/Open.oz' 493 5) nil 5) unit [y(1) y(0)])
		allocateL6
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(host x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59951)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
lbl(59951)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 59972)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(2))
lbl(59972)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60166 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60165 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 60156)
		getSelf(x(1))
		inlineDot(x(1) <N: TimeOut> x(1) cache)
		move(x(0) y(3))
		createVariable(y(4))
		match(x(1) ht(60019 [onScalar(~1 60025)]))
lbl(60019)	move(y(4) x(2))
		callBI('Time.alarm' [x(1) x(2)]#nil)
lbl(60025)	createVariable(y(5))
		thread(60049)
		move(g(0) x(0))
		inlineDot(x(0) acceptSelect x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		getLiteral(unit y(5))
		deAllocateL6
		return
lbl(60049)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('Value.waitOr' [x(0) x(1)]#nil)
		testBI('Value.isDet' [x(1)]#[x(0)] 60148)
		move(g(0) x(0))
		inlineDot(x(0) accept x(4) cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		putConstant(accepted x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60130)
		inlineDot(x(0) accepted x(1) cache)
		inlineDot(x(0) acceptClass x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(0)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveYXYX(y(4) x(0) y(4) x(1))
		sendMsg(dOpen y(1) 2 cache)
		unify(y(1) y(0))
		branch(60164)
lbl(60130)	genCall(gci(g(1) true <N: CloseDescs> false 0) 0)
		move(y(4) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		branch(60164)
lbl(60148)	getLiteral(false y(2))
		getLiteral(false y(1))
		branch(60164)
lbl(60156)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60164)	return
lbl(60165)	return
lbl(60166)	deAllocateL6
		return
		endDefinition(59923)
lbl(60170)	putList(x(11))
		setConstant(accept)
		setValue(x(8))
lbl(60176)	definition(x(8) 60260 pid('Socket,connect/fast' [host port] pos('./op/Open.oz' 525 5) nil 5) <Q: 560> [y(1)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(60257 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(60256 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		testBI('Int.is' [x(2)]#[x(3)] 60239)
		move(g(0) x(3))
		inlineDot(x(3) connect x(4) cache)
		move(x(2) x(5))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		call(x(4) 3)
		branch(60255)
lbl(60239)	putRecord(connect [host port] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60255)	return
lbl(60256)	return
lbl(60257)	return
		endDefinition(60176)
lbl(60260)	putRecord(messagePattern [host port] x(14))
		setConstant(unit)
		setConstant(unit)
lbl(60268)	definition(x(15) 60328 pid('Socket,connect/slow' 1 pos('./op/Open.oz' 525 5) nil 3) unit [x(14)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 60307)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(60310)
lbl(60307)	getLiteral(localhost y(1))
lbl(60310)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 560> 5)
		endDefinition(60268)
lbl(60328)	putRecord(connect [host port] x(14))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(16))
		setConstant(connect)
		setValue(x(15))
		setValue(x(14))
		setValue(x(8))
		putRecord(messagePattern [host len port vs] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60360)	definition(x(14) 60535 pid('Socket,send' 1 pos('./op/Open.oz' 535 5) nil 6) unit [x(8)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(len x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 60406)
		inlineDot(x(0) len x(2) cache)
		unify(x(2) y(2))
lbl(60406)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60429)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(3))
		branch(60432)
lbl(60429)	getLiteral(localhost y(3))
lbl(60432)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60455)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(4))
		branch(60458)
lbl(60455)	getLiteral(<N: Missing> y(4))
lbl(60458)	getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60531 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 60513)
		testLiteral(y(4) <N: Missing> 60495)
lbl(60482)	moveMoveYXYX(y(1) x(1) y(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 556> 8)
		branch(60530)
lbl(60495)	moveMoveYXYX(y(1) x(1) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(2) x(5))
		putConstant(0 x(4))
		genFastCall(<Q: 557> 12)
		branch(60530)
lbl(60513)	putRecord(send [host len port vs] x(1))
		setValue(y(3))
		setValue(y(2))
		setValue(y(4))
		setValue(y(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60530)	return
lbl(60531)	deAllocateL5
		return
		endDefinition(60360)
lbl(60535)	putList(x(8))
		setConstant(send)
		setValue(x(14))
		putRecord(messagePattern [host len list port size tail] x(14))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60557)	definition(x(15) 60775 pid('Socket,receive' 1 pos('./op/Open.oz' 546 5) nil 9) unit [x(14) y(1)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 60605)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(60608)
lbl(60605)	getLiteral(nil y(2))
lbl(60608)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60629)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(60629)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60650)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(4))
lbl(60650)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60671)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(5))
lbl(60671)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 60694)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(6))
		branch(60697)
lbl(60694)	getNumber(1024 y(6))
lbl(60697)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60771 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 60749)
		move(g(1) x(1))
		inlineDot(x(1) receiveFrom x(8) cache)
		moveMoveYXYX(y(6) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(3) x(7))
		putConstant(nil x(2))
		call(x(8) 8)
		branch(60770)
lbl(60749)	putRecord(receive [host len list port size tail] x(1))
		setValue(y(4))
		setValue(y(3))
		setValue(y(1))
		setValue(y(5))
		setValue(y(6))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60770)	return
lbl(60771)	deAllocateL7
		return
		endDefinition(60557)
lbl(60775)	putList(x(14))
		setConstant(receive)
		setValue(x(15))
lbl(60781)	definition(x(15) 61084 pid('Socket,shutDown/fast' [how] pos('./op/Open.oz' 560 5) nil 4) <Q: 561> [y(1)])
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 60939 61071)
lbl(60818)	testBool(y(2) 60939 61071)
lbl(60822)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60937 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60936 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('Int.is' [x(0)]#[x(2)] 60924)
lbl(60858)	testBI('Int.is' [x(1)]#[x(2)] 60924)
lbl(60862)	testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 60886)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(x(1) x(0))
		putConstant(2 x(1))
		call(x(2) 2)
		branch(60935)
lbl(60886)	move(g(0) x(2))
		inlineDot(x(2) shutDown x(3) cache)
		move(x(1) y(0))
		putConstant(0 x(1))
		call(x(3) 2)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(60935)
lbl(60924)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60935)	return
lbl(60936)	return
lbl(60937)	deAllocateL3
		return
lbl(60939)	testBool(y(1) 60994 61060)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60992 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 60980)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(0 x(1))
		call(x(2) 2)
		branch(60991)
lbl(60980)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60991)	return
lbl(60992)	deAllocateL3
		return
lbl(60994)	testBool(y(2) 61047 61049)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(61047 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('Int.is' [x(0)]#[x(1)] 61035)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(1 x(1))
		call(x(2) 2)
		branch(61046)
lbl(61035)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(61046)	return
lbl(61047)	deAllocateL3
		return
lbl(61049)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61060)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(579)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61071)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(60781)
lbl(61084)	putRecord(messagePattern [how] x(17))
		setConstant(unit)
lbl(61090)	definition(x(18) 61150 pid('Socket,shutDown/slow' 1 pos('./op/Open.oz' 560 5) nil 3) unit [x(17)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 61129)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(61141)
lbl(61129)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(61141)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 561> 3)
		endDefinition(61090)
lbl(61150)	putRecord(shutDown [how] x(17))
		setVariable(x(19))
		putList(x(20))
		setConstant(send)
		setConstant(nil)
		getList(x(19))
		unifyLiteral(receive)
		unifyValue(x(20))
		putRecord('#' [1 2 default fast] x(19))
		setConstant(shutDown)
		setValue(x(18))
		setValue(x(17))
		setValue(x(15))
		putRecord('#' 10 x(1))
		setValue(x(7))
		setValue(x(9))
		setValue(x(12))
		setValue(x(13))
		setValue(x(10))
		setValue(x(11))
		setValue(x(16))
		setValue(x(8))
		setValue(x(14))
		setValue(x(19))
		move(y(6) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Socket' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(61219)	definition(x(7) 61340 pid('DoReadLine' 5 pos('./op/Open.oz' 604 2) nil 6) <Q: 562> [y(1) g(4)])
		match(x(0) ht(61325 [onScalar(nil 61228) onRecord('|' 2 61298)]))
lbl(61228)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61281)
lbl(61270)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(61281)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 562> 11)
lbl(61298)	getVarVar(x(0) x(5))
		testNumber(x(0) 10 61315)
lbl(61305)	unify(x(2) x(5))
		getLiteral(false x(3))
		getLiteral(nil x(4))
		return
lbl(61315)	getListValVar(x(4) x(0) x(4))
		move(x(5) x(0))
		genFastCall(<Q: 562> 11)
lbl(61325)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(615)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61219)
lbl(61340)	definition(x(7) 61447 pid('DoReadOne' 5 pos('./op/Open.oz' 618 2) nil 6) <Q: 563> [y(1) g(4)])
		match(x(0) ht(61432 [onScalar(nil 61349) onRecord('|' 2 61419)]))
lbl(61349)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61402)
lbl(61391)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(false y(3))
		deAllocateL6
		return
lbl(61402)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 563> 11)
lbl(61419)	getVarVar(x(0) x(1))
		unify(x(2) x(1))
		getLiteral(false x(3))
		unify(x(0) x(4))
		return
lbl(61432)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(626)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61340)
lbl(61447)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(61453)	definition(x(7) 61571 pid('Text,getC/fast' 1 pos('./op/Open.oz' 633 5) nil 7) <Q: 564> nil)
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61567 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: Last> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		createVariable(x(6))
		inlineAssign(<N: Last> x(6) cache)
		testBool(x(1) 61525 61555)
		getLiteral(false x(0))
		getLiteral(true x(4))
		getLiteral(nil x(5))
		unify(x(6) x(3))
		branch(61566)
lbl(61525)	inlineAt(<N: ReadDesc> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(6) y(1))
		move(x(2) x(0))
		move(x(5) x(2))
		move(x(4) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 563> 10)
		unify(y(1) y(0))
		branch(61566)
lbl(61555)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61566)	return
lbl(61567)	deAllocateL2
		return
		endDefinition(61453)
lbl(61571)	definition(x(8) 61597 pid('Text,getC/slow' 1 pos('./op/Open.oz' 633 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 564> 3)
		endDefinition(61571)
lbl(61597)	putRecord('#' [1 2 fast] x(9))
		setConstant(getC)
		setValue(x(8))
		setValue(x(7))
lbl(61607)	definition(x(7) 61632 pid('Text,putC/fast' 1 pos('./op/Open.oz' 652 5) nil 4) <Q: 565> nil)
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61607)
lbl(61632)	definition(x(8) 61658 pid('Text,putC/slow' 1 pos('./op/Open.oz' 652 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 565> 3)
		endDefinition(61632)
lbl(61658)	putRecord('#' [1 2 fast] x(10))
		setConstant(putC)
		setValue(x(8))
		setValue(x(7))
lbl(61668)	definition(x(7) 61803 pid('Text,getS/fast' 1 pos('./op/Open.oz' 656 5) nil 6) <Q: 566> nil)
		allocateL3
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61799 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: ReadDesc> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		testBool(x(1) 61730 61787)
		getLiteral(true x(4))
		getLiteral(nil x(5))
		getLiteral(false x(0))
		branch(61798)
lbl(61730)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		move(y(1) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 562> 10)
		testBool(y(1) 61771 61776)
		testLiteral(y(2) nil 61766)
lbl(61761)	getLiteral(false y(0))
		branch(61798)
lbl(61766)	unify(y(0) y(2))
		branch(61798)
lbl(61771)	unify(y(0) y(2))
		branch(61798)
lbl(61776)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61787)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61798)	return
lbl(61799)	deAllocateL3
		return
		endDefinition(61668)
lbl(61803)	definition(x(8) 61829 pid('Text,getS/slow' 1 pos('./op/Open.oz' 656 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 566> 3)
		endDefinition(61803)
lbl(61829)	putRecord('#' [1 2 fast] x(11))
		setConstant(getS)
		setValue(x(8))
		setValue(x(7))
lbl(61839)	definition(x(7) 61866 pid('Text,putS/fast' 1 pos('./op/Open.oz' 678 5) nil 4) <Q: 567> nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setConstant('\n')
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61839)
lbl(61866)	definition(x(8) 61892 pid('Text,putS/slow' 1 pos('./op/Open.oz' 678 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 567> 3)
		endDefinition(61866)
lbl(61892)	putRecord('#' [1 2 fast] x(12))
		setConstant(putS)
		setValue(x(8))
		setValue(x(7))
lbl(61902)	definition(x(7) 61963 pid('Text,unGetC/fast' 0 pos('./op/Open.oz' 682 5) nil 3) <Q: 568> nil)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(61960 x(0))
		inlineAt(<N: Last> x(0) cache)
		inlineAt(<N: Buff> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<N: Buff> x(2) cache)
		putList(x(0))
		setConstant(0)
		setConstant(nil)
		inlineAssign(<N: Last> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<N: AtEnd> x(0) cache)
		return
lbl(61960)	return
		endDefinition(61902)
lbl(61963)	definition(x(8) 61977 pid('Text,unGetC/slow' 1 pos('./op/Open.oz' 682 5) nil 1) unit nil)
		getLiteral(unGetC x(0))
		genFastCall(<Q: 568> 1)
		endDefinition(61963)
lbl(61977)	putRecord('#' [1 2 fast] x(13))
		setConstant(unGetC)
		setValue(x(8))
		setValue(x(7))
lbl(61987)	definition(x(7) 62030 pid('Text,atEnd/fast' 1 pos('./op/Open.oz' 690 5) nil 2) <Q: 569> nil)
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(62027 x(1))
		inlineAt(<N: Buff> x(1) cache)
		testLiteral(x(1) nil 62023)
		inlineAt(<N: AtEnd> x(1) cache)
		unify(x(1) x(0))
		branch(62026)
lbl(62023)	getLiteral(false x(0))
lbl(62026)	return
lbl(62027)	return
		endDefinition(61987)
lbl(62030)	definition(x(8) 62056 pid('Text,atEnd/slow' 1 pos('./op/Open.oz' 690 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 569> 3)
		endDefinition(62030)
lbl(62056)	putRecord('#' [1 2 fast] x(14))
		setConstant(atEnd)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Text' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<M: PID>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [args cmd 'pid'] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(62122)	definition(x(8) 62259 pid('Pipe,init' 1 pos('./op/Open.oz' 706 2) nil 5) unit [x(7) y(0) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) cmd x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(args x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 62170)
		inlineDot(x(0) args x(2) cache)
		unify(x(2) y(2))
		branch(62173)
lbl(62170)	getLiteral(nil y(2))
lbl(62173)	createVariable(y(3))
		move(y(0) x(0))
		putConstant('pid' x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 62194)
		inlineDot(x(0) 'pid' x(1) cache)
		unify(x(1) y(3))
lbl(62194)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(0))
		setVariable(y(4))
		move(g(2) x(0))
		inlineDot(x(0) pipe x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		call(x(4) 4)
		getSelf(x(0))
		inlineDot(x(0) <M: PID> x(1) cache)
		unify(x(1) y(3))
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(4) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL5
		return
		endDefinition(62122)
lbl(62259)	putList(x(7))
		setConstant(init)
		setValue(x(8))
lbl(62265)	definition(x(8) 62374 pid('Pipe,close/fast' 0 pos('./op/Open.oz' 715 2) nil 5) <Q: 570> [y(1) g(5) y(0)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(0) cache)
		lockThread(62371 x(0))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(0) cache)
		lockThread(62370 x(0))
		move(g(0) x(0))
		inlineDot(x(0) system x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: PID> x(3) cache)
		putRecord('#' 3 x(4))
		setConstant('kill ')
		setValue(x(3))
		setConstant(' 2> /dev/null')
		move(x(4) x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(1) x(0))
		callBI('Time.delay' [x(0)]#nil)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		genCall(gci(g(2) true close false 0) 0)
		return
lbl(62370)	return
lbl(62371)	return
		endDefinition(62265)
lbl(62374)	definition(x(9) 62388 pid('Pipe,close/slow' 1 pos('./op/Open.oz' 715 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 570> 1)
		endDefinition(62374)
lbl(62388)	putRecord('#' [1 2 fast] x(10))
		setConstant(close)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(1))
		setValue(x(7))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Pipe' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(62421)	definition(x(7) 62440 pid('Html,header/fast' 0 pos('./op/Open.oz' 732 2) nil 3) <Q: 571> nil)
		getSelf(x(2))
		putConstant('Content-type: text/html\n\n' x(0))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62421)
lbl(62440)	definition(x(8) 62454 pid('Html,header/slow' 1 pos('./op/Open.oz' 732 2) nil 1) unit nil)
		getLiteral(header x(0))
		genFastCall(<Q: 571> 1)
		endDefinition(62440)
lbl(62454)	putRecord('#' [1 2 fast] x(9))
		setConstant(header)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(62466)	definition(x(7) 62516 pid('Html,WriteTagBody/fast' 3 pos('./op/Open.oz' 736 2) nil 4) <Q: 572> [y(1)])
		testLT(x(1) x(0) x(3) 62478)
		return
lbl(62478)	allocateL3
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true tag false 1) 0)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: WriteTagBody> true 3) 0)
		endDefinition(62466)
lbl(62516)	definition(x(8) 62557 pid('Html,WriteTagBody/slow' 1 pos('./op/Open.oz' 736 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 572> 7)
		endDefinition(62516)
lbl(62557)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: WriteTagBody>)
		setValue(x(8))
		setValue(x(7))
lbl(62567)	definition(x(7) 62842 pid('Html,tag/fast' 1 pos('./op/Open.oz' 742 2) nil 5) <Q: 573> [g(6) y(1) g(7) g(8)])
		testBI('Record.is' [x(0)]#[x(1)] 62811)
		allocateL6
		callBI('Record.label' [x(0)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		testBool(y(2) 62768 62800)
		getSelf(x(1))
		move(x(1) y(2))
		createVariable(y(3))
		createVariable(y(4))
		move(y(0) x(0))
		testBI('Tuple.is' [x(0)]#[x(2)] 62626)
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) y(3))
		getLiteral('' y(4))
		branch(62655)
lbl(62626)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		move(y(3) x(2))
		putConstant(0 x(1))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 537> 8)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 538> 6)
lbl(62655)	putRecord('#' 4 x(0))
		setConstant('<')
		setValue(y(1))
		setValue(y(4))
		setConstant('>')
		sendMsg(write y(2) [vs] cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		putConstant(1 x(0))
		genCall(gci(g(1) true <M: WriteTagBody> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(2) 2)
		testBool(y(0) 62699 62719)
		branch(62730)
lbl(62699)	putRecord('#' 3 x(0))
		setConstant('</')
		setValue(y(1))
		setConstant('>')
		getSelf(x(2))
		sendMsg(write x(2) [vs] cache)
		branch(62730)
lbl(62719)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62730)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(3) 2)
		testBool(y(0) 62755 62757)
		getSelf(x(2))
		putConstant('\n' x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62755)	deAllocateL6
		return
lbl(62757)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(761)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62768)	testLiteral(y(1) '#' 62788)
		move(y(0) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		move(y(0) x(2))
		putConstant(1 x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: WriteTagBody> true 3) 0)
lbl(62788)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62800)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(746)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62811)	testBI('Procedure.is' [x(0)]#[x(1)] 62832)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true tag true 1) 0)
lbl(62832)	getSelf(x(2))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62567)
lbl(62842)	definition(x(8) 62868 pid('Html,tag/slow' 1 pos('./op/Open.oz' 742 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 573> 3)
		endDefinition(62842)
lbl(62868)	putRecord('#' [1 2 fast] x(11))
		setConstant(tag)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Html' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(3) x(0))
		inlineDot(x(0) put x(2) cache)
lbl(62918)	definition(x(1) 63093 pid('' 2 pos('./op/Open.oz' 785 7) nil 6) <Q: 574> [y(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) open 3 63070)
lbl(62950)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) format x(4) cache)
		putConstant('error in Open module' y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(4) y(5))
		createVariable(y(6))
		match(x(0) ht(63010 [onScalar(alreadyClosed 62980) onScalar(alreadyInitialized 62985) onScalar(illegalFlags 62990) onScalar(illegalModes 62995) onScalar(nameOrUrl 63000) onScalar(urlIsReadOnly 63005)]))
lbl(62980)	getLiteral('Object already closed' y(6))
		branch(63013)
lbl(62985)	getLiteral('Object already initialized' y(6))
		branch(63013)
lbl(62990)	getLiteral('Illegal value for flags' y(6))
		branch(63013)
lbl(62995)	getLiteral('Illegal value for mode' y(6))
		branch(63013)
lbl(63000)	getLiteral('Exactly one of \'name\' or \'url\' feature needed' y(6))
		branch(63013)
lbl(63005)	getLiteral('Only reading access to url-files allowed' y(6))
		branch(63013)
lbl(63010)	getLiteral('Unknown' y(6))
lbl(63013)	putRecord(oz 1 x(3))
		setValue(y(3))
		putRecord(oz 1 x(4))
		setValue(y(4))
		putRecord('#' 5 x(1))
		setConstant('{')
		setValue(x(3))
		setConstant(' ')
		setValue(x(4))
		setConstant('}')
		putRecord(hint [l m] x(0))
		setConstant('Object Application')
		setValue(x(1))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(1) x(4))
		deAllocateL7
		tailCall(x(5) 5)
lbl(63070)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in Open module' x(0))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(62918)
lbl(63093)	putConstant(open x(0))
		call(x(2) 2)
		getRecord('export' [file html pipe socket text] g(9))
		unifyValue(y(4))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL8
		return
		endDefinition(56292)
lbl(63117)	tailCall(x(2) 0)
		endDefinition(56076)
lbl(63122)	putList(x(5))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(4))
		setConstant(format)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putList(x(29))
		setConstant('wait')
		setConstant(nil)
		putList(x(28))
		setConstant(pipe)
		setValue(x(29))
		putList(x(27))
		setConstant(system)
		setValue(x(28))
		putList(x(26))
		setConstant(deSelect)
		setValue(x(27))
		putList(x(25))
		setConstant(acceptSelect)
		setValue(x(26))
		putList(x(24))
		setConstant(getSockName)
		setValue(x(25))
		putList(x(23))
		setConstant(receiveFrom)
		setValue(x(24))
		putList(x(22))
		setConstant(sendTo)
		setValue(x(23))
		putList(x(21))
		setConstant(send)
		setValue(x(22))
		putList(x(20))
		setConstant(shutDown)
		setValue(x(21))
		putList(x(19))
		setConstant(accept)
		setValue(x(20))
		putList(x(18))
		setConstant(connect)
		setValue(x(19))
		putList(x(17))
		setConstant(listen)
		setValue(x(18))
		putList(x(16))
		setConstant(bind)
		setValue(x(17))
		putList(x(15))
		setConstant(socket)
		setValue(x(16))
		putList(x(14))
		setConstant(lSeek)
		setValue(x(15))
		putList(x(13))
		setConstant(read)
		setValue(x(14))
		putList(x(12))
		setConstant(write)
		setValue(x(13))
		putList(x(11))
		setConstant(close)
		setValue(x(12))
		putList(x(10))
		setConstant(fileDesc)
		setValue(x(11))
		putList(x(9))
		setConstant(open)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putList(x(31))
		setConstant(open)
		setConstant(nil)
		putRecord(info [type] x(30))
		setValue(x(31))
		putRecord('import' ['Error' 'ErrorRegistry' 'OS' 'Resolve'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		setValue(x(30))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putRecord('export' [file html pipe socket text] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		createVariableMove(y(159) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(63349)	definition(x(4) 63372 pid('IsFeature' 2 pos('./support/Type.oz' 30 3) nil 3) <P: 575> nil)
		testBI('Int.is' [x(0)]#[x(2)] 63363)
		getLiteral(true x(1))
		return
lbl(63363)	callBI('Literal.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63349)
lbl(63372)	definition(x(5) 63395 pid('IsOrdered' 2 pos('./support/Type.oz' 34 3) nil 3) <P: 576> nil)
		testBI('Number.is' [x(0)]#[x(2)] 63386)
		getLiteral(true x(1))
		return
lbl(63386)	callBI('Atom.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63372)
lbl(63395)	definition(x(6) 63432 pid('IsUnary' 2 pos('./support/Type.oz' 38 3) nil 4) <P: 577> nil)
		testBI('Object.is' [x(0)]#[x(2)] 63409)
		getLiteral(true x(1))
		return
lbl(63409)	testBI('Procedure.is' [x(0)]#[x(2)] 63426)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(63426)	getLiteral(false x(1))
		return
		endDefinition(63395)
lbl(63432)	definition(x(7) 63453 pid('IsPair' 2 pos('./support/Type.oz' 43 3) nil 2) <P: 578> nil)
		testRecord(x(0) '#' 2 63447)
lbl(63443)	getLiteral(true x(1))
		return
lbl(63447)	getLiteral(false x(1))
		return
		endDefinition(63432)
lbl(63453)	definition(x(8) 63519 pid('IsListOf' 3 pos('./support/Type.oz' 47 3) nil 3) <P: 579> nil)
		match(x(0) ht(63513 [onScalar(nil 63462) onRecord('|' 2 63466)]))
lbl(63462)	getLiteral(true x(2))
		return
lbl(63466)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 63497 63502)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 579> 7)
lbl(63497)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(63502)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63513)	getLiteral(false x(2))
		return
		endDefinition(63453)
lbl(63519)	definition(x(8) 63620 pid('IsPairOf' 4 pos('./support/Type.oz' 53 3) nil 4) <P: 580> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(4) 63602 63607)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(1) 2)
		testBool(y(4) 63586 63591)
		move(y(0) x(0))
		inlineDot(x(0) 2 x(0) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(63586)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63591)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63602)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63607)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63519)
lbl(63620)	definition(x(8) 63706 pid('IsRecordOf' 4 pos('./support/Type.oz' 57 3) nil 5) <P: 581> nil)
		match(x(1) ht(63691 [onScalar(nil 63629) onRecord('|' 2 63633)]))
lbl(63629)	getLiteral(true x(3))
		return
lbl(63633)	allocateL5
		getVarVar(x(1) y(0))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(4)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 63675 63680)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 581> 9)
lbl(63675)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63680)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(59)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63691)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(60)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63620)
lbl(63706)	definition(x(8) 63780 pid('IsPropertyList' 2 pos('./support/Type.oz' 63 3) nil 4) <P: 582> nil)
lbl(63712)	definition(x(3) 63769 pid('' 2 pos('./support/Type.oz' 64 19) nil 2) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(2) 63751 63756)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		callBI('Literal.is' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL3
		return
lbl(63751)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(63756)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63712)
lbl(63769)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 579> 7)
		endDefinition(63706)
lbl(63780)	definition(x(9) 63871 pid('IsComplexDomSpec' 2 pos('./support/Type.oz' 68 6) nil 4) <P: 583> [y(57)])
		testBI('Int.is' [x(0)]#[x(2)] 63794)
		getLiteral(true x(1))
		return
lbl(63794)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(1))
		move(g(0) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 580> 8)
		testBool(y(2) 63821 63858)
		getLiteral(true y(1))
		deAllocateL3
		return
lbl(63821)	definition(x(1) 63849 pid('' 2 pos('./support/Type.oz' 71 15) nil 4) unit [g(0)])
		testBI('Int.is' [x(0)]#[x(2)] 63835)
		getLiteral(true x(1))
		return
lbl(63835)	move(x(1) x(3))
		move(g(0) x(1))
		move(g(0) x(2))
		genFastCall(<P: 580> 9)
		endDefinition(63821)
lbl(63849)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 579> 7)
lbl(63858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63780)
lbl(63871)	definition(x(9) 63892 pid('IsDomainSpec' 2 pos('./support/Type.oz' 76 6) nil 2) <P: 584> nil)
		testRecord(x(0) compl 1 63887)
lbl(63882)	getVariable(x(0))
		genFastCall(<P: 583> 5)
lbl(63887)	genFastCall(<P: 583> 5)
		endDefinition(63871)
lbl(63892)	definition(x(10) 63910 pid('IsTrue' 2 pos('./support/Type.oz' 83 3) nil 4) <P: 585> nil)
		putConstant(true x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63892)
lbl(63910)	definition(x(11) 63928 pid('IsFalse' 2 pos('./support/Type.oz' 87 3) nil 4) <P: 586> nil)
		putConstant(false x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63910)
lbl(63928)	definition(x(12) 63951 pid('IsComparable' 2 pos('./support/Type.oz' 91 3) nil 3) <P: 587> nil)
		testBI('Number.is' [x(0)]#[x(2)] 63942)
		getLiteral(true x(1))
		return
lbl(63942)	callBI('Atom.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63928)
lbl(63951)	definition(x(13) 63974 pid('IsRecordOrChunk' 2 pos('./support/Type.oz' 95 3) nil 3) <P: 588> nil)
		testBI('Record.is' [x(0)]#[x(2)] 63965)
		getLiteral(true x(1))
		return
lbl(63965)	callBI('Chunk.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63951)
lbl(63974)	definition(x(14) 63997 pid('IsRecordCOrChunk' 2 pos('./support/Type.oz' 99 3) nil 3) <P: 589> nil)
		testBI('Record.isC' [x(0)]#[x(2)] 63988)
		getLiteral(true x(1))
		return
lbl(63988)	callBI('Chunk.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63974)
lbl(63997)	definition(x(15) 64020 pid('IsProcedureOrObject' 2 pos('./support/Type.oz' 103 3) nil 3) <P: 590> nil)
		testBI('Procedure.is' [x(0)]#[x(2)] 64011)
		getLiteral(true x(1))
		return
lbl(64011)	callBI('Object.is' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63997)
lbl(64020)	definition(x(16) 64049 pid('IsProcedure0' 2 pos('./support/Type.oz' 107 3) nil 4) <P: 591> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64043)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(0 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64043)	getLiteral(false x(1))
		return
		endDefinition(64020)
lbl(64049)	definition(x(17) 64078 pid('IsProcedure1' 2 pos('./support/Type.oz' 111 3) nil 4) <P: 592> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64072)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64072)	getLiteral(false x(1))
		return
		endDefinition(64049)
lbl(64078)	definition(x(18) 64107 pid('IsProcedure2' 2 pos('./support/Type.oz' 115 3) nil 4) <P: 593> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64101)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(2 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64101)	getLiteral(false x(1))
		return
		endDefinition(64078)
lbl(64107)	definition(x(19) 64136 pid('IsProcedure3' 2 pos('./support/Type.oz' 119 3) nil 4) <P: 594> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64130)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(3 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64130)	getLiteral(false x(1))
		return
		endDefinition(64107)
lbl(64136)	definition(x(20) 64165 pid('IsProcedure4' 2 pos('./support/Type.oz' 123 3) nil 4) <P: 595> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64159)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(4 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64159)	getLiteral(false x(1))
		return
		endDefinition(64136)
lbl(64165)	definition(x(21) 64194 pid('IsProcedure5' 2 pos('./support/Type.oz' 127 3) nil 4) <P: 596> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64188)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64188)	getLiteral(false x(1))
		return
		endDefinition(64165)
lbl(64194)	definition(x(22) 64223 pid('IsProcedure6' 2 pos('./support/Type.oz' 131 3) nil 4) <P: 597> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64217)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64217)	getLiteral(false x(1))
		return
		endDefinition(64194)
lbl(64223)	definition(x(23) 64252 pid('IsProcedure7Plus' 2 pos('./support/Type.oz' 135 3) nil 4) <P: 598> [y(128)])
		testBI('Procedure.is' [x(0)]#[x(2)] 64246)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('Value.\'<\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64246)	getLiteral(false x(1))
		return
		endDefinition(64223)
lbl(64252)	definition(x(24) 64270 pid('IsNil' 2 pos('./support/Type.oz' 139 3) nil 4) <P: 599> nil)
		putConstant(nil x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(64252)
lbl(64270)	definition(x(25) 64289 pid('IsCons' 2 pos('./support/Type.oz' 143 3) nil 2) <P: 600> nil)
		testList(x(0) 64283)
lbl(64279)	getLiteral(true x(1))
		return
lbl(64283)	getLiteral(false x(1))
		return
		endDefinition(64270)
lbl(64289)	definition(x(2) 65431 pid('' 2 pos('./support/Type.oz' 149 3) nil 4) <P: 601> [y(176) y(38) y(202) y(42) y(30) y(50) y(173) y(201) x(12) x(25) y(131) x(9) x(11) x(4) y(64) y(203) y(57) y(107) y(26) y(28) y(40) x(24) y(86) y(180) x(5) x(7) y(35) y(127) x(16) x(17) x(18) x(19) x(20) x(21) x(22) x(23) x(15) x(8) y(133) y(138) x(14) x(13) y(179) y(46) y(204) x(10) y(90) x(6) y(27) y(174) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 602>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 603>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 604>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 605>)
		setValue(x(2))
lbl(64319)	definitionCopy(x(3) 65426 pid('/body' 0 pos('./support/Type.oz' 149 3) [once] 8) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) x(1)])
		allocateL(60)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(3) cache)
		inlineDot(x(0) 'FSB' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(3) is x(1) cache)
		inlineDot(x(4) isValueB x(2) cache)
		inlineDot(x(4) isVarB x(3) cache)
lbl(64366)	definition(x(4) 64413 pid('IsFDVector' 2 pos('./support/Type.oz' 170 6) nil 5) <Q: 602> [x(1)])
		testBI('Record.is' [x(0)]#[x(2)] 64407)
		callBI('Record.label' [x(0)]#[x(2)])
		testLiteral(x(2) '|' 64392)
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 579> 7)
lbl(64392)	callBI('Record.arity' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(4) x(1))
		move(g(0) x(2))
		genFastCall(<P: 581> 9)
lbl(64407)	getLiteral(false x(1))
		return
		endDefinition(64366)
lbl(64413)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(0))
		setValue(g(1))
		setValue(g(2))
		setValue(g(3))
		setValue(g(4))
		setValue(g(5))
		setValue(g(6))
		setValue(g(7))
		setValue(g(8))
		setValue(g(9))
		setValue(g(10))
		setValue(g(11))
		setValue(g(12))
		setValue(g(13))
		setValue(x(1))
		setValue(x(4))
		setValue(g(14))
		setValue(g(15))
		setValue(g(16))
		setValue(x(2))
		setValue(x(3))
		setValue(g(17))
		setValue(g(18))
		setValue(g(19))
		setValue(g(20))
		setValue(g(21))
		setValue(g(22))
		setValue(g(23))
		setValue(g(24))
		setValue(g(25))
		setValue(g(26))
		setValue(g(27))
		setValue(g(28))
		setValue(g(29))
		setValue(g(30))
		setValue(g(31))
		setValue(g(32))
		setValue(g(33))
		setValue(g(34))
		setValue(g(35))
		setValue(g(36))
		setValue(g(37))
		setValue(g(38))
		setValue(g(39))
		setValue(g(40))
		setValue(g(41))
		setValue(g(42))
		setValue(g(43))
		setValue(g(44))
		setValue(g(45))
		setValue(g(46))
		setValue(g(47))
		setValue(g(48))
		setValue(g(49))
		setVariable(x(6))
		setValue(g(50))
lbl(64527)	definition(x(7) 64539 pid('Is.value' 2 pos('./support/Type.oz' 232 28) nil 2) <Q: 603> nil)
		getLiteral(true x(1))
		return
		endDefinition(64527)
lbl(64539)	unify(x(7) x(6))
lbl(64542)	definition(x(6) 64632 pid('GenericAsk' 3 pos('./support/Type.oz' 237 2) nil 4) <Q: 604> [g(51) x(5)])
lbl(64548)	definition(x(3) 64626 pid('' 1 pos('./support/Type.oz' 238 5) nil 3) unit [x(0) g(0) g(1) x(1)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		testBool(y(1) 64570 64613)
		deAllocateL2
		return
lbl(64570)	move(g(2) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(g(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setValue(g(3))
		setConstant(1)
		setConstant('Type.ask')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64613)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(239)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(64548)
lbl(64626)	unify(x(3) x(2))
		return
		endDefinition(64542)
lbl(64632)	putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(1))
		setVariable(x(5))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setValue(x(6))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		moveMoveXYXY(x(1) y(56) x(2) y(57))
		moveMoveXYXY(x(3) y(58) x(4) y(59))
		move(g(1) x(0))
		move(x(5) x(2))
		putConstant(array x(1))
		genFastCall(<Q: 604> 6)
		move(g(2) x(0))
		move(y(2) x(2))
		putConstant(atom x(1))
		genFastCall(<Q: 604> 6)
		move(g(3) x(0))
		move(y(3) x(2))
		putConstant(bitArray x(1))
		genFastCall(<Q: 604> 6)
		move(g(4) x(0))
		move(y(4) x(2))
		putConstant(bool x(1))
		genFastCall(<Q: 604> 6)
		move(g(5) x(0))
		move(y(5) x(2))
		putConstant(cell x(1))
		genFastCall(<Q: 604> 6)
		move(g(6) x(0))
		move(y(6) x(2))
		putConstant(char x(1))
		genFastCall(<Q: 604> 6)
		move(g(7) x(0))
		move(y(7) x(2))
		putConstant(chunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(8) x(0))
		move(y(8) x(2))
		putConstant('class' x(1))
		genFastCall(<Q: 604> 6)
		move(g(9) x(0))
		move(y(9) x(2))
		putConstant(comparable x(1))
		genFastCall(<Q: 604> 6)
		move(g(10) x(0))
		move(y(10) x(2))
		putConstant(cons x(1))
		genFastCall(<Q: 604> 6)
		move(g(11) x(0))
		move(y(11) x(2))
		putConstant(dictionary x(1))
		genFastCall(<Q: 604> 6)
		move(g(12) x(0))
		move(y(12) x(2))
		putConstant(domainSpec x(1))
		genFastCall(<Q: 604> 6)
		move(g(17) x(0))
		move(y(21) x(2))
		putConstant(int x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(56) x(0) y(14) x(2))
		putConstant(fd x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(59) x(0) y(15) x(2))
		putConstant(fdVector x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(13) x(2))
		putConstant('false' x(1))
		genFastCall(<Q: 604> 6)
		move(g(14) x(0))
		move(y(16) x(2))
		putConstant(feature x(1))
		genFastCall(<Q: 604> 6)
		move(g(15) x(0))
		move(y(17) x(2))
		putConstant(float x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(57) x(0) y(19) x(2))
		putConstant(fset x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(58) x(0) y(20) x(2))
		putConstant(fsetC x(1))
		genFastCall(<Q: 604> 6)
		move(g(16) x(0))
		move(y(18) x(2))
		putConstant(foreignPointer x(1))
		genFastCall(<Q: 604> 6)
		move(g(18) x(0))
		move(y(22) x(2))
		putConstant(list x(1))
		genFastCall(<Q: 604> 6)
		move(g(19) x(0))
		move(y(23) x(2))
		putConstant(literal x(1))
		genFastCall(<Q: 604> 6)
		move(g(20) x(0))
		move(y(24) x(2))
		putConstant('lock' x(1))
		genFastCall(<Q: 604> 6)
		move(g(21) x(0))
		move(y(25) x(2))
		putConstant(name x(1))
		genFastCall(<Q: 604> 6)
		move(g(22) x(0))
		move(y(26) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 604> 6)
		move(g(23) x(0))
		move(y(27) x(2))
		putConstant(number x(1))
		genFastCall(<Q: 604> 6)
		move(g(24) x(0))
		move(y(28) x(2))
		putConstant(object x(1))
		genFastCall(<Q: 604> 6)
		move(g(25) x(0))
		move(y(29) x(2))
		putConstant(ordered x(1))
		genFastCall(<Q: 604> 6)
		move(g(26) x(0))
		move(y(30) x(2))
		putConstant(pair x(1))
		genFastCall(<Q: 604> 6)
		move(g(27) x(0))
		move(y(31) x(2))
		putConstant(port x(1))
		genFastCall(<Q: 604> 6)
		move(g(28) x(0))
		move(y(32) x(2))
		putConstant(procedure x(1))
		genFastCall(<Q: 604> 6)
		move(g(29) x(0))
		move(y(33) x(2))
		putConstant('procedure/0' x(1))
		genFastCall(<Q: 604> 6)
		move(g(30) x(0))
		move(y(34) x(2))
		putConstant('procedure/1' x(1))
		genFastCall(<Q: 604> 6)
		move(g(31) x(0))
		move(y(35) x(2))
		putConstant('procedure/2' x(1))
		genFastCall(<Q: 604> 6)
		move(g(32) x(0))
		move(y(36) x(2))
		putConstant('procedure/3' x(1))
		genFastCall(<Q: 604> 6)
		move(g(33) x(0))
		move(y(37) x(2))
		putConstant('procedure/4' x(1))
		genFastCall(<Q: 604> 6)
		move(g(34) x(0))
		move(y(38) x(2))
		putConstant('procedure/5' x(1))
		genFastCall(<Q: 604> 6)
		move(g(35) x(0))
		move(y(39) x(2))
		putConstant('procedure/6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(36) x(0))
		move(y(40) x(2))
		putConstant('procedure/>6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(37) x(0))
		move(y(41) x(2))
		putConstant(procedureOrObject x(1))
		genFastCall(<Q: 604> 6)
		move(g(38) x(0))
		move(y(42) x(2))
		putConstant(propertyList x(1))
		genFastCall(<Q: 604> 6)
		move(g(39) x(0))
		move(y(43) x(2))
		putConstant(record x(1))
		genFastCall(<Q: 604> 6)
		move(g(40) x(0))
		move(y(44) x(2))
		putConstant(recordC x(1))
		genFastCall(<Q: 604> 6)
		move(g(42) x(0))
		move(y(46) x(2))
		putConstant(recordOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(41) x(0))
		move(y(45) x(2))
		putConstant(recordCOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(43) x(0))
		move(y(47) x(2))
		putConstant(space x(1))
		genFastCall(<Q: 604> 6)
		move(g(44) x(0))
		move(y(48) x(2))
		putConstant(string x(1))
		genFastCall(<Q: 604> 6)
		move(g(45) x(0))
		move(y(49) x(2))
		putConstant('thread' x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(50) x(2))
		putConstant('true' x(1))
		genFastCall(<Q: 604> 6)
		move(g(47) x(0))
		move(y(51) x(2))
		putConstant(tuple x(1))
		genFastCall(<Q: 604> 6)
		move(g(48) x(0))
		move(y(52) x(2))
		putConstant(unary x(1))
		genFastCall(<Q: 604> 6)
		move(g(49) x(0))
		move(y(53) x(2))
		putConstant('unit' x(1))
		genFastCall(<Q: 604> 6)
lbl(65390)	definition(x(0) 65399 pid('Ask.value' 1 pos('./support/Type.oz' 308 24) nil 1) <Q: 605> nil)
		return
		endDefinition(65390)
lbl(65399)	unify(x(0) y(54))
		move(g(50) x(0))
		move(y(55) x(2))
		putConstant(virtualString x(1))
		genFastCall(<Q: 604> 6)
		getRecord('export' ['ask' is] g(52))
		unifyValue(y(1))
		unifyValue(y(0))
		deAllocateL
		return
		endDefinition(64319)
lbl(65426)	tailCall(x(3) 0)
		endDefinition(64289)
lbl(65431)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/1')
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putList(x(3))
		setConstant(is)
		setConstant(nil)
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/FDB')
		setValue(x(3))
		putList(x(8))
		setConstant(isVarB)
		setConstant(nil)
		putList(x(7))
		setConstant(isValueB)
		setValue(x(8))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/FSB')
		setValue(x(7))
		putList(x(10))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['FDB' 'FSB' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(9))
		putRecord('export' ['ask' is] x(1))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(184) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putList(x(4))
		setConstant(46)
		setConstant(nil)
		putList(x(0))
		setConstant(46)
		setConstant(nil)
		putList(x(5))
		setConstant(46)
		setValue(x(0))
lbl(65761)	definition(x(6) 65861 pid('Normalize' 3 pos('./dp/URL.oz' 29 6) nil 7) <P: 606> [x(4) x(5)])
		match(x(0) ht(65846 [onScalar(nil 65770) onRecord('|' 2 65779)]))
lbl(65770)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 28> 5)
lbl(65779)	getVarVar(x(0) x(3))
		move(g(0) x(4))
		testBI('Value.\'==\'' [x(0) x(4)]#[x(5)] 65795)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65795)	move(g(1) x(5))
		testBI('Value.\'==\'' [x(0) x(5)]#[x(6)] 65831)
		testLiteral(x(1) nil 65819)
		getListValVar(x(2) g(1) x(2))
		move(x(3) x(0))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
lbl(65819)	inlineDot(x(1) 2 x(1) cache)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65831)	putList(x(6))
		setValue(x(0))
		setValue(x(1))
		move(x(3) x(0))
		move(x(6) x(1))
		genFastCall(<P: 606> 7)
lbl(65846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(65761)
lbl(65861)	definition(x(4) 65878 pid('NormalizePath' 2 pos('./dp/URL.oz' 42 6) nil 3) <P: 607> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
		endDefinition(65861)
lbl(65878)	definition(x(4) 65939 pid('StripLast' 3 pos('./dp/URL.oz' 48 6) nil 5) <P: 608> nil)
		shallowGuard(65926)
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(65892)	shallowThen
		match(x(4) ht(65913 [onScalar(nil 65896) onRecord('|' 2 65903)]))
lbl(65896)	unify(x(1) x(3))
		getLiteral(nil x(2))
		return
lbl(65903)	getListValVar(x(2) x(3) x(2))
		move(x(4) x(0))
		genFastCall(<P: 608> 7)
lbl(65913)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(51)
		setValue(x(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65926)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(48)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(65878)
lbl(65939)	definition(x(4) 66048 pid('PathResolve' 3 pos('./dp/URL.oz' 54 6) nil 6) <P: 609> nil)
		allocateL5
		callBI('Record.label' [x(0)]#[x(4)])
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(1) 1 x(1) cache)
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(2) x(3))
		putConstant(1 x(2))
		marshalledFastCall(<R: tuple> 8)
		createVariable(y(3))
		testLiteral(y(1) nil 65998)
		unify(y(3) y(2))
		branch(66037)
lbl(65998)	move(y(1) x(0))
		createVariable(x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 608> 6)
		createVariable(y(1))
		testLiteral(y(2) nil 66023)
		getList(y(1))
		unifyLiteral(nil)
		unifyLiteral(nil)
		branch(66026)
lbl(66023)	unify(y(1) y(2))
lbl(66026)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(66037)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<P: 607> 5)
		endDefinition(65939)
lbl(66048)	definition(x(4) 66111 pid('Split' 3 pos('./dp/URL.oz' 71 2) nil 4) <P: 610> nil)
		match(x(0) ht(66096 [onScalar(nil 66057) onRecord('|' 2 66064)]))
lbl(66057)	unify(x(1) x(2))
		getLiteral(nil x(1))
		return
lbl(66064)	getVarVar(x(0) x(3))
		testNumber(x(0) 47 66086)
		getLiteral(nil x(1))
		getList(x(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66086)	getListValVar(x(1) x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66096)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66048)
lbl(66111)	definition(x(4) 66128 pid('SplitPath' 2 pos('./dp/URL.oz' 80 2) nil 3) <P: 611> nil)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		genFastCall(<P: 610> 7)
		endDefinition(66111)
lbl(66128)	definition(x(4) 66706 pid('StringToUrl' 2 pos('./dp/URL.oz' 86 6) nil 4) <P: 612> [y(55) y(54) y(146) y(160) y(82)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(66166)
		move(x(0) y(2))
		createCond(66160)
lbl(66148)	lastClause
		clause
		ask
lbl(66151)	putRecord(illegalUrl 1 x(0))
		setValue(y(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66160)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66166)	createVariable(y(2))
		testLiteral(y(0) nil 66177)
		getLiteral(url y(2))
		branch(66698)
lbl(66177)	move(y(0) x(1))
		putConstant(35 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(5))
		testBool(y(3) 66216 66224)
		getRecord(o [fragment] y(5))
		unifyVariable(x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(2))
		putConstant(35 x(1))
		genFastCall(<P: 2> 8)
		branch(66235)
lbl(66216)	unify(y(4) y(0))
		getLiteral(o y(5))
		branch(66235)
lbl(66224)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(95)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66235)	createVariable(y(3))
		createVariable(y(6))
		testLiteral(y(4) nil 66251)
lbl(66243)	unify(y(3) y(4))
		getLiteral(o y(6))
		branch(66318)
lbl(66251)	move(y(4) x(0))
		inlineDot(x(0) 2 x(1) cache)
		putConstant(58 x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(7) 66243 66307)
lbl(66273)	getRecord(o [scheme] y(6))
		unifyVariable(y(7))
		moveMoveYXYX(y(4) x(0) y(3) x(3))
		putConstant(58 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 2> 8)
		move(y(8) x(0))
		move(g(1) x(1))
		move(y(7) x(2))
		genFastCall(<P: 29> 6)
		branch(66318)
lbl(66307)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66318)	putList(x(1))
		setConstant(47)
		setConstant(nil)
		putList(x(0))
		setConstant(47)
		setValue(x(1))
		move(y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 78> 6)
		createVariable(y(7))
		createVariable(y(8))
		testBool(y(4) 66449 66457)
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		inlineDot(x(3) 2 x(0) cache)
		moveMoveXYYX(x(0) y(3) y(3) x(1))
		putConstant(47 x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 66418 66438)
		getList(y(7))
		unifyNumber(47)
		unifyVariable(x(3))
		getRecord(o [netloc] y(8))
		unifyVariable(y(4))
		move(y(3) x(0))
		putConstant(47 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 2> 8)
		move(y(9) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		branch(66468)
lbl(66418)	getLiteral(nil y(7))
		getRecord(o [netloc] y(8))
		unifyVariable(x(2))
		move(y(3) x(0))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		branch(66468)
lbl(66438)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66449)	unify(y(7) y(3))
		getLiteral(o y(8))
		branch(66468)
lbl(66457)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(108)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66468)	move(y(7) x(1))
		putConstant(63 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(9))
		testBool(y(3) 66507 66515)
		getRecord(o [query] y(9))
		unifyVariable(x(3))
		moveMoveYXYX(y(7) x(0) y(4) x(2))
		putConstant(63 x(1))
		genFastCall(<P: 2> 8)
		branch(66526)
lbl(66507)	unify(y(4) y(7))
		getLiteral(o y(9))
		branch(66526)
lbl(66515)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66526)	move(y(4) x(1))
		putConstant(59 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(7))
		createVariable(y(10))
		testBool(y(3) 66565 66573)
		getRecord(o [parameter] y(10))
		unifyVariable(x(3))
		moveMoveYXYX(y(4) x(0) y(7) x(2))
		putConstant(59 x(1))
		genFastCall(<P: 2> 8)
		branch(66584)
lbl(66565)	unify(y(7) y(4))
		getLiteral(o y(10))
		branch(66584)
lbl(66573)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66584)	createVariable(y(3))
		match(y(7) ht(66657 [onScalar(nil 66589) onRecord('|' 2 66594)]))
lbl(66589)	getLiteral(o y(3))
		branch(66670)
lbl(66594)	getVarVar(x(0) x(2))
		getRecord(o [path] y(3))
		unifyVariable(x(3))
		testNumber(x(0) 47 66632)
		getRecord(abs 1 x(3))
		unifyVariable(y(4))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66670)
lbl(66632)	getRecord(rel 1 x(3))
		unifyVariable(y(4))
		move(y(7) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(11) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66670)
lbl(66657)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(137)
		setValue(y(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66670)	putRecord('#' 6 x(0))
		setValue(y(6))
		setValue(y(5))
		setValue(y(8))
		setValue(y(9))
		setValue(y(10))
		setValue(y(3))
		move(g(4) x(1))
		move(y(2) x(3))
		putConstant(url x(2))
		genFastCall(<P: 163> 8)
lbl(66698)	unify(y(1) y(2))
		popEx
		deAllocateL
		return
		endDefinition(66128)
lbl(66706)	definition(x(4) 66755 pid('UrlIsAbs' 2 pos('./dp/URL.oz' 148 3) nil 4) <P: 613> nil)
		putConstant(scheme x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 66723)
		getLiteral(true x(1))
		return
lbl(66723)	putConstant(path x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 66749)
		inlineDot(x(0) path x(0) cache)
		callBI('Record.label' [x(0)]#[x(2)])
		putConstant(abs x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(66749)	getLiteral(false x(1))
		return
		endDefinition(66706)
lbl(66755)	definition(x(5) 66798 pid('Copy' 3 pos('./dp/URL.oz' 154 6) nil 6) <P: 614> nil)
		match(x(0) ht(66783 [onScalar(nil 66764) onRecord('|' 2 66765)]))
lbl(66764)	return
lbl(66765)	getVarVar(x(0) x(3))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(2) x(0)]#[x(5)])
		unify(x(5) x(4))
		move(x(3) x(0))
		genFastCall(<P: 614> 7)
lbl(66783)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(157)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66755)
lbl(66798)	definition(x(5) 66871 pid('Project' 3 pos('./dp/URL.oz' 160 6) nil 4) <P: 615> nil)
		allocateL3
lbl(66805)	definition(x(3) 66823 pid('' 2 pos('./dp/URL.oz' 161 16) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('Value.hasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(66805)
lbl(66823)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		callBI('Record.label' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 614> 7)
		endDefinition(66798)
lbl(66871)	definition(x(5) 67170 pid('UrlResolve' 3 pos('./dp/URL.oz' 169 6) nil 6) <P: 616> nil)
		testLiteral(x(0) url 66885)
		unify(x(2) x(1))
		return
lbl(66885)	testLiteral(x(1) url 66893)
		unify(x(2) x(0))
		return
lbl(66893)	putConstant(scheme x(3))
		testBI('Value.hasFeature' [x(1) x(3)]#[x(4)] 66904)
		unify(x(2) x(1))
		return
lbl(66904)	putConstant(netloc x(3))
		testBI('Value.hasFeature' [x(1) x(3)]#[x(4)] 66945)
		allocateL3
		putList(x(3))
		setConstant(scheme)
		setConstant(nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66945)	putConstant(path x(3))
		testBI('Value.hasFeature' [x(1) x(3)]#[x(4)] 67093)
		inlineDot(x(1) path x(3) cache)
		callBI('Record.label' [x(3)]#[x(4)])
		testLiteral(x(4) abs 67005)
		allocateL3
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(67005)	allocateL4
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		putRecord(abs 1 x(1))
		setConstant(nil)
		move(y(0) x(3))
		putConstant(path x(4))
		callBI('Value.condSelect' [x(3) x(4) x(1)]#[x(5)])
		inlineDot(x(0) path x(1) cache)
		move(x(2) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 609> 6)
		move(y(0) x(0))
		putConstant(path x(1))
		move(y(1) x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL4
		return
lbl(67093)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		putConstant(parameter x(3))
		testBI('Value.hasFeature' [x(1) x(3)]#[x(4)] 67116)
		getLiteral(nil y(3))
		branch(67122)
lbl(67116)	getList(y(3))
		unifyLiteral(query)
		unifyLiteral(nil)
lbl(67122)	putList(x(3))
		setConstant(parameter)
		setValue(y(3))
		putList(x(2))
		setConstant(path)
		setValue(x(3))
		putList(x(0))
		setConstant(netloc)
		setValue(x(2))
		putList(x(1))
		setConstant(scheme)
		setValue(x(0))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(66871)
lbl(67170)	definition(x(6) 67474 pid('UrlToVs' 2 pos('./dp/URL.oz' 200 3) nil 9) <P: 617> nil)
		allocateL6
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		putConstant(scheme x(7))
		testBI('Value.hasFeature' [x(0) x(7)]#[x(8)] 67234)
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral('://')
		inlineDot(x(0) scheme x(7) cache)
		unify(x(7) x(1))
		branch(67237)
lbl(67234)	getLiteral('' x(1))
lbl(67237)	move(y(0) x(0))
		putConstant(netloc x(1))
		putConstant('' x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(1))
		putConstant(path x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 67365)
		inlineDot(x(0) path x(1) cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		callBI('Record.label' [x(1)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		testLiteral(x(4) abs 67290)
		getLiteral('/' x(2))
		branch(67293)
lbl(67290)	getLiteral('' x(2))
lbl(67293)	move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
		testLiteral(x(1) nil 67311)
		getLiteral('' y(2))
		branch(67368)
lbl(67311)	inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 2 x(4) cache)
lbl(67323)	definition(x(1) 67342 pid('' 3 pos('./dp/URL.oz' 207 18) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral('/')
		unifyValue(x(1))
		return
		endDefinition(67323)
lbl(67342)	inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(5) 1 x(2) cache)
		move(x(4) x(0))
		move(y(2) x(3))
		genFastCall(<P: 30> 8)
		branch(67368)
lbl(67365)	getLiteral('' y(2))
lbl(67368)	move(y(0) x(0))
		putConstant(parameter x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 67397)
		getRecord('#' 2 y(3))
		unifyLiteral(';')
		unifyVariable(x(1))
		inlineDot(x(0) parameter x(2) cache)
		unify(x(2) x(1))
		branch(67400)
lbl(67397)	getLiteral('' y(3))
lbl(67400)	move(y(0) x(0))
		putConstant(query x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 67429)
		getRecord('#' 2 y(4))
		unifyLiteral('?')
		unifyVariable(x(1))
		inlineDot(x(0) query x(2) cache)
		unify(x(2) x(1))
		branch(67432)
lbl(67429)	getLiteral('' y(4))
lbl(67432)	move(y(0) x(0))
		putConstant(fragment x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 67467)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(1))
		unifyNumber(35)
		unifyLiteral(nil)
		inlineDot(x(0) fragment x(1) cache)
		unify(x(1) x(2))
		deAllocateL6
		return
lbl(67467)	getLiteral('' y(5))
		deAllocateL6
		return
		endDefinition(67170)
lbl(67474)	definition(x(7) 67501 pid('VsToUrl' 2 pos('./dp/URL.oz' 217 3) nil 2) <P: 618> [y(170)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 612> 5)
		endDefinition(67474)
lbl(67501)	definition(x(8) 67528 pid('UrlToAtom' 2 pos('./dp/URL.oz' 221 3) nil 2) <P: 619> [y(169)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 617> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 195> 5)
		endDefinition(67501)
lbl(67528)	definition(x(2) 67565 pid('' 2 pos('./dp/URL.oz' 227 3) nil 2) <P: 620> [x(4) x(7) x(5) x(8) x(6)])
		putConstant(nil x(0))
lbl(67537)	definitionCopy(x(0) 67560 pid('/body' 0 pos('./dp/URL.oz' 227 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4)])
		getRecord('export' [isAbsUrl make resolve toAtom toVs] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		return
		endDefinition(67537)
lbl(67560)	tailCall(x(0) 0)
		endDefinition(67528)
lbl(67565)	putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/2' x(8))
		putRecord('export' [isAbsUrl make resolve toAtom toVs] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		putConstant('import' x(0))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(146) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(146) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) make x(2) cache)
		putList(x(18))
		setConstant(89)
		setConstant(nil)
		putList(x(17))
		setConstant(77)
		setValue(x(18))
		putList(x(16))
		setConstant(77)
		setValue(x(17))
		putList(x(15))
		setConstant(85)
		setValue(x(16))
		putList(x(14))
		setConstant(68)
		setValue(x(15))
		putList(x(13))
		setConstant(47)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(111)
		setValue(x(12))
		putList(x(10))
		setConstant(111)
		setValue(x(11))
		putList(x(9))
		setConstant(98)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(185) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) make x(2) cache)
		putList(x(20))
		setConstant(89)
		setConstant(nil)
		putList(x(19))
		setConstant(77)
		setValue(x(20))
		putList(x(18))
		setConstant(77)
		setValue(x(19))
		putList(x(17))
		setConstant(85)
		setValue(x(18))
		putList(x(16))
		setConstant(68)
		setValue(x(17))
		putList(x(15))
		setConstant(47)
		setValue(x(16))
		putList(x(14))
		setConstant(109)
		setValue(x(15))
		putList(x(13))
		setConstant(101)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(121)
		setValue(x(11))
		putList(x(9))
		setConstant(115)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(186) x(1))
		call(x(2) 2)
		move(y(185) x(0))
		inlineDot(x(0) scheme x(0) cache)
		move(y(186) x(1))
		inlineDot(x(1) scheme x(2) cache)
		unify(x(2) x(0))
		putRecord(url ['functor' home pickle] x(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
lbl(67904)	definition(x(1) 67913 pid('Swallow' 1 pos('./init/Module.oz' 41 3) nil 1) <P: 621> nil)
		return
		endDefinition(67904)
lbl(67913)	putList(x(26))
		setConstant('Misc')
		setConstant(nil)
		putList(x(25))
		setConstant('Type')
		setValue(x(26))
		putList(x(24))
		setConstant('RunTimeLibrary')
		setValue(x(25))
		putList(x(23))
		setConstant('Compiler')
		setValue(x(24))
		putList(x(22))
		setConstant('TkTools')
		setValue(x(23))
		putList(x(21))
		setConstant('Tk')
		setValue(x(22))
		putList(x(20))
		setConstant('Open')
		setValue(x(21))
		putList(x(19))
		setConstant('URL')
		setValue(x(20))
		putList(x(18))
		setConstant('VirtualSite')
		setValue(x(19))
		putList(x(17))
		setConstant('Remote')
		setValue(x(18))
		putList(x(16))
		setConstant('Connection')
		setValue(x(17))
		putList(x(15))
		setConstant('Fault')
		setValue(x(16))
		putList(x(14))
		setConstant('Foreign')
		setValue(x(15))
		putList(x(13))
		setConstant('Finalize')
		setValue(x(14))
		putList(x(12))
		setConstant('ErrorRegistry')
		setValue(x(13))
		putList(x(11))
		setConstant('Error')
		setValue(x(12))
		putList(x(10))
		setConstant('FS')
		setValue(x(11))
		putList(x(9))
		setConstant('Schedule')
		setValue(x(10))
		putList(x(8))
		setConstant('FD')
		setValue(x(9))
		putList(x(7))
		setConstant('Search')
		setValue(x(8))
		putList(x(6))
		setConstant('Servlet')
		setValue(x(7))
		putList(x(5))
		setConstant('Syslet')
		setValue(x(6))
		putList(x(4))
		setConstant('Applet')
		setValue(x(5))
		putList(x(3))
		setConstant('GetArgs')
		setValue(x(4))
		putList(x(2))
		setConstant('Application')
		setValue(x(3))
		putList(x(36))
		setConstant('GumpParser')
		setConstant(nil)
		putList(x(35))
		setConstant('GumpScanner')
		setValue(x(36))
		putList(x(34))
		setConstant('Gump')
		setValue(x(35))
		putList(x(33))
		setConstant('Profiler')
		setValue(x(34))
		putList(x(32))
		setConstant('Ozcar')
		setValue(x(33))
		putList(x(31))
		setConstant('Emacs')
		setValue(x(32))
		putList(x(30))
		setConstant('CompilerPanel')
		setValue(x(31))
		putList(x(29))
		setConstant('Explorer')
		setValue(x(30))
		putList(x(28))
		setConstant('Browser')
		setValue(x(29))
		putList(x(27))
		setConstant('Panel')
		setValue(x(28))
		putList(x(43))
		setConstant('BitArray')
		setConstant(nil)
		putList(x(42))
		setConstant('System')
		setValue(x(43))
		putList(x(41))
		setConstant('Pickle')
		setValue(x(42))
		putList(x(40))
		setConstant('Property')
		setValue(x(41))
		putList(x(39))
		setConstant('OS')
		setValue(x(40))
		putList(x(38))
		setConstant('Resolve')
		setValue(x(39))
		putList(x(37))
		setConstant('Module')
		setValue(x(38))
		putRecord(defaults [lib tools volatile] y(185))
		setValue(x(2))
		setValue(x(27))
		setValue(x(37))
		move(y(146) x(2))
		inlineDot(x(2) make x(3) cache)
		putList(x(22))
		setConstant(89)
		setConstant(nil)
		putList(x(21))
		setConstant(77)
		setValue(x(22))
		putList(x(20))
		setConstant(77)
		setValue(x(21))
		putList(x(19))
		setConstant(85)
		setValue(x(20))
		putList(x(18))
		setConstant(68)
		setValue(x(19))
		putList(x(17))
		setConstant(47)
		setValue(x(18))
		putList(x(16))
		setConstant(109)
		setValue(x(17))
		putList(x(15))
		setConstant(101)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(115)
		setValue(x(14))
		putList(x(12))
		setConstant(121)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(47)
		setValue(x(11))
		putList(x(9))
		setConstant(47)
		setValue(x(10))
		putList(x(8))
		setConstant(58)
		setValue(x(9))
		putList(x(7))
		setConstant(122)
		setValue(x(8))
		putList(x(6))
		setConstant(111)
		setValue(x(7))
		putList(x(5))
		setConstant(45)
		setValue(x(6))
		putList(x(4))
		setConstant(120)
		setValue(x(5))
		moveMoveXYXY(x(0) y(186) x(1) y(187))
		move(x(4) x(0))
		createVariableMove(y(188) x(1))
		call(x(3) 2)
		move(y(185) x(0))
		inlineDot(x(0) volatile x(1) cache)
		inlineDot(x(0) lib x(3) cache)
		inlineDot(x(0) tools x(4) cache)
		move(x(1) y(185))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(192) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(185) x(0) y(192) x(1))
		createVariableMove(y(208) x(2))
		genFastCall(<P: 21> 6)
lbl(68359)	definition(x(1) 68414 pid('' 2 pos('./init/Module.oz' 56 3) nil 4) <P: 622> [y(146) y(188)])
		allocateL3
		getRecord('#' 2 x(1))
		unifyValVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) resolve x(2) cache)
		inlineDot(x(1) make x(3) cache)
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(1) x(3))
		move(g(1) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(68359)
lbl(68414)	move(y(208) x(0))
		createVariableMove(y(185) x(2))
		genFastCall(<P: 29> 6)
		putConstant(map x(7))
		move(y(185) x(0))
		callBI('Record.record' [x(7) x(0)]#[x(8)])
lbl(68432)	definition(x(7) 68495 pid('ModNameToUrl' 2 pos('./init/Module.oz' 63 3) nil 5) <P: 623> [y(169) x(8) y(146)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		move(y(1) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 68466)
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
lbl(68466)	move(g(2) x(2))
		inlineDot(x(2) make x(3) cache)
		putRecord('#' 2 x(4))
		setValue(y(1))
		setConstant('.ozf')
		move(x(4) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(68432)
lbl(68495)	definition(x(7) 68531 pid('NameOrUrlToUrl' 3 pos('./init/Module.oz' 75 3) nil 4) <P: 624> [y(146)])
		testLiteral(x(1) <N: NONE> 68511)
		move(x(2) x(1))
		genFastCall(<P: 623> 5)
lbl(68511)	move(g(0) x(0))
		inlineDot(x(0) make x(3) cache)
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
		endDefinition(68495)
lbl(68531)	putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('feat' [<N: ModuleMap>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(68543)	definition(x(7) 68566 pid('BaseManager,init/fast' 0 pos('./init/Module.oz' 88 6) nil 2) <P: 625> [y(132)])
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		callBI('Dictionary.new' nil#[x(1)])
		unify(x(1) x(0))
		return
		endDefinition(68543)
lbl(68566)	definition(x(8) 68580 pid('BaseManager,init/slow' 1 pos('./init/Module.oz' 88 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 625> 1)
		endDefinition(68566)
lbl(68580)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(68590)	definition(x(7) 68756 pid('BaseManager,Link/fast' 2 pos('./init/Module.oz' 92 6) nil 4) <P: 626> [y(146) y(156) y(149) y(186) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intLink 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(68752 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 68680)
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(68751)
lbl(68680)	getSelf(x(2))
lbl(68682)	definition(x(3) 68742 pid('' 1 pos('./init/Module.oz' 100 7) nil 6) unit [x(2) y(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		putConstant(scheme x(3))
		putConstant(unit x(4))
		callBI('Value.condSelect' [x(2) x(3) x(4)]#[x(5)])
		move(g(2) x(3))
		testBI('Value.\'==\'' [x(5) x(3)]#[x(4)] 68726)
		getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(system x(4) 2 cache)
lbl(68726)	getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(load x(4) 2 cache)
		endDefinition(68682)
lbl(68742)	callBI('Value.byNeed' [x(3)]#[x(2)])
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(1) x(2))
lbl(68751)	return
lbl(68752)	deAllocateL3
		return
		endDefinition(68590)
lbl(68756)	definition(x(8) 68791 pid('BaseManager,Link/slow' 1 pos('./init/Module.oz' 92 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 626> 5)
		endDefinition(68756)
lbl(68791)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: Link>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(185))
lbl(68803)	definition(x(7) 68975 pid('BaseManager,Apply/fast' 3 pos('./init/Module.oz' 114 6) nil 5) <P: 627> [y(146) y(164) y(185)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) toAtom x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(x(4) 2)
		putRecord(intApply 1 x(0))
		setValue(y(3))
		getSelf(x(3))
		sendMsg(trace x(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) 'import' x(3) cache)
		getSelf(x(4))
lbl(68858)	definition(x(1) 68946 pid('' 3 pos('./init/Module.oz' 118 6) nil 6) unit [x(4) g(0) y(0) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		move(x(2) y(0))
		createVariable(y(1))
		putConstant('from' x(4))
		testBI('Value.hasFeature' [x(1) x(4)]#[x(5)] 68908)
		move(g(1) x(0))
		inlineDot(x(0) make x(4) cache)
		inlineDot(x(1) 'from' x(5) cache)
		move(x(5) x(0))
		move(y(1) x(1))
		call(x(4) 2)
		branch(68914)
lbl(68908)	move(y(1) x(1))
		genFastCall(<P: 623> 4)
lbl(68914)	move(g(1) x(0))
		inlineDot(x(0) resolve x(3) cache)
		move(g(2) x(0))
		move(y(1) x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(3) true <N: Link> true 2) 0)
		endDefinition(68858)
lbl(68946)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailCall(x(2) 2)
		endDefinition(68803)
lbl(68975)	definition(x(8) 69016 pid('BaseManager,Apply/slow' 1 pos('./init/Module.oz' 114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 627> 7)
		endDefinition(68975)
lbl(69016)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Apply>)
		setValue(x(8))
		setValue(x(7))
lbl(69026)	definition(x(7) 69138 pid('BaseManager,Enter/fast' 2 pos('./init/Module.oz' 131 6) nil 4) <P: 628> [y(146) y(156) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intEnter 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(69134 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 69119)
		putRecord(module 2 x(0))
		setConstant(alreadyInstalled)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(69119)	getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(69133)	return
lbl(69134)	deAllocateL3
		return
		endDefinition(69026)
lbl(69138)	definition(x(8) 69173 pid('BaseManager,Enter/slow' 1 pos('./init/Module.oz' 131 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 628> 5)
		endDefinition(69138)
lbl(69173)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: Enter>)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern [1 name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69193)	definition(x(8) 69324 pid('BaseManager,link' 1 pos('./init/Module.oz' 147 6) nil 4) unit [x(7) y(185)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 69230)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
lbl(69230)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 69253)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(2))
		branch(69256)
lbl(69253)	getLiteral(<N: NONE> y(2))
lbl(69256)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(1)] 69279)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69282)
lbl(69279)	getLiteral(<N: NONE> y(3))
lbl(69282)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(1) true <N: Link> false 2) 0)
		move(y(0) x(0))
		putConstant(1 x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(0)] 69320)
		move(y(1) x(0))
		callBI('Value.wait' [x(0)]#nil)
lbl(69320)	deAllocateL5
		return
		endDefinition(69193)
lbl(69324)	putList(x(7))
		setConstant(link)
		setValue(x(8))
		putRecord(messagePattern [1 2 name url] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69342)	definition(x(13) 69485 pid('BaseManager,apply' 1 pos('./init/Module.oz' 156 6) nil 4) unit [x(8) y(185)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 69388)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(69388)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 69411)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(69414)
lbl(69411)	getLiteral(<N: NONE> y(3))
lbl(69414)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(1)] 69437)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(69440)
lbl(69437)	getLiteral(<N: NONE> y(4))
lbl(69440)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(1) true <N: Apply> false 3) 0)
		move(y(0) x(0))
		putConstant(2 x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(0)] 69481)
		move(y(2) x(0))
		callBI('Value.wait' [x(0)]#nil)
lbl(69481)	deAllocateL6
		return
		endDefinition(69342)
lbl(69485)	putList(x(8))
		setConstant(apply)
		setValue(x(13))
		putRecord(messagePattern [1 name url] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69501)	definition(x(14) 69600 pid('BaseManager,enter' 1 pos('./init/Module.oz' 166 6) nil 4) unit [x(13) y(185)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(name x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 69549)
		inlineDot(x(0) name x(2) cache)
		unify(x(2) y(2))
		branch(69552)
lbl(69549)	getLiteral(<N: NONE> y(2))
lbl(69552)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(1)] 69575)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69578)
lbl(69575)	getLiteral(<N: NONE> y(3))
lbl(69578)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(1) true <N: Enter> true 2) 0)
		endDefinition(69501)
lbl(69600)	putList(x(13))
		setConstant(enter)
		setValue(x(14))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(7))
		setValue(x(8))
		setValue(x(13))
		move(y(185) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('BaseManager' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(69639)	definition(x(2) 70493 pid('' 2 pos('./init/Module.oz' 178 3) nil 4) <P: 629> [y(187) y(185) y(146) y(55)])
		putList(x(2))
		setPredicateRef(<Q: 630>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 631>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 632>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 633>)
		setValue(x(2))
lbl(69669)	definitionCopy(x(3) 70488 pid('/body' 0 pos('./init/Module.oz' 178 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL5
		move(g(0) x(0))
		inlineDot(x(0) 'Pickle' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'OS' x(3) cache)
		inlineDot(x(0) 'Boot' x(4) cache)
		inlineDot(x(3) getEnv x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		putConstant('OZ_TRACE_MODULE' x(0))
		createVariableMove(y(3) x(1))
		call(x(3) 2)
		createVariable(y(4))
		testLiteral(y(3) false 69737)
		unify(y(4) g(1))
		branch(69749)
lbl(69737)	move(y(1) x(0))
		inlineDot(x(0) show x(1) cache)
		unify(x(1) y(4))
lbl(69749)	putList(x(0))
		setValue(g(2))
		setConstant(nil)
lbl(69755)	definition(x(7) 69766 pid('RootManager,trace/fast' 1 pos('./init/Module.oz' 196 2) nil 1) <Q: 630> [y(4)])
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(69755)
lbl(69766)	definition(x(8) 69792 pid('RootManager,trace/slow' 1 pos('./init/Module.oz' 196 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 630> 3)
		endDefinition(69766)
lbl(69792)	putRecord('#' [1 2 fast] x(9))
		setConstant(trace)
		setValue(x(8))
		setValue(x(7))
lbl(69802)	definition(x(7) 69869 pid('RootManager,load/fast' 2 pos('./init/Module.oz' 200 2) nil 6) <Q: 631> [y(0) g(3)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) load x(3) cache)
		move(g(1) x(4))
		inlineDot(x(4) toVs x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg(<N: Apply> x(4) 3 cache)
		endDefinition(69802)
lbl(69869)	definition(x(8) 69904 pid('RootManager,load/slow' 1 pos('./init/Module.oz' 200 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 631> 5)
		endDefinition(69869)
lbl(69904)	putRecord('#' [1 2 fast] x(10))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(69914)	definition(x(7) 70299 pid('RootManager,system/fast' 2 pos('./init/Module.oz' 205 2) nil 5) <Q: 632> [g(3) g(4) y(2) y(0)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(systemOrBoot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		exHandler(70095)
		move(x(0) y(2))
		createCond(70089)
lbl(69962)	nextClause(70026)
		clause
		thread(69996)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(url 2 x(1))
		unifyLiteral(load)
		unifyVoid(1)
		deAllocateL5
		return
lbl(69996)	ask
lbl(69997)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(systemNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70026)	lastClause
		clause
		thread(70059)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(system 2 x(1))
		unifyLiteral(unknownBootModule)
		unifyVoid(1)
		deAllocateL5
		return
lbl(70059)	ask
lbl(70060)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(bootNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70089)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70095)	move(y(0) x(0))
		inlineDot(x(0) netloc x(1) cache)
		callBI('String.toAtom' [x(1)]#[x(2)])
		inlineDot(x(0) path x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(46 x(1))
		createVariableMove(y(3) x(2))
		createVariable(x(3))
		genFastCall(<P: 2> 8)
		createVariable(y(4))
		match(y(2) ht(70278 [onScalar(boot 70147) onScalar(system 70198)]))
lbl(70147)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(boot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) manager x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		call(x(2) 2)
		branch(70291)
lbl(70198)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(system 2 x(0))
		setValue(y(3))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(3) x(0))
		inlineDot(x(0) load x(2) cache)
		putRecord('#' 3 x(3))
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setValue(y(3))
		setConstant('.ozf')
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(<N: Apply> x(4) 3 cache)
		branch(70291)
lbl(70278)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(220)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70291)	unify(y(1) y(4))
		popEx
		deAllocateL5
		return
		endDefinition(69914)
lbl(70299)	definition(x(8) 70334 pid('RootManager,system/slow' 1 pos('./init/Module.oz' 205 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 632> 5)
		endDefinition(70299)
lbl(70334)	putRecord('#' [1 2 fast] x(11))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('RootManager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(70393)	definition(x(7) 70407 pid('Manager,system/fast' 2 pos('./init/Module.oz' 235 2) nil 3) <Q: 633> [y(1)])
		tailSendMsg(<N: Link> g(0) 2 cache)
		endDefinition(70393)
lbl(70407)	definition(x(8) 70442 pid('Manager,system/slow' 1 pos('./init/Module.oz' 235 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 633> 5)
		endDefinition(70407)
lbl(70442)	putRecord('#' [1 2 fast] x(9))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Manager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [manager root] g(5))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL5
		return
		endDefinition(69669)
lbl(70488)	tailCall(x(3) 0)
		endDefinition(69639)
lbl(70493)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		putConstant('class' x(4))
		putConstant(object x(5))
		putRecord('export' [manager root] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(70549)	definition(x(2) 70845 pid('' 2 pos('./compiler/PrintName.oz' 22 0) nil 3) <P: 634> [y(53) y(39) y(52) y(47) y(54)])
		putList(x(0))
		setPredicateRef(<Q: 635>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 636>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 637>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 638>)
		setValue(x(0))
lbl(70579)	definitionCopy(x(2) 70840 pid('/body' 0 pos('./compiler/PrintName.oz' 22 0) [once] 2) unit [g(0) g(1) g(2) g(3) g(4) x(1)])
lbl(70585)	definition(x(0) 70611 pid('IsIDChar' 2 pos('./compiler/PrintName.oz' 27 3) nil 4) <Q: 635> [g(0)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 70599)
		getLiteral(true x(1))
		return
lbl(70599)	putConstant(95 x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(70585)
lbl(70611)	definition(x(1) 70682 pid('IsQuotedVariable' 2 pos('./compiler/PrintName.oz' 31 3) nil 3) <Q: 636> nil)
		match(x(0) ht(70667 [onScalar(nil 70620) onRecord('|' 2 70624)]))
lbl(70620)	getLiteral(false x(1))
		return
lbl(70624)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 70649)
lbl(70640)	testLiteral(y(2) nil 70649)
lbl(70644)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(70649)	testNumber(y(1) 0 70658)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(70658)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 636> 5)
lbl(70667)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(38)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(70611)
lbl(70682)	definition(x(1) 70754 pid('IsPrintName' 2 pos('./compiler/PrintName.oz' 41 3) nil 4) <Q: 637> [g(1) g(2) x(0)])
		testBI('Atom.is' [x(0)]#[x(2)] 70748)
		callBI('Atom.toString' [x(0)]#[x(2)])
		match(x(2) ht(70735 [onScalar(nil 70698) onRecord('|' 2 70702)]))
lbl(70698)	getLiteral(false x(1))
		return
lbl(70702)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 70715)
lbl(70709)	move(x(2) x(0))
		genFastCall(<Q: 636> 5)
lbl(70715)	testBI('Char.isUpper' [x(0)]#[x(3)] 70731)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(70731)	getLiteral(false x(1))
		return
lbl(70735)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(53)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70748)	getLiteral(false x(1))
		return
		endDefinition(70682)
lbl(70754)	definition(x(0) 70829 pid('DowncasePrintName' 2 pos('./compiler/PrintName.oz' 57 3) nil 5) <Q: 638> [g(1) g(2) g(3) g(4)])
		callBI('Atom.toString' [x(0)]#[x(2)])
		match(x(2) ht(70814 [onScalar(nil 70766) onRecord('|' 2 70770)]))
lbl(70766)	unify(x(1) x(0))
		return
lbl(70770)	getVarVar(x(2) x(3))
		testBI('Char.isUpper' [x(2)]#[x(4)] 70793)
		callBI('Char.toLower' [x(2)]#[x(0)])
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		callBI('String.toAtom' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(70793)	testNumber(x(2) 96 70801)
lbl(70797)	unify(x(1) x(0))
		return
lbl(70801)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(62)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70814)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(70754)
lbl(70829)	getRecord('export' [downcase is] g(5))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(70579)
lbl(70840)	tailCall(x(2) 0)
		endDefinition(70549)
lbl(70845)	putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putRecord('export' [downcase is] x(1))
		setValue(x(4))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(54) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putList(x(3))
		setConstant(any)
		setConstant(nil)
		putList(x(2))
		setConstant(det)
		setValue(x(3))
		putList(x(1))
		setConstant(det)
		setValue(x(2))
		putList(x(5))
		setConstant(false)
		setConstant(nil)
		putList(x(4))
		setConstant(false)
		setValue(x(5))
		putList(x(8))
		setConstant(value)
		setConstant(nil)
		putList(x(7))
		setConstant(int)
		setValue(x(8))
		putList(x(6))
		setConstant(array)
		setValue(x(7))
		putRecord(builtin [det imods types] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(6))
		putRecord(any 1 x(12))
		setConstant(det)
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(10))
		setConstant(det)
		setValue(x(11))
		putList(x(13))
		setConstant(false)
		setConstant(nil)
		putList(x(15))
		setConstant(int)
		setConstant(nil)
		putList(x(14))
		setConstant(array)
		setValue(x(15))
		putRecord(builtin [det imods types] x(9))
		setValue(x(10))
		setValue(x(13))
		setValue(x(14))
		putRecord(any 1 x(19))
		setConstant(det)
		putList(x(18))
		setValue(x(19))
		setConstant(nil)
		putList(x(17))
		setConstant(det)
		setValue(x(18))
		putList(x(20))
		setConstant(false)
		setConstant(nil)
		putList(x(22))
		setConstant(bool)
		setConstant(nil)
		putList(x(21))
		setConstant(value)
		setValue(x(22))
		putRecord(builtin [det imods test types] x(16))
		setValue(x(17))
		setValue(x(20))
		setConstant(true)
		setValue(x(21))
		putRecord(any 1 x(26))
		setConstant(det)
		putList(x(25))
		setValue(x(26))
		setConstant(nil)
		putList(x(24))
		setConstant(det)
		setValue(x(25))
		putList(x(27))
		setConstant(false)
		setConstant(nil)
		putList(x(29))
		setConstant(int)
		setConstant(nil)
		putList(x(28))
		setConstant(array)
		setValue(x(29))
		putRecord(builtin [det imods types] x(23))
		setValue(x(24))
		setValue(x(27))
		setValue(x(28))
		putRecord(any 1 x(35))
		setConstant(det)
		putList(x(34))
		setValue(x(35))
		setConstant(nil)
		putList(x(33))
		setConstant(any)
		setValue(x(34))
		putList(x(32))
		setConstant(det)
		setValue(x(33))
		putList(x(31))
		setConstant(det)
		setValue(x(32))
		putList(x(38))
		setConstant(false)
		setConstant(nil)
		putList(x(37))
		setConstant(false)
		setValue(x(38))
		putList(x(36))
		setConstant(false)
		setValue(x(37))
		putList(x(42))
		setConstant(array)
		setConstant(nil)
		putList(x(41))
		setConstant(value)
		setValue(x(42))
		putList(x(40))
		setConstant(int)
		setValue(x(41))
		putList(x(39))
		setConstant(int)
		setValue(x(40))
		putRecord(builtin [det imods types] x(30))
		setValue(x(31))
		setValue(x(36))
		setValue(x(39))
		putList(x(46))
		setConstant(any)
		setConstant(nil)
		putList(x(45))
		setConstant(det)
		setValue(x(46))
		putList(x(44))
		setConstant(det)
		setValue(x(45))
		putList(x(49))
		setConstant(false)
		setConstant(nil)
		putList(x(48))
		setConstant(false)
		setValue(x(49))
		putList(x(47))
		setConstant(false)
		setValue(x(48))
		putList(x(52))
		setConstant(value)
		setConstant(nil)
		putList(x(51))
		setConstant(int)
		setValue(x(52))
		putList(x(50))
		setConstant(array)
		setValue(x(51))
		putRecord(builtin [det imods types] x(43))
		setValue(x(44))
		setValue(x(47))
		setValue(x(50))
		putRecord(any 1 x(56))
		setConstant(det)
		putList(x(55))
		setValue(x(56))
		setConstant(nil)
		putList(x(54))
		setConstant(det)
		setValue(x(55))
		putList(x(57))
		setConstant(false)
		setConstant(nil)
		putList(x(59))
		setConstant(bool)
		setConstant(nil)
		putList(x(58))
		setConstant(value)
		setValue(x(59))
		putRecord(builtin [det imods test types] x(53))
		setValue(x(54))
		setValue(x(57))
		setConstant(true)
		setValue(x(58))
		putRecord(any 1 x(63))
		setConstant(det)
		putList(x(62))
		setValue(x(63))
		setConstant(nil)
		putList(x(61))
		setConstant(det)
		setValue(x(62))
		putList(x(64))
		setConstant(false)
		setConstant(nil)
		putList(x(66))
		setConstant(string)
		setConstant(nil)
		putList(x(65))
		setConstant(atom)
		setValue(x(66))
		putRecord(builtin [det imods types] x(60))
		setValue(x(61))
		setValue(x(64))
		setValue(x(65))
		putList(x(69))
		setConstant(det)
		setConstant(nil)
		putList(x(68))
		setConstant(det)
		setValue(x(69))
		putList(x(71))
		setConstant(false)
		setConstant(nil)
		putList(x(70))
		setConstant(false)
		setValue(x(71))
		putList(x(73))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(72))
		setConstant(bitArray)
		setValue(x(73))
		putRecord(builtin [det imods types] x(67))
		setValue(x(68))
		setValue(x(70))
		setValue(x(72))
		putRecord(any 1 x(77))
		setConstant(det)
		putList(x(76))
		setValue(x(77))
		setConstant(nil)
		putList(x(75))
		setConstant(det)
		setValue(x(76))
		putList(x(78))
		setConstant(false)
		setConstant(nil)
		putList(x(80))
		setConstant(int)
		setConstant(nil)
		putList(x(79))
		setConstant(bitArray)
		setValue(x(80))
		putRecord(builtin [det imods types] x(74))
		setValue(x(75))
		setValue(x(78))
		setValue(x(79))
		putList(x(83))
		setConstant(det)
		setConstant(nil)
		putList(x(82))
		setConstant(det)
		setValue(x(83))
		putList(x(85))
		setConstant(false)
		setConstant(nil)
		putList(x(84))
		setConstant(false)
		setValue(x(85))
		putList(x(87))
		setConstant(int)
		setConstant(nil)
		putList(x(86))
		setConstant(bitArray)
		setValue(x(87))
		putRecord(builtin [det imods types] x(81))
		setValue(x(82))
		setValue(x(84))
		setValue(x(86))
		putRecord(any 1 x(91))
		setConstant(det)
		putList(x(90))
		setValue(x(91))
		setConstant(nil)
		putList(x(89))
		setConstant(det)
		setValue(x(90))
		putList(x(92))
		setConstant(false)
		setConstant(nil)
		putList(x(94))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(93))
		setConstant(bitArray)
		setValue(x(94))
		putRecord(builtin [det imods types] x(88))
		setValue(x(89))
		setValue(x(92))
		setValue(x(93))
		putRecord(any 1 x(98))
		setConstant(det)
		putList(x(97))
		setValue(x(98))
		setConstant(nil)
		putList(x(96))
		setConstant(det)
		setValue(x(97))
		putList(x(99))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(102))
		setConstant(int)
		putList(x(101))
		setValue(x(102))
		setConstant(nil)
		putList(x(100))
		setConstant(bitArray)
		setValue(x(101))
		putRecord(builtin [det imods types] x(95))
		setValue(x(96))
		setValue(x(99))
		setValue(x(100))
		putRecord(any 1 x(107))
		setConstant(det)
		putList(x(106))
		setValue(x(107))
		setConstant(nil)
		putList(x(105))
		setConstant(det)
		setValue(x(106))
		putList(x(104))
		setConstant(det)
		setValue(x(105))
		putList(x(109))
		setConstant(false)
		setConstant(nil)
		putList(x(108))
		setConstant(false)
		setValue(x(109))
		putList(x(112))
		setConstant(bool)
		setConstant(nil)
		putList(x(111))
		setConstant(bitArray)
		setValue(x(112))
		putList(x(110))
		setConstant(bitArray)
		setValue(x(111))
		putRecord(builtin [det imods test types] x(103))
		setValue(x(104))
		setValue(x(108))
		setConstant(true)
		setValue(x(110))
		putRecord(any 1 x(116))
		setConstant(det)
		putList(x(115))
		setValue(x(116))
		setConstant(nil)
		putList(x(114))
		setConstant(det)
		setValue(x(115))
		putList(x(117))
		setConstant(false)
		setConstant(nil)
		putList(x(119))
		setConstant(int)
		setConstant(nil)
		putList(x(118))
		setConstant(bitArray)
		setValue(x(119))
		putRecord(builtin [det imods types] x(113))
		setValue(x(114))
		setValue(x(117))
		setValue(x(118))
		putRecord(any 1 x(123))
		setConstant(det)
		putList(x(122))
		setValue(x(123))
		setConstant(nil)
		putList(x(121))
		setConstant(det)
		setValue(x(122))
		putList(x(124))
		setConstant(false)
		setConstant(nil)
		putList(x(126))
		setConstant(bool)
		setConstant(nil)
		putList(x(125))
		setConstant(value)
		setValue(x(126))
		putRecord(builtin [det imods test types] x(120))
		setValue(x(121))
		setValue(x(124))
		setConstant(true)
		setValue(x(125))
		putRecord(any 1 x(130))
		setConstant(det)
		putList(x(129))
		setValue(x(130))
		setConstant(nil)
		putList(x(128))
		setConstant(det)
		setValue(x(129))
		putList(x(131))
		setConstant(false)
		setConstant(nil)
		putList(x(133))
		setConstant(int)
		setConstant(nil)
		putList(x(132))
		setConstant(bitArray)
		setValue(x(133))
		putRecord(builtin [det imods types] x(127))
		setValue(x(128))
		setValue(x(131))
		setValue(x(132))
		putRecord(any 1 x(138))
		setConstant(det)
		putList(x(137))
		setValue(x(138))
		setConstant(nil)
		putList(x(136))
		setConstant(det)
		setValue(x(137))
		putList(x(135))
		setConstant(det)
		setValue(x(136))
		putList(x(140))
		setConstant(false)
		setConstant(nil)
		putList(x(139))
		setConstant(false)
		setValue(x(140))
		putList(x(143))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(142))
		setConstant(int)
		setValue(x(143))
		putList(x(141))
		setConstant(int)
		setValue(x(142))
		putRecord(builtin [det imods types] x(134))
		setValue(x(135))
		setValue(x(139))
		setValue(x(141))
		putList(x(146))
		setConstant(det)
		setConstant(nil)
		putList(x(145))
		setConstant(det)
		setValue(x(146))
		putList(x(148))
		setConstant(false)
		setConstant(nil)
		putList(x(147))
		setConstant(false)
		setValue(x(148))
		putList(x(150))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(149))
		setConstant(bitArray)
		setValue(x(150))
		putRecord(builtin [det imods types] x(144))
		setValue(x(145))
		setValue(x(147))
		setValue(x(149))
		putList(x(153))
		setConstant(det)
		setConstant(nil)
		putList(x(152))
		setConstant(det)
		setValue(x(153))
		putList(x(155))
		setConstant(false)
		setConstant(nil)
		putList(x(154))
		setConstant(false)
		setValue(x(155))
		putList(x(157))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(156))
		setConstant(bitArray)
		setValue(x(157))
		putRecord(builtin [det imods types] x(151))
		setValue(x(152))
		setValue(x(154))
		setValue(x(156))
		putList(x(160))
		setConstant(det)
		setConstant(nil)
		putList(x(159))
		setConstant(det)
		setValue(x(160))
		putList(x(162))
		setConstant(false)
		setConstant(nil)
		putList(x(161))
		setConstant(false)
		setValue(x(162))
		putList(x(164))
		setConstant(int)
		setConstant(nil)
		putList(x(163))
		setConstant(bitArray)
		setValue(x(164))
		putRecord(builtin [det imods types] x(158))
		setValue(x(159))
		setValue(x(161))
		setValue(x(163))
		putRecord(any 1 x(169))
		setConstant(det)
		putList(x(168))
		setValue(x(169))
		setConstant(nil)
		putList(x(167))
		setConstant(det)
		setValue(x(168))
		putList(x(166))
		setConstant(det)
		setValue(x(167))
		putList(x(171))
		setConstant(false)
		setConstant(nil)
		putList(x(170))
		setConstant(false)
		setValue(x(171))
		putList(x(174))
		setConstant(bool)
		setConstant(nil)
		putList(x(173))
		setConstant(int)
		setValue(x(174))
		putList(x(172))
		setConstant(bitArray)
		setValue(x(173))
		putRecord(builtin [det imods test types] x(165))
		setValue(x(166))
		setValue(x(170))
		setConstant(true)
		setValue(x(172))
		putRecord(any 1 x(178))
		setConstant(det)
		putList(x(177))
		setValue(x(178))
		setConstant(nil)
		putList(x(176))
		setConstant(det)
		setValue(x(177))
		putList(x(179))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(182))
		setConstant(int)
		putList(x(181))
		setValue(x(182))
		setConstant(nil)
		putList(x(180))
		setConstant(bitArray)
		setValue(x(181))
		putRecord(builtin [det imods types] x(175))
		setValue(x(176))
		setValue(x(179))
		setValue(x(180))
		putRecord(any 1 x(187))
		setConstant(det)
		putList(x(186))
		setValue(x(187))
		setConstant(nil)
		putList(x(185))
		setConstant(det)
		setValue(x(186))
		putList(x(184))
		setConstant(det)
		setValue(x(185))
		putList(x(189))
		setConstant(false)
		setConstant(nil)
		putList(x(188))
		setConstant(false)
		setValue(x(189))
		putList(x(192))
		setConstant(bool)
		setConstant(nil)
		putList(x(191))
		setConstant(bool)
		setValue(x(192))
		putList(x(190))
		setConstant(bool)
		setValue(x(191))
		putRecord(builtin [det imods test types] x(183))
		setValue(x(184))
		setValue(x(188))
		setConstant(true)
		setValue(x(190))
		putRecord(any 1 x(196))
		setConstant(det)
		putList(x(195))
		setValue(x(196))
		setConstant(nil)
		putList(x(194))
		setConstant(det)
		setValue(x(195))
		putList(x(197))
		setConstant(false)
		setConstant(nil)
		putList(x(199))
		setConstant(bool)
		setConstant(nil)
		putList(x(198))
		setConstant(value)
		setValue(x(199))
		putRecord(builtin [det imods test types] x(193))
		setValue(x(194))
		setValue(x(197))
		setConstant(true)
		setValue(x(198))
		putRecord(any 1 x(203))
		setConstant(det)
		putList(x(202))
		setValue(x(203))
		setConstant(nil)
		putList(x(201))
		setConstant(det)
		setValue(x(202))
		putList(x(204))
		setConstant(false)
		setConstant(nil)
		putList(x(206))
		setConstant(bool)
		setConstant(nil)
		putList(x(205))
		setConstant(bool)
		setValue(x(206))
		putRecord(builtin [det imods test types] x(200))
		setValue(x(201))
		setValue(x(204))
		setConstant(true)
		setValue(x(205))
		putRecord(any 1 x(211))
		setConstant(det)
		putList(x(210))
		setValue(x(211))
		setConstant(nil)
		putList(x(209))
		setConstant(det)
		setValue(x(210))
		putList(x(208))
		setConstant(det)
		setValue(x(209))
		putList(x(213))
		setConstant(false)
		setConstant(nil)
		putList(x(212))
		setConstant(false)
		setValue(x(213))
		putList(x(216))
		setConstant(bool)
		setConstant(nil)
		putList(x(215))
		setConstant(bool)
		setValue(x(216))
		putList(x(214))
		setConstant(bool)
		setValue(x(215))
		putRecord(builtin [det imods test types] x(207))
		setValue(x(208))
		setValue(x(212))
		setConstant(true)
		setValue(x(214))
		putRecord(any 1 x(221))
		setConstant(det)
		putList(x(220))
		setValue(x(221))
		setConstant(nil)
		putList(x(219))
		setConstant(det)
		setValue(x(220))
		putList(x(218))
		setConstant(det)
		setValue(x(219))
		putList(x(223))
		setConstant(false)
		setConstant(nil)
		putList(x(222))
		setConstant(false)
		setValue(x(223))
		putList(x(226))
		setConstant(procedure)
		setConstant(nil)
		putList(x(225))
		setConstant(int)
		setValue(x(226))
		putList(x(224))
		setConstant(virtualString)
		setValue(x(225))
		putRecord(builtin [det imods types] x(217))
		setValue(x(218))
		setValue(x(222))
		setValue(x(224))
		putRecord(any 1 x(230))
		setConstant(det)
		putList(x(229))
		setValue(x(230))
		setConstant(nil)
		putList(x(228))
		setConstant(det)
		setValue(x(229))
		putList(x(231))
		setConstant(false)
		setConstant(nil)
		putList(x(233))
		setConstant(record)
		setConstant(nil)
		putList(x(232))
		setConstant(virtualString)
		setValue(x(233))
		putRecord(builtin [det imods types] x(227))
		setValue(x(228))
		setValue(x(231))
		setValue(x(232))
		putList(x(236))
		setConstant(any)
		setConstant(nil)
		putList(x(235))
		setConstant(det)
		setValue(x(236))
		putList(x(237))
		setConstant(false)
		setConstant(nil)
		putList(x(239))
		setConstant(value)
		setConstant(nil)
		putList(x(238))
		setConstant(cell)
		setValue(x(239))
		putRecord(builtin [det imods types] x(234))
		setValue(x(235))
		setValue(x(237))
		setValue(x(238))
		putList(x(242))
		setConstant(any)
		setConstant(nil)
		putList(x(241))
		setConstant(det)
		setValue(x(242))
		putList(x(244))
		setConstant(false)
		setConstant(nil)
		putList(x(243))
		setConstant(false)
		setValue(x(244))
		putList(x(246))
		setConstant(value)
		setConstant(nil)
		putList(x(245))
		setConstant(cell)
		setValue(x(246))
		putRecord(builtin [det imods types] x(240))
		setValue(x(241))
		setValue(x(243))
		setValue(x(245))
		putList(x(250))
		setConstant(any)
		setConstant(nil)
		putList(x(249))
		setConstant(any)
		setValue(x(250))
		putList(x(248))
		setConstant(det)
		setValue(x(249))
		putList(x(253))
		setConstant(false)
		setConstant(nil)
		putList(x(252))
		setConstant(false)
		setValue(x(253))
		putList(x(251))
		setConstant(false)
		setValue(x(252))
		putList(x(256))
		setConstant(value)
		setConstant(nil)
		putList(x(255))
		setConstant(value)
		setValue(x(256))
		putList(x(254))
		setConstant(cell)
		setValue(x(255))
		putRecord(builtin [det imods types] x(247))
		setValue(x(248))
		setValue(x(251))
		setValue(x(254))
		putRecord(any 1 x(260))
		setConstant(det)
		putList(x(259))
		setValue(x(260))
		setConstant(nil)
		putList(x(258))
		setConstant(det)
		setValue(x(259))
		putList(x(261))
		setConstant(false)
		setConstant(nil)
		putList(x(263))
		setConstant(bool)
		setConstant(nil)
		putList(x(262))
		setConstant(value)
		setValue(x(263))
		putRecord(builtin [det imods test types] x(257))
		setValue(x(258))
		setValue(x(261))
		setConstant(true)
		setValue(x(262))
		putRecord(any 1 x(267))
		setConstant(det)
		putList(x(266))
		setValue(x(267))
		setConstant(nil)
		putList(x(265))
		setConstant(any)
		setValue(x(266))
		putList(x(268))
		setConstant(false)
		setConstant(nil)
		putList(x(270))
		setConstant(cell)
		setConstant(nil)
		putList(x(269))
		setConstant(value)
		setValue(x(270))
		putRecord(builtin [det imods types] x(264))
		setValue(x(265))
		setValue(x(268))
		setValue(x(269))
		putRecord(any 1 x(274))
		setConstant(det)
		putList(x(273))
		setValue(x(274))
		setConstant(nil)
		putList(x(272))
		setConstant(det)
		setValue(x(273))
		putList(x(275))
		setConstant(false)
		setConstant(nil)
		putList(x(277))
		setConstant(bool)
		setConstant(nil)
		putList(x(276))
		setConstant(value)
		setValue(x(277))
		putRecord(builtin [det imods test types] x(271))
		setValue(x(272))
		setValue(x(275))
		setConstant(true)
		setValue(x(276))
		putRecord(any 1 x(281))
		setConstant(det)
		putList(x(280))
		setValue(x(281))
		setConstant(nil)
		putList(x(279))
		setConstant(det)
		setValue(x(280))
		putList(x(282))
		setConstant(false)
		setConstant(nil)
		putList(x(284))
		setConstant(bool)
		setConstant(nil)
		putList(x(283))
		setConstant(char)
		setValue(x(284))
		putRecord(builtin [det imods test types] x(278))
		setValue(x(279))
		setValue(x(282))
		setConstant(true)
		setValue(x(283))
		putRecord(any 1 x(288))
		setConstant(det)
		putList(x(287))
		setValue(x(288))
		setConstant(nil)
		putList(x(286))
		setConstant(det)
		setValue(x(287))
		putList(x(289))
		setConstant(false)
		setConstant(nil)
		putList(x(291))
		setConstant(bool)
		setConstant(nil)
		putList(x(290))
		setConstant(char)
		setValue(x(291))
		putRecord(builtin [det imods test types] x(285))
		setValue(x(286))
		setValue(x(289))
		setConstant(true)
		setValue(x(290))
		putRecord(any 1 x(295))
		setConstant(det)
		putList(x(294))
		setValue(x(295))
		setConstant(nil)
		putList(x(293))
		setConstant(det)
		setValue(x(294))
		putList(x(296))
		setConstant(false)
		setConstant(nil)
		putList(x(298))
		setConstant(bool)
		setConstant(nil)
		putList(x(297))
		setConstant(char)
		setValue(x(298))
		putRecord(builtin [det imods test types] x(292))
		setValue(x(293))
		setValue(x(296))
		setConstant(true)
		setValue(x(297))
		putRecord(any 1 x(302))
		setConstant(det)
		putList(x(301))
		setValue(x(302))
		setConstant(nil)
		putList(x(300))
		setConstant(det)
		setValue(x(301))
		putList(x(303))
		setConstant(false)
		setConstant(nil)
		putList(x(305))
		setConstant(bool)
		setConstant(nil)
		putList(x(304))
		setConstant(char)
		setValue(x(305))
		putRecord(builtin [det imods test types] x(299))
		setValue(x(300))
		setValue(x(303))
		setConstant(true)
		setValue(x(304))
		putRecord(any 1 x(309))
		setConstant(det)
		putList(x(308))
		setValue(x(309))
		setConstant(nil)
		putList(x(307))
		setConstant(det)
		setValue(x(308))
		putList(x(310))
		setConstant(false)
		setConstant(nil)
		putList(x(312))
		setConstant(bool)
		setConstant(nil)
		putList(x(311))
		setConstant(char)
		setValue(x(312))
		putRecord(builtin [det imods test types] x(306))
		setValue(x(307))
		setValue(x(310))
		setConstant(true)
		setValue(x(311))
		putRecord(any 1 x(316))
		setConstant(det)
		putList(x(315))
		setValue(x(316))
		setConstant(nil)
		putList(x(314))
		setConstant(det)
		setValue(x(315))
		putList(x(317))
		setConstant(false)
		setConstant(nil)
		putList(x(319))
		setConstant(bool)
		setConstant(nil)
		putList(x(318))
		setConstant(char)
		setValue(x(319))
		putRecord(builtin [det imods test types] x(313))
		setValue(x(314))
		setValue(x(317))
		setConstant(true)
		setValue(x(318))
		putRecord(any 1 x(323))
		setConstant(det)
		putList(x(322))
		setValue(x(323))
		setConstant(nil)
		putList(x(321))
		setConstant(det)
		setValue(x(322))
		putList(x(324))
		setConstant(false)
		setConstant(nil)
		putList(x(326))
		setConstant(bool)
		setConstant(nil)
		putList(x(325))
		setConstant(char)
		setValue(x(326))
		putRecord(builtin [det imods test types] x(320))
		setValue(x(321))
		setValue(x(324))
		setConstant(true)
		setValue(x(325))
		putRecord(any 1 x(330))
		setConstant(det)
		putList(x(329))
		setValue(x(330))
		setConstant(nil)
		putList(x(328))
		setConstant(det)
		setValue(x(329))
		putList(x(331))
		setConstant(false)
		setConstant(nil)
		putList(x(333))
		setConstant(bool)
		setConstant(nil)
		putList(x(332))
		setConstant(char)
		setValue(x(333))
		putRecord(builtin [det imods test types] x(327))
		setValue(x(328))
		setValue(x(331))
		setConstant(true)
		setValue(x(332))
		putRecord(any 1 x(337))
		setConstant(det)
		putList(x(336))
		setValue(x(337))
		setConstant(nil)
		putList(x(335))
		setConstant(det)
		setValue(x(336))
		putList(x(338))
		setConstant(false)
		setConstant(nil)
		putList(x(340))
		setConstant(bool)
		setConstant(nil)
		putList(x(339))
		setConstant(char)
		setValue(x(340))
		putRecord(builtin [det imods test types] x(334))
		setValue(x(335))
		setValue(x(338))
		setConstant(true)
		setValue(x(339))
		putRecord(any 1 x(344))
		setConstant(det)
		putList(x(343))
		setValue(x(344))
		setConstant(nil)
		putList(x(342))
		setConstant(det)
		setValue(x(343))
		putList(x(345))
		setConstant(false)
		setConstant(nil)
		putList(x(347))
		setConstant(bool)
		setConstant(nil)
		putList(x(346))
		setConstant(char)
		setValue(x(347))
		putRecord(builtin [det imods test types] x(341))
		setValue(x(342))
		setValue(x(345))
		setConstant(true)
		setValue(x(346))
		putRecord(any 1 x(351))
		setConstant(det)
		putList(x(350))
		setValue(x(351))
		setConstant(nil)
		putList(x(349))
		setConstant(det)
		setValue(x(350))
		putList(x(352))
		setConstant(false)
		setConstant(nil)
		putList(x(354))
		setConstant(bool)
		setConstant(nil)
		putList(x(353))
		setConstant(char)
		setValue(x(354))
		putRecord(builtin [det imods test types] x(348))
		setValue(x(349))
		setValue(x(352))
		setConstant(true)
		setValue(x(353))
		putRecord(any 1 x(358))
		setConstant(det)
		putList(x(357))
		setValue(x(358))
		setConstant(nil)
		putList(x(356))
		setConstant(det)
		setValue(x(357))
		putList(x(359))
		setConstant(false)
		setConstant(nil)
		putList(x(361))
		setConstant(atom)
		setConstant(nil)
		putList(x(360))
		setConstant(char)
		setValue(x(361))
		putRecord(builtin [det imods types] x(355))
		setValue(x(356))
		setValue(x(359))
		setValue(x(360))
		putRecord(any 1 x(365))
		setConstant(det)
		putList(x(364))
		setValue(x(365))
		setConstant(nil)
		putList(x(363))
		setConstant(det)
		setValue(x(364))
		putList(x(366))
		setConstant(false)
		setConstant(nil)
		putList(x(368))
		setConstant(char)
		setConstant(nil)
		putList(x(367))
		setConstant(char)
		setValue(x(368))
		putRecord(builtin [det imods types] x(362))
		setValue(x(363))
		setValue(x(366))
		setValue(x(367))
		putRecord(any 1 x(372))
		setConstant(det)
		putList(x(371))
		setValue(x(372))
		setConstant(nil)
		putList(x(370))
		setConstant(det)
		setValue(x(371))
		putList(x(373))
		setConstant(false)
		setConstant(nil)
		putList(x(375))
		setConstant(char)
		setConstant(nil)
		putList(x(374))
		setConstant(char)
		setValue(x(375))
		putRecord(builtin [det imods types] x(369))
		setValue(x(370))
		setValue(x(373))
		setValue(x(374))
		putRecord(any 1 x(379))
		setConstant(det)
		putList(x(378))
		setValue(x(379))
		setConstant(nil)
		putList(x(377))
		setConstant(det)
		setValue(x(378))
		putList(x(380))
		setConstant(false)
		setConstant(nil)
		putList(x(382))
		setConstant(atom)
		setConstant(nil)
		putList(x(381))
		setConstant(char)
		setValue(x(382))
		putRecord(builtin [det imods types] x(376))
		setValue(x(377))
		setValue(x(380))
		setValue(x(381))
		putRecord(any 1 x(386))
		setConstant(det)
		putList(x(385))
		setValue(x(386))
		setConstant(nil)
		putList(x(384))
		setConstant(det)
		setValue(x(385))
		putList(x(387))
		setConstant(false)
		setConstant(nil)
		putList(x(389))
		setConstant(bool)
		setConstant(nil)
		putList(x(388))
		setConstant(value)
		setValue(x(389))
		putRecord(builtin [det imods test types] x(383))
		setValue(x(384))
		setValue(x(387))
		setConstant(true)
		setValue(x(388))
		putRecord(any 1 x(393))
		setConstant(det)
		putList(x(392))
		setValue(x(393))
		setConstant(nil)
		putList(x(391))
		setConstant(det)
		setValue(x(392))
		putList(x(394))
		setConstant(false)
		setConstant(nil)
		putList(x(396))
		setConstant(chunk)
		setConstant(nil)
		putList(x(395))
		setConstant(record)
		setValue(x(396))
		putRecord(builtin [det imods types] x(390))
		setValue(x(391))
		setValue(x(394))
		setValue(x(395))
		putRecord(any 1 x(400))
		setConstant(det)
		putList(x(399))
		setValue(x(400))
		setConstant(nil)
		putList(x(398))
		setConstant(det)
		setValue(x(399))
		putList(x(401))
		setConstant(false)
		setConstant(nil)
		putList(x(403))
		setConstant('class')
		setConstant(nil)
		putList(x(402))
		setConstant(object)
		setValue(x(403))
		putRecord(builtin [det imods types] x(397))
		setValue(x(398))
		setValue(x(401))
		setValue(x(402))
		putRecord(any 1 x(407))
		setConstant(det)
		putList(x(406))
		setValue(x(407))
		setConstant(nil)
		putList(x(405))
		setConstant(det)
		setValue(x(406))
		putList(x(408))
		setConstant(false)
		setConstant(nil)
		putList(x(410))
		setConstant(dictionary)
		setConstant(nil)
		putList(x(409))
		setConstant(dictionary)
		setValue(x(410))
		putRecord(builtin [det imods types] x(404))
		setValue(x(405))
		setValue(x(408))
		setValue(x(409))
		putList(x(415))
		setConstant(any)
		setConstant(nil)
		putList(x(414))
		setConstant(any)
		setValue(x(415))
		putList(x(413))
		setConstant(det)
		setValue(x(414))
		putList(x(412))
		setConstant(det)
		setValue(x(413))
		putList(x(418))
		setConstant(false)
		setConstant(nil)
		putList(x(417))
		setConstant(false)
		setValue(x(418))
		putList(x(416))
		setConstant(false)
		setValue(x(417))
		putList(x(422))
		setConstant(value)
		setConstant(nil)
		putList(x(421))
		setConstant(value)
		setValue(x(422))
		putList(x(420))
		setConstant(feature)
		setValue(x(421))
		putList(x(419))
		setConstant(dictionary)
		setValue(x(420))
		putRecord(builtin [det imods types] x(411))
		setValue(x(412))
		setValue(x(416))
		setValue(x(419))
		putRecord(any 1 x(426))
		setConstant(det)
		putList(x(425))
		setValue(x(426))
		setConstant(nil)
		putList(x(424))
		setConstant(det)
		setValue(x(425))
		putList(x(427))
		setConstant(false)
		setConstant(nil)
		putRecord(pair 2 x(431))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(430))
		setValue(x(431))
		putList(x(429))
		setValue(x(430))
		setConstant(nil)
		putList(x(428))
		setConstant(dictionary)
		setValue(x(429))
		putRecord(builtin [det imods types] x(423))
		setValue(x(424))
		setValue(x(427))
		setValue(x(428))
		putList(x(435))
		setConstant(any)
		setConstant(nil)
		putList(x(434))
		setConstant(det)
		setValue(x(435))
		putList(x(433))
		setConstant(det)
		setValue(x(434))
		putList(x(437))
		setConstant(false)
		setConstant(nil)
		putList(x(436))
		setConstant(false)
		setValue(x(437))
		putList(x(440))
		setConstant(value)
		setConstant(nil)
		putList(x(439))
		setConstant(feature)
		setValue(x(440))
		putList(x(438))
		setConstant(dictionary)
		setValue(x(439))
		putRecord(builtin [det imods types] x(432))
		setValue(x(433))
		setValue(x(436))
		setValue(x(438))
		putRecord(any 1 x(444))
		setConstant(det)
		putList(x(443))
		setValue(x(444))
		setConstant(nil)
		putList(x(442))
		setConstant(det)
		setValue(x(443))
		putList(x(445))
		setConstant(false)
		setConstant(nil)
		putList(x(447))
		setConstant(bool)
		setConstant(nil)
		putList(x(446))
		setConstant(value)
		setValue(x(447))
		putRecord(builtin [det imods test types] x(441))
		setValue(x(442))
		setValue(x(445))
		setConstant(true)
		setValue(x(446))
		putRecord(any 1 x(451))
		setConstant(det)
		putList(x(450))
		setValue(x(451))
		setConstant(nil)
		putList(x(449))
		setConstant(det)
		setValue(x(450))
		putList(x(452))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(455))
		setConstant(value)
		putList(x(454))
		setValue(x(455))
		setConstant(nil)
		putList(x(453))
		setConstant(dictionary)
		setValue(x(454))
		putRecord(builtin [det imods types] x(448))
		setValue(x(449))
		setValue(x(452))
		setValue(x(453))
		putRecord(any 1 x(459))
		setConstant(det)
		putList(x(458))
		setValue(x(459))
		setConstant(nil)
		putList(x(457))
		setConstant(det)
		setValue(x(458))
		putList(x(460))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(463))
		setConstant(feature)
		putList(x(462))
		setValue(x(463))
		setConstant(nil)
		putList(x(461))
		setConstant(dictionary)
		setValue(x(462))
		putRecord(builtin [det imods types] x(456))
		setValue(x(457))
		setValue(x(460))
		setValue(x(461))
		putList(x(465))
		setConstant(det)
		setConstant(nil)
		putList(x(466))
		setConstant(false)
		setConstant(nil)
		putList(x(467))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(464))
		setValue(x(465))
		setValue(x(466))
		setValue(x(467))
		putRecord(any 1 x(472))
		setConstant(det)
		putList(x(471))
		setValue(x(472))
		setConstant(nil)
		putList(x(470))
		setConstant(det)
		setValue(x(471))
		putList(x(469))
		setConstant(det)
		setValue(x(470))
		putList(x(474))
		setConstant(false)
		setConstant(nil)
		putList(x(473))
		setConstant(false)
		setValue(x(474))
		putList(x(477))
		setConstant(bool)
		setConstant(nil)
		putList(x(476))
		setConstant(feature)
		setValue(x(477))
		putList(x(475))
		setConstant(dictionary)
		setValue(x(476))
		putRecord(builtin [det imods test types] x(468))
		setValue(x(469))
		setValue(x(473))
		setConstant(true)
		setValue(x(475))
		putRecord(any 1 x(480))
		setConstant(det)
		putList(x(479))
		setValue(x(480))
		setConstant(nil)
		putList(x(481))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(478))
		setValue(x(479))
		setConstant(nil)
		setValue(x(481))
		putList(x(485))
		setConstant(any)
		setConstant(nil)
		putList(x(484))
		setConstant(det)
		setValue(x(485))
		putList(x(483))
		setConstant(det)
		setValue(x(484))
		putList(x(488))
		setConstant(false)
		setConstant(nil)
		putList(x(487))
		setConstant(false)
		setValue(x(488))
		putList(x(486))
		setConstant(false)
		setValue(x(487))
		putList(x(491))
		setConstant(value)
		setConstant(nil)
		putList(x(490))
		setConstant(feature)
		setValue(x(491))
		putList(x(489))
		setConstant(dictionary)
		setValue(x(490))
		putRecord(builtin [det imods types] x(482))
		setValue(x(483))
		setValue(x(486))
		setValue(x(489))
		putList(x(494))
		setConstant(det)
		setConstant(nil)
		putList(x(493))
		setConstant(det)
		setValue(x(494))
		putList(x(496))
		setConstant(false)
		setConstant(nil)
		putList(x(495))
		setConstant(false)
		setValue(x(496))
		putList(x(498))
		setConstant(feature)
		setConstant(nil)
		putList(x(497))
		setConstant(dictionary)
		setValue(x(498))
		putRecord(builtin [det imods types] x(492))
		setValue(x(493))
		setValue(x(495))
		setValue(x(497))
		putList(x(500))
		setConstant(det)
		setConstant(nil)
		putList(x(501))
		setConstant(false)
		setConstant(nil)
		putList(x(502))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(499))
		setValue(x(500))
		setValue(x(501))
		setValue(x(502))
		putRecord(any 1 x(505))
		setConstant(det)
		putList(x(504))
		setValue(x(505))
		setConstant(nil)
		putRecord(list 1 x(507))
		setConstant(atom)
		putList(x(506))
		setValue(x(507))
		setConstant(nil)
		putRecord(builtin [det imods types] x(503))
		setValue(x(504))
		setConstant(nil)
		setValue(x(506))
		putList(x(509))
		setConstant(any)
		setConstant(nil)
		putList(x(510))
		setConstant(false)
		setConstant(nil)
		putList(x(511))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(508))
		setValue(x(509))
		setConstant(true)
		setValue(x(510))
		setValue(x(511))
		putList(x(513))
		setConstant(any)
		setConstant(nil)
		putList(x(514))
		setConstant(false)
		setConstant(nil)
		putList(x(515))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(512))
		setValue(x(513))
		setConstant(true)
		setValue(x(514))
		setValue(x(515))
		putRecord(any 1 x(519))
		setConstant(det)
		putList(x(518))
		setValue(x(519))
		setConstant(nil)
		putList(x(517))
		setConstant(any)
		setValue(x(518))
		putList(x(520))
		setConstant(false)
		setConstant(nil)
		putList(x(522))
		setConstant(bool)
		setConstant(nil)
		putList(x(521))
		setConstant(value)
		setValue(x(522))
		putRecord(builtin [det imods test types] x(516))
		setValue(x(517))
		setValue(x(520))
		setConstant(true)
		setValue(x(521))
		putList(x(524))
		setConstant(any)
		setConstant(nil)
		putList(x(525))
		setConstant(false)
		setConstant(nil)
		putList(x(526))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(523))
		setValue(x(524))
		setConstant(true)
		setValue(x(525))
		setValue(x(526))
		putRecord(any 1 x(529))
		setConstant(det)
		putList(x(528))
		setValue(x(529))
		setConstant(nil)
		putRecord(list 1 x(531))
		setConstant(record)
		putList(x(530))
		setValue(x(531))
		setConstant(nil)
		putRecord(builtin [det imods types] x(527))
		setValue(x(528))
		setConstant(nil)
		setValue(x(530))
		putRecord(any 1 x(535))
		setConstant(det)
		putList(x(534))
		setValue(x(535))
		setConstant(nil)
		putList(x(533))
		setConstant(det)
		setValue(x(534))
		putList(x(536))
		setConstant(false)
		setConstant(nil)
		putList(x(538))
		setConstant(float)
		setConstant(nil)
		putList(x(537))
		setConstant(float)
		setValue(x(538))
		putRecord(builtin [det imods types] x(532))
		setValue(x(533))
		setValue(x(536))
		setValue(x(537))
		putRecord(any 1 x(542))
		setConstant(det)
		putList(x(541))
		setValue(x(542))
		setConstant(nil)
		putList(x(540))
		setConstant(det)
		setValue(x(541))
		putList(x(543))
		setConstant(false)
		setConstant(nil)
		putList(x(545))
		setConstant(float)
		setConstant(nil)
		putList(x(544))
		setConstant(float)
		setValue(x(545))
		putRecord(builtin [det imods types] x(539))
		setValue(x(540))
		setValue(x(543))
		setValue(x(544))
		putRecord(any 1 x(549))
		setConstant(det)
		putList(x(548))
		setValue(x(549))
		setConstant(nil)
		putList(x(547))
		setConstant(det)
		setValue(x(548))
		putList(x(550))
		setConstant(false)
		setConstant(nil)
		putList(x(552))
		setConstant(float)
		setConstant(nil)
		putList(x(551))
		setConstant(float)
		setValue(x(552))
		putRecord(builtin [det imods types] x(546))
		setValue(x(547))
		setValue(x(550))
		setValue(x(551))
		putRecord(any 1 x(557))
		setConstant(det)
		putList(x(556))
		setValue(x(557))
		setConstant(nil)
		putList(x(555))
		setConstant(det)
		setValue(x(556))
		putList(x(554))
		setConstant(det)
		setValue(x(555))
		putList(x(559))
		setConstant(false)
		setConstant(nil)
		putList(x(558))
		setConstant(false)
		setValue(x(559))
		putList(x(562))
		setConstant(float)
		setConstant(nil)
		putList(x(561))
		setConstant(float)
		setValue(x(562))
		putList(x(560))
		setConstant(float)
		setValue(x(561))
		putRecord(builtin [det imods types] x(553))
		setValue(x(554))
		setValue(x(558))
		setValue(x(560))
		putRecord(any 1 x(566))
		setConstant(det)
		putList(x(565))
		setValue(x(566))
		setConstant(nil)
		putList(x(564))
		setConstant(det)
		setValue(x(565))
		putList(x(567))
		setConstant(false)
		setConstant(nil)
		putList(x(569))
		setConstant(float)
		setConstant(nil)
		putList(x(568))
		setConstant(float)
		setValue(x(569))
		putRecord(builtin [det imods types] x(563))
		setValue(x(564))
		setValue(x(567))
		setValue(x(568))
		putRecord(any 1 x(573))
		setConstant(det)
		putList(x(572))
		setValue(x(573))
		setConstant(nil)
		putList(x(571))
		setConstant(det)
		setValue(x(572))
		putList(x(574))
		setConstant(false)
		setConstant(nil)
		putList(x(576))
		setConstant(float)
		setConstant(nil)
		putList(x(575))
		setConstant(float)
		setValue(x(576))
		putRecord(builtin [det imods types] x(570))
		setValue(x(571))
		setValue(x(574))
		setValue(x(575))
		putRecord(any 1 x(580))
		setConstant(det)
		putList(x(579))
		setValue(x(580))
		setConstant(nil)
		putList(x(578))
		setConstant(det)
		setValue(x(579))
		putList(x(581))
		setConstant(false)
		setConstant(nil)
		putList(x(583))
		setConstant(float)
		setConstant(nil)
		putList(x(582))
		setConstant(float)
		setValue(x(583))
		putRecord(builtin [det imods types] x(577))
		setValue(x(578))
		setValue(x(581))
		setValue(x(582))
		putRecord(any 1 x(588))
		setConstant(det)
		putList(x(587))
		setValue(x(588))
		setConstant(nil)
		putList(x(586))
		setConstant(det)
		setValue(x(587))
		putList(x(585))
		setConstant(det)
		setValue(x(586))
		putList(x(590))
		setConstant(false)
		setConstant(nil)
		putList(x(589))
		setConstant(false)
		setValue(x(590))
		putList(x(593))
		setConstant(float)
		setConstant(nil)
		putList(x(592))
		setConstant(float)
		setValue(x(593))
		putList(x(591))
		setConstant(float)
		setValue(x(592))
		putRecord(builtin [det imods types] x(584))
		setValue(x(585))
		setValue(x(589))
		setValue(x(591))
		putRecord(any 1 x(597))
		setConstant(det)
		putList(x(596))
		setValue(x(597))
		setConstant(nil)
		putList(x(595))
		setConstant(det)
		setValue(x(596))
		putList(x(598))
		setConstant(false)
		setConstant(nil)
		putList(x(600))
		setConstant(float)
		setConstant(nil)
		putList(x(599))
		setConstant(float)
		setValue(x(600))
		putRecord(builtin [det imods types] x(594))
		setValue(x(595))
		setValue(x(598))
		setValue(x(599))
		putRecord(any 1 x(604))
		setConstant(det)
		putList(x(603))
		setValue(x(604))
		setConstant(nil)
		putList(x(602))
		setConstant(det)
		setValue(x(603))
		putList(x(605))
		setConstant(false)
		setConstant(nil)
		putList(x(607))
		setConstant(bool)
		setConstant(nil)
		putList(x(606))
		setConstant(value)
		setValue(x(607))
		putRecord(builtin [det imods test types] x(601))
		setValue(x(602))
		setValue(x(605))
		setConstant(true)
		setValue(x(606))
		putRecord(any 1 x(611))
		setConstant(det)
		putList(x(610))
		setValue(x(611))
		setConstant(nil)
		putList(x(609))
		setConstant(det)
		setValue(x(610))
		putList(x(612))
		setConstant(false)
		setConstant(nil)
		putList(x(614))
		setConstant(float)
		setConstant(nil)
		putList(x(613))
		setConstant(float)
		setValue(x(614))
		putRecord(builtin [det imods types] x(608))
		setValue(x(609))
		setValue(x(612))
		setValue(x(613))
		putRecord(any 1 x(618))
		setConstant(det)
		putList(x(617))
		setValue(x(618))
		setConstant(nil)
		putList(x(616))
		setConstant(det)
		setValue(x(617))
		putList(x(619))
		setConstant(false)
		setConstant(nil)
		putList(x(621))
		setConstant(float)
		setConstant(nil)
		putList(x(620))
		setConstant(float)
		setValue(x(621))
		putRecord(builtin [det imods types] x(615))
		setValue(x(616))
		setValue(x(619))
		setValue(x(620))
		putRecord(any 1 x(625))
		setConstant(det)
		putList(x(624))
		setValue(x(625))
		setConstant(nil)
		putList(x(623))
		setConstant(det)
		setValue(x(624))
		putList(x(626))
		setConstant(false)
		setConstant(nil)
		putList(x(628))
		setConstant(float)
		setConstant(nil)
		putList(x(627))
		setConstant(float)
		setValue(x(628))
		putRecord(builtin [det imods types] x(622))
		setValue(x(623))
		setValue(x(626))
		setValue(x(627))
		putRecord(any 1 x(632))
		setConstant(det)
		putList(x(631))
		setValue(x(632))
		setConstant(nil)
		putList(x(630))
		setConstant(det)
		setValue(x(631))
		putList(x(633))
		setConstant(false)
		setConstant(nil)
		putList(x(635))
		setConstant(float)
		setConstant(nil)
		putList(x(634))
		setConstant(float)
		setValue(x(635))
		putRecord(builtin [det imods types] x(629))
		setValue(x(630))
		setValue(x(633))
		setValue(x(634))
		putRecord(any 1 x(639))
		setConstant(det)
		putList(x(638))
		setValue(x(639))
		setConstant(nil)
		putList(x(637))
		setConstant(det)
		setValue(x(638))
		putList(x(640))
		setConstant(false)
		setConstant(nil)
		putList(x(642))
		setConstant(float)
		setConstant(nil)
		putList(x(641))
		setConstant(float)
		setValue(x(642))
		putRecord(builtin [det imods types] x(636))
		setValue(x(637))
		setValue(x(640))
		setValue(x(641))
		putRecord(any 1 x(646))
		setConstant(det)
		putList(x(645))
		setValue(x(646))
		setConstant(nil)
		putList(x(644))
		setConstant(det)
		setValue(x(645))
		putList(x(647))
		setConstant(false)
		setConstant(nil)
		putList(x(649))
		setConstant(int)
		setConstant(nil)
		putList(x(648))
		setConstant(float)
		setValue(x(649))
		putRecord(builtin [det imods types] x(643))
		setValue(x(644))
		setValue(x(647))
		setValue(x(648))
		putRecord(any 1 x(653))
		setConstant(det)
		putList(x(652))
		setValue(x(653))
		setConstant(nil)
		putList(x(651))
		setConstant(det)
		setValue(x(652))
		putList(x(654))
		setConstant(false)
		setConstant(nil)
		putList(x(656))
		setConstant(string)
		setConstant(nil)
		putList(x(655))
		setConstant(float)
		setValue(x(656))
		putRecord(builtin [det imods types] x(650))
		setValue(x(651))
		setValue(x(654))
		setValue(x(655))
		putRecord(any 1 x(660))
		setConstant(det)
		putList(x(659))
		setValue(x(660))
		setConstant(nil)
		putList(x(658))
		setConstant(det)
		setValue(x(659))
		putList(x(661))
		setConstant(false)
		setConstant(nil)
		putList(x(663))
		setConstant(bool)
		setConstant(nil)
		putList(x(662))
		setConstant(value)
		setValue(x(663))
		putRecord(builtin [det imods test types] x(657))
		setValue(x(658))
		setValue(x(661))
		setConstant(true)
		setValue(x(662))
		putRecord(any 1 x(667))
		setConstant(det)
		putList(x(666))
		setValue(x(667))
		setConstant(nil)
		putList(x(665))
		setConstant(det)
		setValue(x(666))
		putList(x(668))
		setConstant(false)
		setConstant(nil)
		putList(x(670))
		setConstant(int)
		setConstant(nil)
		putList(x(669))
		setConstant(foreignPointer)
		setValue(x(670))
		putRecord(builtin [det imods types] x(664))
		setValue(x(665))
		setValue(x(668))
		setValue(x(669))
		putRecord(any 1 x(674))
		setConstant(det)
		putList(x(673))
		setValue(x(674))
		setConstant(nil)
		putList(x(672))
		setConstant(det)
		setValue(x(673))
		putList(x(675))
		setConstant(false)
		setConstant(nil)
		putList(x(677))
		setConstant(int)
		setConstant(nil)
		putList(x(676))
		setConstant(int)
		setValue(x(677))
		putRecord(builtin [det imods types] x(671))
		setValue(x(672))
		setValue(x(675))
		setValue(x(676))
		putRecord(any 1 x(681))
		setConstant(det)
		putList(x(680))
		setValue(x(681))
		setConstant(nil)
		putList(x(679))
		setConstant(det)
		setValue(x(680))
		putList(x(682))
		setConstant(false)
		setConstant(nil)
		putList(x(684))
		setConstant(int)
		setConstant(nil)
		putList(x(683))
		setConstant(int)
		setValue(x(684))
		putRecord(builtin [det imods types] x(678))
		setValue(x(679))
		setValue(x(682))
		setValue(x(683))
		putRecord(any 1 x(689))
		setConstant(det)
		putList(x(688))
		setValue(x(689))
		setConstant(nil)
		putList(x(687))
		setConstant(det)
		setValue(x(688))
		putList(x(686))
		setConstant(det)
		setValue(x(687))
		putList(x(691))
		setConstant(false)
		setConstant(nil)
		putList(x(690))
		setConstant(false)
		setValue(x(691))
		putList(x(694))
		setConstant(int)
		setConstant(nil)
		putList(x(693))
		setConstant(int)
		setValue(x(694))
		putList(x(692))
		setConstant(int)
		setValue(x(693))
		putRecord(builtin [det imods types] x(685))
		setValue(x(686))
		setValue(x(690))
		setValue(x(692))
		putRecord(any 1 x(698))
		setConstant(det)
		putList(x(697))
		setValue(x(698))
		setConstant(nil)
		putList(x(696))
		setConstant(det)
		setValue(x(697))
		putList(x(699))
		setConstant(false)
		setConstant(nil)
		putList(x(701))
		setConstant(bool)
		setConstant(nil)
		putList(x(700))
		setConstant(value)
		setValue(x(701))
		putRecord(builtin [det imods test types] x(695))
		setValue(x(696))
		setValue(x(699))
		setConstant(true)
		setValue(x(700))
		putRecord(any 1 x(706))
		setConstant(det)
		putList(x(705))
		setValue(x(706))
		setConstant(nil)
		putList(x(704))
		setConstant(det)
		setValue(x(705))
		putList(x(703))
		setConstant(det)
		setValue(x(704))
		putList(x(708))
		setConstant(false)
		setConstant(nil)
		putList(x(707))
		setConstant(false)
		setValue(x(708))
		putList(x(711))
		setConstant(int)
		setConstant(nil)
		putList(x(710))
		setConstant(int)
		setValue(x(711))
		putList(x(709))
		setConstant(int)
		setValue(x(710))
		putRecord(builtin [det imods types] x(702))
		setValue(x(703))
		setValue(x(707))
		setValue(x(709))
		putRecord(any 1 x(715))
		setConstant(det)
		putList(x(714))
		setValue(x(715))
		setConstant(nil)
		putList(x(713))
		setConstant(det)
		setValue(x(714))
		putList(x(716))
		setConstant(false)
		setConstant(nil)
		putList(x(718))
		setConstant(float)
		setConstant(nil)
		putList(x(717))
		setConstant(int)
		setValue(x(718))
		putRecord(builtin [det imods types] x(712))
		setValue(x(713))
		setValue(x(716))
		setValue(x(717))
		putRecord(any 1 x(722))
		setConstant(det)
		putList(x(721))
		setValue(x(722))
		setConstant(nil)
		putList(x(720))
		setConstant(det)
		setValue(x(721))
		putList(x(723))
		setConstant(false)
		setConstant(nil)
		putList(x(725))
		setConstant(string)
		setConstant(nil)
		putList(x(724))
		setConstant(int)
		setValue(x(725))
		putRecord(builtin [det imods types] x(719))
		setValue(x(720))
		setValue(x(723))
		setValue(x(724))
		putRecord(any 1 x(729))
		setConstant(det)
		putList(x(728))
		setValue(x(729))
		setConstant(nil)
		putList(x(727))
		setConstant(det)
		setValue(x(728))
		putList(x(730))
		setConstant(false)
		setConstant(nil)
		putList(x(732))
		setConstant(bool)
		setConstant(nil)
		putList(x(731))
		setConstant(value)
		setValue(x(732))
		putRecord(builtin [det imods test types] x(726))
		setValue(x(727))
		setValue(x(730))
		setConstant(true)
		setValue(x(731))
		putRecord(any 1 x(736))
		setConstant(det)
		putList(x(735))
		setValue(x(736))
		setConstant(nil)
		putList(x(734))
		setConstant(det)
		setValue(x(735))
		putList(x(737))
		setConstant(false)
		setConstant(nil)
		putList(x(739))
		setConstant(bool)
		setConstant(nil)
		putList(x(738))
		setConstant(value)
		setValue(x(739))
		putRecord(builtin [det imods test types] x(733))
		setValue(x(734))
		setValue(x(737))
		setConstant(true)
		setValue(x(738))
		putList(x(741))
		setConstant(det)
		setConstant(nil)
		putList(x(742))
		setConstant(false)
		setConstant(nil)
		putList(x(743))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(740))
		setValue(x(741))
		setValue(x(742))
		setValue(x(743))
		putRecord(any 1 x(746))
		setConstant(det)
		putList(x(745))
		setValue(x(746))
		setConstant(nil)
		putList(x(747))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(744))
		setValue(x(745))
		setConstant(nil)
		setValue(x(747))
		putList(x(749))
		setConstant(det)
		setConstant(nil)
		putList(x(750))
		setConstant(false)
		setConstant(nil)
		putList(x(751))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(748))
		setValue(x(749))
		setValue(x(750))
		setValue(x(751))
		putRecord(any 1 x(755))
		setConstant(det)
		putList(x(754))
		setValue(x(755))
		setConstant(nil)
		putList(x(753))
		setConstant(det)
		setValue(x(754))
		putList(x(756))
		setConstant(false)
		setConstant(nil)
		putList(x(758))
		setConstant(bool)
		setConstant(nil)
		putList(x(757))
		setConstant(value)
		setValue(x(758))
		putRecord(builtin [det imods test types] x(752))
		setValue(x(753))
		setValue(x(756))
		setConstant(true)
		setValue(x(757))
		putRecord(any 1 x(761))
		setConstant(det)
		putList(x(760))
		setValue(x(761))
		setConstant(nil)
		putList(x(762))
		setConstant(name)
		setConstant(nil)
		putRecord(builtin [det imods types] x(759))
		setValue(x(760))
		setConstant(nil)
		setValue(x(762))
		putRecord(any 1 x(766))
		setConstant(det)
		putList(x(765))
		setValue(x(766))
		setConstant(nil)
		putList(x(764))
		setConstant(det)
		setValue(x(765))
		putList(x(767))
		setConstant(false)
		setConstant(nil)
		putList(x(769))
		setConstant(name)
		setConstant(nil)
		putList(x(768))
		setConstant(atom)
		setValue(x(769))
		putRecord(builtin [det imods types] x(763))
		setValue(x(764))
		setValue(x(767))
		setValue(x(768))
		putRecord(any 1 x(774))
		setConstant(det)
		putList(x(773))
		setValue(x(774))
		setConstant(nil)
		putList(x(772))
		setConstant(det)
		setValue(x(773))
		putList(x(771))
		setConstant(det)
		setValue(x(772))
		putList(x(776))
		setConstant(false)
		setConstant(nil)
		putList(x(775))
		setConstant(false)
		setValue(x(776))
		putList(x(779))
		setConstant(number)
		setConstant(nil)
		putList(x(778))
		setConstant(number)
		setValue(x(779))
		putList(x(777))
		setConstant(number)
		setValue(x(778))
		putRecord(builtin [det imods types] x(770))
		setValue(x(771))
		setValue(x(775))
		setValue(x(777))
		putRecord(any 1 x(784))
		setConstant(det)
		putList(x(783))
		setValue(x(784))
		setConstant(nil)
		putList(x(782))
		setConstant(det)
		setValue(x(783))
		putList(x(781))
		setConstant(det)
		setValue(x(782))
		putList(x(786))
		setConstant(false)
		setConstant(nil)
		putList(x(785))
		setConstant(false)
		setValue(x(786))
		putList(x(789))
		setConstant(number)
		setConstant(nil)
		putList(x(788))
		setConstant(number)
		setValue(x(789))
		putList(x(787))
		setConstant(number)
		setValue(x(788))
		putRecord(builtin [det imods types] x(780))
		setValue(x(781))
		setValue(x(785))
		setValue(x(787))
		putRecord(any 1 x(794))
		setConstant(det)
		putList(x(793))
		setValue(x(794))
		setConstant(nil)
		putList(x(792))
		setConstant(det)
		setValue(x(793))
		putList(x(791))
		setConstant(det)
		setValue(x(792))
		putList(x(796))
		setConstant(false)
		setConstant(nil)
		putList(x(795))
		setConstant(false)
		setValue(x(796))
		putList(x(799))
		setConstant(number)
		setConstant(nil)
		putList(x(798))
		setConstant(number)
		setValue(x(799))
		putList(x(797))
		setConstant(number)
		setValue(x(798))
		putRecord(builtin [det imods types] x(790))
		setValue(x(791))
		setValue(x(795))
		setValue(x(797))
		putRecord(any 1 x(804))
		setConstant(det)
		putList(x(803))
		setValue(x(804))
		setConstant(nil)
		putList(x(802))
		setConstant(det)
		setValue(x(803))
		putList(x(801))
		setConstant(det)
		setValue(x(802))
		putList(x(806))
		setConstant(false)
		setConstant(nil)
		putList(x(805))
		setConstant(false)
		setValue(x(806))
		putList(x(809))
		setConstant(float)
		setConstant(nil)
		putList(x(808))
		setConstant(float)
		setValue(x(809))
		putList(x(807))
		setConstant(float)
		setValue(x(808))
		putRecord(builtin [det imods types] x(800))
		setValue(x(801))
		setValue(x(805))
		setValue(x(807))
		putRecord(any 1 x(813))
		setConstant(det)
		putList(x(812))
		setValue(x(813))
		setConstant(nil)
		putList(x(811))
		setConstant(det)
		setValue(x(812))
		putList(x(814))
		setConstant(false)
		setConstant(nil)
		putList(x(816))
		setConstant(number)
		setConstant(nil)
		putList(x(815))
		setConstant(number)
		setValue(x(816))
		putRecord(builtin [det imods types] x(810))
		setValue(x(811))
		setValue(x(814))
		setValue(x(815))
		putRecord(any 1 x(820))
		setConstant(det)
		putList(x(819))
		setValue(x(820))
		setConstant(nil)
		putList(x(818))
		setConstant(det)
		setValue(x(819))
		putList(x(821))
		setConstant(false)
		setConstant(nil)
		putList(x(823))
		setConstant(number)
		setConstant(nil)
		putList(x(822))
		setConstant(number)
		setValue(x(823))
		putRecord(builtin [det imods types] x(817))
		setValue(x(818))
		setValue(x(821))
		setValue(x(822))
		putRecord(any 1 x(827))
		setConstant(det)
		putList(x(826))
		setValue(x(827))
		setConstant(nil)
		putList(x(825))
		setConstant(det)
		setValue(x(826))
		putList(x(828))
		setConstant(false)
		setConstant(nil)
		putList(x(830))
		setConstant(bool)
		setConstant(nil)
		putList(x(829))
		setConstant(value)
		setValue(x(830))
		putRecord(builtin [det imods test types] x(824))
		setValue(x(825))
		setValue(x(828))
		setConstant(true)
		setValue(x(829))
		putList(x(833))
		setConstant(det)
		setConstant(nil)
		putList(x(832))
		setConstant(det)
		setValue(x(833))
		putList(x(835))
		setConstant(false)
		setConstant(nil)
		putList(x(834))
		setConstant(false)
		setValue(x(835))
		putList(x(837))
		setConstant(record)
		setConstant(nil)
		putList(x(836))
		setConstant('class')
		setValue(x(837))
		putRecord(builtin [det imods types] x(831))
		setValue(x(832))
		setValue(x(834))
		setValue(x(836))
		putList(x(840))
		setConstant(any)
		setConstant(nil)
		putList(x(839))
		setConstant(any)
		setValue(x(840))
		putList(x(842))
		setConstant(false)
		setConstant(nil)
		putList(x(841))
		setConstant(false)
		setValue(x(842))
		putList(x(844))
		setConstant(value)
		setConstant(nil)
		putList(x(843))
		setConstant(value)
		setValue(x(844))
		putRecord(builtin [det imods types] x(838))
		setValue(x(839))
		setValue(x(841))
		setValue(x(843))
		putList(x(847))
		setConstant(any)
		setConstant(nil)
		putList(x(846))
		setConstant(any)
		setValue(x(847))
		putList(x(848))
		setConstant(false)
		setConstant(nil)
		putList(x(850))
		setConstant(value)
		setConstant(nil)
		putList(x(849))
		setConstant(value)
		setValue(x(850))
		putRecord(builtin [det imods types] x(845))
		setValue(x(846))
		setValue(x(848))
		setValue(x(849))
		putRecord(any 1 x(854))
		setConstant(det)
		putList(x(853))
		setValue(x(854))
		setConstant(nil)
		putList(x(852))
		setConstant(det)
		setValue(x(853))
		putList(x(855))
		setConstant(false)
		setConstant(nil)
		putList(x(857))
		setConstant(record)
		setConstant(nil)
		putList(x(856))
		setConstant(record)
		setValue(x(857))
		putRecord(builtin [det imods types] x(851))
		setValue(x(852))
		setValue(x(855))
		setValue(x(856))
		putRecord(any 1 x(861))
		setConstant(det)
		putList(x(860))
		setValue(x(861))
		setConstant(nil)
		putList(x(859))
		setConstant(det)
		setValue(x(860))
		putList(x(862))
		setConstant(false)
		setConstant(nil)
		putList(x(864))
		setConstant(bool)
		setConstant(nil)
		putList(x(863))
		setConstant(value)
		setValue(x(864))
		putRecord(builtin [det imods test types] x(858))
		setValue(x(859))
		setValue(x(862))
		setConstant(true)
		setValue(x(863))
		putRecord(any 1 x(873))
		setConstant(det)
		putList(x(872))
		setValue(x(873))
		setConstant(nil)
		putList(x(871))
		setConstant(det)
		setValue(x(872))
		putList(x(870))
		setConstant(det)
		setValue(x(871))
		putList(x(869))
		setConstant(det)
		setValue(x(870))
		putList(x(868))
		setConstant(det)
		setValue(x(869))
		putList(x(867))
		setConstant(det)
		setValue(x(868))
		putList(x(866))
		setConstant(det)
		setValue(x(867))
		putList(x(879))
		setConstant(false)
		setConstant(nil)
		putList(x(878))
		setConstant(false)
		setValue(x(879))
		putList(x(877))
		setConstant(false)
		setValue(x(878))
		putList(x(876))
		setConstant(false)
		setValue(x(877))
		putList(x(875))
		setConstant(false)
		setValue(x(876))
		putList(x(874))
		setConstant(false)
		setValue(x(875))
		putList(x(886))
		setConstant('class')
		setConstant(nil)
		putList(x(885))
		setConstant(bool)
		setValue(x(886))
		putList(x(884))
		setConstant(bool)
		setValue(x(885))
		putList(x(883))
		setConstant(dictionary)
		setValue(x(884))
		putList(x(882))
		setConstant(record)
		setValue(x(883))
		putList(x(881))
		setConstant(record)
		setValue(x(882))
		putList(x(880))
		setConstant(dictionary)
		setValue(x(881))
		putRecord(builtin [det imods types] x(865))
		setValue(x(866))
		setValue(x(874))
		setValue(x(880))
		putList(x(890))
		setConstant(any)
		setConstant(nil)
		putList(x(889))
		setConstant(det)
		setValue(x(890))
		putList(x(888))
		setConstant(det)
		setValue(x(889))
		putList(x(893))
		setConstant(false)
		setConstant(nil)
		putList(x(892))
		setConstant(false)
		setValue(x(893))
		putList(x(891))
		setConstant(false)
		setValue(x(892))
		putList(x(896))
		setConstant(value)
		setConstant(nil)
		putList(x(895))
		setConstant(record)
		setValue(x(896))
		putList(x(894))
		setConstant('class')
		setValue(x(895))
		putRecord(builtin [det imods types] x(887))
		setValue(x(888))
		setValue(x(891))
		setValue(x(894))
		putRecord(any 1 x(900))
		setConstant(det)
		putList(x(899))
		setValue(x(900))
		setConstant(nil)
		putList(x(898))
		setConstant(det)
		setValue(x(899))
		putList(x(901))
		setConstant(false)
		setConstant(nil)
		putList(x(903))
		setConstant(object)
		setConstant(nil)
		putList(x(902))
		setConstant('class')
		setValue(x(903))
		putRecord(builtin [det imods types] x(897))
		setValue(x(898))
		setValue(x(901))
		setValue(x(902))
		putList(x(907))
		setConstant(any)
		setConstant(nil)
		putList(x(906))
		setConstant(any)
		setValue(x(907))
		putList(x(905))
		setConstant(any)
		setValue(x(906))
		putList(x(909))
		setConstant(false)
		setConstant(nil)
		putList(x(908))
		setConstant(false)
		setValue(x(909))
		putList(x(912))
		setConstant(value)
		setConstant(nil)
		putList(x(911))
		setConstant(value)
		setValue(x(912))
		putList(x(910))
		setConstant(value)
		setValue(x(911))
		putRecord(builtin [det imods types] x(904))
		setValue(x(905))
		setValue(x(908))
		setValue(x(910))
		putList(x(914))
		setConstant(any)
		setConstant(nil)
		putList(x(915))
		setConstant(false)
		setConstant(nil)
		putList(x(916))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(913))
		setValue(x(914))
		setValue(x(915))
		setValue(x(916))
		putList(x(920))
		setConstant(det)
		setConstant(nil)
		putList(x(919))
		setConstant(det)
		setValue(x(920))
		putList(x(918))
		setConstant(det)
		setValue(x(919))
		putList(x(923))
		setConstant(false)
		setConstant(nil)
		putList(x(922))
		setConstant(false)
		setValue(x(923))
		putList(x(921))
		setConstant(false)
		setValue(x(922))
		putList(x(926))
		setConstant(object)
		setConstant(nil)
		putList(x(925))
		setConstant('class')
		setValue(x(926))
		putList(x(924))
		setConstant(record)
		setValue(x(925))
		putRecord(builtin [det imods types] x(917))
		setValue(x(918))
		setValue(x(921))
		setValue(x(924))
		putRecord(any 1 x(930))
		setConstant(det)
		putList(x(929))
		setValue(x(930))
		setConstant(nil)
		putList(x(928))
		setConstant(det)
		setValue(x(929))
		putList(x(931))
		setConstant(false)
		setConstant(nil)
		putList(x(933))
		setConstant(bool)
		setConstant(nil)
		putList(x(932))
		setConstant(value)
		setValue(x(933))
		putRecord(builtin [det imods test types] x(927))
		setValue(x(928))
		setValue(x(931))
		setConstant(true)
		setValue(x(932))
		putRecord(any 1 x(937))
		setConstant(det)
		putList(x(936))
		setValue(x(937))
		setConstant(nil)
		putList(x(935))
		setConstant(any)
		setValue(x(936))
		putList(x(938))
		setConstant(false)
		setConstant(nil)
		putList(x(940))
		setConstant(port)
		setConstant(nil)
		putList(x(939))
		setConstant(value)
		setValue(x(940))
		putRecord(builtin [det imods types] x(934))
		setValue(x(935))
		setValue(x(938))
		setValue(x(939))
		putList(x(943))
		setConstant(any)
		setConstant(nil)
		putList(x(942))
		setConstant(det)
		setValue(x(943))
		putList(x(945))
		setConstant(false)
		setConstant(nil)
		putList(x(944))
		setConstant(false)
		setValue(x(945))
		putList(x(947))
		setConstant(value)
		setConstant(nil)
		putList(x(946))
		setConstant(port)
		setValue(x(947))
		putRecord(builtin [det imods types] x(941))
		setValue(x(942))
		setValue(x(944))
		setValue(x(946))
		putRecord(any 1 x(951))
		setConstant(det)
		putList(x(950))
		setValue(x(951))
		setConstant(nil)
		putList(x(949))
		setConstant(det)
		setValue(x(950))
		putList(x(952))
		setConstant(false)
		setConstant(nil)
		putList(x(954))
		setConstant(int)
		setConstant(nil)
		putList(x(953))
		setConstant(procedure)
		setValue(x(954))
		putRecord(builtin [det imods types] x(948))
		setValue(x(949))
		setValue(x(952))
		setValue(x(953))
		putRecord(any 1 x(958))
		setConstant(det)
		putList(x(957))
		setValue(x(958))
		setConstant(nil)
		putList(x(956))
		setConstant(det)
		setValue(x(957))
		putList(x(959))
		setConstant(false)
		setConstant(nil)
		putList(x(961))
		setConstant(bool)
		setConstant(nil)
		putList(x(960))
		setConstant(value)
		setValue(x(961))
		putRecord(builtin [det imods test types] x(955))
		setValue(x(956))
		setValue(x(959))
		setConstant(true)
		setValue(x(960))
		putList(x(965))
		setConstant(any)
		setConstant(nil)
		putList(x(964))
		setConstant(det)
		setValue(x(965))
		putList(x(963))
		setConstant(detOrKinded)
		setValue(x(964))
		putList(x(967))
		setConstant(false)
		setConstant(nil)
		putList(x(966))
		setConstant(false)
		setValue(x(967))
		putList(x(970))
		setConstant(value)
		setConstant(nil)
		putList(x(969))
		setConstant(feature)
		setValue(x(970))
		putList(x(968))
		setConstant(recordCOrChunk)
		setValue(x(969))
		putRecord(builtin [det imods types] x(962))
		setValue(x(963))
		setValue(x(966))
		setValue(x(968))
		putList(x(974))
		setConstant(any)
		setConstant(nil)
		putList(x(973))
		setConstant(det)
		setValue(x(974))
		putList(x(972))
		setConstant(detOrKinded)
		setValue(x(973))
		putList(x(976))
		setConstant(false)
		setConstant(nil)
		putList(x(975))
		setConstant(false)
		setValue(x(976))
		putList(x(979))
		setConstant(value)
		setConstant(nil)
		putList(x(978))
		setConstant(feature)
		setValue(x(979))
		putList(x(977))
		setConstant(recordCOrChunk)
		setValue(x(978))
		putRecord(builtin [det imods types] x(971))
		setValue(x(972))
		setValue(x(975))
		setValue(x(977))
		putRecord(any 1 x(984))
		setConstant(det)
		putList(x(983))
		setValue(x(984))
		setConstant(nil)
		putList(x(982))
		setConstant(det)
		setValue(x(983))
		putList(x(981))
		setConstant(det)
		setValue(x(982))
		putList(x(986))
		setConstant(false)
		setConstant(nil)
		putList(x(985))
		setConstant(false)
		setValue(x(986))
		putList(x(989))
		setConstant(record)
		setConstant(nil)
		putList(x(988))
		setConstant(record)
		setValue(x(989))
		putList(x(987))
		setConstant(record)
		setValue(x(988))
		putRecord(builtin [det imods types] x(980))
		setValue(x(981))
		setValue(x(985))
		setValue(x(987))
		putRecord(any 1 x(995))
		setConstant(det)
		putList(x(994))
		setValue(x(995))
		setConstant(nil)
		putList(x(993))
		setConstant(any)
		setValue(x(994))
		putList(x(992))
		setConstant(det)
		setValue(x(993))
		putList(x(991))
		setConstant(det)
		setValue(x(992))
		putList(x(998))
		setConstant(false)
		setConstant(nil)
		putList(x(997))
		setConstant(false)
		setValue(x(998))
		putList(x(996))
		setConstant(false)
		setValue(x(997))
		putList(x(1002))
		setConstant(record)
		setConstant(nil)
		putList(x(1001))
		setConstant(value)
		setValue(x(1002))
		putList(x(1000))
		setConstant(feature)
		setValue(x(1001))
		putList(x(999))
		setConstant(record)
		setValue(x(1000))
		putRecord(builtin [det imods types] x(990))
		setValue(x(991))
		setValue(x(996))
		setValue(x(999))
		putRecord(any 1 x(1007))
		setConstant(det)
		putList(x(1006))
		setValue(x(1007))
		setConstant(nil)
		putList(x(1005))
		setConstant(det)
		setValue(x(1006))
		putList(x(1004))
		setConstant(det)
		setValue(x(1005))
		putList(x(1009))
		setConstant(false)
		setConstant(nil)
		putList(x(1008))
		setConstant(false)
		setValue(x(1009))
		putRecord(pair 2 x(1013))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(1012))
		setValue(x(1013))
		putList(x(1014))
		setConstant(record)
		setConstant(nil)
		putList(x(1011))
		setValue(x(1012))
		setValue(x(1014))
		putList(x(1010))
		setConstant(record)
		setValue(x(1011))
		putRecord(builtin [det imods types] x(1003))
		setValue(x(1004))
		setValue(x(1008))
		setValue(x(1010))
		putRecord(any 1 x(1018))
		setConstant(det)
		putList(x(1017))
		setValue(x(1018))
		setConstant(nil)
		putList(x(1016))
		setConstant(det)
		setValue(x(1017))
		putList(x(1019))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(1022))
		setConstant(feature)
		putList(x(1021))
		setValue(x(1022))
		setConstant(nil)
		putList(x(1020))
		setConstant(record)
		setValue(x(1021))
		putRecord(builtin [det imods types] x(1015))
		setValue(x(1016))
		setValue(x(1019))
		setValue(x(1020))
		putRecord(any 1 x(1026))
		setConstant(det)
		putList(x(1025))
		setValue(x(1026))
		setConstant(nil)
		putList(x(1024))
		setConstant(any)
		setValue(x(1025))
		putList(x(1027))
		setConstant(false)
		setConstant(nil)
		putList(x(1029))
		setConstant(bool)
		setConstant(nil)
		putList(x(1028))
		setConstant(value)
		setValue(x(1029))
		putRecord(builtin [det imods test types] x(1023))
		setValue(x(1024))
		setValue(x(1027))
		setConstant(true)
		setValue(x(1028))
		putRecord(any 1 x(1033))
		setConstant(det)
		putList(x(1032))
		setValue(x(1033))
		setConstant(nil)
		putList(x(1031))
		setConstant(det)
		setValue(x(1032))
		putList(x(1034))
		setConstant(false)
		setConstant(nil)
		putList(x(1036))
		setConstant(bool)
		setConstant(nil)
		putList(x(1035))
		setConstant(value)
		setValue(x(1036))
		putRecord(builtin [det imods test types] x(1030))
		setValue(x(1031))
		setValue(x(1034))
		setConstant(true)
		setValue(x(1035))
		putRecord(any 1 x(1040))
		setConstant(det)
		putList(x(1039))
		setValue(x(1040))
		setConstant(nil)
		putList(x(1038))
		setConstant(det)
		setValue(x(1039))
		putList(x(1041))
		setConstant(false)
		setConstant(nil)
		putList(x(1043))
		setConstant(bool)
		setConstant(nil)
		putList(x(1042))
		setConstant(value)
		setValue(x(1043))
		putRecord(builtin [det imods test types] x(1037))
		setValue(x(1038))
		setValue(x(1041))
		setConstant(true)
		setValue(x(1042))
		putRecord(any 1 x(1047))
		setConstant(det)
		putList(x(1046))
		setValue(x(1047))
		setConstant(nil)
		putList(x(1045))
		setConstant(detOrKinded)
		setValue(x(1046))
		putList(x(1048))
		setConstant(false)
		setConstant(nil)
		putList(x(1050))
		setConstant(literal)
		setConstant(nil)
		putList(x(1049))
		setConstant(recordC)
		setValue(x(1050))
		putRecord(builtin [det imods types] x(1044))
		setValue(x(1045))
		setValue(x(1048))
		setValue(x(1049))
		putList(x(1054))
		setConstant(any)
		setConstant(nil)
		putList(x(1053))
		setConstant(any)
		setValue(x(1054))
		putList(x(1052))
		setConstant(detOrKinded)
		setValue(x(1053))
		putList(x(1057))
		setConstant(false)
		setConstant(nil)
		putList(x(1056))
		setConstant(false)
		setValue(x(1057))
		putList(x(1055))
		setConstant(false)
		setValue(x(1056))
		putRecord(list 1 x(1061))
		setConstant(feature)
		putList(x(1060))
		setValue(x(1061))
		setConstant(nil)
		putList(x(1059))
		setConstant(value)
		setValue(x(1060))
		putList(x(1058))
		setConstant(recordC)
		setValue(x(1059))
		putRecord(builtin [det imods types] x(1051))
		setValue(x(1052))
		setValue(x(1055))
		setValue(x(1058))
		putRecord(any 1 x(1066))
		setConstant(det)
		putList(x(1065))
		setValue(x(1066))
		setConstant(nil)
		putList(x(1064))
		setConstant(det)
		setValue(x(1065))
		putList(x(1063))
		setConstant(det)
		setValue(x(1064))
		putList(x(1068))
		setConstant(false)
		setConstant(nil)
		putList(x(1067))
		setConstant(false)
		setValue(x(1068))
		putRecord(pair 2 x(1072))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(1071))
		setValue(x(1072))
		putList(x(1073))
		setConstant(record)
		setConstant(nil)
		putList(x(1070))
		setValue(x(1071))
		setValue(x(1073))
		putList(x(1069))
		setConstant(literal)
		setValue(x(1070))
		putRecord(builtin [det imods types] x(1062))
		setValue(x(1063))
		setValue(x(1067))
		setValue(x(1069))
		putList(x(1076))
		setConstant(any)
		setConstant(nil)
		putList(x(1075))
		setConstant(det)
		setValue(x(1076))
		putList(x(1078))
		setConstant(false)
		setConstant(nil)
		putList(x(1077))
		setConstant(false)
		setValue(x(1078))
		putList(x(1080))
		setConstant(record)
		setConstant(nil)
		putList(x(1079))
		setConstant(literal)
		setValue(x(1080))
		putRecord(builtin [det imods types] x(1074))
		setValue(x(1075))
		setValue(x(1077))
		setValue(x(1079))
		putList(x(1084))
		setConstant(any)
		setConstant(nil)
		putList(x(1083))
		setConstant(det)
		setValue(x(1084))
		putList(x(1082))
		setConstant(det)
		setValue(x(1083))
		putList(x(1087))
		setConstant(false)
		setConstant(nil)
		putList(x(1086))
		setConstant(false)
		setValue(x(1087))
		putList(x(1085))
		setConstant(false)
		setValue(x(1086))
		putList(x(1090))
		setConstant(record)
		setConstant(nil)
		putList(x(1089))
		setConstant(int)
		setValue(x(1090))
		putList(x(1088))
		setConstant(literal)
		setValue(x(1089))
		putRecord(builtin [det imods types] x(1081))
		setValue(x(1082))
		setValue(x(1085))
		setValue(x(1088))
		putRecord(any 1 x(1094))
		setConstant(det)
		putList(x(1093))
		setValue(x(1094))
		setConstant(nil)
		putList(x(1092))
		setConstant(det)
		setValue(x(1093))
		putList(x(1095))
		setConstant(false)
		setConstant(nil)
		putList(x(1097))
		setConstant(int)
		setConstant(nil)
		putList(x(1096))
		setConstant(record)
		setValue(x(1097))
		putRecord(builtin [det imods types] x(1091))
		setValue(x(1092))
		setValue(x(1095))
		setValue(x(1096))
		putList(x(1100))
		setConstant(any)
		setConstant(nil)
		putList(x(1099))
		setConstant(detOrKinded)
		setValue(x(1100))
		putList(x(1102))
		setConstant(false)
		setConstant(nil)
		putList(x(1101))
		setConstant(false)
		setValue(x(1102))
		putList(x(1104))
		setConstant(int)
		setConstant(nil)
		putList(x(1103))
		setConstant(record)
		setValue(x(1104))
		putRecord(builtin [det imods types] x(1098))
		setValue(x(1099))
		setValue(x(1101))
		setValue(x(1103))
		putRecord(any 1 x(1108))
		setConstant(det)
		putList(x(1107))
		setValue(x(1108))
		setConstant(nil)
		putList(x(1106))
		setConstant(det)
		setValue(x(1107))
		putList(x(1109))
		setConstant(false)
		setConstant(nil)
		putList(x(1111))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1110))
		setConstant(space)
		setValue(x(1111))
		putRecord(builtin [det imods types] x(1105))
		setValue(x(1106))
		setValue(x(1109))
		setValue(x(1110))
		putList(x(1114))
		setConstant(any)
		setConstant(nil)
		putList(x(1113))
		setConstant(det)
		setValue(x(1114))
		putList(x(1116))
		setConstant(true)
		setConstant(nil)
		putList(x(1115))
		setConstant(false)
		setValue(x(1116))
		putList(x(1118))
		setConstant(value)
		setConstant(nil)
		putList(x(1117))
		setConstant(space)
		setValue(x(1118))
		putRecord(builtin [det imods types] x(1112))
		setValue(x(1113))
		setValue(x(1115))
		setValue(x(1117))
		putRecord(any 1 x(1122))
		setConstant(det)
		putList(x(1121))
		setValue(x(1122))
		setConstant(nil)
		putList(x(1120))
		setConstant(det)
		setValue(x(1121))
		putList(x(1123))
		setConstant(false)
		setConstant(nil)
		putList(x(1125))
		setConstant(space)
		setConstant(nil)
		putList(x(1124))
		setConstant(space)
		setValue(x(1125))
		putRecord(builtin [det imods types] x(1119))
		setValue(x(1120))
		setValue(x(1123))
		setValue(x(1124))
		putList(x(1128))
		setConstant(det)
		setConstant(nil)
		putList(x(1127))
		setConstant(det)
		setValue(x(1128))
		putList(x(1130))
		setConstant(false)
		setConstant(nil)
		putList(x(1129))
		setConstant(false)
		setValue(x(1130))
		putList(x(1132))
		setConstant(value)
		setConstant(nil)
		putList(x(1131))
		setConstant(space)
		setValue(x(1132))
		putRecord(builtin [det imods types] x(1126))
		setValue(x(1127))
		setValue(x(1129))
		setValue(x(1131))
		putList(x(1135))
		setConstant(det)
		setConstant(nil)
		putList(x(1134))
		setConstant(det)
		setValue(x(1135))
		putList(x(1137))
		setConstant(false)
		setConstant(nil)
		putList(x(1136))
		setConstant(false)
		setValue(x(1137))
		putList(x(1139))
		setConstant('procedure/1')
		setConstant(nil)
		putList(x(1138))
		setConstant(space)
		setValue(x(1139))
		putRecord(builtin [det imods types] x(1133))
		setValue(x(1134))
		setValue(x(1136))
		setValue(x(1138))
		putRecord(any 1 x(1143))
		setConstant(det)
		putList(x(1142))
		setValue(x(1143))
		setConstant(nil)
		putList(x(1141))
		setConstant(det)
		setValue(x(1142))
		putList(x(1144))
		setConstant(false)
		setConstant(nil)
		putList(x(1146))
		setConstant(bool)
		setConstant(nil)
		putList(x(1145))
		setConstant(value)
		setValue(x(1146))
		putRecord(builtin [det imods test types] x(1140))
		setValue(x(1141))
		setValue(x(1144))
		setConstant(true)
		setValue(x(1145))
		putRecord(any 1 x(1150))
		setConstant(det)
		putList(x(1149))
		setValue(x(1150))
		setConstant(nil)
		putList(x(1148))
		setConstant(det)
		setValue(x(1149))
		putList(x(1151))
		setConstant(false)
		setConstant(nil)
		putList(x(1153))
		setConstant(value)
		setConstant(nil)
		putList(x(1152))
		setConstant(space)
		setValue(x(1153))
		putRecord(builtin [det imods types] x(1147))
		setValue(x(1148))
		setValue(x(1151))
		setValue(x(1152))
		putRecord(any 1 x(1157))
		setConstant(det)
		putList(x(1156))
		setValue(x(1157))
		setConstant(nil)
		putList(x(1155))
		setConstant(det)
		setValue(x(1156))
		putList(x(1158))
		setConstant(false)
		setConstant(nil)
		putList(x(1160))
		setConstant(space)
		setConstant(nil)
		putList(x(1159))
		setConstant('procedure/1')
		setValue(x(1160))
		putRecord(builtin [det imods types] x(1154))
		setValue(x(1155))
		setValue(x(1158))
		setValue(x(1159))
		putRecord(any 1 x(1164))
		setConstant(det)
		putList(x(1163))
		setValue(x(1164))
		setConstant(nil)
		putList(x(1162))
		setConstant(det)
		setValue(x(1163))
		putList(x(1165))
		setConstant(false)
		setConstant(nil)
		putList(x(1167))
		setConstant(bool)
		setConstant(nil)
		putList(x(1166))
		setConstant(value)
		setValue(x(1167))
		putRecord(builtin [det imods test types] x(1161))
		setValue(x(1162))
		setValue(x(1165))
		setConstant(true)
		setValue(x(1166))
		putRecord(any 1 x(1171))
		setConstant(det)
		putList(x(1170))
		setValue(x(1171))
		setConstant(nil)
		putList(x(1169))
		setConstant(det)
		setValue(x(1170))
		putList(x(1172))
		setConstant(false)
		setConstant(nil)
		putList(x(1174))
		setConstant(atom)
		setConstant(nil)
		putList(x(1173))
		setConstant(string)
		setValue(x(1174))
		putRecord(builtin [det imods types] x(1168))
		setValue(x(1169))
		setValue(x(1172))
		setValue(x(1173))
		putRecord(any 1 x(1178))
		setConstant(det)
		putList(x(1177))
		setValue(x(1178))
		setConstant(nil)
		putList(x(1176))
		setConstant(det)
		setValue(x(1177))
		putList(x(1179))
		setConstant(false)
		setConstant(nil)
		putList(x(1181))
		setConstant(float)
		setConstant(nil)
		putList(x(1180))
		setConstant(string)
		setValue(x(1181))
		putRecord(builtin [det imods types] x(1175))
		setValue(x(1176))
		setValue(x(1179))
		setValue(x(1180))
		putRecord(any 1 x(1185))
		setConstant(det)
		putList(x(1184))
		setValue(x(1185))
		setConstant(nil)
		putList(x(1183))
		setConstant(det)
		setValue(x(1184))
		putList(x(1186))
		setConstant(false)
		setConstant(nil)
		putList(x(1188))
		setConstant(int)
		setConstant(nil)
		putList(x(1187))
		setConstant(string)
		setValue(x(1188))
		putRecord(builtin [det imods types] x(1182))
		setValue(x(1183))
		setValue(x(1186))
		setValue(x(1187))
		putList(x(1190))
		setConstant(det)
		setConstant(nil)
		putList(x(1191))
		setConstant(false)
		setConstant(nil)
		putList(x(1192))
		setConstant(procedure)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1189))
		setValue(x(1190))
		setValue(x(1191))
		setValue(x(1192))
		putRecord(any 1 x(1196))
		setConstant(det)
		putList(x(1195))
		setValue(x(1196))
		setConstant(nil)
		putList(x(1194))
		setConstant(det)
		setValue(x(1195))
		putList(x(1197))
		setConstant(false)
		setConstant(nil)
		putList(x(1199))
		setConstant(atom)
		setConstant(nil)
		putList(x(1198))
		setConstant('thread')
		setValue(x(1199))
		putRecord(builtin [det imods types] x(1193))
		setValue(x(1194))
		setValue(x(1197))
		setValue(x(1198))
		putList(x(1202))
		setConstant(det)
		setConstant(nil)
		putList(x(1201))
		setConstant(det)
		setValue(x(1202))
		putList(x(1204))
		setConstant(false)
		setConstant(nil)
		putList(x(1203))
		setConstant(false)
		setValue(x(1204))
		putList(x(1206))
		setConstant(value)
		setConstant(nil)
		putList(x(1205))
		setConstant('thread')
		setValue(x(1206))
		putRecord(builtin [det imods types] x(1200))
		setValue(x(1201))
		setValue(x(1203))
		setValue(x(1205))
		putRecord(any 1 x(1210))
		setConstant(det)
		putList(x(1209))
		setValue(x(1210))
		setConstant(nil)
		putList(x(1208))
		setConstant(det)
		setValue(x(1209))
		putList(x(1211))
		setConstant(false)
		setConstant(nil)
		putList(x(1213))
		setConstant(bool)
		setConstant(nil)
		putList(x(1212))
		setConstant(value)
		setValue(x(1213))
		putRecord(builtin [det imods test types] x(1207))
		setValue(x(1208))
		setValue(x(1211))
		setConstant(true)
		setValue(x(1212))
		putRecord(any 1 x(1217))
		setConstant(det)
		putList(x(1216))
		setValue(x(1217))
		setConstant(nil)
		putList(x(1215))
		setConstant(det)
		setValue(x(1216))
		putList(x(1218))
		setConstant(false)
		setConstant(nil)
		putList(x(1220))
		setConstant(bool)
		setConstant(nil)
		putList(x(1219))
		setConstant('thread')
		setValue(x(1220))
		putRecord(builtin [det imods test types] x(1214))
		setValue(x(1215))
		setValue(x(1218))
		setConstant(true)
		setValue(x(1219))
		putList(x(1222))
		setConstant(det)
		setConstant(nil)
		putList(x(1223))
		setConstant(false)
		setConstant(nil)
		putList(x(1224))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1221))
		setValue(x(1222))
		setValue(x(1223))
		setValue(x(1224))
		putList(x(1226))
		setConstant(det)
		setConstant(nil)
		putList(x(1227))
		setConstant(false)
		setConstant(nil)
		putList(x(1228))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1225))
		setValue(x(1226))
		setValue(x(1227))
		setValue(x(1228))
		putList(x(1231))
		setConstant(det)
		setConstant(nil)
		putList(x(1230))
		setConstant(det)
		setValue(x(1231))
		putList(x(1233))
		setConstant(false)
		setConstant(nil)
		putList(x(1232))
		setConstant(false)
		setValue(x(1233))
		putList(x(1235))
		setConstant(atom)
		setConstant(nil)
		putList(x(1234))
		setConstant('thread')
		setValue(x(1235))
		putRecord(builtin [det imods types] x(1229))
		setValue(x(1230))
		setValue(x(1232))
		setValue(x(1234))
		putRecord(any 1 x(1239))
		setConstant(det)
		putList(x(1238))
		setValue(x(1239))
		setConstant(nil)
		putList(x(1237))
		setConstant(det)
		setValue(x(1238))
		putList(x(1240))
		setConstant(false)
		setConstant(nil)
		putList(x(1242))
		setConstant(atom)
		setConstant(nil)
		putList(x(1241))
		setConstant('thread')
		setValue(x(1242))
		putRecord(builtin [det imods types] x(1236))
		setValue(x(1237))
		setValue(x(1240))
		setValue(x(1241))
		putList(x(1244))
		setConstant(det)
		setConstant(nil)
		putList(x(1245))
		setConstant(false)
		setConstant(nil)
		putList(x(1246))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1243))
		setValue(x(1244))
		setValue(x(1245))
		setValue(x(1246))
		putRecord(any 1 x(1249))
		setConstant(det)
		putList(x(1248))
		setValue(x(1249))
		setConstant(nil)
		putList(x(1250))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1247))
		setValue(x(1248))
		setConstant(nil)
		setValue(x(1250))
		putList(x(1253))
		setConstant(any)
		setConstant(nil)
		putList(x(1252))
		setConstant(det)
		setValue(x(1253))
		putList(x(1255))
		setConstant(false)
		setConstant(nil)
		putList(x(1254))
		setConstant(false)
		setValue(x(1255))
		putList(x(1257))
		setConstant('unit')
		setConstant(nil)
		putList(x(1256))
		setConstant(int)
		setValue(x(1257))
		putRecord(builtin [det imods types] x(1251))
		setValue(x(1252))
		setValue(x(1254))
		setValue(x(1256))
		putList(x(1259))
		setConstant(det)
		setConstant(nil)
		putList(x(1260))
		setConstant(true)
		setConstant(nil)
		putList(x(1261))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1258))
		setValue(x(1259))
		setValue(x(1260))
		setValue(x(1261))
		putRecord(any 1 x(1264))
		setConstant(det)
		putList(x(1263))
		setValue(x(1264))
		setConstant(nil)
		putList(x(1265))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1262))
		setValue(x(1263))
		setConstant(nil)
		setValue(x(1265))
		putRecord(any 1 x(1269))
		setConstant(det)
		putList(x(1268))
		setValue(x(1269))
		setConstant(nil)
		putList(x(1267))
		setConstant(det)
		setValue(x(1268))
		putList(x(1270))
		setConstant(false)
		setConstant(nil)
		putList(x(1272))
		setConstant(bool)
		setConstant(nil)
		putList(x(1271))
		setConstant(value)
		setValue(x(1272))
		putRecord(builtin [det imods test types] x(1266))
		setValue(x(1267))
		setValue(x(1270))
		setConstant(true)
		setValue(x(1271))
		putRecord(any 1 x(1277))
		setConstant(det)
		putList(x(1276))
		setValue(x(1277))
		setConstant(nil)
		putList(x(1275))
		setConstant(det)
		setValue(x(1276))
		putList(x(1274))
		setConstant(det)
		setValue(x(1275))
		putList(x(1279))
		setConstant(false)
		setConstant(nil)
		putList(x(1278))
		setConstant(false)
		setValue(x(1279))
		putList(x(1282))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1281))
		setConstant(int)
		setValue(x(1282))
		putList(x(1280))
		setConstant(literal)
		setValue(x(1281))
		putRecord(builtin [det imods types] x(1273))
		setValue(x(1274))
		setValue(x(1278))
		setValue(x(1280))
		putRecord(any 1 x(1286))
		setConstant(det)
		putList(x(1285))
		setValue(x(1286))
		setConstant(nil)
		putList(x(1284))
		setConstant(det)
		setValue(x(1285))
		putList(x(1287))
		setConstant(false)
		setConstant(nil)
		putList(x(1289))
		setConstant(bool)
		setConstant(nil)
		putList(x(1288))
		setConstant(value)
		setValue(x(1289))
		putRecord(builtin [det imods test types] x(1283))
		setValue(x(1284))
		setValue(x(1287))
		setConstant(true)
		setValue(x(1288))
		putRecord(any 1 x(1294))
		setConstant(det)
		putList(x(1293))
		setValue(x(1294))
		setConstant(nil)
		putList(x(1292))
		setConstant(det)
		setValue(x(1293))
		putList(x(1291))
		setConstant(det)
		setValue(x(1292))
		putList(x(1296))
		setConstant(false)
		setConstant(nil)
		putList(x(1295))
		setConstant(false)
		setValue(x(1296))
		putList(x(1299))
		setConstant(bool)
		setConstant(nil)
		putList(x(1298))
		setConstant(comparable)
		setValue(x(1299))
		putList(x(1297))
		setConstant(comparable)
		setValue(x(1298))
		putRecord(builtin [det imods negated test types] x(1290))
		setValue(x(1291))
		setValue(x(1295))
		setConstant('Value.\'>=\'')
		setConstant(true)
		setValue(x(1297))
		putList(x(1302))
		setConstant(any)
		setConstant(nil)
		putList(x(1301))
		setConstant(any)
		setValue(x(1302))
		putList(x(1304))
		setConstant(false)
		setConstant(nil)
		putList(x(1303))
		setConstant(false)
		setValue(x(1304))
		putList(x(1306))
		setConstant(value)
		setConstant(nil)
		putList(x(1305))
		setConstant(value)
		setValue(x(1306))
		putRecord(builtin [det imods types] x(1300))
		setValue(x(1301))
		setValue(x(1303))
		setValue(x(1305))
		putRecord(any 1 x(1311))
		setConstant(det)
		putList(x(1310))
		setValue(x(1311))
		setConstant(nil)
		putList(x(1309))
		setConstant(det)
		setValue(x(1310))
		putList(x(1308))
		setConstant(det)
		setValue(x(1309))
		putList(x(1313))
		setConstant(false)
		setConstant(nil)
		putList(x(1312))
		setConstant(false)
		setValue(x(1313))
		putList(x(1316))
		setConstant(bool)
		setConstant(nil)
		putList(x(1315))
		setConstant(comparable)
		setValue(x(1316))
		putList(x(1314))
		setConstant(comparable)
		setValue(x(1315))
		putRecord(builtin [det imods negated test types] x(1307))
		setValue(x(1308))
		setValue(x(1312))
		setConstant('Value.\'>\'')
		setConstant(true)
		setValue(x(1314))
		putRecord(any 1 x(1321))
		setConstant(det)
		putList(x(1320))
		setValue(x(1321))
		setConstant(nil)
		putList(x(1319))
		setConstant(detOrKinded)
		setValue(x(1320))
		putList(x(1318))
		setConstant(detOrKinded)
		setValue(x(1319))
		putList(x(1323))
		setConstant(false)
		setConstant(nil)
		putList(x(1322))
		setConstant(false)
		setValue(x(1323))
		putList(x(1326))
		setConstant(bool)
		setConstant(nil)
		putList(x(1325))
		setConstant(value)
		setValue(x(1326))
		putList(x(1324))
		setConstant(value)
		setValue(x(1325))
		putRecord(builtin [det imods negated test types] x(1317))
		setValue(x(1318))
		setValue(x(1322))
		setConstant('Value.\'\\=\'')
		setConstant(true)
		setValue(x(1324))
		putRecord(any 1 x(1331))
		setConstant(det)
		putList(x(1330))
		setValue(x(1331))
		setConstant(nil)
		putList(x(1329))
		setConstant(det)
		setValue(x(1330))
		putList(x(1328))
		setConstant(det)
		setValue(x(1329))
		putList(x(1333))
		setConstant(false)
		setConstant(nil)
		putList(x(1332))
		setConstant(false)
		setValue(x(1333))
		putList(x(1336))
		setConstant(bool)
		setConstant(nil)
		putList(x(1335))
		setConstant(comparable)
		setValue(x(1336))
		putList(x(1334))
		setConstant(comparable)
		setValue(x(1335))
		putRecord(builtin [det imods negated test types] x(1327))
		setValue(x(1328))
		setValue(x(1332))
		setConstant('Value.\'=<\'')
		setConstant(true)
		setValue(x(1334))
		putRecord(any 1 x(1341))
		setConstant(det)
		putList(x(1340))
		setValue(x(1341))
		setConstant(nil)
		putList(x(1339))
		setConstant(det)
		setValue(x(1340))
		putList(x(1338))
		setConstant(det)
		setValue(x(1339))
		putList(x(1343))
		setConstant(false)
		setConstant(nil)
		putList(x(1342))
		setConstant(false)
		setValue(x(1343))
		putList(x(1346))
		setConstant(bool)
		setConstant(nil)
		putList(x(1345))
		setConstant(comparable)
		setValue(x(1346))
		putList(x(1344))
		setConstant(comparable)
		setValue(x(1345))
		putRecord(builtin [det imods negated test types] x(1337))
		setValue(x(1338))
		setValue(x(1342))
		setConstant('Value.\'<\'')
		setConstant(true)
		setValue(x(1344))
		putRecord(any 1 x(1351))
		setConstant(det)
		putList(x(1350))
		setValue(x(1351))
		setConstant(nil)
		putList(x(1349))
		setConstant(detOrKinded)
		setValue(x(1350))
		putList(x(1348))
		setConstant(detOrKinded)
		setValue(x(1349))
		putList(x(1353))
		setConstant(false)
		setConstant(nil)
		putList(x(1352))
		setConstant(false)
		setValue(x(1353))
		putList(x(1356))
		setConstant(bool)
		setConstant(nil)
		putList(x(1355))
		setConstant(value)
		setValue(x(1356))
		putList(x(1354))
		setConstant(value)
		setValue(x(1355))
		putRecord(builtin [det imods negated test types] x(1347))
		setValue(x(1348))
		setValue(x(1352))
		setConstant('Value.\'==\'')
		setConstant(true)
		setValue(x(1354))
		putList(x(1359))
		setConstant(any)
		setConstant(nil)
		putList(x(1358))
		setConstant(any)
		setValue(x(1359))
		putList(x(1360))
		setConstant(false)
		setConstant(nil)
		putList(x(1362))
		setConstant(value)
		setConstant(nil)
		putList(x(1361))
		setConstant(value)
		setValue(x(1362))
		putRecord(builtin [det imods types] x(1357))
		setValue(x(1358))
		setValue(x(1360))
		setValue(x(1361))
		putList(x(1367))
		setConstant(any)
		setConstant(nil)
		putList(x(1366))
		setConstant(any)
		setValue(x(1367))
		putList(x(1365))
		setConstant(det)
		setValue(x(1366))
		putList(x(1364))
		setConstant(detOrKinded)
		setValue(x(1365))
		putList(x(1370))
		setConstant(false)
		setConstant(nil)
		putList(x(1369))
		setConstant(false)
		setValue(x(1370))
		putList(x(1368))
		setConstant(false)
		setValue(x(1369))
		putList(x(1374))
		setConstant(value)
		setConstant(nil)
		putList(x(1373))
		setConstant(value)
		setValue(x(1374))
		putList(x(1372))
		setConstant(feature)
		setValue(x(1373))
		putList(x(1371))
		setConstant(recordCOrChunk)
		setValue(x(1372))
		putRecord(builtin [det imods types] x(1363))
		setValue(x(1364))
		setValue(x(1368))
		setValue(x(1371))
		putList(x(1377))
		setConstant(any)
		setConstant(nil)
		putList(x(1376))
		setConstant(any)
		setValue(x(1377))
		putList(x(1378))
		setConstant(false)
		setConstant(nil)
		putList(x(1380))
		setConstant(value)
		setConstant(nil)
		putList(x(1379))
		setConstant(value)
		setValue(x(1380))
		putRecord(builtin [det imods types] x(1375))
		setValue(x(1376))
		setValue(x(1378))
		setValue(x(1379))
		putRecord(any 1 x(1385))
		setConstant(det)
		putList(x(1384))
		setValue(x(1385))
		setConstant(nil)
		putList(x(1383))
		setConstant(det)
		setValue(x(1384))
		putList(x(1382))
		setConstant(detOrKinded)
		setValue(x(1383))
		putList(x(1387))
		setConstant(false)
		setConstant(nil)
		putList(x(1386))
		setConstant(false)
		setValue(x(1387))
		putList(x(1390))
		setConstant(bool)
		setConstant(nil)
		putList(x(1389))
		setConstant(feature)
		setValue(x(1390))
		putList(x(1388))
		setConstant(recordCOrChunk)
		setValue(x(1389))
		putRecord(builtin [det imods test types] x(1381))
		setValue(x(1382))
		setValue(x(1386))
		setConstant(true)
		setValue(x(1388))
		putRecord(any 1 x(1394))
		setConstant(det)
		putList(x(1393))
		setValue(x(1394))
		setConstant(nil)
		putList(x(1392))
		setConstant(any)
		setValue(x(1393))
		putList(x(1395))
		setConstant(false)
		setConstant(nil)
		putList(x(1397))
		setConstant(bool)
		setConstant(nil)
		putList(x(1396))
		setConstant(value)
		setValue(x(1397))
		putRecord(builtin [det imods test types] x(1391))
		setValue(x(1392))
		setValue(x(1395))
		setConstant(true)
		setValue(x(1396))
		putRecord(any 1 x(1401))
		setConstant(det)
		putList(x(1400))
		setValue(x(1401))
		setConstant(nil)
		putList(x(1399))
		setConstant(any)
		setValue(x(1400))
		putList(x(1402))
		setConstant(false)
		setConstant(nil)
		putList(x(1404))
		setConstant(bool)
		setConstant(nil)
		putList(x(1403))
		setConstant(value)
		setValue(x(1404))
		putRecord(builtin [det imods test types] x(1398))
		setValue(x(1399))
		setValue(x(1402))
		setConstant(true)
		setValue(x(1403))
		putRecord(any 1 x(1408))
		setConstant(det)
		putList(x(1407))
		setValue(x(1408))
		setConstant(nil)
		putList(x(1406))
		setConstant(any)
		setValue(x(1407))
		putList(x(1409))
		setConstant(false)
		setConstant(nil)
		putList(x(1411))
		setConstant(bool)
		setConstant(nil)
		putList(x(1410))
		setConstant(value)
		setValue(x(1411))
		putRecord(builtin [det imods test types] x(1405))
		setValue(x(1406))
		setValue(x(1409))
		setConstant(true)
		setValue(x(1410))
		putRecord(any 1 x(1416))
		setConstant(det)
		putList(x(1415))
		setValue(x(1416))
		setConstant(nil)
		putList(x(1414))
		setConstant(det)
		setValue(x(1415))
		putList(x(1413))
		setConstant(det)
		setValue(x(1414))
		putList(x(1418))
		setConstant(false)
		setConstant(nil)
		putList(x(1417))
		setConstant(false)
		setValue(x(1418))
		putList(x(1421))
		setConstant(comparable)
		setConstant(nil)
		putList(x(1420))
		setConstant(comparable)
		setValue(x(1421))
		putList(x(1419))
		setConstant(comparable)
		setValue(x(1420))
		putRecord(builtin [det imods types] x(1412))
		setValue(x(1413))
		setValue(x(1417))
		setValue(x(1419))
		putRecord(any 1 x(1426))
		setConstant(det)
		putList(x(1425))
		setValue(x(1426))
		setConstant(nil)
		putList(x(1424))
		setConstant(det)
		setValue(x(1425))
		putList(x(1423))
		setConstant(det)
		setValue(x(1424))
		putList(x(1428))
		setConstant(false)
		setConstant(nil)
		putList(x(1427))
		setConstant(false)
		setValue(x(1428))
		putList(x(1431))
		setConstant(comparable)
		setConstant(nil)
		putList(x(1430))
		setConstant(comparable)
		setValue(x(1431))
		putList(x(1429))
		setConstant(comparable)
		setValue(x(1430))
		putRecord(builtin [det imods types] x(1422))
		setValue(x(1423))
		setValue(x(1427))
		setValue(x(1429))
		putRecord(any 1 x(1435))
		setConstant(det)
		putList(x(1434))
		setValue(x(1435))
		setConstant(nil)
		putList(x(1433))
		setConstant(any)
		setValue(x(1434))
		putList(x(1436))
		setConstant(false)
		setConstant(nil)
		putList(x(1438))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1437))
		setConstant(value)
		setValue(x(1438))
		putRecord(builtin [det imods types] x(1432))
		setValue(x(1433))
		setValue(x(1436))
		setValue(x(1437))
		putRecord(any 1 x(1442))
		setConstant(det)
		putList(x(1441))
		setValue(x(1442))
		setConstant(nil)
		putList(x(1440))
		setConstant(det)
		setValue(x(1441))
		putList(x(1443))
		setConstant(false)
		setConstant(nil)
		putList(x(1445))
		setConstant(atom)
		setConstant(nil)
		putList(x(1444))
		setConstant(value)
		setValue(x(1445))
		putRecord(builtin [det imods types] x(1439))
		setValue(x(1440))
		setValue(x(1443))
		setValue(x(1444))
		putList(x(1447))
		setConstant(det)
		setConstant(nil)
		putList(x(1448))
		setConstant(false)
		setConstant(nil)
		putList(x(1449))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1446))
		setValue(x(1447))
		setValue(x(1448))
		setValue(x(1449))
		putList(x(1452))
		setConstant(any)
		setConstant(nil)
		putList(x(1451))
		setConstant(any)
		setValue(x(1452))
		putList(x(1454))
		setConstant(false)
		setConstant(nil)
		putList(x(1453))
		setConstant(false)
		setValue(x(1454))
		putList(x(1456))
		setConstant(value)
		setConstant(nil)
		putList(x(1455))
		setConstant(value)
		setValue(x(1456))
		putRecord(builtin [det imods types] x(1450))
		setValue(x(1451))
		setValue(x(1453))
		setValue(x(1455))
		putRecord(any 1 x(1460))
		setConstant(det)
		putList(x(1459))
		setValue(x(1460))
		setConstant(nil)
		putList(x(1458))
		setConstant(det)
		setValue(x(1459))
		putList(x(1461))
		setConstant(true)
		setConstant(nil)
		putList(x(1463))
		setConstant(bool)
		setConstant(nil)
		putList(x(1462))
		setConstant(value)
		setValue(x(1463))
		putRecord(builtin [det imods test types] x(1457))
		setValue(x(1458))
		setValue(x(1461))
		setConstant(true)
		setValue(x(1462))
		putRecord(any 1 x(1468))
		setConstant(det)
		putList(x(1467))
		setValue(x(1468))
		setConstant(nil)
		putList(x(1466))
		setConstant(det)
		setValue(x(1467))
		putList(x(1465))
		setConstant(any)
		setValue(x(1466))
		putList(x(1470))
		setConstant(true)
		setConstant(nil)
		putList(x(1469))
		setConstant(true)
		setValue(x(1470))
		putList(x(1473))
		setConstant(int)
		setConstant(nil)
		putList(x(1472))
		setConstant(int)
		setValue(x(1473))
		putList(x(1471))
		setConstant(virtualString)
		setValue(x(1472))
		putRecord(builtin [det imods types] x(1464))
		setValue(x(1465))
		setValue(x(1469))
		setValue(x(1471))
		putRecord(builtinTable ['Array.get' 'Array.high' 'Array.is' 'Array.low' 'Array.new' 'Array.put' 'Atom.is' 'Atom.toString' 'BitArray.and' 'BitArray.card' 'BitArray.clear' 'BitArray.clone' 'BitArray.complementToList' 'BitArray.disjoint' 'BitArray.high' 'BitArray.is' 'BitArray.low' 'BitArray.new' 'BitArray.nimpl' 'BitArray.or' 'BitArray.set' 'BitArray.test' 'BitArray.toList' 'Bool.and' 'Bool.is' 'Bool.not' 'Bool.or' 'Boot.builtin' 'Boot.manager' 'Cell.access' 'Cell.assign' 'Cell.exchange' 'Cell.is' 'Cell.new' 'Char.is' 'Char.isAlNum' 'Char.isAlpha' 'Char.isCntrl' 'Char.isDigit' 'Char.isGraph' 'Char.isLower' 'Char.isPrint' 'Char.isPunct' 'Char.isSpace' 'Char.isUpper' 'Char.isXDigit' 'Char.toAtom' 'Char.toLower' 'Char.toUpper' 'Char.type' 'Chunk.is' 'Chunk.new' 'Class.get' 'Dictionary.clone' 'Dictionary.condGet' 'Dictionary.entries' 'Dictionary.get' 'Dictionary.is' 'Dictionary.items' 'Dictionary.keys' 'Dictionary.markSafe' 'Dictionary.member' 'Dictionary.new' 'Dictionary.put' 'Dictionary.remove' 'Dictionary.removeAll' 'Exception.location' 'Exception.raise' 'Exception.raiseDebug' 'Exception.raiseDebugCheck' 'Exception.raiseError' 'Exception.taskStackError' 'Float.acos' 'Float.asin' 'Float.atan' 'Float.atan2' 'Float.ceil' 'Float.cos' 'Float.exp' 'Float.fPow' 'Float.floor' 'Float.is' 'Float.log' 'Float.round' 'Float.sin' 'Float.sqrt' 'Float.tan' 'Float.toInt' 'Float.toString' 'ForeignPointer.is' 'ForeignPointer.toInt' 'Int.\'+1\'' 'Int.\'-1\'' 'Int.div' 'Int.is' 'Int.mod' 'Int.toFloat' 'Int.toString' 'Literal.is' 'Lock.is' 'Lock.lock' 'Lock.new' 'Lock.unlock' 'Name.is' 'Name.new' 'Name.newUnique' 'Number.\'*\'' 'Number.\'+\'' 'Number.\'-\'' 'Number.\'/\'' 'Number.\'~\'' 'Number.abs' 'Number.is' 'Object.\',\'' 'Object.\'<-\'' 'Object.\'@\'' 'Object.copyRecord' 'Object.is' 'Object.makeClass' 'Object.new' 'Object.newObject' 'Object.ooExch' 'Object.ooGetLock' 'Object.send' 'Port.is' 'Port.new' 'Port.send' 'Procedure.arity' 'Procedure.is' 'Record.\'.\'' 'Record.\'^\'' 'Record.adjoin' 'Record.adjoinAt' 'Record.adjoinList' 'Record.arity' 'Record.hasLabel' 'Record.is' 'Record.isC' 'Record.label' 'Record.monitorArity' 'Record.record' 'Record.tellRecord' 'Record.tellRecordSize' 'Record.width' 'Record.widthC' 'Space.ask' 'Space.askVerbose' 'Space.clone' 'Space.commit' 'Space.inject' 'Space.is' 'Space.merge' 'Space.new' 'String.is' 'String.toAtom' 'String.toFloat' 'String.toInt' 'Thread.create' 'Thread.getPriority' 'Thread.injectException' 'Thread.is' 'Thread.isSuspended' 'Thread.preempt' 'Thread.resume' 'Thread.setPriority' 'Thread.state' 'Thread.suspend' 'Thread.this' 'Time.alarm' 'Time.delay' 'Time.time' 'Tuple.is' 'Tuple.make' 'Unit.is' 'Value.\'<\'' 'Value.\'=\'' 'Value.\'=<\'' 'Value.\'==\'' 'Value.\'>\'' 'Value.\'>=\'' 'Value.\'\\=\'' 'Value.byNeed' 'Value.condSelect' 'Value.future' 'Value.hasFeature' 'Value.isDet' 'Value.isFree' 'Value.isKinded' 'Value.max' 'Value.min' 'Value.status' 'Value.type' 'Value.wait' 'Value.waitOr' 'VirtualString.is' 'VirtualString.length'] y(185))
		setValue(x(0))
		setValue(x(9))
		setValue(x(16))
		setValue(x(23))
		setValue(x(30))
		setValue(x(43))
		setValue(x(53))
		setValue(x(60))
		setValue(x(67))
		setValue(x(74))
		setValue(x(81))
		setValue(x(88))
		setValue(x(95))
		setValue(x(103))
		setValue(x(113))
		setValue(x(120))
		setValue(x(127))
		setValue(x(134))
		setValue(x(144))
		setValue(x(151))
		setValue(x(158))
		setValue(x(165))
		setValue(x(175))
		setValue(x(183))
		setValue(x(193))
		setValue(x(200))
		setValue(x(207))
		setValue(x(217))
		setValue(x(227))
		setValue(x(234))
		setValue(x(240))
		setValue(x(247))
		setValue(x(257))
		setValue(x(264))
		setValue(x(271))
		setValue(x(278))
		setValue(x(285))
		setValue(x(292))
		setValue(x(299))
		setValue(x(306))
		setValue(x(313))
		setValue(x(320))
		setValue(x(327))
		setValue(x(334))
		setValue(x(341))
		setValue(x(348))
		setValue(x(355))
		setValue(x(362))
		setValue(x(369))
		setValue(x(376))
		setValue(x(383))
		setValue(x(390))
		setValue(x(397))
		setValue(x(404))
		setValue(x(411))
		setValue(x(423))
		setValue(x(432))
		setValue(x(441))
		setValue(x(448))
		setValue(x(456))
		setValue(x(464))
		setValue(x(468))
		setValue(x(478))
		setValue(x(482))
		setValue(x(492))
		setValue(x(499))
		setValue(x(503))
		setValue(x(508))
		setValue(x(512))
		setValue(x(516))
		setValue(x(523))
		setValue(x(527))
		setValue(x(532))
		setValue(x(539))
		setValue(x(546))
		setValue(x(553))
		setValue(x(563))
		setValue(x(570))
		setValue(x(577))
		setValue(x(584))
		setValue(x(594))
		setValue(x(601))
		setValue(x(608))
		setValue(x(615))
		setValue(x(622))
		setValue(x(629))
		setValue(x(636))
		setValue(x(643))
		setValue(x(650))
		setValue(x(657))
		setValue(x(664))
		setValue(x(671))
		setValue(x(678))
		setValue(x(685))
		setValue(x(695))
		setValue(x(702))
		setValue(x(712))
		setValue(x(719))
		setValue(x(726))
		setValue(x(733))
		setValue(x(740))
		setValue(x(744))
		setValue(x(748))
		setValue(x(752))
		setValue(x(759))
		setValue(x(763))
		setValue(x(770))
		setValue(x(780))
		setValue(x(790))
		setValue(x(800))
		setValue(x(810))
		setValue(x(817))
		setValue(x(824))
		setValue(x(831))
		setValue(x(838))
		setValue(x(845))
		setValue(x(851))
		setValue(x(858))
		setValue(x(865))
		setValue(x(887))
		setValue(x(897))
		setValue(x(904))
		setValue(x(913))
		setValue(x(917))
		setValue(x(927))
		setValue(x(934))
		setValue(x(941))
		setValue(x(948))
		setValue(x(955))
		setValue(x(962))
		setValue(x(971))
		setValue(x(980))
		setValue(x(990))
		setValue(x(1003))
		setValue(x(1015))
		setValue(x(1023))
		setValue(x(1030))
		setValue(x(1037))
		setValue(x(1044))
		setValue(x(1051))
		setValue(x(1062))
		setValue(x(1074))
		setValue(x(1081))
		setValue(x(1091))
		setValue(x(1098))
		setValue(x(1105))
		setValue(x(1112))
		setValue(x(1119))
		setValue(x(1126))
		setValue(x(1133))
		setValue(x(1140))
		setValue(x(1147))
		setValue(x(1154))
		setValue(x(1161))
		setValue(x(1168))
		setValue(x(1175))
		setValue(x(1182))
		setValue(x(1189))
		setValue(x(1193))
		setValue(x(1200))
		setValue(x(1207))
		setValue(x(1214))
		setValue(x(1221))
		setValue(x(1225))
		setValue(x(1229))
		setValue(x(1236))
		setValue(x(1243))
		setValue(x(1247))
		setValue(x(1251))
		setValue(x(1258))
		setValue(x(1262))
		setValue(x(1266))
		setValue(x(1273))
		setValue(x(1283))
		setValue(x(1290))
		setValue(x(1300))
		setValue(x(1307))
		setValue(x(1317))
		setValue(x(1327))
		setValue(x(1337))
		setValue(x(1347))
		setValue(x(1357))
		setValue(x(1363))
		setValue(x(1375))
		setValue(x(1381))
		setValue(x(1391))
		setValue(x(1398))
		setValue(x(1405))
		setValue(x(1412))
		setValue(x(1422))
		setValue(x(1432))
		setValue(x(1439))
		setValue(x(1446))
		setValue(x(1450))
		setValue(x(1457))
		setValue(x(1464))
lbl(81028)	definition(x(2) 81049 pid('E' 2 pos('./compiler/Builtins.oz' 58 3) nil 3) <P: 639> [y(1)])
		putRecord(compiler 3 x(2))
		setConstant(badBuiltinTableEntry)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(81028)
lbl(81049)	definition(x(1) 81490 pid('' 2 pos('./compiler/Builtins.oz' 67 4) nil 5) <P: 640> [y(185)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(types x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 81089)
lbl(81068)	inlineDot(x(1) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81089 81100)
		branch(81111)
lbl(81089)	move(y(0) x(0))
		putConstant(types x(1))
		genFastCall(<P: 639> 4)
		branch(81111)
lbl(81100)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(68)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81111)	move(y(1) x(0))
		putConstant(det x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 81142)
lbl(81121)	inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81142 81153)
		branch(81164)
lbl(81142)	move(y(0) x(0))
		putConstant(det x(1))
		genFastCall(<P: 639> 4)
		branch(81164)
lbl(81153)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81164)	move(y(1) x(0))
		inlineDot(x(0) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 81218)
lbl(81209)	move(y(0) x(0))
		putConstant(typesdet x(1))
		genFastCall(<P: 639> 4)
lbl(81218)	move(y(1) x(0))
		putConstant(imods x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(1)] 81233)
		branch(81311)
lbl(81233)	inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81254 81300)
		branch(81311)
lbl(81254)	move(y(1) x(0))
		inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) iarity x(1) cache)
		move(y(2) x(2))
		testLT(x(1) x(2) x(3) 81311)
lbl(81289)	move(y(0) x(0))
		putConstant(imods x(1))
		genFastCall(<P: 639> 4)
		branch(81311)
lbl(81300)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(78)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81311)	move(y(1) x(0))
		putConstant(test x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(1)] 81326)
		branch(81347)
lbl(81326)	inlineDot(x(0) test x(1) cache)
		testBI('Bool.is' [x(1)]#[x(2)] 81338)
		branch(81347)
lbl(81338)	move(y(0) x(0))
		putConstant(test x(1))
		genFastCall(<P: 639> 4)
lbl(81347)	move(y(1) x(0))
		putConstant(negated x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 81451 81440)
		inlineDot(x(0) negated x(1) cache)
		testBI('Atom.is' [x(1)]#[x(2)] 81429)
		putConstant(test x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 81418)
		move(g(0) x(2))
		testBI('Value.hasFeature' [x(2) x(1)]#[x(3)] 81407)
		callBI('Record.\'.\'' [x(2) x(1)]#[x(3)])
		putConstant(test x(1))
		testBI('Value.hasFeature' [x(3) x(1)]#[x(4)] 81396)
		branch(81451)
lbl(81396)	move(y(0) x(0))
		putConstant(negatedNotTest2 x(1))
		genFastCall(<P: 639> 4)
		branch(81451)
lbl(81407)	move(y(0) x(0))
		putConstant(undefinedNegatedBuiltin x(1))
		genFastCall(<P: 639> 4)
		branch(81451)
lbl(81418)	move(y(0) x(0))
		putConstant(negatedNotTest x(1))
		genFastCall(<P: 639> 4)
		branch(81451)
lbl(81429)	move(y(0) x(0))
		putConstant(negated x(1))
		genFastCall(<P: 639> 4)
		branch(81451)
lbl(81440)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(86)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(81451)	move(y(1) x(0))
		putConstant(doesNotReturn x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBI('Bool.not' [x(2)]#[x(1)] 81466)
		deAllocateL4
		return
lbl(81466)	inlineDot(x(0) doesNotReturn x(0) cache)
		testBI('Bool.is' [x(0)]#[x(1)] 81478)
		deAllocateL4
		return
lbl(81478)	move(y(0) x(0))
		putConstant(doesNotReturn x(1))
		deAllocateL4
		genFastCall(<P: 639> 5)
		endDefinition(81049)
lbl(81490)	move(y(185) x(0))
		genFastCall(<P: 175> 4)
lbl(81496)	definition(x(2) 81549 pid('' 2 pos('./compiler/Builtins.oz' 107 3) nil 2) <P: 641> [y(185)])
		putList(x(0))
		setPredicateRef(<Q: 642>)
		setConstant(nil)
lbl(81508)	definitionCopy(x(0) 81544 pid('/body' 0 pos('./compiler/Builtins.oz' 107 3) [once] 1) unit [g(0) x(1)])
lbl(81514)	definition(x(0) 81535 pid('GetBuiltinInfo' 2 pos('./compiler/Builtins.oz' 111 6) nil 5) <Q: 642> [g(0)])
		move(g(0) x(2))
		putConstant(noInformation x(3))
		callBI('Value.condSelect' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(81514)
lbl(81535)	getRecord('export' [getInfo] g(1))
		unifyValue(x(0))
		return
		endDefinition(81508)
lbl(81544)	tailCall(x(0) 0)
		endDefinition(81496)
lbl(81549)	putConstant('procedure/2' x(4))
		putRecord('export' [getInfo] x(1))
		setValue(x(4))
		putConstant('import' x(0))
		createVariableMove(y(185) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant(false y(186))
		putConstant(true y(187))
		putConstant(unit x(4))
lbl(81576)	definition(x(2) 126418 pid('' 2 pos('./compiler/StaticAnalysis.oz' 37 0) nil 4) <P: 643> [y(134) y(161) y(205) y(129) y(206) y(100) y(89) y(211) y(1) y(213) y(216) y(210) y(202) y(170) y(174) y(142) y(215) y(189) y(157) y(163) y(176) y(38) y(42) y(30) y(50) y(173) y(131) y(64) y(57) y(107) y(26) y(28) y(40) y(86) y(180) y(35) y(127) y(133) y(138) y(179) y(90) y(27) y(7) y(214) y(108) y(212) y(145) y(193) y(194) y(186) y(187) y(165) y(166) y(190) y(99) y(2) y(128) y(175) y(132) y(183) x(4) y(219) y(220) y(221) y(222) y(218) y(47)])
		putList(x(2))
		setPredicateRef(<Q: 644>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 645>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 646>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 647>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 648>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 649>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 650>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 651>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 652>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAVariableOccurrence>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAValueNode>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAConstruction>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAToken>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 653>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 654>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 655>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 656>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 657>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 658>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 659>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 660>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 661>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 662>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 663>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 664>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 665>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 666>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 667>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 668>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 669>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 670>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 671>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 672>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 673>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 674>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 675>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 676>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 677>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 692>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 693>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 694>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 695>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 696>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 697>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 698>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 699>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 700>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 701>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 702>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 703>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 704>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 705>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 706>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 707>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 708>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 709>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 710>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 711>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 712>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 713>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 722>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 723>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 724>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 725>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 726>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 727>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 728>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 729>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 730>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaDo>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaLookahead>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 731>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 732>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 733>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 734>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 735>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 736>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 737>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 738>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 740>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 742>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 743>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstruction>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 744>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 745>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 746>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 747>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 748>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 749>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 750>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 751>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 752>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 753>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 754>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 755>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 756>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 757>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 758>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 759>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 760>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 761>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 762>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 763>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 764>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 765>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 766>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 767>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 768>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AssertTypes>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoDetType>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoRecDetType>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoKindedType>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 769>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 770>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 771>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 772>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 773>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 774>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 775>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 776>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 777>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 778>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 779>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 780>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 781>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 782>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 783>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 784>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 785>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 786>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 787>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 788>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 789>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 790>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 791>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 792>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 793>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 794>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 795>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 796>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 797>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 798>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 799>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 800>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 801>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AssertArity>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 802>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 803>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 804>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 805>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 806>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 807>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 808>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 809>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 810>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 811>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 812>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 813>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 814>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 815>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 816>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 817>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 818>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 819>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 820>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 821>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 822>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 823>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 824>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 825>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 826>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 827>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 828>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 829>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 830>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 831>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 832>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 833>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 834>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 835>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 836>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 837>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 838>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 839>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 840>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 841>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritProperties>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritAttributes>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritMethods>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 842>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 843>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 844>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 845>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 846>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 847>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 848>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 849>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 850>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 851>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 852>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 853>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 854>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 855>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 856>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 857>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 858>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 859>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 860>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 861>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 862>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 863>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 864>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 865>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 866>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 867>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 868>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 869>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 870>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 871>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 872>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 873>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 874>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 875>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 876>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ValToSubst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TypeToSubst>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RecordToSubst>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 877>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 878>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 879>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 880>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 881>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 882>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 883>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 884>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 885>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 886>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 887>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 888>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 889>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 890>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 891>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 892>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 893>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 894>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 895>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 896>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UpdateValue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnifyDeref>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 897>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 898>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 899>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 900>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 901>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 902>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 903>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 904>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 905>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 906>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 907>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 908>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 909>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 910>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 911>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 912>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 913>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 914>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 915>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 916>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 917>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 918>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 919>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 920>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 921>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 922>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 923>)
		setValue(x(2))
lbl(83394)	definitionCopy(x(3) 126413 pid('/body' 0 pos('./compiler/StaticAnalysis.oz' 37 0) [once] 82) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) g(51) g(52) g(53) g(54) g(55) g(56) g(57) g(58) g(59) g(60) g(61) g(62) g(63) g(64) g(65) g(66) x(1)])
		allocateL(36)
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
		inlineDot(x(0) 'FD' x(2) cache)
		inlineDot(x(0) 'FS' x(3) cache)
		inlineDot(x(0) 'System' x(4) cache)
		inlineDot(x(0) 'Type' x(5) cache)
		inlineDot(x(0) 'Core' x(6) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'RunTime' x(8) cache)
lbl(83453)	definition(x(9) 83504 pid('Add' 3 pos('./compiler/POTypes.oz' 33 3) nil 3) <Q: 644> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 83483 83491)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(83483)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(83491)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83453)
lbl(83504)	definition(x(9) 83581 pid('GetNames' 2 pos('./compiler/POTypes.oz' 39 3) nil 5) <Q: 645> nil)
lbl(83510)	definition(x(4) 83567 pid('' 3 pos('./compiler/POTypes.oz' 41 7) nil 5) unit nil)
		shallowGuard(83554)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(83526)	shallowThen
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 644> 6)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 644> 7)
lbl(83554)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(41)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83510)
lbl(83567)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(83504)
lbl(83581)	definition(x(9) 84697 pid('PartialOrder' 3 pos('./compiler/POTypes.oz' 45 3) nil 5) <Q: 646> [g(1) g(2) x(2) g(3) x(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 645> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
lbl(83611)	definition(x(1) 83645 pid('' 2 pos('./compiler/POTypes.oz' 49 23) nil 4) unit nil)
		shallowGuard(83632)
		getRecord(def 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(83627)	shallowThen
		unify(x(1) x(2))
		return
lbl(83632)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83611)
lbl(83645)	move(y(1) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(83665)	definition(x(0) 83826 pid('IdxMapping' 1 pos('./compiler/POTypes.oz' 53 6) nil 3) unit [g(0) y(3) g(1) g(2) y(4) y(0)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2i x(0))
		genFastCall(<P: 110> 6)
lbl(83687)	definition(x(1) 83721 pid('' 1 pos('./compiler/POTypes.oz' 58 3) nil 4) unit [g(3) g(4)])
		move(g(0) x(1))
		inlineDot(x(1) int x(2) cache)
		putRecord('#' 2 x(3))
		setConstant(1)
		setValue(g(1))
		move(x(0) x(1))
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(83687)
lbl(83721)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83727)	definition(x(1) 83784 pid('' 1 pos('./compiler/POTypes.oz' 64 3) nil 6) unit [g(3) y(0)])
		shallowGuard(83771)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83743)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) less x(3) cache)
		move(g(1) x(4))
		callBI('Record.\'.\'' [x(4) x(2)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(1)]#[x(2)])
		move(x(5) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
lbl(83771)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83727)
lbl(83784)	move(g(5) x(0))
		genFastCall(<P: 34> 4)
		move(g(3) x(0))
		inlineDot(x(0) distinct x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(3) x(0))
		inlineDot(x(0) distribute x(2) cache)
		move(y(0) x(1))
		putConstant(naive x(0))
		deAllocateL1
		tailCall(x(2) 2)
		endDefinition(83665)
lbl(83826)	createVariable(y(5))
lbl(83828)	definition(x(1) 84195 pid('BitMapping' 1 pos('./compiler/POTypes.oz' 76 6) nil 3) unit [g(0) y(6) g(1) g(3) y(4) g(4) y(5) y(3) y(0) g(5) g(6)])
		allocateL2
		move(x(0) y(0))
		move(g(1) x(1))
		putConstant(n2s x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 110> 6)
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2b x(0))
		genFastCall(<P: 110> 6)
lbl(83862)	definition(x(1) 83883 pid('' 1 pos('./compiler/POTypes.oz' 84 3) nil 4) unit [g(3) g(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(83862)
lbl(83883)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83889)	definition(x(1) 83976 pid('' 1 pos('./compiler/POTypes.oz' 90 3) nil 6) unit [g(5) g(4) y(1) g(6)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) var x(2) cache)
		inlineDot(x(2) upperBound x(2) cache)
		putRecord('#' 2 x(4))
		setConstant(1)
		setValue(g(1))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(g(2) x(0))
		move(y(0) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		move(g(0) x(2))
		inlineDot(x(2) include x(3) cache)
		move(g(3) x(4))
		callBI('Record.\'.\'' [x(4) x(1)]#[x(5)])
		move(x(5) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(83889)
lbl(83976)	move(g(7) x(0))
		genFastCall(<P: 34> 4)
lbl(83982)	definition(x(1) 84036 pid('' 1 pos('./compiler/POTypes.oz' 99 3) nil 6) unit [g(5) y(1)])
		shallowGuard(84023)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83998)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) subset x(3) cache)
		move(g(1) x(4))
		callBI('Record.\'.\'' [x(4) x(1)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(2)]#[x(1)])
		move(x(5) x(0))
		tailCall(x(3) 2)
lbl(84023)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83982)
lbl(84036)	move(g(8) x(0))
		genFastCall(<P: 34> 4)
lbl(84042)	definition(x(1) 84186 pid('' 1 pos('./compiler/POTypes.oz' 105 3) nil 4) unit [y(1) g(5) g(9) g(10) y(0) g(4)])
		allocateL4
		move(g(0) x(1))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createChoice
lbl(84061)	lastClause
		emptyClause
lbl(84063)	move(g(1) x(0))
		inlineDot(x(0) value x(2) cache)
		inlineDot(x(2) new x(1) cache)
		inlineDot(x(0) reflect x(2) cache)
		inlineDot(x(2) lowerBound x(2) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		call(y(2) 2)
lbl(84109)	definition(x(3) 84171 pid('' 1 pos('./compiler/POTypes.oz' 111 3) nil 4) unit [g(1) y(1) g(3) g(4) y(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) isIn x(3) cache)
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		call(x(3) 3)
		testBool(y(1) 84156 84158)
		move(g(3) x(0))
		move(g(4) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(0) x(3))
		callBI('BitArray.set' [x(2) x(3)]#nil)
lbl(84156)	deAllocateL2
		return
lbl(84158)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(112)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84109)
lbl(84171)	move(g(5) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 100> 9)
		endDefinition(84042)
lbl(84186)	move(g(7) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(83828)
lbl(84195)	move(g(7) x(2))
		inlineDot(x(2) base x(3) cache)
		inlineDot(x(3) one x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(6) x(1))
		call(x(3) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		move(y(5) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		putConstant(i2n x(2))
		callBI('Tuple.make' [x(2) x(1)]#[x(3)])
lbl(84243)	definition(x(1) 84267 pid('' 1 pos('./compiler/POTypes.oz' 125 7) nil 5) unit [y(5) x(3)])
		move(g(0) x(1))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(2)]#[x(4)])
		unify(x(4) x(0))
		return
		endDefinition(84243)
lbl(84267)	moveMoveXYYX(x(3) y(5) y(3) x(0))
		genFastCall(<P: 34> 4)
		move(g(7) x(0))
		inlineDot(x(0) base x(2) cache)
		inlineDot(x(2) one x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(2) cache)
lbl(84308)	definition(x(3) 84422 pid('Constrain' 3 pos('./compiler/POTypes.oz' 133 6) nil 5) unit [g(9) x(2) g(10) g(11)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testBI('Atom.is' [x(0)]#[x(3)] 84335)
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(0)]#[x(4)])
		callBI('BitArray.or' [x(2) x(4)]#nil)
		branch(84377)
lbl(84335)	definition(x(3) 84371 pid('' 1 pos('./compiler/POTypes.oz' 138 6) nil 3) unit [g(1) g(0) y(1) g(2)])
		move(g(0) x(1))
		testBI('Value.hasFeature' [x(1) x(0)]#[x(2)] 84358)
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		return
lbl(84358)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(constrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84335)
lbl(84371)	move(x(3) x(1))
		genFastCall(<P: 34> 4)
lbl(84377)	definition(x(1) 84413 pid('' 1 pos('./compiler/POTypes.oz' 146 3) nil 3) unit [g(1) g(3) y(1) g(2)])
		move(g(0) x(1))
		testBI('Value.hasFeature' [x(1) x(0)]#[x(2)] 84400)
		callBI('Record.\'.\'' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.nimpl' [x(0) x(2)]#nil)
		return
lbl(84400)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(contrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84377)
lbl(84413)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(84308)
lbl(84422)	definition(x(0) 84460 pid('Encode' 3 pos('./compiler/POTypes.oz' 154 6) nil 6) unit [g(10) g(3) y(4) x(3)])
		testLiteral(x(0) nil 84443)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalType)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84443)	putConstant(1 x(3))
		move(g(2) x(4))
		callBI('BitArray.new' [x(3) x(4)]#[x(5)])
		unify(x(5) x(2))
		tailCall(g(3) 3)
		endDefinition(84422)
lbl(84460)	createVariable(x(4))
lbl(84462)	definition(x(1) 84521 pid('DecodeAux' 2 pos('./compiler/POTypes.oz' 167 2) nil 6) unit [g(12) y(5) g(11) x(2) x(4)])
		callBI('BitArray.toList' [x(0)]#[x(2)])
		testLiteral(x(2) nil 84479)
lbl(84475)	getLiteral(nil x(1))
		return
lbl(84479)	testList(x(2) 84506)
lbl(84482)	getVariable(x(2))
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(2)]#[x(4)])
		move(g(3) x(2))
		callBI('Record.\'.\'' [x(2) x(4)]#[x(5)])
		callBI('BitArray.nimpl' [x(0) x(5)]#nil)
		getListValVar(x(1) x(4) x(1))
		tailCall(g(4) 2)
lbl(84506)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84462)
lbl(84521)	unify(x(1) x(4))
lbl(84524)	definition(x(1) 84552 pid('Decode' 2 pos('./compiler/POTypes.oz' 178 2) nil 3) unit [g(13) x(4)])
		testBI('Value.isFree' [x(0)]#[x(2)] 84541)
		getList(x(1))
		unifyLiteral(value)
		unifyLiteral(nil)
		return
lbl(84541)	callBI('BitArray.clone' [x(0)]#[x(2)])
		move(x(2) x(0))
		tailCall(g(1) 2)
		endDefinition(84524)
lbl(84552)	definition(x(4) 84645 pid('' 1 pos('./compiler/POTypes.oz' 193 7) nil 3) unit [y(3) g(10) x(2) x(3)])
		shallowGuard(84632)
		getRecord(def 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(84568)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(0) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 84602 84621)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalPartialOrderSpecification)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84602)	move(g(2) x(0))
		move(y(0) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(g(3) 3)
lbl(84621)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84632)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84552)
lbl(84645)	moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		getRecord(po [decl decode encode] y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(0))
lbl(84669)	definition(x(1) 84690 pid('' 1 pos('./compiler/POTypes.oz' 206 12) nil 4) unit [g(3) y(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(84669)
lbl(84690)	unify(x(1) x(0))
		deAllocateL7
		return
		endDefinition(83581)
lbl(84697)	putRecord('#' 2 x(9))
		setConstant('thread')
		setConstant(value)
		putRecord('#' 2 x(11))
		setConstant(space)
		setConstant(value)
		putRecord('#' 2 x(13))
		setConstant(chunk)
		setConstant(value)
		putRecord('#' 2 x(15))
		setConstant(cell)
		setConstant(value)
		putRecord('#' 2 x(17))
		setConstant(foreignPointer)
		setConstant(value)
		putRecord('#' 2 x(19))
		setConstant(fset)
		setConstant(value)
		putRecord('#' 2 x(21))
		setConstant(recordC)
		setConstant(value)
		putRecord('#' 2 x(23))
		setConstant(record)
		setConstant(recordC)
		putRecord('#' 2 x(25))
		setConstant(number)
		setConstant(value)
		putRecord('#' 2 x(27))
		setConstant(int)
		setConstant(number)
		putRecord('#' 2 x(29))
		setConstant(float)
		setConstant(number)
		putRecord('#' 2 x(31))
		setConstant(char)
		setConstant(fdIntC)
		putRecord('#' 2 x(33))
		setConstant(fdIntC)
		setConstant(int)
		putRecord('#' 2 x(35))
		setConstant(tuple)
		setConstant(record)
		putRecord('#' 2 x(37))
		setConstant(literal)
		setConstant(tuple)
		putRecord('#' 2 x(39))
		setConstant(atom)
		setConstant(literal)
		putRecord('#' 2 x(41))
		setConstant(name)
		setConstant(literal)
		putRecord('#' 2 x(43))
		setConstant(nilAtom)
		setConstant(atom)
		putRecord('#' 2 x(45))
		setConstant(cons)
		setConstant(tuple)
		putRecord('#' 2 x(47))
		setConstant(bool)
		setConstant(name)
		putRecord('#' 2 x(49))
		setConstant('unit')
		setConstant(name)
		putRecord('#' 2 x(51))
		setConstant(bitArray)
		setConstant(chunk)
		putRecord('#' 2 x(53))
		setConstant(array)
		setConstant(chunk)
		putRecord('#' 2 x(55))
		setConstant(dictionary)
		setConstant(chunk)
		putRecord('#' 2 x(57))
		setConstant('class')
		setConstant(chunk)
		putRecord('#' 2 x(59))
		setConstant(object)
		setConstant(chunk)
		putRecord('#' 2 x(61))
		setConstant('lock')
		setConstant(chunk)
		putRecord('#' 2 x(63))
		setConstant(port)
		setConstant(chunk)
		putRecord('#' 2 x(65))
		setConstant('procedure/0')
		setConstant(value)
		putRecord('#' 2 x(67))
		setConstant('procedure/1')
		setConstant(value)
		putRecord('#' 2 x(69))
		setConstant('procedure/2')
		setConstant(value)
		putRecord('#' 2 x(71))
		setConstant('procedure/3')
		setConstant(value)
		putRecord('#' 2 x(73))
		setConstant('procedure/4')
		setConstant(value)
		putRecord('#' 2 x(75))
		setConstant('procedure/5')
		setConstant(value)
		putRecord('#' 2 x(77))
		setConstant('procedure/6')
		setConstant(value)
		putRecord('#' 2 x(79))
		setConstant('procedure/>6')
		setConstant(value)
		putRecord('#' 2 x(81))
		setConstant(pair)
		setConstant(tuple)
		putList(x(80))
		setValue(x(81))
		setConstant(nil)
		putList(x(78))
		setValue(x(79))
		setValue(x(80))
		putList(x(76))
		setValue(x(77))
		setValue(x(78))
		putList(x(74))
		setValue(x(75))
		setValue(x(76))
		putList(x(72))
		setValue(x(73))
		setValue(x(74))
		putList(x(70))
		setValue(x(71))
		setValue(x(72))
		putList(x(68))
		setValue(x(69))
		setValue(x(70))
		putList(x(66))
		setValue(x(67))
		setValue(x(68))
		putList(x(64))
		setValue(x(65))
		setValue(x(66))
		putList(x(62))
		setValue(x(63))
		setValue(x(64))
		putList(x(60))
		setValue(x(61))
		setValue(x(62))
		putList(x(58))
		setValue(x(59))
		setValue(x(60))
		putList(x(56))
		setValue(x(57))
		setValue(x(58))
		putList(x(54))
		setValue(x(55))
		setValue(x(56))
		putList(x(52))
		setValue(x(53))
		setValue(x(54))
		putList(x(50))
		setValue(x(51))
		setValue(x(52))
		putList(x(48))
		setValue(x(49))
		setValue(x(50))
		putList(x(46))
		setValue(x(47))
		setValue(x(48))
		putList(x(44))
		setValue(x(45))
		setValue(x(46))
		putList(x(42))
		setValue(x(43))
		setValue(x(44))
		putList(x(40))
		setValue(x(41))
		setValue(x(42))
		putList(x(38))
		setValue(x(39))
		setValue(x(40))
		putList(x(36))
		setValue(x(37))
		setValue(x(38))
		putList(x(34))
		setValue(x(35))
		setValue(x(36))
		putList(x(32))
		setValue(x(33))
		setValue(x(34))
		putList(x(30))
		setValue(x(31))
		setValue(x(32))
		putList(x(28))
		setValue(x(29))
		setValue(x(30))
		putList(x(26))
		setValue(x(27))
		setValue(x(28))
		putList(x(24))
		setValue(x(25))
		setValue(x(26))
		putList(x(22))
		setValue(x(23))
		setValue(x(24))
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(3))
		setValue(x(9))
		setValue(x(10))
		putList(x(12))
		setConstant(literal)
		setConstant(nil)
		putList(x(11))
		setConstant(int)
		setValue(x(12))
		putRecord(def 2 x(10))
		setConstant(feature)
		setValue(x(11))
		putList(x(16))
		setConstant(atom)
		setConstant(nil)
		putList(x(15))
		setConstant(number)
		setValue(x(16))
		putRecord(def 2 x(14))
		setConstant(comparable)
		setValue(x(15))
		putList(x(20))
		setConstant(chunk)
		setConstant(nil)
		putList(x(19))
		setConstant(record)
		setValue(x(20))
		putRecord(def 2 x(18))
		setConstant(recordOrChunk)
		setValue(x(19))
		putList(x(24))
		setConstant(chunk)
		setConstant(nil)
		putList(x(23))
		setConstant(recordC)
		setValue(x(24))
		putRecord(def 2 x(22))
		setConstant(recordCOrChunk)
		setValue(x(23))
		putList(x(28))
		setConstant(cons)
		setConstant(nil)
		putList(x(27))
		setConstant(nilAtom)
		setValue(x(28))
		putRecord(def 2 x(26))
		setConstant(list)
		setValue(x(27))
		putList(x(32))
		setConstant(cons)
		setConstant(nil)
		putList(x(31))
		setConstant(nilAtom)
		setValue(x(32))
		putRecord(def 2 x(30))
		setConstant(string)
		setValue(x(31))
		putList(x(42))
		setConstant('procedure/>6')
		setConstant(nil)
		putList(x(41))
		setConstant('procedure/6')
		setValue(x(42))
		putList(x(40))
		setConstant('procedure/5')
		setValue(x(41))
		putList(x(39))
		setConstant('procedure/4')
		setValue(x(40))
		putList(x(38))
		setConstant('procedure/3')
		setValue(x(39))
		putList(x(37))
		setConstant('procedure/2')
		setValue(x(38))
		putList(x(36))
		setConstant('procedure/1')
		setValue(x(37))
		putList(x(35))
		setConstant('procedure/0')
		setValue(x(36))
		putRecord(def 2 x(34))
		setConstant(procedure)
		setValue(x(35))
		putList(x(46))
		setConstant(record)
		setConstant(nil)
		putList(x(45))
		setConstant(number)
		setValue(x(46))
		putRecord(def 2 x(44))
		setConstant(virtualString)
		setValue(x(45))
		putList(x(50))
		setConstant(object)
		setConstant(nil)
		putList(x(49))
		setConstant(procedure)
		setValue(x(50))
		putRecord(def 2 x(48))
		setConstant(procedureOrObject)
		setValue(x(49))
		putList(x(54))
		setConstant(object)
		setConstant(nil)
		putList(x(53))
		setConstant('procedure/1')
		setValue(x(54))
		putRecord(def 2 x(52))
		setConstant(unaryProcOrObject)
		setValue(x(53))
		putList(x(51))
		setValue(x(52))
		setConstant(nil)
		putList(x(47))
		setValue(x(48))
		setValue(x(51))
		putList(x(43))
		setValue(x(44))
		setValue(x(47))
		putList(x(33))
		setValue(x(34))
		setValue(x(43))
		putList(x(29))
		setValue(x(30))
		setValue(x(33))
		putList(x(25))
		setValue(x(26))
		setValue(x(29))
		putList(x(21))
		setValue(x(22))
		setValue(x(25))
		putList(x(17))
		setValue(x(18))
		setValue(x(21))
		putList(x(13))
		setValue(x(14))
		setValue(x(17))
		putList(x(9))
		setValue(x(10))
		setValue(x(13))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		move(x(8) y(6))
		move(x(3) x(0))
		move(x(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 646> 6)
lbl(85541)	definition(x(3) 86679 pid('OzValueToType' 2 pos('./compiler/POTypes.oz' 277 3) nil 11) <Q: 647> [y(7) y(1) g(13)])
		testBI('Value.isDet' [x(0)]#[x(2)] 86534)
		testBI('Int.is' [x(0)]#[x(2)] 85658)
		testBI('Char.is' [x(0)]#[x(2)] 85580)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(char x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85580)	allocateL2
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		testBool(y(1) 85625 85647)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85625)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(int x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85647)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(285)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(85658)	testBI('Float.is' [x(0)]#[x(2)] 85683)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(float x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85683)	testBI('Atom.is' [x(0)]#[x(2)] 85733)
		testLiteral(x(0) nil 85712)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(nilAtom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85712)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(atom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85733)	testBI('Name.is' [x(0)]#[x(2)] 85821)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) true 85767)
lbl(85745)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(bool x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85767)	testLiteral(x(0) false 85773)
		branch(85745)
lbl(85773)	testLiteral(x(0) unit 85799)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant('unit' x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85799)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(name x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85821)	testBI('Tuple.is' [x(0)]#[x(2)] 85891)
		match(x(0) ht(85870 [onRecord('|' 2 85828) onRecord('#' 2 85849)]))
lbl(85828)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cons x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85849)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(pair x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85870)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(tuple x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85891)	testBI('Record.is' [x(0)]#[x(2)] 85916)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(record x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85916)	testBI('Procedure.is' [x(0)]#[x(2)] 86119)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		testNumber(x(2) 0 85948)
lbl(85927)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85948)	testNumber(x(2) 1 85973)
lbl(85952)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/1' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85973)	testNumber(x(2) 2 85998)
lbl(85977)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85998)	testNumber(x(2) 3 86023)
lbl(86002)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86023)	testNumber(x(2) 4 86048)
lbl(86027)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86048)	testNumber(x(2) 5 86073)
lbl(86052)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86073)	testNumber(x(2) 6 86098)
lbl(86077)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86098)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86119)	testBI('Cell.is' [x(0)]#[x(2)] 86144)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cell x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86144)	testBI('Space.is' [x(0)]#[x(2)] 86169)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(space x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86169)	testBI('Thread.is' [x(0)]#[x(2)] 86194)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('thread' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86194)	testBI('Chunk.is' [x(0)]#[x(2)] 86465)
		testBI('Array.is' [x(0)]#[x(2)] 86223)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(array x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86223)	testBI('Dictionary.is' [x(0)]#[x(2)] 86248)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(dictionary x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86248)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 86286 86454)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('class' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86286)	move(y(0) x(0))
		testBI('Object.is' [x(0)]#[x(1)] 86315)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(object x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86315)	testBI('Lock.is' [x(0)]#[x(1)] 86341)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('lock' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86341)	testBI('Port.is' [x(0)]#[x(1)] 86367)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(port x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86367)	testBI('BitArray.is' [x(0)]#[x(1)] 86393)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(bitArray x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86393)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(8))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(7))
		setConstant(port)
		setValue(x(8))
		putList(x(6))
		setConstant('lock')
		setValue(x(7))
		putList(x(5))
		setConstant(object)
		setValue(x(6))
		putList(x(4))
		setConstant('class')
		setValue(x(5))
		putList(x(2))
		setConstant(dictionary)
		setValue(x(4))
		putList(x(1))
		setConstant(array)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(chunk x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86454)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(340)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86465)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(10))
		setConstant('thread')
		setConstant(nil)
		putList(x(9))
		setConstant(space)
		setValue(x(10))
		putList(x(8))
		setConstant(chunk)
		setValue(x(9))
		putList(x(7))
		setConstant(cell)
		setValue(x(8))
		putList(x(6))
		setConstant(procedure)
		setValue(x(7))
		putList(x(5))
		setConstant(record)
		setValue(x(6))
		putList(x(2))
		setConstant(float)
		setValue(x(5))
		putList(x(4))
		setConstant(int)
		setValue(x(2))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant(value x(0))
		tailCall(x(3) 3)
lbl(86534)	testBI('Value.isKinded' [x(0)]#[x(2)] 86656)
		allocateL3
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testBool(y(2) 86585 86645)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86585)	move(y(0) x(0))
		testBI('Record.isC' [x(0)]#[x(1)] 86614)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(recordC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86614)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(2))
		setConstant(recordC)
		setConstant(nil)
		putList(x(1))
		setConstant(fdIntC)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(value x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86645)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(360)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86656)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(value x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
		endDefinition(85541)
lbl(86679)	definition(x(3) 86733 pid('NormalizeCoord' 2 pos('./compiler/StaticAnalysis.oz' 108 3) nil 5) <Q: 648> nil)
		testLiteral(x(0) unit 86693)
lbl(86689)	getLiteral(unit x(1))
		return
lbl(86693)	getRecord('pos' 3 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineDot(x(0) 1 x(4) cache)
		unify(x(4) x(1))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(3))
		return
		endDefinition(86679)
lbl(86733)	definition(x(3) 86754 pid('IsMinimalType' 2 pos('./compiler/StaticAnalysis.oz' 114 3) nil 4) <Q: 649> [g(17)])
		callBI('BitArray.card' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(86733)
lbl(86754)	definition(x(0) 86777 pid('FirstOrId' 2 pos('./compiler/StaticAnalysis.oz' 120 3) nil 2) <Q: 650> nil)
		testRecord(x(0) '#' 2 86771)
lbl(86765)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(86771)	unify(x(1) x(0))
		return
		endDefinition(86754)
lbl(86777)	definition(x(3) 86814 pid('LabelToVS' 2 pos('./compiler/StaticAnalysis.oz' 124 3) nil 5) <Q: 651> [y(2)])
		testBI('Value.isDet' [x(0)]#[x(2)] 86808)
		move(g(0) x(2))
		inlineDot(x(2) valueToVirtualString x(4) cache)
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(86808)	getLiteral('_' x(1))
		return
		endDefinition(86777)
lbl(86814)	definition(x(3) 86875 pid('Bool2Token' 2 pos('./compiler/StaticAnalysis.oz' 128 3) nil 4) <Q: 652> [y(6)])
		testBool(x(0) 86843 86862)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86843)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86862)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(129)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(86814)
lbl(86875)	definition(x(3) 86894 pid('CurrentArity' 2 pos('./compiler/StaticAnalysis.oz' 142 3) nil 3) <Q: 653> [g(18)])
		testBI('Value.isFree' [x(0)]#[x(2)] 86889)
		getLiteral(nil x(1))
		return
lbl(86889)	genFastCall(<P: 114> 5)
		endDefinition(86875)
lbl(86894)	definition(x(3) 86926 pid('HasFeatureNow' 3 pos('./compiler/StaticAnalysis.oz' 150 3) nil 3) <Q: 654> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 22> 7)
		endDefinition(86894)
lbl(86926)	definition(x(3) 87021 pid('GetClassData' 2 pos('./compiler/StaticAnalysis.oz' 160 3) nil 3) <Q: 655> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87014)
lbl(86954)	testBI('Object.is' [x(0)]#[x(1)] 87014)
lbl(86958)	move(y(0) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 86970)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(86970)	putConstant(<M: ImAToken> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 86992)
lbl(86977)	inlineDot(x(0) kind x(1) cache)
		testLiteral(x(1) 'class' 86992)
lbl(86987)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(86992)	move(y(2) x(0))
		putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87009)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 655> 5)
lbl(87009)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87014)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(86926)
lbl(87021)	definition(x(3) 87124 pid('GetClassOfObjectData' 2 pos('./compiler/StaticAnalysis.oz' 188 3) nil 3) <Q: 656> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87117)
lbl(87049)	testBI('Object.is' [x(0)]#[x(1)] 87117)
lbl(87053)	move(y(0) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 87065)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87065)	putConstant(<M: ImAToken> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87095)
lbl(87072)	inlineDot(x(0) kind x(1) cache)
		testLiteral(x(1) object 87095)
lbl(87082)	move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(getClassNode x(1) 1 cache)
lbl(87095)	move(y(2) x(0))
		putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87112)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 656> 5)
lbl(87112)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87117)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(87021)
lbl(87124)	definition(x(3) 87144 pid('GetDataObject' 2 pos('./compiler/StaticAnalysis.oz' 217 3) nil 3) <Q: 657> nil)
		move(x(0) x(2))
		putConstant(true x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87124)
lbl(87144)	definition(x(1) 87164 pid('GetData' 2 pos('./compiler/StaticAnalysis.oz' 227 3) nil 3) <Q: 658> nil)
		move(x(0) x(2))
		putConstant(false x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87144)
lbl(87164)	definition(x(3) 87190 pid('GetFullData' 2 pos('./compiler/StaticAnalysis.oz' 237 3) nil 4) <Q: 659> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(true x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87164)
lbl(87190)	definition(x(3) 87216 pid('GetPrintData' 2 pos('./compiler/StaticAnalysis.oz' 241 3) nil 4) <Q: 660> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(false x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87190)
lbl(87216)	definition(x(3) 87242 pid('IsToken' 2 pos('./compiler/StaticAnalysis.oz' 248 3) nil 4) <Q: 661> nil)
		testBI('Object.is' [x(0)]#[x(2)] 87236)
		putConstant(<M: ImAToken> x(2))
		callBI('Value.hasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87236)	getLiteral(false x(1))
		return
		endDefinition(87216)
lbl(87242)	move(y(3) x(2))
		inlineDot(x(2) is x(2) cache)
lbl(87251)	definition(x(3) 87317 pid('' 2 pos('./compiler/StaticAnalysis.oz' 253 2) nil 4) <Q: 662> nil)
		testBI('Object.is' [x(0)]#[x(2)] 87311)
		allocateL2
		move(x(1) y(0))
		createVariable(y(1))
		putConstant(<M: ImAConstruction> x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 87279)
		getLiteral(true y(1))
		branch(87300)
lbl(87279)	putConstant(<M: ImAValueNode> x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 87291)
		getLiteral(true y(1))
		branch(87300)
lbl(87291)	putConstant(<M: ImAToken> x(2))
		callBI('Value.hasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
lbl(87300)	move(y(1) x(0))
		callBI('Bool.not' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(87311)	getLiteral(false x(1))
		return
		endDefinition(87251)
lbl(87317)	putConstant(object x(4))
		callBI('Record.adjoinAt' [x(2) x(4) x(3)]#[x(5)])
		putRecord(dt [any det detOrKinded] y(1))
		setVariable(x(3))
		setVariable(y(3))
		setVariable(y(8))
lbl(87333)	definition(x(2) 87345 pid('DetTests.any' 2 pos('./compiler/StaticAnalysis.oz' 264 16) nil 2) <Q: 663> nil)
		getLiteral(true x(1))
		return
		endDefinition(87333)
lbl(87345)	unify(x(2) x(3))
lbl(87348)	definition(x(2) 87401 pid('DetTests.det' 2 pos('./compiler/StaticAnalysis.oz' 267 9) nil 3) <Q: 664> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87394)
		testBI('Object.is' [x(0)]#[x(1)] 87389)
		putConstant(<M: ImAVariableOccurrence> x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		callBI('Bool.not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87389)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87394)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(87348)
lbl(87401)	unify(x(2) y(3))
lbl(87404)	definition(x(2) 87460 pid('DetTests.detOrKinded' 2 pos('./compiler/StaticAnalysis.oz' 274 2) nil 3) <Q: 665> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87450)
		testBI('Object.is' [x(0)]#[x(1)] 87445)
		putConstant(<M: ImAVariableOccurrence> x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		callBI('Bool.not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87445)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87450)	callBI('Value.isKinded' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(87404)
lbl(87460)	unify(x(2) y(8))
lbl(87463)	definition(x(3) 87501 pid('IsListNow' 2 pos('./compiler/StaticAnalysis.oz' 286 3) nil 3) <Q: 666> nil)
		testBI('Value.isDet' [x(0)]#[x(2)] 87495)
		testLiteral(x(0) nil 87481)
lbl(87477)	getLiteral(true x(1))
		return
lbl(87481)	testList(x(0) 87491)
lbl(87484)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 666> 5)
lbl(87491)	getLiteral(false x(1))
		return
lbl(87495)	getLiteral(unit x(1))
		return
		endDefinition(87463)
lbl(87501)	definition(x(2) 87557 pid('IsStringNow' 2 pos('./compiler/StaticAnalysis.oz' 296 3) nil 4) <Q: 667> nil)
		testBI('Value.isDet' [x(0)]#[x(2)] 87551)
		testLiteral(x(0) nil 87519)
lbl(87515)	getLiteral(true x(1))
		return
lbl(87519)	testList(x(0) 87547)
lbl(87522)	getVarVar(x(0) x(2))
		testBI('Value.isDet' [x(0)]#[x(3)] 87543)
		testBI('Char.is' [x(0)]#[x(3)] 87539)
		move(x(2) x(0))
		genFastCall(<Q: 667> 5)
lbl(87539)	getLiteral(false x(1))
		return
lbl(87543)	getLiteral(false x(1))
		return
lbl(87547)	getLiteral(false x(1))
		return
lbl(87551)	getLiteral(unit x(1))
		return
		endDefinition(87501)
lbl(87557)	definition(x(3) 87648 pid('IsVirtualStringNow' 2 pos('./compiler/StaticAnalysis.oz' 310 3) nil 3) <Q: 668> nil)
		testBI('Value.isDet' [x(0)]#[x(2)] 87642)
		allocateL3
		move(x(1) y(0))
		testBI('Atom.is' [x(0)]#[x(2)] 87580)
lbl(87575)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(87580)	testBI('Int.is' [x(0)]#[x(2)] 87586)
		branch(87575)
lbl(87586)	testBI('Float.is' [x(0)]#[x(2)] 87592)
		branch(87575)
lbl(87592)	move(x(0) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 667> 4)
		testBool(y(2) 87607 87631)
		branch(87575)
lbl(87607)	move(y(1) x(0))
		testBI('Tuple.is' [x(0)]#[x(1)] 87626)
lbl(87614)	callBI('Record.label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 87626)
lbl(87621)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(87626)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(87631)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(312)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87642)	getLiteral(unit x(1))
		return
		endDefinition(87557)
lbl(87648)	definition(x(4) 87715 pid('Maybe' 2 pos('./compiler/StaticAnalysis.oz' 328 6) nil 3) <Q: 669> nil)
lbl(87654)	definition(x(2) 87709 pid('' 2 pos('./compiler/StaticAnalysis.oz' 329 2) nil 3) unit [x(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87702)
		testBI('Object.is' [x(0)]#[x(1)] 87693)
lbl(87681)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87693)
lbl(87688)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87693)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailCall(g(0) 2)
lbl(87702)	getLiteral(true y(0))
		deAllocateL2
		return
		endDefinition(87654)
lbl(87709)	unify(x(2) x(1))
		return
		endDefinition(87648)
lbl(87715)	createVariable(y(9))
lbl(87717)	definition(x(6) 87825 pid('MaybePairOf' 4 pos('./compiler/StaticAnalysis.oz' 341 6) nil 4) <Q: 670> [y(9)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87818)
		testBI('Object.is' [x(0)]#[x(1)] 87764)
lbl(87752)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87764)
lbl(87759)	getLiteral(true y(2))
		deAllocateL5
		return
lbl(87764)	testRecord(y(3) '#' 2 87813)
lbl(87769)	getVarVar(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		testBool(y(4) 87797 87802)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) false '' true 3) 0)
lbl(87797)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87802)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87813)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87818)	getLiteral(true y(2))
		deAllocateL5
		return
		endDefinition(87717)
lbl(87825)	definition(x(7) 87933 pid('MaybeListOf' 3 pos('./compiler/StaticAnalysis.oz' 355 6) nil 3) <Q: 671> [y(9)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 87926)
		testBI('Object.is' [x(0)]#[x(1)] 87869)
lbl(87857)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 87869)
lbl(87864)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87869)	match(y(2) ht(87921 [onScalar(nil 87872) onRecord('|' 2 87877)]))
lbl(87872)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87877)	getVarVar(x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		testBool(y(3) 87905 87910)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 671> 7)
lbl(87905)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(87910)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(365)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87921)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(87926)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(87825)
lbl(87933)	definition(x(8) 87953 pid('MaybeList' 2 pos('./compiler/StaticAnalysis.oz' 370 6) nil 3) <Q: 672> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(value x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(87933)
lbl(87953)	definition(x(9) 87973 pid('MaybeString' 2 pos('./compiler/StaticAnalysis.oz' 373 6) nil 3) <Q: 673> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(char x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(87953)
lbl(87973)	createVariable(x(10))
lbl(87975)	definition(x(11) 88102 pid('MaybeVirtualString' 2 pos('./compiler/StaticAnalysis.oz' 376 6) nil 3) <Q: 674> [g(19) x(10)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 88095)
		testBI('Object.is' [x(0)]#[x(1)] 88016)
lbl(88004)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 88016)
lbl(88011)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88016)	move(y(2) x(0))
		testBI('Atom.is' [x(0)]#[x(1)] 88028)
lbl(88023)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88028)	testBI('Int.is' [x(0)]#[x(1)] 88034)
		branch(88023)
lbl(88034)	testBI('Float.is' [x(0)]#[x(1)] 88040)
		branch(88023)
lbl(88040)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 673> 4)
		testBool(y(3) 88055 88084)
		branch(88023)
lbl(88055)	move(y(2) x(0))
		testBI('Tuple.is' [x(0)]#[x(1)] 88079)
lbl(88062)	callBI('Record.label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 88079)
lbl(88069)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 165> 7)
lbl(88079)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88084)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(383)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88095)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(87975)
lbl(88102)	unify(x(11) x(10))
		putRecord(dtt [list listOf pairOf string virtualString] y(10))
		setValue(x(8))
		setValue(x(7))
		setValue(x(6))
		setValue(x(9))
		setValue(x(10))
		moveMoveXYXY(x(0) y(11) x(1) y(12))
		moveMoveXYXY(x(5) y(13) x(2) y(14))
		moveMoveXYYX(x(3) y(15) y(13) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 161> 6)
		moveMoveYXYX(y(16) x(0) y(10) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
lbl(88151)	definition(x(0) 88242 pid('DetTypeTest' 3 pos('./compiler/StaticAnalysis.oz' 407 6) nil 6) <Q: 675> [x(2) g(9)])
		callBI('Record.width' [x(0)]#[x(3)])
		testNumber(x(3) 0 88182)
		callBI('Record.label' [x(0)]#[x(3)])
		move(g(0) x(0))
		callBI('Record.\'.\'' [x(0) x(3)]#[x(4)])
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(4) 2)
lbl(88182)	match(x(0) ht(88223 [onRecord(list 1 88185) onRecord(pair 2 88199)]))
lbl(88185)	getVariable(x(0))
		move(g(0) x(3))
		inlineDot(x(3) listOf x(4) cache)
		tailCall(x(4) 3)
lbl(88199)	getVarVar(x(0) x(4))
		move(g(0) x(3))
		inlineDot(x(3) pairOf x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		tailCall(x(5) 4)
lbl(88223)	putRecord(illegalTypeDeclaration 1 x(3))
		setValue(x(0))
		putRecord(compiler 2 x(1))
		setConstant(internal)
		setValue(x(3))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(88151)
lbl(88242)	unify(x(0) y(9))
		putRecord(doCheckType 2 x(0))
		setConstant(det)
		setValue(g(21))
		putRecord(doCheckType 2 x(1))
		setConstant(det)
		setValue(g(22))
		putRecord(doCheckType 2 x(3))
		setConstant(det)
		setValue(g(23))
		putRecord(doCheckType 2 x(4))
		setConstant(det)
		setValue(g(24))
		putRecord(doCheckType 2 x(5))
		setConstant(det)
		setValue(g(25))
		putRecord(doCheckType 2 x(6))
		setConstant(det)
		setValue(g(26))
		putRecord(doCheckType 2 x(7))
		setConstant(det)
		setValue(g(27))
		putRecord(doCheckType 2 x(8))
		setConstant(det)
		setValue(g(28))
		putRecord(doCheckType 2 x(9))
		setConstant(det)
		setValue(g(29))
		putRecord(doCheckType 2 x(10))
		setConstant(rec)
		setValue(g(30))
		putRecord(doCheckType 2 x(11))
		setConstant(det)
		setValue(g(31))
		putRecord(doCheckType 2 x(12))
		setConstant(det)
		setValue(g(32))
		putRecord(doCheckType 2 x(13))
		setConstant(det)
		setValue(g(33))
		putRecord(doCheckType 2 x(14))
		setConstant(det)
		setValue(g(34))
		putRecord(doCheckType 2 x(15))
		setConstant(det)
		setValue(g(35))
		putRecord(doCheckType 2 x(16))
		setConstant(det)
		setValue(g(36))
		putRecord(doCheckType 2 x(17))
		setConstant(det)
		setValue(g(37))
		putRecord(doCheckType 2 x(18))
		setConstant(det)
		setValue(g(38))
		putRecord(doCheckType 2 x(19))
		setConstant(kind)
		setValue(g(39))
		putRecord(doCheckType 2 x(20))
		setConstant(det)
		setValue(g(40))
		putRecord(doCheckType 2 x(21))
		setConstant(rec)
		setValue(y(14))
		putRecord(doCheckType 2 x(22))
		setConstant(det)
		setValue(g(41))
		putRecord(doCheckType 2 x(23))
		setConstant(det)
		setValue(g(42))
		putRecord(doCheckType 2 x(24))
		setConstant(det)
		setValue(g(43))
		putRecord(doCheckType 2 x(25))
		setConstant(rec)
		setValue(y(15))
		putRecord(bi ['=\'Value.\'=\'' 'Array.is' 'Array.new' 'Atom.is' 'Bool.and' 'Bool.is' 'Bool.not' 'Bool.or' 'Boot.builtin' 'Cell.is' 'Cell.new' 'Char.is' 'Chunk.is' 'Chunk.new' 'Dictionary.is' 'Dictionary.new' 'Float.is' 'Int.is' 'List.is' 'Literal.is' 'Lock.is' 'Lock.new' 'Name.is' 'Name.new' 'Name.newUnique' 'Number.is' 'Object.\',\'' 'Object.\'<-\'' 'Object.\'@\'' 'Object.is' 'Object.new' 'Port.is' 'Port.new' 'Procedure.arity' 'Procedure.is' 'Record.\'.\'' 'Record.\'^\'' 'Record.is' 'Record.isC' 'Record.label' 'Record.width' 'Space.is' 'Space.new' 'String.is' 'Tuple.is' 'Unit.is' 'Value.isDet' 'VirtualString.is'] y(9))
		setConstant(doEq)
		setValue(x(0))
		setConstant(doNewArray)
		setValue(x(1))
		setConstant(doAnd)
		setValue(x(3))
		setConstant(doNot)
		setConstant(doOr)
		setConstant(doBuiltin)
		setValue(x(4))
		setConstant(doNewCell)
		setValue(x(5))
		setValue(x(6))
		setConstant(doNewChunk)
		setValue(x(7))
		setConstant(doNewDictionary)
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setConstant(doNewLock)
		setValue(x(13))
		setConstant(doNewName)
		setConstant(doNewUniqueName)
		setValue(x(14))
		setConstant(doComma)
		setConstant(doAssignAccess)
		setConstant(doAssignAccess)
		setValue(x(15))
		setConstant(doNew)
		setValue(x(16))
		setConstant(doNewPort)
		setConstant(doProcedureArity)
		setValue(x(17))
		setConstant(doDot)
		setConstant(doHat)
		setValue(x(18))
		setValue(x(19))
		setConstant(doLabel)
		setConstant(doWidth)
		setValue(x(20))
		setConstant(doNewSpace)
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
lbl(88545)	definition(x(7) 88901 pid('GetReachable' 2 pos('./compiler/StaticAnalysis.oz' 481 3) nil 2) <Q: 676> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getType y(0) 1 cache)
		testLiteral(y(2) unit 88640)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88602 88629)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88602)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88629)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(493)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88640)	createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(4) 88728 88888)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88683 88717)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88683)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88717)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88728)	createVariableMove(y(4) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(4) 88816 88877)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88771 88805)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88771)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88805)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88816)	move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88839 88866)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88839)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88866)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(532)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88877)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(515)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88888)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(501)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(88545)
lbl(88901)	definition(x(8) 88921 pid('AppendReachable' 3 pos('./compiler/StaticAnalysis.oz' 545 3) nil 4) <Q: 677> nil)
		move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(88901)
lbl(88921)	definition(x(9) 89025 pid('InstallEntry' 1 pos('./compiler/StaticAnalysis.oz' 549 3) nil 3) <Q: 678> nil)
		allocateL3
		inlineDot(x(0) var x(1) cache)
		inlineDot(x(0) last x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		sendMsg(setLastValue y(1) 1 cache)
		move(y(0) x(0))
		putConstant(data x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 88981)
		inlineDot(x(0) data x(1) cache)
		move(x(1) x(0))
		sendMsg('setValue' y(2) 1 cache)
lbl(88981)	move(y(0) x(0))
		putConstant(type x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 89010 89012)
		inlineDot(x(0) type x(0) cache)
		move(y(1) x(1))
		deAllocateL3
		tailSendMsg(setType x(1) 1 cache)
lbl(89010)	deAllocateL3
		return
lbl(89012)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(88921)
lbl(89025)	definition(x(10) 89062 pid('GetGlobalEnv' 2 pos('./compiler/StaticAnalysis.oz' 567 3) nil 4) <Q: 679> [x(8) x(7)])
		allocateL2
		move(x(1) y(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(89025)
lbl(89062)	definition(x(7) 89076 pid('InstallGlobalEnv' 1 pos('./compiler/StaticAnalysis.oz' 578 3) nil 2) <Q: 680> [x(9)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(89062)
lbl(89076)	definition(x(7) 89202 pid('ValueToErrorLine' 3 pos('./compiler/StaticAnalysis.oz' 591 3) nil 5) <Q: 681> nil)
		testLiteral(x(1) unit 89090)
		getLiteral(nil x(2))
		return
lbl(89090)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(4) 89168 89189)
		getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(pn 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(3))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(89168)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord(oz 1 x(1))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(89189)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(599)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89076)
lbl(89202)	definition(x(7) 89500 pid('IssueTypeError' 6 pos('./compiler/StaticAnalysis.oz' 609 3) nil 8) <Q: 682> [g(45)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getErrorMsg y(4) 1 cache)
		createVariableMove(y(7) x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getUnifier y(4) 2 cache)
		putRecord(hint [l m] x(1))
		setConstant('First type')
		setVariable(x(2))
		putRecord(hint [l m] x(4))
		setConstant('Second type')
		setVariable(y(10))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(0))
		setValue(x(1))
		setValue(x(3))
		putList(x(7))
		setVariable(y(13))
		setConstant(nil)
		putList(x(6))
		setVariable(y(12))
		setValue(x(7))
		putList(x(5))
		setVariable(y(11))
		setValue(x(6))
		putList(y(9))
		setValue(x(0))
		setValue(x(5))
		move(y(0) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(2) x(1) y(11) x(2))
		putConstant('First value' x(0))
		genFastCall(<Q: 681> 6)
		moveMoveYXYX(y(3) x(1) y(12) x(2))
		putConstant('Second value' x(0))
		genFastCall(<Q: 681> 6)
		testLiteral(y(7) unit 89346)
lbl(89341)	getLiteral(nil y(13))
		branch(89405)
lbl(89346)	testLiteral(y(8) unit 89352)
lbl(89350)	branch(89341)
lbl(89352)	getList(y(13))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Original assertion')
		unifyVariable(x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(oz 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyVariable(y(0))
		move(y(7) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 660> 4)
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		genFastCall(<Q: 660> 4)
lbl(89405)	move(y(9) x(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(4) 1 cache)
		testBool(y(1) 89460 89487)
		move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('type error' x(2))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(89460)	move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('static analysis warning' x(2))
		deAllocateL
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(89487)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(634)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89202)
lbl(89500)	definition(x(7) 89578 pid('UnifyTypesOf' 5 pos('./compiler/StaticAnalysis.oz' 647 3) nil 6) <Q: 683> [g(46)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getType y(0) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getType y(1) 1 cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(2)] 89565)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		genFastCall(<Q: 682> 12)
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(89565)	callBI('BitArray.and' [x(0) x(1)]#nil)
		callBI('BitArray.and' [x(1) x(0)]#nil)
		getLiteral(true y(4))
		deAllocateL7
		return
		endDefinition(89500)
lbl(89578)	definition(x(7) 89601 pid('ConstrainTypes' 3 pos('./compiler/StaticAnalysis.oz' 667 3) nil 4) <Q: 684> [g(46)])
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(3)] 89592)
		getLiteral(false x(2))
		return
lbl(89592)	callBI('BitArray.and' [x(0) x(1)]#nil)
		getLiteral(true x(2))
		return
		endDefinition(89578)
lbl(89601)	createVariable(x(7))
lbl(89603)	definition(x(0) 89719 pid('OptimizeTypeRepr' 2 pos('./compiler/StaticAnalysis.oz' 684 3) nil 4) <Q: 685> [g(47) y(7) g(20) x(7)])
		match(x(0) ht(89704 [onRecord(type 1 89612) onRecord(value 1 89645) onRecord(record 1 89690)]))
lbl(89612)	allocateL2
		getVariable(y(0))
		move(x(1) y(1))
		testList(y(0) 89633)
lbl(89621)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 89633)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(89633)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL2
		genFastCall(<P: 77> 7)
lbl(89645)	allocateL4
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) decode x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 647> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		putRecord(type 1 x(0))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 685> 5)
lbl(89690)	getVariable(x(0))
		getRecord(record 1 x(1))
		unifyVariable(x(2))
		move(g(3) x(1))
		genFastCall(<P: 161> 7)
lbl(89704)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(693)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(89603)
lbl(89719)	unify(x(0) x(7))
lbl(89722)	definition(x(7) 90016 pid('IssueUnificationFailure' 3 pos('./compiler/StaticAnalysis.oz' 699 3) nil 5) <Q: 686> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getErrorMsg y(0) 1 cache)
		createVariableMove(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getUnifier y(0) 2 cache)
		putRecord(hint [l m] y(7))
		setConstant('Offending expression in')
		setVariable(x(1))
		move(y(1) x(0))
		genFastCall(<Q: 648> 4)
		createVariable(y(8))
		testLiteral(y(5) unit 89792)
lbl(89787)	unify(y(8) y(2))
		branch(89860)
lbl(89792)	testLiteral(y(6) unit 89798)
lbl(89796)	branch(89787)
lbl(89798)	move(y(5) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 660> 4)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(3))
		setValue(y(9))
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 3 x(2))
		setValue(x(3))
		setConstant(' = ')
		setValue(x(4))
		putRecord(hint [l m] x(0))
		setConstant('Original assertion')
		setValue(x(2))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 21> 6)
lbl(89860)	createVariable(y(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 89876)
lbl(89871)	unify(y(2) y(8))
		branch(89896)
lbl(89876)	testLiteral(y(1) unit 89882)
		branch(89871)
lbl(89882)	putList(x(1))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(8) x(0) y(2) x(2))
		genFastCall(<P: 21> 6)
lbl(89896)	createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(0) 1 cache)
		testBool(y(1) 89956 90003)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 89932)
lbl(89927)	getLiteral('unification error in needed statement' y(1))
		branch(89935)
lbl(89932)	unify(y(1) y(4))
lbl(89935)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(89956)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 89979)
lbl(89974)	getLiteral('unification error in possibly unneeded statement' y(1))
		branch(89982)
lbl(89979)	unify(y(1) y(4))
lbl(89982)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(90003)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(723)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89722)
lbl(90016)	definition(x(7) 90300 pid('MakeDummyProcedure' 3 pos('./compiler/StaticAnalysis.oz' 743 3) nil 3) <Q: 687> nil)
		match(x(0) ht(90297 [onScalar(0 90025) onScalar(1 90038) onScalar(2 90051) onScalar(3 90064) onScalar(4 90077) onScalar(5 90090) onScalar(6 90103) onScalar(7 90116) onScalar(8 90129) onScalar(9 90142) onScalar(10 90155) onScalar(11 90168) onScalar(12 90181) onScalar(13 90194) onScalar(14 90207) onScalar(15 90220) onScalar(16 90233) onScalar(17 90246) onScalar(18 90259) onScalar(19 90272) onScalar(20 90285)]))
lbl(90025)	definition(x(0) 90034 pid('' 0 pos('./compiler/StaticAnalysis.oz' 745 17) nil 0) unit nil)
		return
		endDefinition(90025)
lbl(90034)	unify(x(0) x(2))
		return
lbl(90038)	definition(x(0) 90047 pid('' 1 pos('./compiler/StaticAnalysis.oz' 746 17) nil 1) unit nil)
		return
		endDefinition(90038)
lbl(90047)	unify(x(0) x(2))
		return
lbl(90051)	definition(x(0) 90060 pid('' 2 pos('./compiler/StaticAnalysis.oz' 747 17) nil 2) unit nil)
		return
		endDefinition(90051)
lbl(90060)	unify(x(0) x(2))
		return
lbl(90064)	definition(x(0) 90073 pid('' 3 pos('./compiler/StaticAnalysis.oz' 748 17) nil 3) unit nil)
		return
		endDefinition(90064)
lbl(90073)	unify(x(0) x(2))
		return
lbl(90077)	definition(x(0) 90086 pid('' 4 pos('./compiler/StaticAnalysis.oz' 749 17) nil 4) unit nil)
		return
		endDefinition(90077)
lbl(90086)	unify(x(0) x(2))
		return
lbl(90090)	definition(x(0) 90099 pid('' 5 pos('./compiler/StaticAnalysis.oz' 750 17) nil 5) unit nil)
		return
		endDefinition(90090)
lbl(90099)	unify(x(0) x(2))
		return
lbl(90103)	definition(x(0) 90112 pid('' 6 pos('./compiler/StaticAnalysis.oz' 751 17) nil 6) unit nil)
		return
		endDefinition(90103)
lbl(90112)	unify(x(0) x(2))
		return
lbl(90116)	definition(x(0) 90125 pid('' 7 pos('./compiler/StaticAnalysis.oz' 752 17) nil 7) unit nil)
		return
		endDefinition(90116)
lbl(90125)	unify(x(0) x(2))
		return
lbl(90129)	definition(x(0) 90138 pid('' 8 pos('./compiler/StaticAnalysis.oz' 753 17) nil 8) unit nil)
		return
		endDefinition(90129)
lbl(90138)	unify(x(0) x(2))
		return
lbl(90142)	definition(x(0) 90151 pid('' 9 pos('./compiler/StaticAnalysis.oz' 754 17) nil 9) unit nil)
		return
		endDefinition(90142)
lbl(90151)	unify(x(0) x(2))
		return
lbl(90155)	definition(x(0) 90164 pid('' 10 pos('./compiler/StaticAnalysis.oz' 755 17) nil 10) unit nil)
		return
		endDefinition(90155)
lbl(90164)	unify(x(0) x(2))
		return
lbl(90168)	definition(x(0) 90177 pid('' 11 pos('./compiler/StaticAnalysis.oz' 756 17) nil 11) unit nil)
		return
		endDefinition(90168)
lbl(90177)	unify(x(0) x(2))
		return
lbl(90181)	definition(x(0) 90190 pid('' 12 pos('./compiler/StaticAnalysis.oz' 757 17) nil 12) unit nil)
		return
		endDefinition(90181)
lbl(90190)	unify(x(0) x(2))
		return
lbl(90194)	definition(x(0) 90203 pid('' 13 pos('./compiler/StaticAnalysis.oz' 758 17) nil 13) unit nil)
		return
		endDefinition(90194)
lbl(90203)	unify(x(0) x(2))
		return
lbl(90207)	definition(x(0) 90216 pid('' 14 pos('./compiler/StaticAnalysis.oz' 759 17) nil 14) unit nil)
		return
		endDefinition(90207)
lbl(90216)	unify(x(0) x(2))
		return
lbl(90220)	definition(x(0) 90229 pid('' 15 pos('./compiler/StaticAnalysis.oz' 760 17) nil 15) unit nil)
		return
		endDefinition(90220)
lbl(90229)	unify(x(0) x(2))
		return
lbl(90233)	definition(x(0) 90242 pid('' 16 pos('./compiler/StaticAnalysis.oz' 761 17) nil 16) unit nil)
		return
		endDefinition(90233)
lbl(90242)	unify(x(0) x(2))
		return
lbl(90246)	definition(x(0) 90255 pid('' 17 pos('./compiler/StaticAnalysis.oz' 762 17) nil 17) unit nil)
		return
		endDefinition(90246)
lbl(90255)	unify(x(0) x(2))
		return
lbl(90259)	definition(x(0) 90268 pid('' 18 pos('./compiler/StaticAnalysis.oz' 763 17) nil 18) unit nil)
		return
		endDefinition(90259)
lbl(90268)	unify(x(0) x(2))
		return
lbl(90272)	definition(x(0) 90281 pid('' 19 pos('./compiler/StaticAnalysis.oz' 764 17) nil 19) unit nil)
		return
		endDefinition(90272)
lbl(90281)	unify(x(0) x(2))
		return
lbl(90285)	definition(x(0) 90294 pid('' 20 pos('./compiler/StaticAnalysis.oz' 765 17) nil 20) unit nil)
		return
		endDefinition(90285)
lbl(90294)	unify(x(0) x(2))
lbl(90297)	return
		endDefinition(90016)
lbl(90300)	definition(x(7) 90362 pid('MakeDummyObject' 2 pos('./compiler/StaticAnalysis.oz' 771 3) nil 8) <Q: 688> [g(48) g(49)])
		allocateL3
		putList(x(7))
		setValue(g(1))
		setConstant(nil)
		move(x(1) y(0))
		move(x(0) x(5))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		createVariableMove(y(1) x(6))
		genFastCall(<P: 229> 14)
		move(y(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		move(x(1) y(2))
		sendMsg(noop y(2) 0 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90300)
lbl(90362)	definition(x(7) 90394 pid('MakeDummyClass' 2 pos('./compiler/StaticAnalysis.oz' 775 3) nil 7) <Q: 689> [g(48)])
		move(x(0) x(5))
		move(x(1) x(6))
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		genFastCall(<P: 229> 15)
		endDefinition(90362)
lbl(90394)	definition(x(7) 90520 pid('ListToVS' 5 pos('./compiler/StaticAnalysis.oz' 782 3) nil 7) <Q: 690> nil)
		testLiteral(x(0) nil 90413)
lbl(90404)	getRecord('#' 2 x(4))
		unifyValue(x(1))
		unifyValue(x(3))
		return
lbl(90413)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testList(y(0) 90449)
lbl(90430)	getVarVar(x(5) x(6))
		testLiteral(x(6) nil 90449)
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValue(x(5))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(90449)	testList(y(0) 90505)
lbl(90452)	getVarVar(x(0) x(1))
		shallowGuard(90505)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(90463)	shallowThen
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValVar(x(0) x(3))
lbl(90473)	definition(x(4) 90492 pid('' 3 pos('./compiler/StaticAnalysis.oz' 791 3) nil 3) unit [y(2)])
		getRecord('#' 3 x(2))
		unifyValue(g(0))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(90473)
lbl(90492)	move(x(1) x(0))
		move(x(4) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 32> 9)
lbl(90505)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(793)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(90394)
lbl(90520)	definition(x(7) 90543 pid('SetToVS' 2 pos('./compiler/StaticAnalysis.oz' 796 3) nil 5) <Q: 691> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(', ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90520)
lbl(90543)	definition(x(7) 90566 pid('ProdToVS' 2 pos('./compiler/StaticAnalysis.oz' 800 3) nil 5) <Q: 692> nil)
		move(x(1) x(4))
		putConstant('' x(1))
		putConstant(' x ' x(2))
		putConstant('' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90543)
lbl(90566)	definition(x(7) 90589 pid('ApplToVS' 2 pos('./compiler/StaticAnalysis.oz' 804 3) nil 5) <Q: 693> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(' ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90566)
lbl(90589)	definition(x(7) 90635 pid('FormatArity' 2 pos('./compiler/StaticAnalysis.oz' 808 3) nil 5) <Q: 694> nil)
		callBI('Record.arity' [x(0)]#[x(3)])
lbl(90598)	definition(x(4) 90621 pid('' 2 pos('./compiler/StaticAnalysis.oz' 810 7) nil 3) unit nil)
		testBI('Literal.is' [x(0)]#[x(2)] 90615)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
lbl(90615)	unify(x(1) x(0))
		return
		endDefinition(90598)
lbl(90621)	move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90589)
lbl(90635)	definition(x(7) 90678 pid('Ozify' 2 pos('./compiler/StaticAnalysis.oz' 813 3) nil 4) <Q: 695> nil)
lbl(90641)	definition(x(3) 90667 pid('' 2 pos('./compiler/StaticAnalysis.oz' 815 7) nil 4) unit nil)
		move(x(0) x(2))
		testBI('VirtualString.is' [x(2)]#[x(3)] 90658)
		unify(x(1) x(0))
		return
lbl(90658)	getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(90641)
lbl(90667)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90635)
lbl(90678)	definition(x(7) 90728 pid('TypeToVS' 2 pos('./compiler/StaticAnalysis.oz' 818 3) nil 5) <Q: 696> [y(7)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) decode x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		putConstant('' x(1))
		putConstant(' ++ ' x(2))
		putConstant('' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 690> 10)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90678)
lbl(90728)	definition(x(7) 90825 pid('AllUpToAux' 5 pos('./compiler/StaticAnalysis.oz' 833 6) nil 5) <Q: 697> nil)
		match(x(0) ht(90810 [onScalar(nil 90737) onRecord('|' 2 90744)]))
lbl(90737)	unify(x(3) x(2))
		getLiteral(true x(4))
		return
lbl(90744)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 90791 90799)
		move(y(3) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		deAllocateL7
		genFastCall(<Q: 697> 11)
lbl(90791)	unify(y(4) y(0))
		getLiteral(false y(5))
		deAllocateL7
		return
lbl(90799)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(839)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(90810)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(842)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90728)
lbl(90825)	definition(x(7) 90845 pid('AllUpTo' 4 pos('./compiler/StaticAnalysis.oz' 845 6) nil 5) <Q: 698> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 697> 11)
		endDefinition(90825)
lbl(90845)	definition(x(7) 90939 pid('SomeUpToNAux' 5 pos('./compiler/StaticAnalysis.oz' 856 6) nil 5) <Q: 699> nil)
		match(x(0) ht(90924 [onScalar(nil 90854) onRecord('|' 2 90861)]))
lbl(90854)	unify(x(3) x(2))
		getLiteral(false x(4))
		return
lbl(90861)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariableMove(y(5) x(1))
		call(y(1) 2)
		testBool(y(5) 90893 90913)
		unify(y(3) y(2))
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(90893)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<Q: 699> 11)
lbl(90913)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(862)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(90924)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(865)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90845)
lbl(90939)	definition(x(7) 90959 pid('SomeUpToN' 4 pos('./compiler/StaticAnalysis.oz' 868 6) nil 5) <Q: 700> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 699> 11)
		endDefinition(90939)
lbl(90959)	definition(x(7) 91027 pid('AllDistinct' 2 pos('./compiler/StaticAnalysis.oz' 873 3) nil 3) <Q: 701> nil)
		testLiteral(x(0) nil 90973)
lbl(90969)	getLiteral(true x(1))
		return
lbl(90973)	testList(x(0) 91012)
lbl(90976)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 91007)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 701> 5)
lbl(91007)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(91012)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(877)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90959)
lbl(91027)	definition(x(7) 91078 pid('Add' 3 pos('./compiler/StaticAnalysis.oz' 880 3) nil 3) <Q: 702> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 91057 91065)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(91057)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(91065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(881)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91027)
lbl(91078)	definition(x(7) 91169 pid('Union' 3 pos('./compiler/StaticAnalysis.oz' 885 3) nil 3) <Q: 703> nil)
		testLiteral(x(0) nil 91092)
lbl(91088)	unify(x(2) x(1))
		return
lbl(91092)	testList(x(0) 91154)
lbl(91095)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 91129 91143)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91129)	getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91143)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(888)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91154)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(892)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91078)
lbl(91169)	definition(x(8) 91213 pid('UnionAll' 2 pos('./compiler/StaticAnalysis.oz' 895 3) nil 4) <Q: 704> [x(7)])
		testLiteral(x(0) nil 91183)
lbl(91179)	getLiteral(nil x(1))
		return
lbl(91183)	testList(x(0) 91198)
lbl(91186)	getVarVar(x(2) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<P: 32> 9)
lbl(91198)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(898)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91169)
lbl(91213)	definition(x(7) 91305 pid('PLDotEQ' 3 pos('./compiler/StaticAnalysis.oz' 904 3) nil 5) <Q: 705> [y(2)])
		match(x(1) ht(91290 [onScalar(nil 91222) onRecord('|' 2 91226)]))
lbl(91222)	getLiteral(unit x(2))
		return
lbl(91226)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(g(0) x(3))
		inlineDot(x(3) eq x(4) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		call(x(4) 3)
		testBool(y(4) 91267 91279)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(91267)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 705> 7)
lbl(91279)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(910)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91290)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(917)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91213)
lbl(91305)	definition(x(7) 91410 pid('ApproxInheritance' 3 pos('./compiler/StaticAnalysis.oz' 932 3) nil 5) <Q: 706> nil)
		allocateL3
lbl(91312)	definition(x(4) 91378 pid('' 3 pos('./compiler/StaticAnalysis.oz' 935 1) nil 6) unit nil)
		callBI('Record.arity' [x(1)]#[x(4)])
lbl(91321)	definition(x(5) 91361 pid('' 3 pos('./compiler/StaticAnalysis.oz' 937 5) nil 6) unit [x(1)])
		testBI('Value.hasFeature' [x(0) x(1)]#[x(3)] 91346)
		putRecord('#' 2 x(3))
		setConstant(nil)
		setConstant(unit)
		callBI('Record.adjoinAt' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
lbl(91346)	move(g(0) x(3))
		callBI('Record.\'.\'' [x(3) x(1)]#[x(4)])
		callBI('Record.adjoinAt' [x(0) x(1) x(4)]#[x(5)])
		unify(x(5) x(2))
		return
		endDefinition(91321)
lbl(91361)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(91312)
lbl(91378)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(m x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(91305)
lbl(91410)	putConstant('Name.newUnique' x(7))
		putConstant(2 x(8))
		callBI('Boot.builtin' [x(7) x(8)]#[x(9)])
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord errorMsg needed savedToCopy 'self' toCopy top unifierLeft unifierRight] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(true)
		setConstant(nil)
		setConstant(nil)
		setConstant(unit)
		setConstant(true)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [rep switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(91455)	definition(x(8) 91558 pid('Control,init/fast' 2 pos('./compiler/StaticAnalysis.oz' 972 6) nil 4) <Q: 707> nil)
		getSelf(x(2))
		inlineDot(x(2) rep x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) switches x(2) cache)
		unify(x(2) x(1))
		putConstant(nil x(0))
		inlineAssign('self' x(0) cache)
		putConstant(unit x(0))
		inlineAssign(coord x(0) cache)
		putConstant(true x(0))
		inlineAssign(top x(0) cache)
		putConstant(true x(0))
		inlineAssign(needed x(0) cache)
		putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		putConstant(nil x(0))
		inlineAssign(savedToCopy x(0) cache)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(91455)
lbl(91558)	definition(x(9) 91593 pid('Control,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 972 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 707> 5)
		endDefinition(91558)
lbl(91593)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(91603)	definition(x(8) 91628 pid('Control,pushSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 986 6) nil 3) <Q: 708> nil)
		inlineAt('self' x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign('self' x(2) cache)
		return
		endDefinition(91603)
lbl(91628)	definition(x(9) 91654 pid('Control,pushSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 986 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 708> 3)
		endDefinition(91628)
lbl(91654)	putRecord('#' [1 2 fast] x(11))
		setConstant(pushSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91664)	definition(x(8) 91701 pid('Control,popSelf/fast' 0 pos('./compiler/StaticAnalysis.oz' 989 6) nil 1) <Q: 709> [g(9)])
		inlineAt('self' x(0) cache)
		testList(x(0) 91688)
lbl(91678)	getVoid(1)
		getVariable(x(0))
		inlineAssign('self' x(0) cache)
		return
lbl(91688)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(popEmptyStack)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91664)
lbl(91701)	definition(x(9) 91715 pid('Control,popSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 989 6) nil 1) unit nil)
		getLiteral(popSelf x(0))
		genFastCall(<Q: 709> 1)
		endDefinition(91701)
lbl(91715)	putRecord('#' [1 2 fast] x(12))
		setConstant(popSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91725)	definition(x(8) 91764 pid('Control,getSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 996 6) nil 2) <Q: 710> nil)
		inlineAt('self' x(1) cache)
		match(x(1) ht(91749 [onScalar(nil 91739) onRecord('|' 2 91743)]))
lbl(91739)	getLiteral(unit x(0))
		return
lbl(91743)	getVariable(x(1))
		unify(x(0) x(1))
		return
lbl(91749)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(999)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91725)
lbl(91764)	definition(x(9) 91790 pid('Control,getSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 996 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 710> 3)
		endDefinition(91764)
lbl(91790)	putRecord('#' [1 2 fast] x(13))
		setConstant('getSelf')
		setValue(x(9))
		setValue(x(8))
lbl(91800)	definition(x(8) 91814 pid('Control,setCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1002 6) nil 1) <Q: 711> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(91800)
lbl(91814)	definition(x(9) 91840 pid('Control,setCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1002 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 711> 3)
		endDefinition(91814)
lbl(91840)	putRecord('#' [1 2 fast] x(14))
		setConstant(setCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91850)	definition(x(8) 91867 pid('Control,getCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1005 6) nil 2) <Q: 712> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91850)
lbl(91867)	definition(x(9) 91893 pid('Control,getCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1005 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 712> 3)
		endDefinition(91867)
lbl(91893)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91903)	definition(x(8) 91920 pid('Control,getTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1009 6) nil 2) <Q: 713> nil)
		inlineAt(top x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91903)
lbl(91920)	definition(x(9) 91946 pid('Control,getTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1009 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 713> 3)
		endDefinition(91920)
lbl(91946)	putRecord('#' [1 2 fast] x(16))
		setConstant(getTop)
		setValue(x(9))
		setValue(x(8))
lbl(91956)	definition(x(8) 91970 pid('Control,setTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1012 6) nil 1) <Q: 714> nil)
		inlineAssign(top x(0) cache)
		return
		endDefinition(91956)
lbl(91970)	definition(x(9) 91996 pid('Control,setTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1012 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 714> 3)
		endDefinition(91970)
lbl(91996)	putRecord('#' [1 2 fast] x(17))
		setConstant(setTop)
		setValue(x(9))
		setValue(x(8))
lbl(92006)	definition(x(8) 92023 pid('Control,getNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1016 6) nil 2) <Q: 715> nil)
		inlineAt(needed x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92006)
lbl(92023)	definition(x(9) 92049 pid('Control,getNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 715> 3)
		endDefinition(92023)
lbl(92049)	putRecord('#' [1 2 fast] x(18))
		setConstant(getNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92059)	definition(x(8) 92073 pid('Control,setNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1019 6) nil 1) <Q: 716> nil)
		inlineAssign(needed x(0) cache)
		return
		endDefinition(92059)
lbl(92073)	definition(x(9) 92099 pid('Control,setNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1019 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 716> 3)
		endDefinition(92073)
lbl(92099)	putRecord('#' [1 2 fast] x(19))
		setConstant(setNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92109)	definition(x(8) 92134 pid('Control,getTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 3) <Q: 717> nil)
		inlineAt(top x(2) cache)
		unify(x(2) x(0))
		inlineAt(needed x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92109)
lbl(92134)	definition(x(9) 92169 pid('Control,getTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 717> 5)
		endDefinition(92134)
lbl(92169)	putRecord('#' [1 2 fast] x(20))
		setConstant(getTopNeeded)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(10))
lbl(92181)	definition(x(8) 92203 pid('Control,setTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1027 6) nil 2) <Q: 718> [y(10)])
		allocateL1
		move(x(1) y(0))
		genCall(gci(g(0) true setTop false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setNeeded true 1) 0)
		endDefinition(92181)
lbl(92203)	definition(x(9) 92238 pid('Control,setTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1027 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 718> 5)
		endDefinition(92203)
lbl(92238)	putRecord('#' [1 2 fast] x(21))
		setConstant(setTopNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92248)	definition(x(8) 92265 pid('Control,notTopNotNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1031 6) nil 2) <Q: 719> [y(10) g(50)])
		move(g(1) x(0))
		move(g(1) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92248)
lbl(92265)	definition(x(9) 92279 pid('Control,notTopNotNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1031 6) nil 1) unit nil)
		getLiteral(notTopNotNeeded x(0))
		genFastCall(<Q: 719> 1)
		endDefinition(92265)
lbl(92279)	putRecord('#' [1 2 fast] x(22))
		setConstant(notTopNotNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92289)	definition(x(8) 92306 pid('Control,notTopButNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1034 6) nil 2) <Q: 720> [y(10) g(50) g(51)])
		move(g(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92289)
lbl(92306)	definition(x(9) 92320 pid('Control,notTopButNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1034 6) nil 1) unit nil)
		getLiteral(notTopButNeeded x(0))
		genFastCall(<Q: 720> 1)
		endDefinition(92306)
lbl(92320)	putRecord('#' [1 2 fast] x(23))
		setConstant(notTopButNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92330)	definition(x(8) 92371 pid('Control,beginVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1038 6) nil 3) <Q: 721> nil)
		inlineAt(toCopy x(0) cache)
		match(x(0) ht(92344 [onScalar(unit 92360)]))
lbl(92344)	inlineAt(savedToCopy x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedToCopy x(2) cache)
lbl(92360)	putConstant(nil x(0))
		inlineAssign(toCopy x(0) cache)
		return
		endDefinition(92330)
lbl(92371)	definition(x(9) 92397 pid('Control,beginVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1038 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 721> 3)
		endDefinition(92371)
lbl(92397)	putRecord('#' [1 2 fast] x(24))
		setConstant(beginVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92407)	definition(x(8) 92467 pid('Control,declareToplevelName/fast' 2 pos('./compiler/StaticAnalysis.oz' 1045 6) nil 5) <Q: 722> [y(0)])
		inlineAt(toCopy x(2) cache)
		testLiteral(x(2) unit 92434)
lbl(92422)	move(g(0) x(2))
		inlineDot(x(2) newNamedName x(3) cache)
		tailCall(x(3) 2)
lbl(92434)	allocateL2
		move(g(0) x(3))
		inlineDot(x(3) newCopyableName x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(4) 2)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92407)
lbl(92467)	definition(x(9) 92502 pid('Control,declareToplevelName/slow' 1 pos('./compiler/StaticAnalysis.oz' 1045 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 722> 5)
		endDefinition(92467)
lbl(92502)	putRecord('#' [1 2 fast] x(25))
		setConstant(declareToplevelName)
		setValue(x(9))
		setValue(x(8))
lbl(92512)	definition(x(8) 92572 pid('Control,declareToplevelProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 4) <Q: 723> [y(0)])
		inlineAt(toCopy x(1) cache)
		testLiteral(x(1) unit 92539)
lbl(92527)	move(g(0) x(1))
		inlineDot(x(1) newPredicateRef x(2) cache)
		tailCall(x(2) 1)
lbl(92539)	allocateL2
		move(g(0) x(2))
		inlineDot(x(2) newCopyablePredicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92512)
lbl(92572)	definition(x(9) 92598 pid('Control,declareToplevelProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 723> 3)
		endDefinition(92572)
lbl(92598)	putRecord('#' [1 2 fast] x(26))
		setConstant(declareToplevelProcedure)
		setValue(x(9))
		setValue(x(8))
lbl(92608)	definition(x(8) 92668 pid('Control,endVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 2) <Q: 724> nil)
		inlineAt(toCopy x(1) cache)
		unify(x(1) x(0))
		inlineAt(savedToCopy x(0) cache)
		match(x(0) ht(92653 [onScalar(nil 92630) onRecord('|' 2 92639)]))
lbl(92630)	putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		return
lbl(92639)	getVarVar(x(0) x(1))
		inlineAssign(toCopy x(0) cache)
		inlineAssign(savedToCopy x(1) cache)
		return
lbl(92653)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1068)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(92608)
lbl(92668)	definition(x(9) 92694 pid('Control,endVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 724> 3)
		endDefinition(92668)
lbl(92694)	putRecord('#' [1 2 fast] x(27))
		setConstant(endVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92704)	definition(x(8) 92718 pid('Control,setErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1071 6) nil 1) <Q: 725> nil)
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92704)
lbl(92718)	definition(x(9) 92744 pid('Control,setErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1071 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 725> 3)
		endDefinition(92718)
lbl(92744)	putRecord('#' [1 2 fast] x(28))
		setConstant(setErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92754)	definition(x(8) 92771 pid('Control,resetErrorMsg/fast' 0 pos('./compiler/StaticAnalysis.oz' 1074 6) nil 1) <Q: 726> nil)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92754)
lbl(92771)	definition(x(9) 92785 pid('Control,resetErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1074 6) nil 1) unit nil)
		getLiteral(resetErrorMsg x(0))
		genFastCall(<Q: 726> 1)
		endDefinition(92771)
lbl(92785)	putRecord('#' [1 2 fast] x(29))
		setConstant(resetErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92795)	definition(x(8) 92812 pid('Control,getErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1077 6) nil 2) <Q: 727> nil)
		inlineAt(errorMsg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92795)
lbl(92812)	definition(x(9) 92838 pid('Control,getErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1077 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 727> 3)
		endDefinition(92812)
lbl(92838)	putRecord('#' [1 2 fast] x(30))
		setConstant(getErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92848)	definition(x(8) 92867 pid('Control,setUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1081 6) nil 2) <Q: 728> nil)
		inlineAssign(unifierLeft x(0) cache)
		inlineAssign(unifierRight x(1) cache)
		return
		endDefinition(92848)
lbl(92867)	definition(x(9) 92902 pid('Control,setUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1081 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 728> 5)
		endDefinition(92867)
lbl(92902)	putRecord('#' [1 2 fast] x(31))
		setConstant(setUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(92912)	definition(x(8) 92937 pid('Control,resetUnifier/fast' 0 pos('./compiler/StaticAnalysis.oz' 1085 6) nil 1) <Q: 729> nil)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(92912)
lbl(92937)	definition(x(9) 92951 pid('Control,resetUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1085 6) nil 1) unit nil)
		getLiteral(resetUnifier x(0))
		genFastCall(<Q: 729> 1)
		endDefinition(92937)
lbl(92951)	putRecord('#' [1 2 fast] x(32))
		setConstant(resetUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(92961)	definition(x(8) 92986 pid('Control,getUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1089 6) nil 3) <Q: 730> nil)
		inlineAt(unifierLeft x(2) cache)
		unify(x(2) x(0))
		inlineAt(unifierRight x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92961)
lbl(92986)	definition(x(9) 93021 pid('Control,getUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1089 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 730> 5)
		endDefinition(92986)
lbl(93021)	putRecord('#' [1 2 fast] x(33))
		setConstant(getUnifier)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 24 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		move(x(2) y(14))
		move(x(7) x(2))
		move(y(10) x(6))
		putConstant(nil x(0))
		putConstant('Control' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(true)
lbl(93107)	definition(x(7) 93146 pid('SAStatement,staticAnalysis/fast' 3 pos('./compiler/StaticAnalysis.oz' 1114 6) nil 4) <Q: 731> [y(10)])
		allocateL1
		move(g(0) x(2))
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 2 cache)
		getSelf(x(3))
		move(y(0) x(0))
		putConstant(true x(1))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(3) 2 cache)
		endDefinition(93107)
lbl(93146)	definition(x(8) 93187 pid('SAStatement,staticAnalysis/slow' 1 pos('./compiler/StaticAnalysis.oz' 1114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 731> 7)
		endDefinition(93146)
lbl(93187)	putRecord('#' [1 2 fast] x(9))
		setConstant(staticAnalysis)
		setValue(x(8))
		setValue(x(7))
lbl(93197)	definition(x(7) 93328 pid('SAStatement,SaDo/fast' 2 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 4) <Q: 732> nil)
		allocateL1
		move(x(0) y(0))
		testBool(x(1) 93232 93221)
		getSelf(x(1))
		sendMsg(<M: SaLookahead> x(1) 1 cache)
		branch(93232)
lbl(93221)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1120)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(93232)	inlineAt(coord x(0) cache)
		sendMsg(setCoord y(0) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		getSelf(x(2))
		move(y(0) x(0))
		sendMsg(saDescend x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		callBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 93313 93315)
		inlineAt(next x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) isComplex x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93313)	deAllocateL1
		return
lbl(93315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1131)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93197)
lbl(93328)	definition(x(8) 93363 pid('SAStatement,SaDo/slow' 1 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 732> 5)
		endDefinition(93328)
lbl(93363)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: SaDo>)
		setValue(x(8))
		setValue(x(7))
lbl(93373)	definition(x(7) 93445 pid('SAStatement,SaLookahead/fast' 1 pos('./compiler/StaticAnalysis.oz' 1137 6) nil 3) <Q: 733> nil)
		getSelf(x(1))
		inlineDot(x(1) isComplex x(1) cache)
		testBool(x(1) 93392 93432)
		return
lbl(93392)	allocateL1
		move(x(0) y(0))
		getSelf(x(2))
		sendMsg(saSimple x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 93430)
		inlineAt(next x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaLookahead> x(1) 1 cache)
lbl(93430)	deAllocateL1
		return
lbl(93432)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1138)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93373)
lbl(93445)	definition(x(8) 93471 pid('SAStatement,SaLookahead/slow' 1 pos('./compiler/StaticAnalysis.oz' 1137 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 733> 3)
		endDefinition(93445)
lbl(93471)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: SaLookahead>)
		setValue(x(8))
		setValue(x(7))
lbl(93481)	definition(x(7) 93516 pid('SAStatement,saBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 1153 6) nil 3) <Q: 734> nil)
		testList(x(1) 93501)
lbl(93490)	getVariable(x(2))
		putConstant(true x(1))
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93501)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1160)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93481)
lbl(93516)	definition(x(8) 93551 pid('SAStatement,saBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 1153 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 734> 5)
		endDefinition(93516)
lbl(93551)	putRecord('#' [1 2 fast] x(12))
		setConstant(saBody)
		setValue(x(8))
		setValue(x(7))
lbl(93561)	definition(x(7) 93570 pid('SAStatement,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1163 6) nil 1) <Q: 735> nil)
		return
		endDefinition(93561)
lbl(93570)	definition(x(8) 93596 pid('SAStatement,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1163 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 735> 3)
		endDefinition(93570)
lbl(93596)	putRecord('#' [1 2 fast] x(13))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(93606)	definition(x(7) 93615 pid('SAStatement,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1169 6) nil 1) <Q: 736> nil)
		return
		endDefinition(93606)
lbl(93615)	definition(x(8) 93641 pid('SAStatement,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1169 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 736> 3)
		endDefinition(93615)
lbl(93641)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(93651)	definition(x(7) 93660 pid('SAStatement,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 1) <Q: 737> nil)
		return
		endDefinition(93651)
lbl(93660)	definition(x(8) 93686 pid('SAStatement,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 737> 3)
		endDefinition(93660)
lbl(93686)	putRecord('#' [1 2 fast] x(15))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAStatement' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93732)	definition(x(7) 93777 pid('SATypeOf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1178 6) nil 3) <Q: 738> nil)
		allocateL2
		inlineAt(arg x(2) cache)
		putConstant(3 x(0))
		createVariableMove(y(0) x(1))
		sendMsg(reflectType x(2) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 685> 4)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		deAllocateL2
		return
		endDefinition(93732)
lbl(93777)	definition(x(8) 93803 pid('SATypeOf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 738> 3)
		endDefinition(93777)
lbl(93803)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATypeOf' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93840)	definition(x(7) 93856 pid('SAStepPoint,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1186 6) nil 2) <Q: 739> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(93840)
lbl(93856)	definition(x(8) 93882 pid('SAStepPoint,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1186 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 739> 3)
		endDefinition(93856)
lbl(93882)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAStepPoint' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93919)	definition(x(7) 93986 pid('SADeclaration,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1192 6) nil 2) <Q: 740> nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getTop x(1) 1 cache)
		testBool(y(0) 93971 93973)
		inlineAt(localVars x(0) cache)
lbl(93947)	definition(x(1) 93967 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1199 24) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(true x(0))
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(93947)
lbl(93967)	deAllocateL1
		genFastCall(<P: 34> 5)
lbl(93971)	deAllocateL1
		return
lbl(93973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1198)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93919)
lbl(93986)	definition(x(8) 94012 pid('SADeclaration,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1192 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 740> 3)
		endDefinition(93986)
lbl(94012)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94022)	definition(x(7) 94038 pid('SADeclaration,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 2) <Q: 741> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(94022)
lbl(94038)	definition(x(8) 94064 pid('SADeclaration,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 741> 3)
		endDefinition(94038)
lbl(94064)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADeclaration' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94103)	definition(x(7) 94186 pid('SAEquation,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1209 6) nil 3) <Q: 742> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		putConstant('equality constraint failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(left x(0) cache)
		inlineAt(right x(1) cache)
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(94103)
lbl(94186)	definition(x(8) 94212 pid('SAEquation,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1209 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 742> 3)
		endDefinition(94186)
lbl(94212)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94222)	definition(x(7) 94260 pid('SAEquation,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1223 6) nil 2) <Q: 743> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(94222)
lbl(94260)	definition(x(8) 94286 pid('SAEquation,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1223 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 743> 3)
		endDefinition(94260)
lbl(94286)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquation' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(<U: ooFreeFlag>)
lbl(94335)	definition(x(7) 94375 pid('SAConstructionOrPattern,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 1235 6) nil 4) <Q: 744> [y(7)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(record x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(94335)
lbl(94375)	definition(x(8) 94389 pid('SAConstructionOrPattern,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 1235 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 744> 1)
		endDefinition(94375)
lbl(94389)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(94399)	definition(x(7) 94416 pid('SAConstructionOrPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1238 6) nil 2) <Q: 745> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94399)
lbl(94416)	definition(x(8) 94442 pid('SAConstructionOrPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 745> 3)
		endDefinition(94416)
lbl(94442)	putRecord('#' [1 2 fast] x(10))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(94452)	definition(x(7) 94466 pid('SAConstructionOrPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1241 6) nil 1) <Q: 746> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(94452)
lbl(94466)	definition(x(8) 94492 pid('SAConstructionOrPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1241 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 746> 3)
		endDefinition(94466)
lbl(94492)	putRecord('#' [1 2 fast] x(11))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(94502)	definition(x(7) 94519 pid('SAConstructionOrPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1244 6) nil 2) <Q: 747> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94502)
lbl(94519)	definition(x(8) 94545 pid('SAConstructionOrPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 747> 3)
		endDefinition(94519)
lbl(94545)	putRecord('#' [1 2 fast] x(12))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94555)	definition(x(7) 94569 pid('SAConstructionOrPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1247 6) nil 1) <Q: 748> nil)
		inlineAssign(lastValue x(0) cache)
		return
		endDefinition(94555)
lbl(94569)	definition(x(8) 94595 pid('SAConstructionOrPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 748> 3)
		endDefinition(94569)
lbl(94595)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94605)	definition(x(7) 94622 pid('SAConstructionOrPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1250 6) nil 2) <Q: 749> nil)
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94605)
lbl(94622)	definition(x(8) 94648 pid('SAConstructionOrPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1250 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 749> 3)
		endDefinition(94622)
lbl(94648)	putRecord('#' [1 2 fast] x(14))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(94658)	definition(x(7) 94675 pid('SAConstructionOrPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 1253 6) nil 2) <Q: 750> nil)
		inlineAt(args x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94658)
lbl(94675)	definition(x(8) 94701 pid('SAConstructionOrPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 1253 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 750> 3)
		endDefinition(94675)
lbl(94701)	putRecord('#' [1 2 fast] x(15))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(94711)	definition(x(7) 94728 pid('SAConstructionOrPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 1256 6) nil 2) <Q: 751> nil)
		inlineAt(isOpen x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94711)
lbl(94728)	definition(x(8) 94754 pid('SAConstructionOrPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 1256 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 751> 3)
		endDefinition(94728)
lbl(94754)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(94764)	definition(x(7) 94781 pid('SAConstructionOrPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1259 6) nil 2) <Q: 752> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94764)
lbl(94781)	definition(x(8) 94807 pid('SAConstructionOrPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1259 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 752> 3)
		endDefinition(94781)
lbl(94807)	putRecord('#' [1 2 fast] x(17))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(94817)	definition(x(7) 95278 pid('SAConstructionOrPattern,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 5) <Q: 753> [g(52) g(53) y(2) g(54)])
		putConstant(0 x(2))
		testLE(x(0) x(2) x(3) 94839)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
lbl(94839)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		testBI('Value.isDet' [x(0)]#[x(1)] 95105)
		inlineAt(value x(0) cache)
		testBI('Tuple.is' [x(0)]#[x(1)] 94957)
		inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 159> 4)
lbl(94884)	definition(x(1) 94910 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1275 5) nil 5) unit [y(0)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		tailSendMsg(getPrintType x(4) 2 cache)
		endDefinition(94884)
lbl(94910)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Record.label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(94957)	inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 160> 4)
lbl(94968)	definition(x(1) 95058 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1280 5) nil 6) unit [g(2) y(0)])
		shallowGuard(95045)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(94984)	shallowThen
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(4))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(5) cache)
		move(x(3) y(1))
		move(x(2) x(0))
		move(x(4) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(5) 4)
		move(g(1) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
lbl(95045)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1280)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(94968)
lbl(95058)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Record.label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(95105)	inlineAt(value x(0) cache)
		testBI('Value.isFree' [x(0)]#[x(1)] 95126)
		inlineAt(type x(0) cache)
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 696> 5)
lbl(95126)	inlineAt(value x(0) cache)
		createVariable(y(2))
		testBI('Record.hasLabel' [x(0)]#[x(1)] 95148)
		inlineAt(value x(0) cache)
		callBI('Record.label' [x(0)]#[x(1)])
		unify(x(1) y(2))
lbl(95148)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(3))
lbl(95161)	definition(x(1) 95237 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1295 9) nil 5) unit [x(3) g(2) y(0)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(0) y(1))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(4) 4)
		inlineAt(value x(0) cache)
		move(y(1) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(95161)
lbl(95237)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(3) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant('...)' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
		endDefinition(94817)
lbl(95278)	definition(x(8) 95313 pid('SAConstructionOrPattern,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 753> 5)
		endDefinition(95278)
lbl(95313)	putRecord('#' [1 2 fast] x(18))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(95323)	definition(x(7) 95598 pid('SAConstructionOrPattern,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1303 6) nil 5) <Q: 754> [y(7) g(55) g(56)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(95394)
		move(x(0) y(2))
		createCond(95388)
lbl(95342)	lastClause
		clause
		thread(95360)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(2) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(95360)	ask
lbl(95361)	getRecord(type 1 y(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL6
		tailCall(x(2) 2)
lbl(95388)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(95394)	putConstant(decode x(0))
		move(x(0) y(2))
		putConstant(type x(1))
		moveMoveXYYX(x(1) y(3) y(0) x(2))
		putConstant(0 x(3))
		testLE(x(2) x(3) x(4) 95417)
lbl(95416)	failure
lbl(95417)	inlineAt(isOpen x(3) cache)
		testBool(x(3) 95439 95428)
		branch(95416)
lbl(95428)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(95439)	inlineAt(label x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(reflectType x(2) 2 cache)
		createVariable(y(5))
		testRecord(y(4) value 1 95470)
lbl(95463)	getVariable(x(0))
		unify(y(5) x(0))
		branch(95471)
lbl(95470)	failure
lbl(95471)	inlineAt(args x(0) cache)
lbl(95476)	definition(x(1) 95570 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1310 6) nil 5) unit [y(0)])
		testRecord(x(1) '#' 2 95540)
lbl(95487)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(reflectType x(3) 2 cache)
		testRecord(y(2) value 1 95539)
lbl(95511)	getVariable(x(2))
		getRecord('#' 2 y(1))
		unifyValVar(x(2) x(1))
		move(g(0) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reflectType x(2) 2 cache)
lbl(95539)	failure
lbl(95540)	getRecord('#' 2 x(2))
		unifyValVar(x(0) x(2))
		move(g(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(1) x(4))
		move(x(3) x(0))
		move(x(2) x(1))
		tailSendMsg(reflectType x(4) 2 cache)
		endDefinition(95476)
lbl(95570)	createVariableMove(y(0) x(2))
		genFastCall(<P: 81> 6)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		putRecord(record 1 x(0))
		setValue(x(2))
		unify(y(1) x(0))
		popEx
		deAllocateL6
		return
		endDefinition(95323)
lbl(95598)	definition(x(8) 95633 pid('SAConstructionOrPattern,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1303 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 754> 5)
		endDefinition(95598)
lbl(95633)	putRecord('#' [1 2 fast] x(19))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(95643)	definition(x(7) 95657 pid('SAConstructionOrPattern,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1326 6) nil 1) <Q: 755> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(95643)
lbl(95657)	definition(x(8) 95683 pid('SAConstructionOrPattern,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 755> 3)
		endDefinition(95657)
lbl(95683)	putRecord('#' [1 2 fast] x(20))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(95693)	definition(x(7) 95725 pid('SAConstructionOrPattern,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 1329 6) nil 3) <Q: 756> nil)
		allocateL1
		move(x(1) y(0))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL1
		return
		endDefinition(95693)
lbl(95725)	definition(x(8) 95760 pid('SAConstructionOrPattern,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1329 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 756> 5)
		endDefinition(95725)
lbl(95760)	putRecord('#' [1 2 fast] x(21))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(95770)	definition(x(7) 96005 pid('SAConstructionOrPattern,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 1333 6) nil 5) <Q: 757> [g(20) g(54)])
		putConstant(0 x(3))
		testLE(x(0) x(3) x(4) 95785)
		return
lbl(95785)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		getSelf(x(3))
		getSelf(x(0))
		sendMsg(deref x(3) 1 cache)
		inlineAt(value x(0) cache)
		testBI('Value.isDet' [x(0)]#[x(1)] 95857)
		inlineAt(value x(0) cache)
lbl(95818)	definition(x(1) 95850 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1343 27) nil 5) unit [y(0) y(1)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		tailSendMsg(getFullData x(4) 3 cache)
		endDefinition(95818)
lbl(95850)	move(y(2) x(2))
		deAllocateL5
		genFastCall(<P: 161> 7)
lbl(95857)	inlineAt(value x(0) cache)
		testBI('Value.isFree' [x(0)]#[x(1)] 95876)
		inlineAt(value x(0) cache)
		unify(x(0) y(2))
		deAllocateL5
		return
lbl(95876)	inlineAt(value x(0) cache)
		createVariable(y(3))
		testBI('Record.hasLabel' [x(0)]#[x(1)] 95898)
		inlineAt(value x(0) cache)
		callBI('Record.label' [x(0)]#[x(1)])
		unify(x(1) y(3))
lbl(95898)	move(y(3) x(0))
		callBI('Value.isDet' [x(0)]#[x(1)])
		createVariable(y(4))
		testBool(x(1) 95929 95918)
		move(y(4) x(1))
		callBI('Record.tellRecord' [x(0) x(1)]#nil)
		branch(95929)
lbl(95918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1352)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(95929)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(95942)	definition(x(1) 95992 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1356 2) nil 6) unit [x(2) y(4) y(0) y(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		inlineUparrow(x(2) x(0) x(3))
		inlineAt(value x(4) cache)
		inlineUparrow(x(4) x(0) x(5))
		move(g(2) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		move(g(3) x(1))
		move(x(3) x(2))
		tailSendMsg(getFullData x(5) 3 cache)
		endDefinition(95942)
lbl(95992)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		unify(y(4) y(2))
		deAllocateL5
		return
		endDefinition(95770)
lbl(96005)	definition(x(8) 96046 pid('SAConstructionOrPattern,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1333 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 757> 7)
		endDefinition(96005)
lbl(96046)	putRecord('#' [1 2 fast] x(22))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(19))
lbl(96058)	definition(x(7) 96175 pid('SAConstructionOrPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 1363 6) nil 3) <Q: 758> [y(19)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 96076)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(96076)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 96160 96162)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 96126)
		deAllocateL2
		return
lbl(96126)	testLiteral(y(1) unit 96147)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(96147)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(96160)	deAllocateL2
		return
lbl(96162)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96058)
lbl(96175)	definition(x(8) 96201 pid('SAConstructionOrPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 1363 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 758> 3)
		endDefinition(96175)
lbl(96201)	putRecord('#' [1 2 fast] x(23))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(96211)	definition(x(7) 96317 pid('SAConstructionOrPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 1389 6) nil 5) <Q: 759> nil)
		allocateL4
		inlineAt(args x(2) cache)
lbl(96223)	definition(x(3) 96279 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1394 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96265)
lbl(96234)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(96265)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(96223)
lbl(96279)	inlineAt(label x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		sendMsg(reachable x(4) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(96211)
lbl(96317)	definition(x(8) 96352 pid('SAConstructionOrPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 1389 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 759> 5)
		endDefinition(96317)
lbl(96352)	putRecord('#' [1 2 fast] x(24))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(96362)	definition(x(7) 96392 pid('SAConstructionOrPattern,makeType/fast' 0 pos('./compiler/StaticAnalysis.oz' 1404 6) nil 2) <Q: 760> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(96362)
lbl(96392)	definition(x(8) 96406 pid('SAConstructionOrPattern,makeType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1404 6) nil 1) unit nil)
		getLiteral(makeType x(0))
		genFastCall(<Q: 760> 1)
		endDefinition(96392)
lbl(96406)	putRecord('#' [1 2 fast] x(25))
		setConstant(makeType)
		setValue(x(8))
		setValue(x(7))
lbl(96416)	definition(x(7) 97007 pid('SAConstructionOrPattern,MakeConstruction/fast' 1 pos('./compiler/StaticAnalysis.oz' 1408 6) nil 7) <Q: 761> [y(14) g(55) y(3) g(56)])
		allocateL7
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(96445)	definition(x(1) 96471 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1411 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 96465)
lbl(96456)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(96465)	unify(x(2) x(0))
		return
		endDefinition(96445)
lbl(96471)	putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		move(g(0) x(0))
		inlineDot(x(0) literal x(2) cache)
		inlineAt(label x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 96929 96994)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 96859 96918)
		inlineAt(label x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(args x(0) cache)
lbl(96548)	definition(x(1) 96584 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1427 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96573)
lbl(96559)	getVarVar(x(0) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(3))
		genFastCall(<Q: 658> 5)
lbl(96573)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(96548)
lbl(96584)	createVariableMove(y(4) x(2))
		genFastCall(<P: 81> 6)
lbl(96590)	definition(x(1) 96624 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1430 27) nil 4) unit nil)
		shallowGuard(96611)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96606)	shallowThen
		unify(x(1) x(2))
		return
lbl(96611)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1430)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96590)
lbl(96624)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 96795 96848)
		inlineAt(label x(3) cache)
		putList(x(0))
		setValue(x(3))
		setValue(y(2))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(0) 96775 96784)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 96749 96764)
		move(y(3) x(0))
		createVariable(x(1))
		callBI('Record.tellRecord' [x(0) x(1)]#nil)
		inlineAssign(value x(1) cache)
		getSelf(x(2))
lbl(96694)	definition(x(1) 96742 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1445 17) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(96729)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96715)	shallowThen
		inlineAt(value x(0) cache)
		inlineUparrow(x(0) x(2) x(4))
		unify(x(4) x(3))
		return
lbl(96729)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1445)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96694)
lbl(96742)	move(y(4) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(96749)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		inlineAssign(value x(2) cache)
		deAllocateL7
		return
lbl(96764)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96775)	createVariable(x(0))
		inlineAssign(value x(0) cache)
		deAllocateL7
		return
lbl(96784)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1438)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96795)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(2))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in record construction' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96848)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1435)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96859)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1422)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96929)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(label x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record label ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96994)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96416)
lbl(97007)	definition(x(8) 97033 pid('SAConstructionOrPattern,MakeConstruction/slow' 1 pos('./compiler/StaticAnalysis.oz' 1408 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 761> 3)
		endDefinition(97007)
lbl(97033)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: MakeConstruction>)
		setValue(x(8))
		setValue(x(7))
lbl(97043)	definition(x(7) 97111 pid('SAConstructionOrPattern,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 1481 6) nil 5) <Q: 762> [y(19)])
		allocateL4
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 97096 97098)
		move(y(1) x(0))
		deAllocateL4
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(97096)	deAllocateL4
		return
lbl(97098)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1485)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97043)
lbl(97111)	definition(x(8) 97146 pid('SAConstructionOrPattern,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 1481 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 762> 5)
		endDefinition(97111)
lbl(97146)	putRecord('#' [1 2 fast] x(27))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(97156)	definition(x(7) 98202 pid('SAConstructionOrPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 1497 6) nil 12) <Q: 763> nil)
		allocateL8
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 97207)
		deAllocateL8
		return
lbl(97207)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 97899 98189)
		createVariableMove(y(3) x(0))
		sendMsg(getLabel y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getArgs y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(isOpen y(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 97292 97472)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		sendMsg('unify' x(2) 2 cache)
		branch(97483)
lbl(97292)	createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(3) 1 cache)
		testBool(y(1) 97321 97461)
		inlineAt(label x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(3) 2 cache)
		branch(97483)
lbl(97321)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 97483)
lbl(97350)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(value x(3) cache)
		putRecord(oz 1 x(4))
		setValue(y(1))
		putRecord(oz 1 x(5))
		setValue(y(7))
		putRecord('#' 3 x(1))
		setValue(x(4))
		setConstant(' and ')
		setValue(x(5))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible labels')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(3))
		putRecord(hint [l m] x(7))
		setConstant('First value')
		setValue(x(8))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Second value')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(2))
		setValue(x(0))
		setValue(x(6))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
		branch(97483)
lbl(97461)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1519)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1515)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97483)	inlineAt(isOpen x(0) cache)
		testBI('Bool.not' [x(0)]#[x(1)] 97625)
lbl(97492)	move(y(5) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 97625)
lbl(97499)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 97625)
lbl(97528)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(3) cache)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' and ')
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(6))
		setValue(x(3))
		putRecord(hint [l m] x(5))
		setConstant('First value')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Second value')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putList(x(2))
		setValue(x(0))
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
lbl(97625)	inlineAt(value x(0) cache)
		testBI('Value.isDet' [x(0)]#[x(1)] 97747)
lbl(97634)	move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 97747)
lbl(97641)	inlineAt(value x(1) cache)
		callBI('Record.arity' [x(1)]#[x(2)])
		getSelf(x(3))
lbl(97651)	definition(x(1) 97740 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1558 2) nil 5) unit [x(3) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(value x(2) cache)
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		move(g(1) x(2))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97711 97727)
		move(g(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97711)	move(g(2) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97727)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97651)
lbl(97740)	move(x(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97747)	inlineAt(value x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 653> 4)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(97769)	definition(x(1) 97892 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1575 2) nil 4) unit [x(2) y(1) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 97877 97879)
		inlineAt(value x(0) cache)
		move(y(0) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineUparrow(x(0) x(1) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97850 97866)
		move(g(3) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97850)	move(g(3) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97866)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1582)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97877)	deAllocateL3
		return
lbl(97879)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1576)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97769)
lbl(97892)	move(y(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97899)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 98082 98178)
lbl(97912)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 97938 98071)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(97938)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(3) 0 97970)
lbl(97953)	inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(97970)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(0) cache)
		move(x(0) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord('#' 3 x(1))
		setValue(y(3))
		setConstant(' and ')
		setConstant(0)
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('First value')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Second value')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98071)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1602)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98082)	createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		testBI('Atom.is' [x(0)]#[x(1)] 98100)
		branch(97912)
lbl(98100)	inlineAt(value x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('record = number')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [1 l] x(3))
		setValue(x(4))
		setConstant('First value')
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [1 l] x(6))
		setValue(x(7))
		setConstant('Second value')
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98178)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98189)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1507)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97156)
lbl(98202)	definition(x(8) 98237 pid('SAConstructionOrPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 1497 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 763> 5)
		endDefinition(98202)
lbl(98237)	putRecord('#' [1 2 fast] x(28))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(98247)	definition(x(7) 98318 pid('SAConstructionOrPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1625 6) nil 3) <Q: 764> [y(19)])
		allocateL1
		inlineAt(args x(2) cache)
lbl(98259)	definition(x(1) 98297 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1632 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 98283)
lbl(98270)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
lbl(98283)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(98259)
lbl(98297)	move(x(0) y(0))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: MakeConstruction> false 1) 0)
		deAllocateL1
		genCall(gci(g(0) true makeType true 0) 0)
		endDefinition(98247)
lbl(98318)	definition(x(8) 98344 pid('SAConstructionOrPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1625 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 764> 3)
		endDefinition(98318)
lbl(98344)	putRecord('#' [1 2 fast] x(29))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(98354)	definition(x(7) 98437 pid('SAConstructionOrPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1642 6) nil 2) <Q: 765> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(98380)	definition(x(1) 98431 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1645 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 98417)
lbl(98391)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(98417)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(98380)
lbl(98431)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(98354)
lbl(98437)	definition(x(8) 98463 pid('SAConstructionOrPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1642 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 765> 3)
		endDefinition(98437)
lbl(98463)	putRecord('#' [1 2 fast] x(30))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 22 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		move(y(19) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstructionOrPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(19))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstruction' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
lbl(98572)	definition(x(7) 98794 pid('SADefinition,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 1663 6) nil 3) <Q: 766> [y(4)])
		allocateL4
		inlineAt(formalArgs x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 687> 6)
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		createVariable(y(2))
		testBool(y(1) 98683 98764)
		move(g(0) x(0))
		inlineDot(x(0) clauseBodyToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyStatements x(1) cache)
		inlineAt(statements x(2) cache)
		unify(x(2) x(1))
		branch(98775)
lbl(98683)	move(g(0) x(0))
		inlineDot(x(0) procedureToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 98775 98753)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(1))
		move(y(1) x(1))
		inlineAssign(predicateRef x(1) cache)
		branch(98775)
lbl(98753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1675)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98764)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98775)	inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(98572)
lbl(98794)	definition(x(8) 98820 pid('SADefinition,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 1663 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 766> 3)
		endDefinition(98794)
lbl(98820)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(98830)	definition(x(7) 98987 pid('SADefinition,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1688 6) nil 3) <Q: 767> [y(10)])
		allocateL5
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		inlineAt(procFlags x(1) cache)
		putConstant(instantiate x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 98937 98956)
		inlineAt(coord x(0) cache)
		sendMsg(beginVirtualToplevel y(0) 1 cache)
		putConstant(true x(0))
		putConstant(false x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		createVariableMove(y(4) x(0))
		sendMsg(endVirtualToplevel y(0) 1 cache)
		move(y(4) x(0))
		inlineAssign(toCopy x(0) cache)
		branch(98967)
lbl(98937)	sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		branch(98967)
lbl(98956)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1693)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98967)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(98830)
lbl(98987)	definition(x(8) 99013 pid('SADefinition,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1688 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 767> 3)
		endDefinition(98987)
lbl(99013)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(99023)	definition(x(7) 99042 pid('SADefinition,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1705 6) nil 2) <Q: 768> nil)
		inlineAt(designator x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(99023)
lbl(99042)	definition(x(8) 99068 pid('SADefinition,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1705 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 768> 3)
		endDefinition(99042)
lbl(99068)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SADefinition' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(22))
lbl(99108)	definition(x(7) 99288 pid('SABuiltinApplication,typeCheckN/fast' 5 pos('./compiler/StaticAnalysis.oz' 1712 6) nil 6) <Q: 769> [g(9) y(22)])
		match(x(2) ht(99273 [onScalar(nil 99117) onRecord('|' 2 99166)]))
lbl(99117)	allocateL1
		move(x(4) y(0))
		testLiteral(x(3) nil 99127)
		branch(99161)
lbl(99127)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99161)	getNumber(0 y(0))
		deAllocateL1
		return
lbl(99166)	allocateL6
		getVarVar(x(5) y(0))
		testList(x(3) 99236)
lbl(99173)	getVarVar(x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(4) y(4))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 675> 6)
		testBool(y(5) 99220 99225)
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		deAllocateL6
		genCall(gci(g(1) true typeCheckN true 5) 0)
lbl(99220)	unify(y(4) y(3))
		deAllocateL6
		return
lbl(99225)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1725)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99236)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		move(x(4) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99273)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1737)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99108)
lbl(99288)	definition(x(8) 99341 pid('SABuiltinApplication,typeCheckN/slow' 1 pos('./compiler/StaticAnalysis.oz' 1712 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 769> 11)
		endDefinition(99288)
lbl(99341)	putRecord('#' [1 2 fast] x(9))
		setConstant(typeCheckN)
		setValue(x(8))
		setValue(x(7))
lbl(99351)	definition(x(7) 99374 pid('SABuiltinApplication,typeCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1740 6) nil 5) <Q: 770> [y(22)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genCall(gci(g(0) true typeCheckN true 5) 0)
		endDefinition(99351)
lbl(99374)	definition(x(8) 99421 pid('SABuiltinApplication,typeCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1740 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 770> 9)
		endDefinition(99374)
lbl(99421)	putRecord('#' [1 2 fast] x(10))
		setConstant(typeCheck)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(23))
lbl(99433)	definition(x(7) 99610 pid('SABuiltinApplication,detCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1744 6) nil 6) <Q: 771> [g(9) y(1) y(23)])
		match(x(1) ht(99595 [onScalar(nil 99442) onRecord('|' 2 99491)]))
lbl(99442)	allocateL1
		move(x(3) y(0))
		testLiteral(x(2) nil 99452)
		branch(99486)
lbl(99452)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99486)	getLiteral(true y(0))
		deAllocateL1
		return
lbl(99491)	allocateL5
		getVarVar(x(4) y(0))
		testList(x(2) 99558)
lbl(99498)	getVarVar(x(1) y(1))
		callBI('Record.label' [x(1)]#[x(2)])
		move(g(1) x(1))
		callBI('Record.\'.\'' [x(1) x(2)]#[x(5)])
		moveMoveXYXY(x(0) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(x(5) 2)
		testBool(y(4) 99542 99547)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL5
		genCall(gci(g(2) true detCheck true 4) 0)
lbl(99542)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(99547)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99558)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		move(x(3) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99595)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1767)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99433)
lbl(99610)	definition(x(8) 99657 pid('SABuiltinApplication,detCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1744 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 771> 9)
		endDefinition(99610)
lbl(99657)	putRecord('#' [1 2 fast] x(11))
		setConstant(detCheck)
		setValue(x(8))
		setValue(x(7))
lbl(99667)	definition(x(7) 100160 pid('SABuiltinApplication,AssertTypes/fast' 5 pos('./compiler/StaticAnalysis.oz' 1770 6) nil 19) <Q: 772> [y(7) y(22)])
		testLiteral(x(2) nil 99678)
lbl(99677)	return
lbl(99678)	testList(x(2) 100145)
lbl(99681)	allocateL(11)
		getVarVar(x(2) x(5))
		putRecord('#' 2 x(6))
		setValue(x(3))
		setValue(x(4))
		testRecord(x(6) '#' 2 100143)
lbl(99699)	getVarVar(x(3) x(4))
		createVariable(y(0))
		shallowGuard(100141)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(99718)	shallowThen
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(5) y(4))
		moveMoveXYXY(x(3) y(5) x(6) y(6))
		move(x(8) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getType y(3) 1 cache)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(5) x(1))
		callBI('Record.label' [x(1)]#[x(4)])
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(10) 99808 100130)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		moveMoveYXYX(y(6) x(3) y(7) x(4))
		deAllocateL
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
lbl(99808)	putRecord(pn 1 y(4))
		setVariable(x(0))
		inlineAt(designator x(1) cache)
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(99830)	definition(x(1) 99856 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1791 27) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(99830)
lbl(99856)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99867)	definition(x(1) 99884 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1792 27) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(99867)
lbl(99884)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99895)	definition(x(1) 99928 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1793 27) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(2) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 696> 5)
		endDefinition(99895)
lbl(99928)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(9))
		createVariableMove(y(10) x(0))
		sendMsg(getType y(3) 1 cache)
		move(y(10) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 696> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(8))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('At argument')
		setValue(y(2))
		putRecord(oz 1 x(10))
		setValue(y(5))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setValue(x(10))
		putRecord(hint [l m] x(12))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(14))
		setConstant('Application (names)')
		setValue(y(6))
		putRecord(hint [l m] x(16))
		setConstant('Application (values)')
		setValue(y(7))
		putRecord(hint [l m] x(18))
		setConstant('Application (types)')
		setValue(y(8))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(9) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100130)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1783)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(100141)	deAllocateL
		return
lbl(100143)	deAllocateL
		return
lbl(100145)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1813)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99667)
lbl(100160)	definition(x(8) 100213 pid('SABuiltinApplication,AssertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1770 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 772> 11)
		endDefinition(100160)
lbl(100213)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AssertTypes>)
		setValue(x(8))
		setValue(x(7))
lbl(100223)	definition(x(7) 100283 pid('SABuiltinApplication,assertTypes/fast' 2 pos('./compiler/StaticAnalysis.oz' 1816 6) nil 5) <Q: 773> [y(5) y(22)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) getInfo x(3) cache)
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		inlineDot(x(0) types x(3) cache)
		inlineDot(x(0) det x(4) cache)
		inlineAt(actualArgs x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
		endDefinition(100223)
lbl(100283)	definition(x(8) 100318 pid('SABuiltinApplication,assertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1816 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 773> 5)
		endDefinition(100283)
lbl(100318)	putRecord('#' [1 2 fast] x(13))
		setConstant(assertTypes)
		setValue(x(8))
		setValue(x(7))
lbl(100328)	definition(x(7) 100919 pid('SABuiltinApplication,checkMessage/fast' 5 pos('./compiler/StaticAnalysis.oz' 1830 6) nil 12) <Q: 774> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 660> 4)
		createVariable(y(1))
		createVariable(y(7))
		testLiteral(y(3) object 100381)
lbl(100373)	getLiteral('Object' y(1))
		getLiteral('object application' y(7))
		branch(100411)
lbl(100381)	testLiteral(y(3) new 100393)
lbl(100385)	getLiteral('Object' y(1))
		getLiteral('object creation' y(7))
		branch(100411)
lbl(100393)	testLiteral(y(3) 'class' 100405)
lbl(100397)	getLiteral('Class' y(1))
		getLiteral('class application' y(7))
		branch(100411)
lbl(100405)	getLiteral('???' y(1))
		getLiteral('???' y(7))
lbl(100411)	testLiteral(y(2) unit 100417)
		deAllocateL9
		return
lbl(100417)	move(y(5) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 100915)
lbl(100424)	testBI('Record.is' [x(0)]#[x(1)] 100913)
lbl(100428)	callBI('Record.label' [x(0)]#[x(1)])
		move(y(2) x(2))
		testBI('Value.hasFeature' [x(2) x(1)]#[x(3)] 100789)
		putRecord('#' 2 x(1))
		setVariable(y(3))
		setVariable(y(8))
		callBI('Record.label' [x(0)]#[x(3)])
		callBI('Record.\'.\'' [x(2) x(3)]#[x(4)])
		unify(x(4) x(1))
		getSelf(x(2))
lbl(100457)	definition(x(1) 100572 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1867 2) nil 15) unit [x(2) y(5) y(0) y(7) y(1) y(4) y(6)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		testBI('Value.hasFeature' [x(2) x(0)]#[x(3)] 100476)
		return
lbl(100476)	move(g(2) x(3))
		inlineDot(x(3) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord('#' 2 x(6))
		setConstant('missing message feature in ')
		setValue(g(3))
		putRecord(pn 1 x(9))
		setValue(g(5))
		putRecord(hint [l m] x(8))
		setValue(g(4))
		setValue(x(9))
		putRecord(hint [l m] x(11))
		setConstant('Required feature')
		setValue(x(0))
		putRecord(oz 1 x(14))
		setValue(g(6))
		putRecord(hint [l m] x(13))
		setConstant('Message found')
		setValue(x(14))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(7))
		setValue(x(8))
		setValue(x(10))
		move(x(5) x(0))
		move(x(7) x(1))
		move(x(6) x(3))
		putConstant('static analysis error' x(2))
		tailSendMsg(error x(4) [coord items kind msg] cache)
		endDefinition(100457)
lbl(100572)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(8) unit 100584)
		deAllocateL9
		return
lbl(100584)	move(y(5) x(0))
		callBI('Record.arity' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(100592)	definition(x(1) 100782 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1885 5) nil 14) unit [x(3) y(3) y(8) y(0) y(7) y(1) y(4) y(6)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100622 100769)
		deAllocateL4
		return
lbl(100622)	move(y(0) x(0))
		move(g(2) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100640 100769)
		deAllocateL4
		return
lbl(100640)	move(g(3) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		move(g(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message feature in ')
		setValue(g(4))
		putRecord(pn 1 x(6))
		setValue(g(6))
		putRecord(hint [l m] x(5))
		setValue(g(5))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Required features')
		setValue(y(2))
		putRecord(hint [l m] x(10))
		setConstant('Optional features')
		setValue(y(3))
		putRecord(oz 1 x(13))
		setValue(g(7))
		putRecord(hint [l m] x(12))
		setConstant('Message found')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL4
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100592)
lbl(100782)	move(x(2) x(0))
		deAllocateL9
		genFastCall(<P: 34> 5)
lbl(100789)	putConstant(otherwise x(0))
		testBI('Value.hasFeature' [x(2) x(0)]#[x(1)] 100798)
		deAllocateL9
		return
lbl(100798)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 694> 4)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message label in ')
		setValue(y(7))
		putRecord(pn 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setValue(y(1))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Message found')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL9
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100913)	deAllocateL9
		return
lbl(100915)	deAllocateL9
		return
		endDefinition(100328)
lbl(100919)	definition(x(8) 100972 pid('SABuiltinApplication,checkMessage/slow' 1 pos('./compiler/StaticAnalysis.oz' 1830 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 774> 11)
		endDefinition(100919)
lbl(100972)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkMessage)
		setValue(x(8))
		setValue(x(7))
lbl(100982)	definition(x(7) 101625 pid('SABuiltinApplication,checkArguments/fast' 3 pos('./compiler/StaticAnalysis.oz' 1924 6) nil 15) <Q: 775> [y(2) y(5) g(57) y(22)])
		allocateL9
		move(g(0) x(3))
		inlineDot(x(3) printName x(4) cache)
		inlineAt(designator x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(y(6) x(0))
		callBI('Procedure.arity' [x(0)]#[x(1)])
		move(y(4) x(0))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 101401)
		inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) types x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true typeCheck false 4) 0)
		testNumber(y(4) 0 101146)
lbl(101111)	move(y(1) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 101123)
		getLiteral(true y(2))
		deAllocateL9
		return
lbl(101123)	inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) det x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		deAllocateL9
		genCall(gci(g(3) true detCheck true 4) 0)
lbl(101146)	inlineAt(actualArgs x(0) cache)
lbl(101151)	definition(x(1) 101177 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1950 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101151)
lbl(101177)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101188)	definition(x(1) 101205 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1951 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101188)
lbl(101205)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		inlineDot(x(0) types x(0) cache)
lbl(101220)	definition(x(1) 101235 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1952 32) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(101220)
lbl(101235)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(7))
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 692> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(5))
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(10))
		setConstant('Expected types')
		setValue(y(8))
		putRecord(hint [l m] x(12))
		setConstant('Argument names')
		setValue(y(1))
		putRecord(hint [l m] x(14))
		setConstant('Argument values')
		setValue(y(3))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(7) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
lbl(101401)	inlineAt(actualArgs x(3) cache)
lbl(101406)	definition(x(4) 101432 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1965 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101406)
lbl(101432)	move(x(1) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101452)	definition(x(1) 101469 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1966 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101452)
lbl(101469)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		putRecord(pn 1 x(3))
		setValue(y(5))
		putList(x(2))
		setValue(x(3))
		setValue(y(3))
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(9))
		setConstant('Found')
		setValue(y(4))
		putRecord(hint [l m] x(11))
		setConstant('Argument names')
		setValue(y(7))
		putRecord(hint [l m] x(13))
		setConstant('Argument values')
		setValue(y(6))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal arity in application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
		endDefinition(100982)
lbl(101625)	definition(x(8) 101666 pid('SABuiltinApplication,checkArguments/slow' 1 pos('./compiler/StaticAnalysis.oz' 1924 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 775> 7)
		endDefinition(101625)
lbl(101666)	putRecord('#' [1 2 fast] x(15))
		setConstant(checkArguments)
		setValue(x(8))
		setValue(x(7))
lbl(101676)	definition(x(7) 101995 pid('SABuiltinApplication,doBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 1982 6) nil 9) <Q: 776> [y(4)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		exHandler(101947)
		move(x(0) y(1))
		createCond(101941)
lbl(101756)	lastClause
		clause
		createVariable(y(4))
		thread(101802)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(1) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		putConstant(system x(0))
		putConstant(1 x(3))
		callBI('Record.tellRecordSize' [x(0) x(3) x(1)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(1) x(0) x(3))
		unify(x(3) y(4))
		deAllocateL5
		return
lbl(101802)	ask
lbl(101803)	match(y(4) ht(101928 [onScalar(builtinUndefined 101806) onScalar(builtinArity 101867)]))
lbl(101806)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin undefined' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(101867)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin has wrong arity' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(101928)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2019)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(101941)	move(y(1) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(101947)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Boot.builtin' [x(0) x(1)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) builtinToken x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		move(x(5) y(4))
		move(x(2) x(0))
		sendMsg(init y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		popEx
		deAllocateL5
		return
		endDefinition(101676)
lbl(101995)	definition(x(8) 102021 pid('SABuiltinApplication,doBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 1982 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 776> 3)
		endDefinition(101995)
lbl(102021)	putRecord('#' [1 2 fast] x(16))
		setConstant(doBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(102031)	definition(x(7) 102238 pid('SABuiltinApplication,doNewName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 4) <Q: 777> [y(0) y(4)])
		allocateL6
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getTop y(0) 1 cache)
		createVariable(y(5))
		testBool(y(4) 102104 102136)
lbl(102091)	createVariableMove(y(4) x(0))
		sendMsg(getOrigin y(2) 1 cache)
		testLiteral(y(4) generated 102123)
lbl(102104)	move(g(0) x(0))
		inlineDot(x(0) newNamedName x(2) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		call(x(2) 2)
		branch(102147)
lbl(102123)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		sendMsg(declareToplevelName y(0) 2 cache)
		branch(102147)
lbl(102136)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2029)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(102147)	move(g(1) x(0))
		inlineDot(x(0) nameToken x(1) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(5) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 102223 102225)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(5))
lbl(102223)	deAllocateL6
		return
lbl(102225)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2036)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(102031)
lbl(102238)	definition(x(8) 102264 pid('SABuiltinApplication,doNewName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 777> 3)
		endDefinition(102238)
lbl(102264)	putRecord('#' [1 2 fast] x(17))
		setConstant(doNewName)
		setValue(x(8))
		setValue(x(7))
lbl(102274)	definition(x(7) 102385 pid('SABuiltinApplication,doNewUniqueName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2040 6) nil 4) <Q: 778> [y(4)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		callBI('Name.newUnique' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
		endDefinition(102274)
lbl(102385)	definition(x(8) 102411 pid('SABuiltinApplication,doNewUniqueName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2040 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 778> 3)
		endDefinition(102385)
lbl(102411)	putRecord('#' [1 2 fast] x(18))
		setConstant(doNewUniqueName)
		setValue(x(8))
		setValue(x(7))
lbl(102421)	definition(x(7) 102488 pid('SABuiltinApplication,doNewLock/fast' 1 pos('./compiler/StaticAnalysis.oz' 2053 6) nil 5) <Q: 779> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI('Lock.new' nil#[x(3)])
		callBI('Object.newObject' [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102421)
lbl(102488)	definition(x(8) 102514 pid('SABuiltinApplication,doNewLock/slow' 1 pos('./compiler/StaticAnalysis.oz' 2053 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 779> 3)
		endDefinition(102488)
lbl(102514)	putRecord('#' [1 2 fast] x(19))
		setConstant(doNewLock)
		setValue(x(8))
		setValue(x(7))
lbl(102524)	definition(x(7) 102593 pid('SABuiltinApplication,doNewPort/fast' 1 pos('./compiler/StaticAnalysis.oz' 2060 6) nil 5) <Q: 780> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) portToken x(2) cache)
		createVariable(x(3))
		callBI('Port.new' [x(3)]#[x(4)])
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102524)
lbl(102593)	definition(x(8) 102619 pid('SABuiltinApplication,doNewPort/slow' 1 pos('./compiler/StaticAnalysis.oz' 2060 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 780> 3)
		endDefinition(102593)
lbl(102619)	putRecord('#' [1 2 fast] x(20))
		setConstant(doNewPort)
		setValue(x(8))
		setValue(x(7))
lbl(102629)	definition(x(7) 102698 pid('SABuiltinApplication,doNewCell/fast' 1 pos('./compiler/StaticAnalysis.oz' 2067 6) nil 5) <Q: 781> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		createVariable(x(3))
		callBI('Cell.new' [x(3)]#[x(4)])
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102629)
lbl(102698)	definition(x(8) 102724 pid('SABuiltinApplication,doNewCell/slow' 1 pos('./compiler/StaticAnalysis.oz' 2067 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 781> 3)
		endDefinition(102698)
lbl(102724)	putRecord('#' [1 2 fast] x(21))
		setConstant(doNewCell)
		setValue(x(8))
		setValue(x(7))
lbl(102734)	definition(x(7) 102858 pid('SABuiltinApplication,doNewArray/fast' 1 pos('./compiler/StaticAnalysis.oz' 2074 6) nil 6) <Q: 782> [y(4) g(58)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) arrayToken x(1) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		createVariable(x(4))
		callBI('Array.new' [x(2) x(3) x(4)]#[x(5)])
		callBI('Object.newObject' [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(5) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(4 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102734)
lbl(102858)	definition(x(8) 102884 pid('SABuiltinApplication,doNewArray/slow' 1 pos('./compiler/StaticAnalysis.oz' 2074 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 782> 3)
		endDefinition(102858)
lbl(102884)	putRecord('#' [1 2 fast] x(22))
		setConstant(doNewArray)
		setValue(x(8))
		setValue(x(7))
lbl(102894)	definition(x(7) 102961 pid('SABuiltinApplication,doNewDictionary/fast' 1 pos('./compiler/StaticAnalysis.oz' 2083 6) nil 5) <Q: 783> [y(4) g(59)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI('Dictionary.new' nil#[x(3)])
		callBI('Object.newObject' [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102894)
lbl(102961)	definition(x(8) 102987 pid('SABuiltinApplication,doNewDictionary/slow' 1 pos('./compiler/StaticAnalysis.oz' 2083 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 783> 3)
		endDefinition(102961)
lbl(102987)	putRecord('#' [1 2 fast] x(23))
		setConstant(doNewDictionary)
		setValue(x(8))
		setValue(x(7))
lbl(102997)	definition(x(7) 103094 pid('SABuiltinApplication,doNewChunk/fast' 1 pos('./compiler/StaticAnalysis.oz' 2090 6) nil 4) <Q: 784> [y(4)])
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) chunkToken x(1) cache)
		move(y(2) x(2))
		callBI('Chunk.new' [x(2)]#[x(3)])
		callBI('Object.newObject' [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102997)
lbl(103094)	definition(x(8) 103120 pid('SABuiltinApplication,doNewChunk/slow' 1 pos('./compiler/StaticAnalysis.oz' 2090 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 784> 3)
		endDefinition(103094)
lbl(103120)	putRecord('#' [1 2 fast] x(24))
		setConstant(doNewChunk)
		setValue(x(8))
		setValue(x(7))
lbl(103130)	definition(x(7) 103206 pid('SABuiltinApplication,doNewSpace/fast' 1 pos('./compiler/StaticAnalysis.oz' 2098 6) nil 5) <Q: 785> [y(4) g(60)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
lbl(103146)	definition(x(3) 103155 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2099 46) nil 1) unit nil)
		return
		endDefinition(103146)
lbl(103155)	callBI('Space.new' [x(3)]#[x(4)])
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103130)
lbl(103206)	definition(x(8) 103232 pid('SABuiltinApplication,doNewSpace/slow' 1 pos('./compiler/StaticAnalysis.oz' 2098 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 785> 3)
		endDefinition(103206)
lbl(103232)	putRecord('#' [1 2 fast] x(25))
		setConstant(doNewSpace)
		setValue(x(8))
		setValue(x(7))
lbl(103242)	definition(x(7) 103406 pid('SABuiltinApplication,doNew/fast' 1 pos('./compiler/StaticAnalysis.oz' 2109 6) nil 5) <Q: 786> [y(4) y(22)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 688> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(g(0) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(5) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		testLiteral(y(3) unit 103378)
		deAllocateL6
		return
lbl(103378)	createVariableMove(y(2) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(5) x(4))
		putConstant(new x(3))
		deAllocateL6
		genCall(gci(g(1) true checkMessage true 5) 0)
		endDefinition(103242)
lbl(103406)	definition(x(8) 103432 pid('SABuiltinApplication,doNew/slow' 1 pos('./compiler/StaticAnalysis.oz' 2109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 786> 3)
		endDefinition(103406)
lbl(103432)	putRecord('#' [1 2 fast] x(26))
		setConstant(doNew)
		setValue(x(8))
		setValue(x(7))
lbl(103442)	definition(x(7) 103532 pid('SABuiltinApplication,doEq/fast' 1 pos('./compiler/StaticAnalysis.oz' 2130 6) nil 4) <Q: 787> nil)
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		putConstant('equation failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(103442)
lbl(103532)	definition(x(8) 103558 pid('SABuiltinApplication,doEq/slow' 1 pos('./compiler/StaticAnalysis.oz' 2130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 787> 3)
		endDefinition(103532)
lbl(103558)	putRecord('#' [1 2 fast] x(27))
		setConstant(doEq)
		setValue(x(8))
		setValue(x(7))
lbl(103568)	definition(x(7) 104346 pid('SABuiltinApplication,doDot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 9) <Q: 788> [y(13)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 103801)
lbl(103634)	move(g(0) x(1))
		inlineDot(x(1) object x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 103801 104333)
lbl(103653)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 656> 4)
		testLiteral(y(2) unit 103668)
lbl(103666)	deAllocateL5
		return
lbl(103668)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103683)
		deAllocateL5
		return
lbl(103683)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103700 103790)
		deAllocateL5
		return
lbl(103700)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from object' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(103790)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2168)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103801)	move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 103975)
lbl(103808)	move(g(0) x(1))
		inlineDot(x(1) 'class' x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 103975 104322)
lbl(103827)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		testLiteral(y(2) unit 103842)
lbl(103840)	deAllocateL5
		return
lbl(103842)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103857)
		deAllocateL5
		return
lbl(103857)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103874 103964)
		deAllocateL5
		return
lbl(103874)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from class' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(103964)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103975)	move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 104179)
lbl(103982)	move(g(0) x(1))
		inlineDot(x(1) record x(2) cache)
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104179 104311)
lbl(104001)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 104092)
		inlineAt(actualArgs x(3) cache)
		move(x(3) x(0))
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104092)	move(y(0) x(2))
		inlineDot(x(2) rep x(2) cache)
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 694> 4)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104179)	move(g(0) x(0))
		inlineDot(x(0) recordC x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104309 104298)
lbl(104201)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104296 104298)
lbl(104216)	inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104296)	deAllocateL5
		return
lbl(104298)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104309)	deAllocateL5
		return
lbl(104311)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2204)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104322)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104333)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2155)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(103568)
lbl(104346)	definition(x(8) 104372 pid('SABuiltinApplication,doDot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 788> 3)
		endDefinition(104346)
lbl(104372)	putRecord('#' [1 2 fast] x(28))
		setConstant(doDot)
		setValue(x(8))
		setValue(x(7))
lbl(104382)	definition(x(7) 104646 pid('SABuiltinApplication,doHat/fast' 1 pos('./compiler/StaticAnalysis.oz' 2244 6) nil 9) <Q: 789> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104537 104633)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (^) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104537)	move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 104631)
		move(y(0) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 694> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(3))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104631)	deAllocateL5
		return
lbl(104633)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2254)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104382)
lbl(104646)	definition(x(8) 104672 pid('SABuiltinApplication,doHat/slow' 1 pos('./compiler/StaticAnalysis.oz' 2244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 789> 3)
		endDefinition(104646)
lbl(104672)	putRecord('#' [1 2 fast] x(29))
		setConstant(doHat)
		setValue(x(8))
		setValue(x(7))
lbl(104682)	definition(x(7) 104789 pid('SABuiltinApplication,doComma/fast' 1 pos('./compiler/StaticAnalysis.oz' 2280 6) nil 5) <Q: 790> [y(22)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		testLiteral(y(2) unit 104761)
		deAllocateL5
		return
lbl(104761)	createVariableMove(y(3) x(0))
		sendMsg(getMethods y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		putConstant('class' x(3))
		deAllocateL5
		genCall(gci(g(0) true checkMessage true 5) 0)
		endDefinition(104682)
lbl(104789)	definition(x(8) 104815 pid('SABuiltinApplication,doComma/slow' 1 pos('./compiler/StaticAnalysis.oz' 2280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 790> 3)
		endDefinition(104789)
lbl(104815)	putRecord('#' [1 2 fast] x(30))
		setConstant(doComma)
		setValue(x(8))
		setValue(x(7))
lbl(104825)	definition(x(7) 105378 pid('SABuiltinApplication,doAssignAccess/fast' 1 pos('./compiler/StaticAnalysis.oz' 2293 6) nil 13) <Q: 791> [y(3) y(2)])
		allocateL10
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getSelf' y(0) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		createVariableMove(y(4) x(0))
		sendMsg(getAttributes y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getProperties y(1) 1 cache)
		testLiteral(y(4) unit 104891)
		deAllocateL10
		return
lbl(104891)	move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 664> 4)
		move(y(6) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 104909)
		deAllocateL10
		return
lbl(104909)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 104926 105365)
		deAllocateL10
		return
lbl(104926)	inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		createVariable(y(2))
		testLiteral(y(8) 'Object.\'<-\'' 105014)
lbl(104990)	getRecord('#' 3 y(2))
		unifyVariable(x(0))
		unifyLiteral(' <- ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105057)
lbl(105014)	testLiteral(y(8) 'Object.\'@\'' 105044)
lbl(105018)	getRecord('#' 4 y(2))
		unifyLiteral('@')
		unifyVariable(x(0))
		unifyLiteral(' = ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105057)
lbl(105044)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2311)
		setValue(y(8))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105057)	createVariable(y(3))
		testLiteral(y(5) unit 105068)
lbl(105063)	getLiteral(false y(3))
		branch(105079)
lbl(105068)	moveMoveYXYX(y(5) x(1) y(3) x(2))
		putConstant(final x(0))
		genFastCall(<P: 22> 6)
lbl(105079)	createVariable(y(5))
		testBool(y(3) 105090 105095)
		getLiteral('(correct use requires method application)' y(5))
		branch(105106)
lbl(105090)	getLiteral('(may be a correct forward declaration)' y(5))
		branch(105106)
lbl(105095)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2313)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105106)	createVariable(y(6))
		testBool(y(3) 105117 105122)
		getLiteral('In final class' y(6))
		branch(105133)
lbl(105117)	getLiteral('In class' y(6))
		branch(105133)
lbl(105122)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2317)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105133)	testBool(y(3) 105325 105354)
lbl(105137)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(1) x(2))
		inlineDot(x(2) printName x(3) cache)
		inlineAt(designator x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(3) y(7))
		move(x(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 658> 4)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		call(y(7) 2)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(8) x(0))
		createVariableMove(y(1) x(1))
		call(y(7) 2)
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 695> 4)
		move(y(7) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 3 x(3))
		setConstant('applying ')
		setValue(y(9))
		setConstant(' to unavailable attribute')
		putRecord(hint [l m] x(5))
		setConstant('Expression')
		setValue(y(2))
		putRecord(pn 1 x(8))
		setValue(y(1))
		putRecord(hint [l m] x(7))
		setValue(y(6))
		setValue(x(8))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(y(4))
		putRecord(line 1 x(12))
		setValue(y(5))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(105325)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnforward x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 105352 105354)
		branch(105137)
lbl(105352)	deAllocateL10
		return
lbl(105354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105365)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2301)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104825)
lbl(105378)	definition(x(8) 105404 pid('SABuiltinApplication,doAssignAccess/slow' 1 pos('./compiler/StaticAnalysis.oz' 2293 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 791> 3)
		endDefinition(105378)
lbl(105404)	putRecord('#' [1 2 fast] x(31))
		setConstant(doAssignAccess)
		setValue(x(8))
		setValue(x(7))
lbl(105414)	definition(x(7) 105566 pid('SABuiltinApplication,doAnd/fast' 1 pos('./compiler/StaticAnalysis.oz' 2341 6) nil 4) <Q: 792> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 105562)
lbl(105494)	move(y(1) x(1))
		testBI('Value.isDet' [x(1)]#[x(2)] 105560)
lbl(105501)	callBI('Bool.and' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105560)	deAllocateL5
		return
lbl(105562)	deAllocateL5
		return
		endDefinition(105414)
lbl(105566)	definition(x(8) 105592 pid('SABuiltinApplication,doAnd/slow' 1 pos('./compiler/StaticAnalysis.oz' 2341 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 792> 3)
		endDefinition(105566)
lbl(105592)	putRecord('#' [1 2 fast] x(32))
		setConstant(doAnd)
		setValue(x(8))
		setValue(x(7))
lbl(105602)	definition(x(7) 105754 pid('SABuiltinApplication,doOr/fast' 1 pos('./compiler/StaticAnalysis.oz' 2365 6) nil 4) <Q: 793> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 105750)
lbl(105682)	move(y(1) x(1))
		testBI('Value.isDet' [x(1)]#[x(2)] 105748)
lbl(105689)	callBI('Bool.or' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105748)	deAllocateL5
		return
lbl(105750)	deAllocateL5
		return
		endDefinition(105602)
lbl(105754)	definition(x(8) 105780 pid('SABuiltinApplication,doOr/slow' 1 pos('./compiler/StaticAnalysis.oz' 2365 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 793> 3)
		endDefinition(105754)
lbl(105780)	putRecord('#' [1 2 fast] x(33))
		setConstant(doOr)
		setValue(x(8))
		setValue(x(7))
lbl(105790)	definition(x(7) 105910 pid('SABuiltinApplication,doNot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2389 6) nil 4) <Q: 794> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 105906)
		callBI('Bool.not' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean not failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105906)	deAllocateL4
		return
		endDefinition(105790)
lbl(105910)	definition(x(8) 105936 pid('SABuiltinApplication,doNot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2389 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 794> 3)
		endDefinition(105910)
lbl(105936)	putRecord('#' [1 2 fast] x(34))
		setConstant(doNot)
		setValue(x(8))
		setValue(x(7))
lbl(105946)	definition(x(7) 106066 pid('SABuiltinApplication,doLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2409 6) nil 4) <Q: 795> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		putConstant(<M: ImAConstruction> x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 106062)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(3) 1 cache)
		putConstant('label assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106062)	deAllocateL4
		return
		endDefinition(105946)
lbl(106066)	definition(x(8) 106092 pid('SABuiltinApplication,doLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2409 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 795> 3)
		endDefinition(106066)
lbl(106092)	putRecord('#' [1 2 fast] x(35))
		setConstant(doLabel)
		setValue(x(8))
		setValue(x(7))
lbl(106102)	definition(x(7) 106245 pid('SABuiltinApplication,doWidth/fast' 1 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 5) <Q: 796> [y(4)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 106241)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Record.width' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI('Object.newObject' [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('width assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106241)	deAllocateL4
		return
		endDefinition(106102)
lbl(106245)	definition(x(8) 106271 pid('SABuiltinApplication,doWidth/slow' 1 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 796> 3)
		endDefinition(106245)
lbl(106271)	putRecord('#' [1 2 fast] x(36))
		setConstant(doWidth)
		setValue(x(8))
		setValue(x(7))
lbl(106281)	definition(x(7) 106424 pid('SABuiltinApplication,doProcedureArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2449 6) nil 5) <Q: 797> [y(4) g(57)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 106420)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Procedure.arity' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI('Object.newObject' [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('assertion of procedure arity failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106420)	deAllocateL4
		return
		endDefinition(106281)
lbl(106424)	definition(x(8) 106450 pid('SABuiltinApplication,doProcedureArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2449 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 797> 3)
		endDefinition(106424)
lbl(106450)	putRecord('#' [1 2 fast] x(37))
		setConstant(doProcedureArity)
		setValue(x(8))
		setValue(x(7))
lbl(106460)	definition(x(7) 106511 pid('SABuiltinApplication,doCheckType/fast' 3 pos('./compiler/StaticAnalysis.oz' 2469 6) nil 3) <Q: 798> [y(22)])
		match(x(0) ht(106496 [onScalar(det 106469) onScalar(rec 106478) onScalar(kind 106487)]))
lbl(106469)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoDetType> true 2) 0)
lbl(106478)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoRecDetType> true 2) 0)
lbl(106487)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoKindedType> true 2) 0)
lbl(106496)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2477)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(106460)
lbl(106511)	definition(x(8) 106552 pid('SABuiltinApplication,doCheckType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2469 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 798> 7)
		endDefinition(106511)
lbl(106552)	putRecord('#' [1 2 fast] x(38))
		setConstant(doCheckType)
		setValue(x(8))
		setValue(x(7))
lbl(106562)	definition(x(7) 106791 pid('SABuiltinApplication,DoDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2480 6) nil 4) <Q: 799> [y(3) y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(4) 106776 106778)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 106699 106749)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106760)
lbl(106699)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106760)
lbl(106749)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106760)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106776)	deAllocateL5
		return
lbl(106778)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(106562)
lbl(106791)	definition(x(8) 106826 pid('SABuiltinApplication,DoDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2480 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 799> 5)
		endDefinition(106791)
lbl(106826)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: DoDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(106836)	definition(x(7) 107048 pid('SABuiltinApplication,DoRecDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2503 6) nil 4) <Q: 800> [y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 659> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testLiteral(y(2) true 106960)
lbl(106910)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107030)
lbl(106960)	testLiteral(y(2) false 107014)
lbl(106964)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107030)
lbl(107014)	match(y(2) ht(107017 [onScalar(unit 107030)]))
lbl(107017)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2524)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107030)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(106836)
lbl(107048)	definition(x(8) 107083 pid('SABuiltinApplication,DoRecDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2503 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 800> 5)
		endDefinition(107048)
lbl(107083)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: DoRecDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(107093)	definition(x(7) 107320 pid('SABuiltinApplication,DoKindedType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2529 6) nil 4) <Q: 801> [y(8) y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 665> 4)
		testBool(y(4) 107302 107291)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 107230 107280)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107302)
lbl(107230)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107302)
lbl(107280)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2536)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107291)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2535)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107302)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(107093)
lbl(107320)	definition(x(8) 107355 pid('SABuiltinApplication,DoKindedType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2529 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 801> 5)
		endDefinition(107320)
lbl(107355)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: DoKindedType>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 33 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		move(y(22) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABuiltinApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(22))
		setConstant(nil)
lbl(107462)	definition(x(7) 107954 pid('SAApplication,AssertArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2552 6) nil 13) <Q: 802> [y(7)])
		allocateL7
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		createVariable(y(3))
		match(y(2) ht(107663 [onScalar(0 107502) onScalar(1 107525) onScalar(2 107548) onScalar(3 107571) onScalar(4 107594) onScalar(5 107617) onScalar(6 107640)]))
lbl(107502)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107525)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant(unaryProcOrObject x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107548)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107571)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107594)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107617)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107640)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107684)
lbl(107663)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
lbl(107684)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(2) 107701 107941)
		deAllocateL7
		return
lbl(107701)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(107720)	definition(x(1) 107746 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2570 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(107720)
lbl(107746)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(107757)	definition(x(1) 107774 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2571 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(107757)
lbl(107774)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 696> 4)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(3))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(4))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(5))
		setValue(y(2))
		putRecord('#' 2 x(3))
		setConstant('wrong arity in application of ')
		setValue(x(5))
		putRecord(hint [l m] x(6))
		setConstant('Procedure type')
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Application arity')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Application (names)')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (values)')
		setValue(y(4))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(6))
		setValue(x(7))
		move(y(5) x(0))
		putConstant('type error' x(2))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(107941)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107462)
lbl(107954)	definition(x(8) 107980 pid('SAApplication,AssertArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2552 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 802> 3)
		endDefinition(107954)
lbl(107980)	putRecord('#' [1 2 fast] x(9))
		setConstant(<M: AssertArity>)
		setValue(x(8))
		setValue(x(7))
lbl(107990)	definition(x(7) 108751 pid('SAApplication,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2586 6) nil 15) <Q: 803> [y(23) y(2) y(9) y(22) g(50) g(51) g(57) y(3)])
		allocateL8
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorBuiltin false 1) 0)
		testBool(y(1) 108155 108738)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		move(g(2) x(0))
		move(y(3) x(1))
		putConstant(unit x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(1))
		testLiteral(x(3) unit 108077)
lbl(108063)	move(y(0) x(0))
		move(g(4) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		branch(108129)
lbl(108077)	moveMoveXYYX(x(3) y(2) y(0) x(0))
		move(g(5) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		testBool(y(1) 108129 108118)
		move(y(2) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		inlinePlus1(x(1) x(2))
		move(y(0) x(1))
		callBI('Record.adjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(g(3) x(0))
		callBI('Object.\',\'' [x(0) x(3)]#nil)
		branch(108129)
lbl(108118)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2614)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108129)	testBool(y(1) 108142 108144)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL8
		genCall(gci(g(3) true assertTypes true 2) 0)
lbl(108142)	deAllocateL8
		return
lbl(108144)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2633)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108155)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorProcedure false 1) 0)
		testBool(y(1) 108445 108727)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		callBI('Procedure.arity' [x(0)]#[x(1)])
		inlineAt(actualArgs x(0) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)] 108443)
		inlineAt(actualArgs x(3) cache)
lbl(108224)	definition(x(4) 108250 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2648 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(108224)
lbl(108250)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(108267)	definition(x(1) 108284 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2649 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(108267)
lbl(108284)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putList(x(3))
		setValue(x(4))
		setValue(y(4))
		moveMoveXYXY(x(1) y(4) x(2) y(6))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(5))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (names)')
		setValue(y(7))
		putRecord(hint [l m] x(14))
		setConstant('Application (values)')
		setValue(y(5))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(6) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in application' x(3))
		move(y(4) x(4))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108443)	deAllocateL8
		return
lbl(108445)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorObject false 1) 0)
		testBool(y(1) 108631 108716)
		inlineAt(designator x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getClassNode y(2) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(2) 1 108553)
lbl(108507)	testLiteral(y(3) unit 108513)
		deAllocateL8
		return
lbl(108513)	inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(4))
		putConstant(object x(3))
		deAllocateL8
		genCall(gci(g(0) true checkMessage true 5) 0)
lbl(108553)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(pn 1 x(7))
		setValue(y(1))
		putRecord(hint [l m] x(6))
		setConstant('Object')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setConstant(1)
		putRecord(hint [l m] x(11))
		setConstant('Found')
		setValue(y(2))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(1))
		setValue(x(6))
		setValue(x(8))
		move(x(5) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in object application' x(3))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108631)	inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108698 108705)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(4) cache)
		putRecord(oz 1 x(5))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('applying non-procedure and non-object ')
		setValue(x(5))
		move(x(4) x(0))
		putConstant('static analysis error' x(1))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(108698)	move(y(0) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: AssertArity> true 1) 0)
lbl(108705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2692)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108716)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108727)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2637)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108738)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2592)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107990)
lbl(108751)	definition(x(8) 108777 pid('SAApplication,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2586 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 803> 3)
		endDefinition(108751)
lbl(108777)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(108787)	definition(x(7) 108871 pid('SAApplication,checkDesignatorBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 2706 6) nil 3) <Q: 804> [y(3) y(0)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108853 108858)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(108853)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(108858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2708)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108787)
lbl(108871)	definition(x(8) 108897 pid('SAApplication,checkDesignatorBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 2706 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 804> 3)
		endDefinition(108871)
lbl(108897)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkDesignatorBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(108907)	definition(x(7) 108991 pid('SAApplication,checkDesignatorProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 2710 6) nil 3) <Q: 805> [y(3) y(13)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108973 108978)
		move(g(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(108973)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(108978)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2712)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108907)
lbl(108991)	definition(x(8) 109017 pid('SAApplication,checkDesignatorProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 2710 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 805> 3)
		endDefinition(108991)
lbl(109017)	putRecord('#' [1 2 fast] x(12))
		setConstant(checkDesignatorProcedure)
		setValue(x(8))
		setValue(x(7))
lbl(109027)	definition(x(7) 109111 pid('SAApplication,checkDesignatorObject/fast' 1 pos('./compiler/StaticAnalysis.oz' 2714 6) nil 3) <Q: 806> [y(3) y(13)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109093 109098)
		move(g(1) x(0))
		inlineDot(x(0) object x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(109093)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(109098)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2716)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109027)
lbl(109111)	definition(x(8) 109137 pid('SAApplication,checkDesignatorObject/slow' 1 pos('./compiler/StaticAnalysis.oz' 2714 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 806> 3)
		endDefinition(109111)
lbl(109137)	putRecord('#' [1 2 fast] x(13))
		setConstant(checkDesignatorObject)
		setValue(x(8))
		setValue(x(7))
lbl(109147)	definition(x(7) 109199 pid('SAApplication,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2718 6) nil 2) <Q: 807> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(109173)	definition(x(1) 109193 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2721 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(109173)
lbl(109193)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(109147)
lbl(109199)	definition(x(8) 109225 pid('SAApplication,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2718 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 807> 3)
		endDefinition(109199)
lbl(109225)	putRecord('#' [1 2 fast] x(14))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(23) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(109269)	definition(x(7) 109953 pid('SABoolCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2729 6) nil 9) <Q: 808> [y(3) y(13) y(7) y(6)])
		allocateL6
		inlineAt(arbiter x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109624 109940)
lbl(109297)	move(g(1) x(0))
		inlineDot(x(0) bool x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 109624 109940)
lbl(109336)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) 'true' x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 109501 109613)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always true')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109501)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always false')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109613)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2740)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109624)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(bool x(0))
		putConstant(nil x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(3) 109775 109929)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'true' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'false' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL6
		tailSendMsg(setTopNeeded x(2) 2 cache)
lbl(109775)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(arbiter x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		inlineAt(arbiter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getType x(2) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 696> 4)
		createVariable(y(4))
		move(y(2) x(0))
		testBI('Value.isFree' [x(0)]#[x(1)] 109856)
		getLiteral(nil y(4))
		branch(109876)
lbl(109856)	getList(y(4))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Name')
		unifyVariable(x(2))
		getRecord(pn 1 x(2))
		unifyValue(y(1))
lbl(109876)	putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Value')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Type')
		setValue(y(5))
		putList(x(7))
		setValue(x(8))
		setValue(y(4))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('type error' x(2))
		putConstant('Non-boolean arbiter in boolean case statement' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(109929)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2773)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109940)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2732)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109269)
lbl(109953)	definition(x(8) 109979 pid('SABoolCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2729 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 808> 3)
		endDefinition(109953)
lbl(109979)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(109989)	definition(x(7) 110008 pid('SABoolCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2803 6) nil 2) <Q: 809> nil)
		inlineAt(arbiter x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(109989)
lbl(110008)	definition(x(8) 110034 pid('SABoolCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2803 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 809> 3)
		endDefinition(110008)
lbl(110034)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolCase' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110073)	definition(x(7) 110180 pid('SABoolClause,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2809 6) nil 3) <Q: 810> [y(10)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(4) x(0))
		createVariableMove(y(5) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL6
		genFastCall(<Q: 680> 3)
		endDefinition(110073)
lbl(110180)	definition(x(8) 110221 pid('SABoolClause,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2809 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 810> 7)
		endDefinition(110180)
lbl(110221)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(110231)	definition(x(7) 110304 pid('SABoolClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2824 6) nil 3) <Q: 811> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(110231)
lbl(110304)	definition(x(8) 110330 pid('SABoolClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2824 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 811> 3)
		endDefinition(110304)
lbl(110330)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110340)	definition(x(7) 110356 pid('SABoolClause,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2837 6) nil 2) <Q: 812> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(110340)
lbl(110356)	definition(x(8) 110382 pid('SABoolClause,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2837 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 812> 3)
		endDefinition(110356)
lbl(110382)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolClause' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110423)	definition(x(7) 110530 pid('SAPatternCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2850 6) nil 3) <Q: 813> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(2))
lbl(110458)	definition(x(1) 110491 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2858 3) nil 4) unit [x(2) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(arbiter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(saDescendWith x(3) 2 cache)
		endDefinition(110458)
lbl(110491)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescendWith x(2) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110423)
lbl(110530)	definition(x(8) 110556 pid('SAPatternCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2850 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 813> 3)
		endDefinition(110530)
lbl(110556)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110566)	definition(x(7) 110653 pid('SAPatternCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2863 6) nil 3) <Q: 814> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(110613)	definition(x(1) 110633 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2870 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110613)
lbl(110633)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110566)
lbl(110653)	definition(x(8) 110679 pid('SAPatternCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2863 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 814> 3)
		endDefinition(110653)
lbl(110679)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternCase' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110718)	definition(x(7) 110874 pid('SAPatternClause,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2877 6) nil 3) <Q: 815> [y(10)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 679> 4)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		createVariableMove(y(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		putConstant('pattern never matches' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(pattern x(1) cache)
		move(y(1) x(0))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		sendMsg(resetErrorMsg y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(110718)
lbl(110874)	definition(x(8) 110909 pid('SAPatternClause,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2877 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 815> 5)
		endDefinition(110874)
lbl(110909)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(110919)	definition(x(7) 110938 pid('SAPatternClause,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2903 6) nil 2) <Q: 816> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110919)
lbl(110938)	definition(x(8) 110964 pid('SAPatternClause,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2903 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 816> 3)
		endDefinition(110938)
lbl(110964)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternClause' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(19))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SARecordPattern' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111030)	definition(x(7) 111049 pid('SAEquationPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2918 6) nil 2) <Q: 817> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(111030)
lbl(111049)	definition(x(8) 111075 pid('SAEquationPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2918 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 817> 3)
		endDefinition(111049)
lbl(111075)	putRecord('#' [1 2 fast] x(9))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(111085)	definition(x(7) 111104 pid('SAEquationPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2921 6) nil 2) <Q: 818> nil)
		inlineAt(right x(1) cache)
		tailSendMsg('setValue' x(1) 1 cache)
		endDefinition(111085)
lbl(111104)	definition(x(8) 111130 pid('SAEquationPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2921 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 818> 3)
		endDefinition(111104)
lbl(111130)	putRecord('#' [1 2 fast] x(10))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(111140)	definition(x(7) 111159 pid('SAEquationPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2924 6) nil 2) <Q: 819> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(111140)
lbl(111159)	definition(x(8) 111185 pid('SAEquationPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2924 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 819> 3)
		endDefinition(111159)
lbl(111185)	putRecord('#' [1 2 fast] x(11))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111195)	definition(x(7) 111214 pid('SAEquationPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 2) <Q: 820> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(setLastValue x(1) 1 cache)
		endDefinition(111195)
lbl(111214)	definition(x(8) 111240 pid('SAEquationPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 820> 3)
		endDefinition(111214)
lbl(111240)	putRecord('#' [1 2 fast] x(12))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111250)	definition(x(7) 111269 pid('SAEquationPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 2) <Q: 821> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLabel x(1) 1 cache)
		endDefinition(111250)
lbl(111269)	definition(x(8) 111295 pid('SAEquationPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 821> 3)
		endDefinition(111269)
lbl(111295)	putRecord('#' [1 2 fast] x(13))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(111305)	definition(x(7) 111324 pid('SAEquationPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 2933 6) nil 2) <Q: 822> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getArgs x(1) 1 cache)
		endDefinition(111305)
lbl(111324)	definition(x(8) 111350 pid('SAEquationPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 2933 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 822> 3)
		endDefinition(111324)
lbl(111350)	putRecord('#' [1 2 fast] x(14))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(111360)	definition(x(7) 111379 pid('SAEquationPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 2936 6) nil 2) <Q: 823> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(111360)
lbl(111379)	definition(x(8) 111405 pid('SAEquationPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2936 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 823> 3)
		endDefinition(111379)
lbl(111405)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(111415)	definition(x(7) 111434 pid('SAEquationPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 2939 6) nil 2) <Q: 824> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isOpen x(1) 1 cache)
		endDefinition(111415)
lbl(111434)	definition(x(8) 111460 pid('SAEquationPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 2939 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 824> 3)
		endDefinition(111434)
lbl(111460)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(111470)	definition(x(7) 111489 pid('SAEquationPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 2) <Q: 825> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(111470)
lbl(111489)	definition(x(8) 111515 pid('SAEquationPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 825> 3)
		endDefinition(111489)
lbl(111515)	putRecord('#' [1 2 fast] x(17))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(111525)	definition(x(7) 111568 pid('SAEquationPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2947 6) nil 3) <Q: 826> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111525)
lbl(111568)	definition(x(8) 111594 pid('SAEquationPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2947 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 826> 3)
		endDefinition(111568)
lbl(111594)	putRecord('#' [1 2 fast] x(18))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111604)	definition(x(7) 111652 pid('SAEquationPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 4) <Q: 827> nil)
		allocateL3
		inlineAt(right x(2) cache)
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
		endDefinition(111604)
lbl(111652)	definition(x(8) 111687 pid('SAEquationPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 827> 5)
		endDefinition(111652)
lbl(111687)	putRecord('#' [1 2 fast] x(19))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(111697)	definition(x(7) 111716 pid('SAEquationPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 2964 6) nil 3) <Q: 828> nil)
		inlineAt(right x(2) cache)
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111697)
lbl(111716)	definition(x(8) 111751 pid('SAEquationPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 2964 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 828> 5)
		endDefinition(111716)
lbl(111751)	putRecord('#' [1 2 fast] x(20))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(111761)	definition(x(7) 111799 pid('SAEquationPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2971 6) nil 2) <Q: 829> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(111761)
lbl(111799)	definition(x(8) 111825 pid('SAEquationPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2971 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 829> 3)
		endDefinition(111799)
lbl(111825)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquationPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111886)	definition(x(7) 111959 pid('SAElseNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2978 6) nil 3) <Q: 830> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(111886)
lbl(111959)	definition(x(8) 111985 pid('SAElseNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 830> 3)
		endDefinition(111959)
lbl(111985)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(111995)	definition(x(7) 112102 pid('SAElseNode,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2989 6) nil 3) <Q: 831> [y(10)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(111995)
lbl(112102)	definition(x(8) 112143 pid('SAElseNode,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2989 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 831> 7)
		endDefinition(112102)
lbl(112143)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112153)	definition(x(7) 112244 pid('SAElseNode,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3003 6) nil 3) <Q: 832> [y(10)])
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 702> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112153)
lbl(112244)	definition(x(8) 112279 pid('SAElseNode,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 832> 5)
		endDefinition(112244)
lbl(112279)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112289)	definition(x(7) 112305 pid('SAElseNode,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3016 6) nil 2) <Q: 833> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(112289)
lbl(112305)	definition(x(8) 112331 pid('SAElseNode,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 833> 3)
		endDefinition(112305)
lbl(112331)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAElseNode' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112374)	definition(x(7) 112383 pid('SANoElse,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3021 6) nil 1) <Q: 834> nil)
		return
		endDefinition(112374)
lbl(112383)	definition(x(8) 112409 pid('SANoElse,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3021 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 834> 3)
		endDefinition(112383)
lbl(112409)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(112419)	definition(x(7) 112428 pid('SANoElse,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 3024 6) nil 3) <Q: 835> nil)
		return
		endDefinition(112419)
lbl(112428)	definition(x(8) 112469 pid('SANoElse,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3024 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 835> 7)
		endDefinition(112428)
lbl(112469)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112479)	definition(x(7) 112488 pid('SANoElse,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3027 6) nil 2) <Q: 836> nil)
		return
		endDefinition(112479)
lbl(112488)	definition(x(8) 112523 pid('SANoElse,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3027 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 836> 5)
		endDefinition(112488)
lbl(112523)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112533)	definition(x(7) 112542 pid('SANoElse,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3030 6) nil 1) <Q: 837> nil)
		return
		endDefinition(112533)
lbl(112542)	definition(x(8) 112568 pid('SANoElse,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3030 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 837> 3)
		endDefinition(112542)
lbl(112568)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANoElse' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112611)	definition(x(7) 112684 pid('SAThreadNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3036 6) nil 3) <Q: 838> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112611)
lbl(112684)	definition(x(8) 112710 pid('SAThreadNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3036 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 838> 3)
		endDefinition(112684)
lbl(112710)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAThreadNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112747)	definition(x(7) 112865 pid('SATryNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3050 6) nil 3) <Q: 839> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(tryStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(catchStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112747)
lbl(112865)	definition(x(8) 112891 pid('SATryNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3050 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 839> 3)
		endDefinition(112865)
lbl(112891)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATryNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112928)	definition(x(7) 112984 pid('SALockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3083 6) nil 3) <Q: 840> [y(10)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(112928)
lbl(112984)	definition(x(8) 113010 pid('SALockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3083 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 840> 3)
		endDefinition(112984)
lbl(113010)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(113020)	definition(x(7) 113039 pid('SALockNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3090 6) nil 2) <Q: 841> nil)
		inlineAt(lockVar x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(113020)
lbl(113039)	definition(x(8) 113065 pid('SALockNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3090 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 841> 3)
		endDefinition(113039)
lbl(113065)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SALockNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
		createVariable(y(28))
lbl(113112)	definition(x(7) 113438 pid('SAClassNode,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 5) <Q: 842> [y(4) y(14) y(3) y(28)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 689> 4)
		move(g(0) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		inlineAssign(isToplevel x(0) cache)
		inlineAt(parents x(0) cache)
		move(g(1) x(1))
		inlineDot(x(1) 'class' x(4) cache)
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(3) 113314 113370)
		inlineAt(parents x(0) cache)
lbl(113220)	definition(x(1) 113240 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3118 25) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getValue x(2) 1 cache)
		endDefinition(113220)
lbl(113240)	createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(parents x(0) cache)
		move(g(2) x(1))
		createVariable(x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true <M: InheritProperties> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritAttributes> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritFeatures> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritMethods> false 4) 0)
		branch(113381)
lbl(113314)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 2 x(2))
		setConstant('inheriting from non-class ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant('type error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		branch(113381)
lbl(113370)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3115)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113381)	putConstant('class definition failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(designator x(0) cache)
		move(y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(113112)
lbl(113438)	definition(x(8) 113464 pid('SAClassNode,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 842> 3)
		endDefinition(113438)
lbl(113464)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(113474)	definition(x(7) 113884 pid('SAClassNode,InheritProperties/fast' 3 pos('./compiler/StaticAnalysis.oz' 3172 6) nil 6) <Q: 843> [y(14) y(12) y(13) y(3) y(2)])
		allocateL7
		inlineAt(properties x(4) cache)
		move(g(0) x(3))
		inlineDot(x(3) atom x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 113813 113871)
		inlineAt(properties x(0) cache)
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) atom x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 39> 6)
lbl(113554)	definition(x(1) 113607 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3188 21) nil 2) unit [g(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(2) 113589 113594)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getProperties x(1) 1 cache)
lbl(113589)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(113594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113554)
lbl(113607)	move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(113616)	definition(x(1) 113644 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3196 6) nil 3) unit nil)
		testLiteral(x(0) unit 113630)
lbl(113626)	getLiteral(false x(1))
		return
lbl(113630)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant(final x(0))
		genFastCall(<P: 22> 7)
		endDefinition(113616)
lbl(113644)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 700> 8)
		testBool(y(6) 113750 113802)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(4) x(2))
		inlineDot(x(2) printName x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(3) y(3) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(4) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(3) 2)
		putRecord(pn 1 x(4))
		setValue(y(4))
		putRecord('#' 2 x(2))
		setConstant('inheritance from final class ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113750)	definition(x(1) 113768 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3207 34) nil 4) unit nil)
		putConstant(unit x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(113750)
lbl(113768)	move(y(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 39> 6)
		putList(x(0))
		setValue(y(4))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setProperties x(1) 1 cache)
lbl(113802)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3199)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113813)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putRecord('#' 2 x(2))
		setConstant('non-atomic class property ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113871)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3183)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113474)
lbl(113884)	definition(x(8) 113925 pid('SAClassNode,InheritProperties/slow' 1 pos('./compiler/StaticAnalysis.oz' 3172 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 843> 7)
		endDefinition(113884)
lbl(113925)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: InheritProperties>)
		setValue(x(8))
		setValue(x(7))
lbl(113935)	definition(x(7) 114307 pid('SAClassNode,InheritAttributes/fast' 4 pos('./compiler/StaticAnalysis.oz' 3221 6) nil 7) <Q: 844> [y(11) y(14) y(12) y(13)])
		allocateL7
		inlineAt(attributes x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114227 114294)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114146 114216)
		testBool(y(3) 114133 114135)
lbl(114023)	definition(x(1) 114043 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3242 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getAttributes x(2) 1 cache)
		endDefinition(114023)
lbl(114043)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 114131)
lbl(114071)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114118 114120)
lbl(114093)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setAttributes x(1) 1 cache)
lbl(114118)	deAllocateL7
		return
lbl(114120)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3246)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114131)	deAllocateL7
		return
lbl(114133)	deAllocateL7
		return
lbl(114135)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3241)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114146)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Attributes found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate attributes in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114216)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114227)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Attribute found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class attribute ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114294)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3231)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113935)
lbl(114307)	definition(x(8) 114354 pid('SAClassNode,InheritAttributes/slow' 1 pos('./compiler/StaticAnalysis.oz' 3221 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 844> 9)
		endDefinition(114307)
lbl(114354)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: InheritAttributes>)
		setValue(x(8))
		setValue(x(7))
lbl(114364)	definition(x(7) 114736 pid('SAClassNode,InheritFeatures/fast' 4 pos('./compiler/StaticAnalysis.oz' 3280 6) nil 7) <Q: 845> [y(11) y(14) y(12) y(13)])
		allocateL7
		inlineAt(features x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114656 114723)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114575 114645)
		testBool(y(3) 114562 114564)
lbl(114452)	definition(x(1) 114472 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3301 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFeatures x(2) 1 cache)
		endDefinition(114452)
lbl(114472)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 114560)
lbl(114500)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114547 114549)
lbl(114522)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setFeatures x(1) 1 cache)
lbl(114547)	deAllocateL7
		return
lbl(114549)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114560)	deAllocateL7
		return
lbl(114562)	deAllocateL7
		return
lbl(114564)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3300)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114575)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114645)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114656)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114723)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3290)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114364)
lbl(114736)	definition(x(8) 114783 pid('SAClassNode,InheritFeatures/slow' 1 pos('./compiler/StaticAnalysis.oz' 3280 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 845> 9)
		endDefinition(114736)
lbl(114783)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: InheritFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(114793)	definition(x(7) 115817 pid('SAClassNode,InheritMethods/fast' 4 pos('./compiler/StaticAnalysis.oz' 3338 6) nil 10) <Q: 846> [y(14) y(12) y(13) g(56)])
		allocateL(11)
		inlineAt(methods x(4) cache)
lbl(114806)	definition(x(5) 114826 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3339 23) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPattern x(2) 1 cache)
		endDefinition(114806)
lbl(114826)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
lbl(114848)	definition(x(1) 114893 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3349 3) nil 4) unit [g(0)])
		shallowGuard(114880)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(114864)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) literal x(3) cache)
		move(x(2) x(0))
		tailCall(x(3) 2)
lbl(114880)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3349)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114848)
lbl(114893)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
lbl(114905)	definition(x(1) 114964 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3351 3) nil 6) unit [g(0)])
		shallowGuard(114951)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(114929)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(114951)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3351)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114905)
lbl(114964)	move(y(4) x(0))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genFastCall(<Q: 698> 8)
lbl(114976)	definition(x(1) 115043 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3353 3) nil 6) unit [g(0)])
		shallowGuard(115030)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115000)	shallowThen
		testLiteral(x(5) unit 115009)
		getLiteral(true x(1))
		return
lbl(115009)	move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(5) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(115030)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3353)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114976)
lbl(115043)	move(y(4) x(0))
		createVariableMove(y(9) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 115732 115804)
		testBool(y(8) 115589 115721)
		testBool(y(10) 115446 115578)
lbl(115067)	definition(x(1) 115167 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3365 6) nil 6) unit [g(1)])
		shallowGuard(115154)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115091)	shallowThen
		allocateL4
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(2) x(0))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		genFastCall(<P: 29> 6)
		testLiteral(y(3) unit 115141)
		unify(y(1) y(3))
		deAllocateL4
		return
lbl(115141)	move(y(3) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
lbl(115154)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3365)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115067)
lbl(115167)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
lbl(115176)	definition(x(1) 115210 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3371 27) nil 4) unit nil)
		shallowGuard(115197)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(115192)	shallowThen
		unify(x(1) x(2))
		return
lbl(115197)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3371)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115176)
lbl(115210)	move(y(5) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 115365 115435)
		testBool(y(3) 115352 115354)
lbl(115236)	definition(x(1) 115256 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3379 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getMethods x(2) 1 cache)
		endDefinition(115236)
lbl(115256)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) literal x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 115339 115341)
lbl(115287)	move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 115337)
lbl(115306)	putConstant(m x(3))
		move(y(5) x(0))
		callBI('Record.record' [x(3) x(0)]#[x(1)])
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 706> 6)
		move(y(2) x(0))
		move(y(0) x(1))
		deAllocateL
		tailSendMsg(setMethods x(1) 1 cache)
lbl(115337)	deAllocateL
		return
lbl(115339)	deAllocateL
		return
lbl(115341)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3383)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115352)	deAllocateL
		return
lbl(115354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115365)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Method names')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate method names in class definition' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115435)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115446)	getRecord('#' 2 y(9))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message label')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115578)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3361)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115589)	getRecord('#' 2 y(7))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message found')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115721)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115732)	getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('non-literal method label ' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115804)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3355)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114793)
lbl(115817)	definition(x(8) 115864 pid('SAClassNode,InheritMethods/slow' 1 pos('./compiler/StaticAnalysis.oz' 3338 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 846> 9)
		endDefinition(115817)
lbl(115864)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: InheritMethods>)
		setValue(x(8))
		setValue(x(7))
lbl(115874)	definition(x(7) 115930 pid('SAClassNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3443 6) nil 2) <Q: 847> [y(28)])
		allocateL2
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		sendMsg(pushSelf y(0) 1 cache)
		inlineAt(methods x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(0) true <M: SaBody> false 2) 0)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(popSelf x(0) 0 cache)
		endDefinition(115874)
lbl(115930)	definition(x(8) 115956 pid('SAClassNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3443 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 847> 3)
		endDefinition(115930)
lbl(115956)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(115966)	definition(x(7) 116015 pid('SAClassNode,SaBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 3452 6) nil 3) <Q: 848> [y(28)])
		match(x(0) ht(116000 [onScalar(nil 115975) onRecord('|' 2 115976)]))
lbl(115975)	return
lbl(115976)	allocateL2
		getVarVar(x(2) y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		sendMsg(saDescend x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: SaBody> true 2) 0)
lbl(116000)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(3457)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(115966)
lbl(116015)	definition(x(8) 116050 pid('SAClassNode,SaBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 3452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 848> 5)
		endDefinition(116015)
lbl(116050)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: SaBody>)
		setValue(x(8))
		setValue(x(7))
lbl(116060)	definition(x(7) 116286 pid('SAClassNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3459 6) nil 2) <Q: 849> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(parents x(0) cache)
lbl(116086)	definition(x(1) 116106 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3463 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116086)
lbl(116106)	genFastCall(<P: 34> 4)
		inlineAt(properties x(0) cache)
lbl(116114)	definition(x(1) 116134 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3467 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116114)
lbl(116134)	genFastCall(<P: 34> 4)
		inlineAt(attributes x(0) cache)
lbl(116142)	definition(x(1) 116193 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3469 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116179)
lbl(116153)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116179)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116142)
lbl(116193)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(116201)	definition(x(1) 116252 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3476 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116238)
lbl(116212)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116238)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116201)
lbl(116252)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
lbl(116260)	definition(x(1) 116280 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3483 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(preApplyEnvSubst x(1) 1 cache)
		endDefinition(116260)
lbl(116280)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116060)
lbl(116286)	definition(x(8) 116312 pid('SAClassNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3459 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 849> 3)
		endDefinition(116286)
lbl(116312)	putRecord('#' [1 2 fast] x(16))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(y(28) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAClassNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(116360)	definition(x(7) 116519 pid('SAMethod,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3488 6) nil 4) <Q: 850> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116372)	definition(x(1) 116392 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3491 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116372)
lbl(116392)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116404)	definition(x(1) 116425 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3492 16) nil 4) unit nil)
		callBI('Record.label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116404)
lbl(116425)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116437)	definition(x(1) 116455 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3494 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116437)
lbl(116455)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116464)	definition(x(1) 116482 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3495 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116464)
lbl(116482)	move(y(3) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116360)
lbl(116519)	definition(x(8) 116545 pid('SAMethod,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3488 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 850> 3)
		endDefinition(116519)
lbl(116545)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(116555)	definition(x(7) 116670 pid('SAMethod,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3499 6) nil 3) <Q: 851> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 116655 116657)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(1) x(0))
		inlineAssign(predicateRef x(0) cache)
lbl(116655)	deAllocateL4
		return
lbl(116657)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3509)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116555)
lbl(116670)	definition(x(8) 116696 pid('SAMethod,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3499 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 851> 3)
		endDefinition(116670)
lbl(116696)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(116706)	definition(x(7) 116758 pid('SAMethod,preApplyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 2) <Q: 852> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(formalArgs x(0) cache)
lbl(116732)	definition(x(1) 116752 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3516 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116732)
lbl(116752)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116706)
lbl(116758)	definition(x(8) 116784 pid('SAMethod,preApplyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 852> 3)
		endDefinition(116758)
lbl(116784)	putRecord('#' [1 2 fast] x(11))
		setConstant(preApplyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethod' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(116825)	definition(x(7) 117012 pid('SAMethodWithDesignator,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3520 6) nil 4) <Q: 853> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116837)	definition(x(1) 116857 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3523 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116837)
lbl(116857)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116869)	definition(x(1) 116890 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3524 16) nil 4) unit nil)
		callBI('Record.label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116869)
lbl(116890)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116902)	definition(x(1) 116920 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3526 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116902)
lbl(116920)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(isOpen x(0) cache)
		createVariable(y(2))
		testBool(x(0) 116945 116973)
		getLiteral(unit y(2))
		branch(116984)
lbl(116945)	definition(x(1) 116963 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3527 43) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116945)
lbl(116963)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		genFastCall(<P: 29> 6)
		branch(116984)
lbl(116973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3527)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116984)	getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116825)
lbl(117012)	definition(x(8) 117038 pid('SAMethodWithDesignator,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 853> 3)
		endDefinition(117012)
lbl(117038)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(117048)	definition(x(7) 117121 pid('SAMethodWithDesignator,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3531 6) nil 3) <Q: 854> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(117048)
lbl(117121)	definition(x(8) 117147 pid('SAMethodWithDesignator,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3531 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 854> 3)
		endDefinition(117121)
lbl(117147)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethodWithDesignator' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117186)	definition(x(7) 117209 pid('SAMethFormal,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3545 6) nil 2) <Q: 855> nil)
		getRecord(required 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117186)
lbl(117209)	definition(x(8) 117235 pid('SAMethFormal,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3545 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 855> 3)
		endDefinition(117209)
lbl(117235)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(117245)	definition(x(7) 117264 pid('SAMethFormal,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3548 6) nil 2) <Q: 856> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117245)
lbl(117264)	definition(x(8) 117290 pid('SAMethFormal,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3548 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 856> 3)
		endDefinition(117264)
lbl(117290)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormal' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117329)	definition(x(7) 117352 pid('SAMethFormalOptional,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3553 6) nil 2) <Q: 857> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117329)
lbl(117352)	definition(x(8) 117378 pid('SAMethFormalOptional,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3553 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 857> 3)
		endDefinition(117352)
lbl(117378)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalOptional' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117415)	definition(x(7) 117438 pid('SAMethFormalWithDefault,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3558 6) nil 2) <Q: 858> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117415)
lbl(117438)	definition(x(8) 117464 pid('SAMethFormalWithDefault,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3558 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 858> 3)
		endDefinition(117438)
lbl(117464)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalWithDefault' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117501)	definition(x(7) 117557 pid('SAObjectLockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) <Q: 859> [y(10)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117501)
lbl(117557)	definition(x(8) 117583 pid('SAObjectLockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 859> 3)
		endDefinition(117557)
lbl(117583)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAObjectLockNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117620)	definition(x(7) 117629 pid('SAGetSelf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3575 6) nil 1) <Q: 860> nil)
		return
		endDefinition(117620)
lbl(117629)	definition(x(8) 117655 pid('SAGetSelf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3575 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 860> 3)
		endDefinition(117629)
lbl(117655)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(117665)	definition(x(7) 117684 pid('SAGetSelf,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3578 6) nil 2) <Q: 861> nil)
		inlineAt(destination x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117665)
lbl(117684)	definition(x(8) 117710 pid('SAGetSelf,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3578 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 861> 3)
		endDefinition(117684)
lbl(117710)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAGetSelf' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117749)	definition(x(7) 117836 pid('SAIfNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3584 6) nil 3) <Q: 862> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(117782)	definition(x(1) 117802 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3592 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(117782)
lbl(117802)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117749)
lbl(117836)	definition(x(8) 117862 pid('SAIfNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3584 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 862> 3)
		endDefinition(117836)
lbl(117862)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAIfNode' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117899)	definition(x(7) 117972 pid('SAChoicesAndDisjunctions,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3600 6) nil 3) <Q: 863> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(117932)	definition(x(1) 117952 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3608 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(117932)
lbl(117952)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117899)
lbl(117972)	definition(x(8) 117998 pid('SAChoicesAndDisjunctions,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3600 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 863> 3)
		endDefinition(117972)
lbl(117998)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAChoicesAndDisjunctions' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(118035)	definition(x(7) 118119 pid('SAClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3615 6) nil 3) <Q: 864> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(guard x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(118035)
lbl(118119)	definition(x(8) 118145 pid('SAClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3615 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 864> 3)
		endDefinition(118119)
lbl(118145)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAClause' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(118188)	definition(x(7) 118218 pid('SAValueNode,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3633 6) nil 2) <Q: 865> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(118188)
lbl(118218)	definition(x(8) 118232 pid('SAValueNode,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3633 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 865> 1)
		endDefinition(118218)
lbl(118232)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(118242)	definition(x(7) 118259 pid('SAValueNode,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3636 6) nil 2) <Q: 866> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118242)
lbl(118259)	definition(x(8) 118285 pid('SAValueNode,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3636 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 866> 3)
		endDefinition(118259)
lbl(118285)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(118295)	definition(x(7) 118311 pid('SAValueNode,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3639 6) nil 2) <Q: 867> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(118295)
lbl(118311)	definition(x(8) 118346 pid('SAValueNode,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3639 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 867> 5)
		endDefinition(118311)
lbl(118346)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(118356)	definition(x(7) 118379 pid('SAValueNode,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3642 6) nil 2) <Q: 868> nil)
		getRecord(value 1 x(1))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118356)
lbl(118379)	definition(x(8) 118414 pid('SAValueNode,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3642 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 868> 5)
		endDefinition(118379)
lbl(118414)	putRecord('#' [1 2 fast] x(12))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(118424)	definition(x(7) 118441 pid('SAValueNode,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 3645 6) nil 2) <Q: 869> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(118424)
lbl(118441)	definition(x(8) 118476 pid('SAValueNode,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3645 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 869> 5)
		endDefinition(118441)
lbl(118476)	putRecord('#' [1 2 fast] x(13))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(118486)	definition(x(7) 118503 pid('SAValueNode,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 3648 6) nil 3) <Q: 870> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(118486)
lbl(118503)	definition(x(8) 118544 pid('SAValueNode,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3648 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 870> 7)
		endDefinition(118503)
lbl(118544)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(118554)	definition(x(7) 118568 pid('SAValueNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 2) <Q: 871> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(118554)
lbl(118568)	definition(x(8) 118594 pid('SAValueNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 871> 3)
		endDefinition(118568)
lbl(118594)	putRecord('#' [1 2 fast] x(15))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(118604)	definition(x(7) 118613 pid('SAValueNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 1) <Q: 872> nil)
		return
		endDefinition(118604)
lbl(118613)	definition(x(8) 118639 pid('SAValueNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 872> 3)
		endDefinition(118613)
lbl(118639)	putRecord('#' [1 2 fast] x(16))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(118649)	definition(x(7) 118661 pid('SAValueNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 2) <Q: 873> nil)
		unify(x(0) x(1))
		return
		endDefinition(118649)
lbl(118661)	definition(x(8) 118696 pid('SAValueNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 873> 5)
		endDefinition(118661)
lbl(118696)	putRecord('#' [1 2 fast] x(17))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(118706)	definition(x(7) 118854 pid('SAValueNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 6) <Q: 874> nil)
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(2) 118839 118841)
		inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 118766)
		deAllocateL5
		return
lbl(118766)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(118839)	deAllocateL5
		return
lbl(118841)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3665)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(118706)
lbl(118854)	definition(x(8) 118889 pid('SAValueNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 874> 5)
		endDefinition(118854)
lbl(118889)	putRecord('#' [1 2 fast] x(18))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(118899)	definition(x(7) 118908 pid('SAValueNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3682 6) nil 1) <Q: 875> nil)
		return
		endDefinition(118899)
lbl(118908)	definition(x(8) 118934 pid('SAValueNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3682 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 875> 3)
		endDefinition(118908)
lbl(118934)	putRecord('#' [1 2 fast] x(19))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118944)	definition(x(7) 118953 pid('SAValueNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3685 6) nil 1) <Q: 876> nil)
		return
		endDefinition(118944)
lbl(118953)	definition(x(8) 118979 pid('SAValueNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3685 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 876> 3)
		endDefinition(118953)
lbl(118979)	putRecord('#' [1 2 fast] x(20))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAValueNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(119043)	definition(x(7) 119083 pid('SAVariable,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3694 6) nil 4) <Q: 877> [y(7)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(value x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(119043)
lbl(119083)	definition(x(8) 119097 pid('SAVariable,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3694 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 877> 1)
		endDefinition(119083)
lbl(119097)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(119107)	definition(x(7) 119124 pid('SAVariable,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3697 6) nil 2) <Q: 878> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119107)
lbl(119124)	definition(x(8) 119150 pid('SAVariable,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3697 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 878> 3)
		endDefinition(119124)
lbl(119150)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(119160)	definition(x(7) 119174 pid('SAVariable,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3700 6) nil 1) <Q: 879> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(119160)
lbl(119174)	definition(x(8) 119200 pid('SAVariable,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3700 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 879> 3)
		endDefinition(119174)
lbl(119200)	putRecord('#' [1 2 fast] x(11))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(119210)	definition(x(7) 119226 pid('SAVariable,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3703 6) nil 2) <Q: 880> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(119210)
lbl(119226)	definition(x(8) 119261 pid('SAVariable,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3703 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 880> 5)
		endDefinition(119226)
lbl(119261)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(119271)	definition(x(7) 119319 pid('SAVariable,outputDebugType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3706 6) nil 3) <Q: 881> nil)
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 119300)
		inlineAt(type x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 696> 5)
lbl(119300)	inlineAt(lastValue x(2) cache)
		move(x(0) x(1))
		putConstant(3 x(0))
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(119271)
lbl(119319)	definition(x(8) 119345 pid('SAVariable,outputDebugType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3706 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 881> 3)
		endDefinition(119319)
lbl(119345)	putRecord('#' [1 2 fast] x(13))
		setConstant(outputDebugType)
		setValue(x(8))
		setValue(x(7))
lbl(119355)	definition(x(7) 119489 pid('SAVariable,outputDebugMeths/fast' 1 pos('./compiler/StaticAnalysis.oz' 3711 6) nil 4) <Q: 882> nil)
		allocateL3
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119379)
lbl(119374)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119379)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 119374)
lbl(119391)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119482 [onScalar('class' 119405) onScalar(object 119439)]))
lbl(119405)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getMethods x(1) 1 cache)
		testLiteral(y(1) unit 119428)
lbl(119423)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119428)	move(y(1) x(0))
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119439)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getMethods y(1) 1 cache)
		testLiteral(y(2) unit 119471)
lbl(119466)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119471)	move(y(2) x(0))
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119482)	getLiteral(unit y(0))
		deAllocateL3
		return
		endDefinition(119355)
lbl(119489)	definition(x(8) 119515 pid('SAVariable,outputDebugMeths/slow' 1 pos('./compiler/StaticAnalysis.oz' 3711 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 882> 3)
		endDefinition(119489)
lbl(119515)	putRecord('#' [1 2 fast] x(14))
		setConstant(outputDebugMeths)
		setValue(x(8))
		setValue(x(7))
lbl(119525)	definition(x(7) 119621 pid('SAVariable,outputDebugAttrs/fast' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 4) <Q: 883> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119549)
lbl(119544)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119549)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 119544)
lbl(119561)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119614 [onScalar('class' 119575) onScalar(object 119587)]))
lbl(119575)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119587)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119614)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119525)
lbl(119621)	definition(x(8) 119647 pid('SAVariable,outputDebugAttrs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 883> 3)
		endDefinition(119621)
lbl(119647)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputDebugAttrs)
		setValue(x(8))
		setValue(x(7))
lbl(119657)	definition(x(7) 119753 pid('SAVariable,outputDebugFeats/fast' 1 pos('./compiler/StaticAnalysis.oz' 3737 6) nil 4) <Q: 884> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119681)
lbl(119676)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119681)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 119676)
lbl(119693)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119746 [onScalar('class' 119707) onScalar(object 119719)]))
lbl(119707)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119719)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119746)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119657)
lbl(119753)	definition(x(8) 119779 pid('SAVariable,outputDebugFeats/slow' 1 pos('./compiler/StaticAnalysis.oz' 3737 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 884> 3)
		endDefinition(119753)
lbl(119779)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputDebugFeats)
		setValue(x(8))
		setValue(x(7))
lbl(119789)	definition(x(7) 119859 pid('SAVariable,outputDebugProps/fast' 1 pos('./compiler/StaticAnalysis.oz' 3747 6) nil 4) <Q: 885> nil)
		allocateL1
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119813)
lbl(119808)	getLiteral(unit y(0))
		deAllocateL1
		return
lbl(119813)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('Value.hasFeature' [x(1) x(2)]#[x(3)] 119808)
lbl(119825)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		testLiteral(x(1) 'class' 119852)
lbl(119840)	inlineAt(lastValue x(1) cache)
		deAllocateL1
		tailSendMsg(getProperties x(1) 1 cache)
lbl(119852)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(119789)
lbl(119859)	definition(x(8) 119885 pid('SAVariable,outputDebugProps/slow' 1 pos('./compiler/StaticAnalysis.oz' 3747 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 885> 3)
		endDefinition(119859)
lbl(119885)	putRecord('#' [1 2 fast] x(17))
		setConstant(outputDebugProps)
		setValue(x(8))
		setValue(x(7))
lbl(119895)	definition(x(7) 119912 pid('SAVariable,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3756 6) nil 2) <Q: 886> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119895)
lbl(119912)	definition(x(8) 119938 pid('SAVariable,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3756 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 886> 3)
		endDefinition(119912)
lbl(119938)	putRecord('#' [1 2 fast] x(18))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(119948)	definition(x(7) 119989 pid('SAVariable,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3759 6) nil 2) <Q: 887> nil)
		inlineAssign(lastValue x(0) cache)
		testLiteral(x(0) unit 119964)
		return
lbl(119964)	allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getType x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(119948)
lbl(119989)	definition(x(8) 120015 pid('SAVariable,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3759 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 887> 3)
		endDefinition(119989)
lbl(120015)	putRecord('#' [1 2 fast] x(19))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(35))
lbl(120027)	definition(x(7) 120228 pid('SAVariable,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3764 6) nil 3) <Q: 888> [y(35)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 120045)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120045)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 120108 120215)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 120101)
		deAllocateL2
		return
lbl(120101)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120108)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 120202 120204)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 120154)
		deAllocateL2
		return
lbl(120154)	testLiteral(y(1) unit 120175)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(120175)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 120195)
		deAllocateL2
		return
lbl(120195)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120202)	deAllocateL2
		return
lbl(120204)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3780)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(120215)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3770)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(120027)
lbl(120228)	definition(x(8) 120254 pid('SAVariable,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3764 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 888> 3)
		endDefinition(120228)
lbl(120254)	putRecord('#' [1 2 fast] x(20))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(120264)	definition(x(7) 120297 pid('SAVariable,valToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3806 6) nil 6) <Q: 889> nil)
		inlineAt(printName x(4) cache)
		getSelf(x(5))
		move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(1))
		putConstant(3 x(2))
		tailSendMsg(<M: ValToSubst> x(5) 4 cache)
		endDefinition(120264)
lbl(120297)	definition(x(8) 120323 pid('SAVariable,valToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3806 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 889> 3)
		endDefinition(120297)
lbl(120323)	putRecord('#' [1 2 fast] x(21))
		setConstant(valToSubst)
		setValue(x(8))
		setValue(x(7))
lbl(120333)	definition(x(7) 121475 pid('SAVariable,ValToSubst/fast' 4 pos('./compiler/StaticAnalysis.oz' 3809 6) nil 8) <Q: 890> [y(35) g(61) y(4) g(53) g(56) y(0) g(1) g(62) g(63) g(64) g(65) g(2) g(66) g(13)])
		putConstant(0 x(4))
		testLE(x(2) x(4) x(5) 120353)
		move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120353)	testBI('Value.isDet' [x(3)]#[x(4)] 121467)
		testBI('Int.is' [x(3)]#[x(4)] 120396)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) intNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120396)	testBI('Float.is' [x(3)]#[x(4)] 120435)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) floatNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120435)	testBI('Atom.is' [x(3)]#[x(4)] 120474)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) atomNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120474)	testBI('Name.is' [x(3)]#[x(4)] 120513)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(true x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120513)	testBI('Record.is' [x(3)]#[x(4)] 120729)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		move(y(3) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		move(x(1) y(5))
		createVariable(y(6))
		testBI('Atom.is' [x(1)]#[x(2)] 120583)
		move(g(2) x(2))
		inlineDot(x(2) atomNode x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120629)
lbl(120583)	testBI('Name.is' [x(1)]#[x(2)] 120618)
		move(g(2) x(2))
		inlineDot(x(2) nameToken x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120629)
lbl(120618)	putRecord(kernel 2 x(2))
		setConstant(noElse)
		setConstant(3856)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(120629)	getSelf(x(2))
		putRecord('#' 2 x(7))
		setValue(y(3))
		setValue(x(2))
		putList(x(1))
		setValue(x(7))
		setValue(y(1))
		getSelf(x(3))
		move(x(3) x(6))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		move(y(0) x(3))
		createVariableMove(y(7) x(4))
		createVariableMove(y(8) x(5))
		sendMsg(recordValToArgs x(6) 6 cache)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(7) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(5) x(0) y(8) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL9
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120729)	allocateL7
		move(g(5) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		moveMoveXYYX(x(3) y(0) y(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 120784 121456)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120784)	move(y(0) x(0))
		testBI('Procedure.is' [x(0)]#[x(1)] 120828)
		move(g(2) x(1))
		inlineDot(x(1) procedureToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120828)	createVariableMove(y(1) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(1) 120975 121445)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
lbl(120909)	definition(x(1) 120926 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3896 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(120909)
lbl(120926)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(1) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120975)	move(y(0) x(0))
		testBI('Object.is' [x(0)]#[x(1)] 121150)
		callBI('Class.get' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(6) y(1) x(0))
		sendMsg(init y(6) 1 cache)
lbl(121058)	definition(x(1) 121075 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3913 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(121058)
lbl(121075)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(6) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(6) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(6) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(6) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(y(6) x(1))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121150)	testBI('Cell.is' [x(0)]#[x(1)] 121182)
		move(g(2) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121182)	testBI('Lock.is' [x(0)]#[x(1)] 121214)
		move(g(2) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121214)	testBI('Port.is' [x(0)]#[x(1)] 121246)
		move(g(2) x(1))
		inlineDot(x(1) portToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121246)	testBI('Array.is' [x(0)]#[x(1)] 121278)
		move(g(2) x(1))
		inlineDot(x(1) arrayToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121278)	testBI('Dictionary.is' [x(0)]#[x(1)] 121310)
		move(g(2) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121310)	testBI('Space.is' [x(0)]#[x(1)] 121342)
		move(g(2) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121342)	testBI('Thread.is' [x(0)]#[x(1)] 121374)
		move(g(2) x(1))
		inlineDot(x(1) threadToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121374)	testBI('BitArray.is' [x(0)]#[x(1)] 121406)
		move(g(2) x(1))
		inlineDot(x(1) bitArrayToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121406)	testBI('Chunk.is' [x(0)]#[x(1)] 121438)
		move(g(2) x(1))
		inlineDot(x(1) chunkToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121438)	move(g(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121445)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3887)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121456)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3872)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121467)	move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
		endDefinition(120333)
lbl(121475)	definition(x(8) 121522 pid('SAVariable,ValToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3809 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 890> 9)
		endDefinition(121475)
lbl(121522)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ValToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(121532)	definition(x(7) 121896 pid('SAVariable,recordValToArgs/fast' 6 pos('./compiler/StaticAnalysis.oz' 3975 6) nil 10) <Q: 891> [y(4) g(67)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(5) y(2))
		testList(y(0) 121869)
lbl(121551)	getVarVar(x(6) x(7))
		shallowGuard(121869)
		getRecord('#' 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(121564)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(7) y(7))
		move(y(6) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 705> 6)
		createVariable(y(9))
		move(y(5) x(0))
		testBI('Atom.is' [x(0)]#[x(1)] 121627)
		move(g(0) x(1))
		inlineDot(x(1) atomNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121704)
lbl(121627)	testBI('Name.is' [x(0)]#[x(1)] 121660)
		move(g(0) x(1))
		inlineDot(x(1) nameToken x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(true x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121704)
lbl(121660)	testBI('Int.is' [x(0)]#[x(1)] 121693)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121704)
lbl(121693)	putRecord(kernel 2 x(1))
		setConstant(noElse)
		setConstant(3987)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(121704)	createVariable(y(10))
		testLiteral(y(8) unit 121804)
		putRecord('#' 3 x(0))
		setValue(y(4))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 194> 4)
		move(y(8) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(2)])
		moveMoveXYXY(x(1) y(8) x(2) y(11))
		move(y(8) x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(11) 3 cache)
		move(y(3) x(0))
		inlineMinus1(x(0) x(2))
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		move(y(6) x(3))
		sendMsg(<M: ValToSubst> y(11) 4 cache)
		move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(11) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
		branch(121822)
lbl(121804)	move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(8) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
lbl(121822)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(10))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(10))
		getSelf(x(7))
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		tailSendMsg(recordValToArgs x(7) 6 cache)
lbl(121869)	testLiteral(y(0) nil 121881)
lbl(121873)	getLiteral(nil y(1))
		getLiteral(nil y(2))
		deAllocateL
		return
lbl(121881)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(4015)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(121532)
lbl(121896)	definition(x(8) 121955 pid('SAVariable,recordValToArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3975 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 891> 13)
		endDefinition(121896)
lbl(121955)	putRecord('#' [1 2 fast] x(23))
		setConstant(recordValToArgs)
		setValue(x(8))
		setValue(x(7))
		putConstant(3 x(7))
lbl(121968)	definition(x(8) 121982 pid('SAVariable,typeToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4017 6) nil 2) <Q: 892> [y(35) x(7)])
		move(g(1) x(1))
		genCall(gci(g(0) true <M: TypeToSubst> true 2) 0)
		endDefinition(121968)
lbl(121982)	definition(x(7) 122008 pid('SAVariable,typeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4017 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 892> 3)
		endDefinition(121982)
lbl(122008)	putRecord('#' [1 2 fast] x(24))
		setConstant(typeToSubst)
		setValue(x(7))
		setValue(x(8))
lbl(122018)	definition(x(7) 122254 pid('SAVariable,TypeToSubst/fast' 2 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 6) <Q: 893> [y(35) y(7) y(4) g(56)])
		match(x(0) ht(122239 [onRecord(value 1 122027) onRecord(type 1 122032) onRecord(record 1 122060)]))
lbl(122027)	getVariable(x(0))
		genCall(gci(g(0) true valToSubst true 1) 0)
lbl(122032)	allocateL1
		getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) encode x(3) cache)
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setType true 1) 0)
lbl(122060)	allocateL6
		getVariable(x(0))
		callBI('Record.label' [x(0)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		testBI('Atom.is' [x(2)]#[x(3)] 122111)
		move(g(2) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(unit x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122157)
lbl(122111)	testBI('Name.is' [x(2)]#[x(3)] 122146)
		move(g(2) x(3))
		inlineDot(x(3) nameToken x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(true x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122157)
lbl(122146)	putRecord(kernel 2 x(3))
		setConstant(noElse)
		setConstant(4032)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(122157)	move(y(1) x(0))
		callBI('Record.arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: RecordToSubst> false 5) 0)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(122239)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4038)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(122018)
lbl(122254)	definition(x(8) 122289 pid('SAVariable,TypeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 893> 5)
		endDefinition(122254)
lbl(122289)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: TypeToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122299)	definition(x(7) 122573 pid('SAVariable,RecordToSubst/fast' 5 pos('./compiler/StaticAnalysis.oz' 4040 6) nil 8) <Q: 894> [y(4) y(35)])
		match(x(0) ht(122558 [onScalar(nil 122308) onRecord('|' 2 122315)]))
lbl(122308)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(122315)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) y(5))
		createVariable(y(6))
		testBI('Atom.is' [x(0)]#[x(5)] 122367)
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122444)
lbl(122367)	testBI('Name.is' [x(0)]#[x(5)] 122400)
		move(g(0) x(5))
		inlineDot(x(5) nameToken x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122444)
lbl(122400)	testBI('Int.is' [x(0)]#[x(5)] 122433)
		move(g(0) x(5))
		inlineDot(x(5) intNode x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122444)
lbl(122433)	putRecord(kernel 2 x(5))
		setConstant(noElse)
		setConstant(4048)
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(122444)	move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		move(x(1) y(7))
		putConstant('' x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(7) 3 cache)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(2) x(3))
		inlineMinus1(x(3) x(4))
		move(x(2) x(0))
		move(x(4) x(1))
		sendMsg(<M: TypeToSubst> y(7) 2 cache)
		putConstant(unit x(0))
		createVariableMove(y(8) x(1))
		sendMsg(occ y(7) 2 cache)
		sendMsg(updateValue y(8) 0 cache)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(8))
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(8))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL9
		genCall(gci(g(1) true <M: RecordToSubst> true 5) 0)
lbl(122558)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4059)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(122299)
lbl(122573)	definition(x(8) 122626 pid('SAVariable,RecordToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4040 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 894> 11)
		endDefinition(122573)
lbl(122626)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: RecordToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122636)	definition(x(7) 122718 pid('SAVariable,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4061 6) nil 5) <Q: 895> [y(7)])
		inlineAt(lastValue x(2) cache)
		testLiteral(x(2) unit 122677)
lbl(122651)	getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(122677)	putConstant(<M: ImAVariableOccurrence> x(3))
		testBI('Value.hasFeature' [x(2) x(3)]#[x(4)] 122710)
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(122710)	tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(122636)
lbl(122718)	definition(x(8) 122753 pid('SAVariable,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4061 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 895> 5)
		endDefinition(122718)
lbl(122753)	putRecord('#' [1 2 fast] x(27))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(122763)	definition(x(7) 122948 pid('SAVariable,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4071 6) nil 3) <Q: 896> [y(35)])
		allocateL4
		inlineAt(lastValue x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(0) cache)
		testLiteral(x(0) unit 122806)
lbl(122795)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122806)	inlineAt(lastValue x(0) cache)
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 122868 122935)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122868)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(2) 122919 122924)
		inlineAt(lastValue x(0) cache)
		moveMoveXYYX(x(0) y(2) y(0) x(1))
		getSelf(x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(reachable x(2) 2 cache)
lbl(122919)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(122924)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4091)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(122935)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4086)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(122763)
lbl(122948)	definition(x(8) 122983 pid('SAVariable,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4071 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 896> 5)
		endDefinition(122948)
lbl(122983)	putRecord('#' [1 2 fast] x(28))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 20 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		move(y(35) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(123055)	definition(x(7) 123149 pid('SAVariableOccurrence,outputDebugValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4108 6) nil 5) <Q: 897> [y(2)])
		allocateL4
		getRecord('#' 3 x(0))
		unifyVariable(y(0))
		unifyLiteral(' // ')
		unifyVariable(y(1))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(2))
		getSelf(x(4))
		createVariableMove(y(3) x(0))
		sendMsg(getValue x(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(y(2) 4)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(0))
		getSelf(x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		move(y(1) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		deAllocateL4
		tailCall(x(4) 4)
		endDefinition(123055)
lbl(123149)	definition(x(8) 123175 pid('SAVariableOccurrence,outputDebugValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4108 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 897> 3)
		endDefinition(123149)
lbl(123175)	putRecord('#' [1 2 fast] x(9))
		setConstant(outputDebugValue)
		setValue(x(8))
		setValue(x(7))
lbl(123185)	definition(x(7) 123225 pid('SAVariableOccurrence,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4114 6) nil 2) <Q: 898> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		move(x(0) y(0))
		getSelf(x(0))
		sendMsg(deref x(1) 1 cache)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(123185)
lbl(123225)	definition(x(8) 123251 pid('SAVariableOccurrence,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4114 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 898> 3)
		endDefinition(123225)
lbl(123251)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(123261)	definition(x(7) 123280 pid('SAVariableOccurrence,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4118 6) nil 2) <Q: 899> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(123261)
lbl(123280)	definition(x(8) 123306 pid('SAVariableOccurrence,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 899> 3)
		endDefinition(123280)
lbl(123306)	putRecord('#' [1 2 fast] x(11))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(123318)	definition(x(7) 123348 pid('SAVariableOccurrence,updateValue/fast' 0 pos('./compiler/StaticAnalysis.oz' 4128 6) nil 2) <Q: 900> [y(2)])
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
		endDefinition(123318)
lbl(123348)	definition(x(8) 123362 pid('SAVariableOccurrence,updateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4128 6) nil 1) unit nil)
		getLiteral(updateValue x(0))
		genFastCall(<Q: 900> 1)
		endDefinition(123348)
lbl(123362)	putRecord('#' [1 2 fast] x(12))
		setConstant(updateValue)
		setValue(x(8))
		setValue(x(7))
lbl(123372)	definition(x(7) 123720 pid('SAVariableOccurrence,UpdateValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4131 6) nil 4) <Q: 901> [y(2) y(4)])
		testLiteral(x(0) unit 123392)
		getSelf(x(2))
		getSelf(x(0))
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123392)	allocateL6
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(0) 1 cache)
		testBool(y(1) 123467 123707)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 123439)
lbl(123427)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123439)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		inlineAt(variable x(0) cache)
		move(y(2) x(1))
		testBI('Value.\'\\=\'' [x(1) x(0)]#[x(2)] 123427)
lbl(123460)	move(y(1) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
lbl(123467)	createVariableMove(y(1) x(0))
		sendMsg(isConstruction y(0) 1 cache)
		testBool(y(1) 123684 123696)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getArgs y(0) 1 cache)
lbl(123507)	definition(x(1) 123563 pid('' 2 pos('./compiler/StaticAnalysis.oz' 4161 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 123549)
lbl(123518)	allocateL2
		getVarVar(x(2) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(getLastValue x(2) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getLastValue x(1) 1 cache)
lbl(123549)	move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getLastValue x(2) 1 cache)
		endDefinition(123507)
lbl(123563)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 123602)
lbl(123581)	moveMoveYXYX(y(1) x(0) y(2) x(2))
		testBI('Value.\'==\'' [x(0) x(2)]#[x(3)] 123602)
lbl(123590)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123602)	move(g(1) x(0))
		inlineDot(x(0) construction x(1) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(0))
		sendMsg(isOpen y(0) 1 cache)
		move(y(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(3) x(2))
		sendMsg(init y(5) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(1) x(0))
		sendMsg('setValue' y(5) 1 cache)
		move(y(5) x(0))
		sendMsg(setLastValue y(5) 1 cache)
		getSelf(x(2))
		move(y(5) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123684)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123696)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4151)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(123707)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(123372)
lbl(123720)	definition(x(8) 123746 pid('SAVariableOccurrence,UpdateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 901> 3)
		endDefinition(123720)
lbl(123746)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: UpdateValue>)
		setValue(x(8))
		setValue(x(7))
lbl(123756)	definition(x(7) 123775 pid('SAVariableOccurrence,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4203 6) nil 2) <Q: 902> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(setType x(1) 1 cache)
		endDefinition(123756)
lbl(123775)	definition(x(8) 123801 pid('SAVariableOccurrence,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4203 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 902> 3)
		endDefinition(123775)
lbl(123801)	putRecord('#' [1 2 fast] x(14))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(123811)	definition(x(7) 123830 pid('SAVariableOccurrence,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4206 6) nil 2) <Q: 903> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(123811)
lbl(123830)	definition(x(8) 123856 pid('SAVariableOccurrence,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4206 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 903> 3)
		endDefinition(123830)
lbl(123856)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(123866)	definition(x(7) 123885 pid('SAVariableOccurrence,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4209 6) nil 3) <Q: 904> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(123866)
lbl(123885)	definition(x(8) 123920 pid('SAVariableOccurrence,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4209 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 904> 5)
		endDefinition(123885)
lbl(123920)	putRecord('#' [1 2 fast] x(16))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(123930)	definition(x(7) 123949 pid('SAVariableOccurrence,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4212 6) nil 3) <Q: 905> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(123930)
lbl(123949)	definition(x(8) 123984 pid('SAVariableOccurrence,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4212 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 905> 5)
		endDefinition(123949)
lbl(123984)	putRecord('#' [1 2 fast] x(17))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(123994)	definition(x(7) 124034 pid('SAVariableOccurrence,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4216 6) nil 3) <Q: 906> nil)
		allocateL1
		inlineAt(variable x(2) cache)
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(123994)
lbl(124034)	definition(x(8) 124069 pid('SAVariableOccurrence,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4216 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 906> 5)
		endDefinition(124034)
lbl(124069)	putRecord('#' [1 2 fast] x(18))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(124079)	definition(x(7) 124167 pid('SAVariableOccurrence,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4220 6) nil 6) <Q: 907> [y(0)])
		inlineAt(value x(3) cache)
		putConstant(<M: ImAVariableOccurrence> x(4))
		testBI('Value.hasFeature' [x(3) x(4)]#[x(5)] 124154)
		testBool(x(1) 124102 124143)
		return
lbl(124102)	allocateL3
		move(g(0) x(0))
		inlineDot(x(0) nameVariable x(1) cache)
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(2) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		moveMoveYXYX(y(1) x(2) y(0) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(124143)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4224)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124154)	inlineAt(value x(3) cache)
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(124079)
lbl(124167)	definition(x(8) 124208 pid('SAVariableOccurrence,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4220 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 907> 7)
		endDefinition(124167)
lbl(124208)	putRecord('#' [1 2 fast] x(19))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(124218)	definition(x(7) 124237 pid('SAVariableOccurrence,getPrintName/fast' 1 pos('./compiler/StaticAnalysis.oz' 4233 6) nil 2) <Q: 908> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(124218)
lbl(124237)	definition(x(8) 124263 pid('SAVariableOccurrence,getPrintName/slow' 1 pos('./compiler/StaticAnalysis.oz' 4233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 908> 3)
		endDefinition(124237)
lbl(124263)	putRecord('#' [1 2 fast] x(20))
		setConstant(getPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(124273)	definition(x(7) 124284 pid('SAVariableOccurrence,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4236 6) nil 1) <Q: 909> [y(2)])
		genCall(gci(g(0) true updateValue true 0) 0)
		endDefinition(124273)
lbl(124284)	definition(x(8) 124310 pid('SAVariableOccurrence,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4236 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 909> 3)
		endDefinition(124284)
lbl(124310)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
lbl(124320)	definition(x(7) 124388 pid('SAVariableOccurrence,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4240 6) nil 4) <Q: 910> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 124358 124375)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(124358)	inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(124375)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4244)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124320)
lbl(124388)	definition(x(8) 124423 pid('SAVariableOccurrence,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 910> 5)
		endDefinition(124388)
lbl(124423)	putRecord('#' [1 2 fast] x(22))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(124433)	definition(x(7) 124734 pid('SAVariableOccurrence,unifyVal/fast' 2 pos('./compiler/StaticAnalysis.oz' 4255 6) nil 6) <Q: 911> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 124478)
		deAllocateL5
		return
lbl(124478)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 124500 124721)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genCall(gci(g(0) true bind true 2) 0)
lbl(124500)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 124528 124710)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124528)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124684 124699)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124658 124673)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 124583)
		deAllocateL5
		return
lbl(124583)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(2))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(124658)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124673)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4278)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124684)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124699)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4271)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124721)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4267)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124433)
lbl(124734)	definition(x(8) 124769 pid('SAVariableOccurrence,unifyVal/slow' 1 pos('./compiler/StaticAnalysis.oz' 4255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 911> 5)
		endDefinition(124734)
lbl(124769)	putRecord('#' [1 2 fast] x(23))
		setConstant(unifyVal)
		setValue(x(8))
		setValue(x(7))
lbl(124779)	definition(x(7) 124839 pid('SAVariableOccurrence,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 4304 6) nil 5) <Q: 912> nil)
		allocateL2
		inlineAt(coord x(3) cache)
		move(x(1) y(0))
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(1) 124824 124826)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(124824)	deAllocateL2
		return
lbl(124826)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4308)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124779)
lbl(124839)	definition(x(8) 124874 pid('SAVariableOccurrence,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 4304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 912> 5)
		endDefinition(124839)
lbl(124874)	putRecord('#' [1 2 fast] x(24))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(124884)	definition(x(7) 125038 pid('SAVariableOccurrence,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4320 6) nil 5) <Q: 913> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 125023 125025)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		createVariable(y(4))
		testBool(y(3) 124951 125000)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(125011)
lbl(124951)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 124984 124989)
		move(y(1) x(0))
		sendMsg(deref y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(125011)
lbl(124984)	unify(y(4) y(1))
		branch(125011)
lbl(124989)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4343)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125000)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4338)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125011)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnifyDeref> true 3) 0)
lbl(125023)	deAllocateL5
		return
lbl(125025)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4335)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124884)
lbl(125038)	definition(x(8) 125073 pid('SAVariableOccurrence,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4320 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 913> 5)
		endDefinition(125038)
lbl(125073)	putRecord('#' [1 2 fast] x(25))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(125083)	definition(x(7) 125480 pid('SAVariableOccurrence,UnifyDeref/fast' 3 pos('./compiler/StaticAnalysis.oz' 4360 6) nil 6) <Q: 914> nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(3)] 125094)
		return
lbl(125094)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(3) 125131 125467)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125131)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 125159 125456)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125159)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 125224 125445)
		createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125209 125198)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(bind y(2) 2 cache)
		branch(125209)
lbl(125198)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125209)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125224)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125252 125434)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125252)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125408 125423)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125382 125397)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 125307)
		deAllocateL6
		return
lbl(125307)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(2) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(5))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL6
		genFastCall(<Q: 686> 7)
lbl(125382)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125397)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4396)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125408)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125423)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4393)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125434)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4389)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125445)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4377)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125456)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125467)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4369)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125083)
lbl(125480)	definition(x(8) 125521 pid('SAVariableOccurrence,UnifyDeref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4360 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 914> 7)
		endDefinition(125480)
lbl(125521)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: UnifyDeref>)
		setValue(x(8))
		setValue(x(7))
lbl(125531)	definition(x(7) 125540 pid('SAVariableOccurrence,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 4421 6) nil 1) <Q: 915> nil)
		return
		endDefinition(125531)
lbl(125540)	definition(x(8) 125566 pid('SAVariableOccurrence,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 4421 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 915> 3)
		endDefinition(125540)
lbl(125566)	putRecord('#' [1 2 fast] x(27))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 19 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(125645)	definition(x(7) 125675 pid('SAToken,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 4431 6) nil 2) <Q: 916> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(125645)
lbl(125675)	definition(x(8) 125689 pid('SAToken,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 4431 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 916> 1)
		endDefinition(125675)
lbl(125689)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(125699)	definition(x(7) 125713 pid('SAToken,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4434 6) nil 2) <Q: 917> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(125699)
lbl(125713)	definition(x(8) 125739 pid('SAToken,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4434 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 917> 3)
		endDefinition(125713)
lbl(125739)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(125749)	definition(x(7) 125766 pid('SAToken,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4437 6) nil 2) <Q: 918> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(125749)
lbl(125766)	definition(x(8) 125792 pid('SAToken,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4437 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 918> 3)
		endDefinition(125766)
lbl(125792)	putRecord('#' [1 2 fast] x(11))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(125802)	definition(x(7) 125818 pid('SAToken,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 2) <Q: 919> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(125802)
lbl(125818)	definition(x(8) 125853 pid('SAToken,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 919> 5)
		endDefinition(125818)
lbl(125853)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(125863)	definition(x(7) 125897 pid('SAToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4443 6) nil 4) <Q: 920> [y(7)])
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(125863)
lbl(125897)	definition(x(8) 125932 pid('SAToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4443 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 920> 5)
		endDefinition(125897)
lbl(125932)	putRecord('#' [1 2 fast] x(13))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(125942)	definition(x(7) 125980 pid('SAToken,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4446 6) nil 2) <Q: 921> nil)
		testBool(x(0) 125958 125967)
		getSelf(x(0))
		unify(x(0) x(1))
		return
lbl(125958)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
lbl(125967)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125942)
lbl(125980)	definition(x(8) 126015 pid('SAToken,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4446 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 921> 5)
		endDefinition(125980)
lbl(126015)	putRecord('#' [1 2 fast] x(14))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(126025)	definition(x(7) 126063 pid('SAToken,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4450 6) nil 3) <Q: 922> nil)
		testBool(x(1) 126041 126050)
		getSelf(x(0))
		unify(x(0) x(2))
		return
lbl(126041)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
lbl(126050)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4451)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126025)
lbl(126063)	definition(x(8) 126104 pid('SAToken,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4450 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 922> 7)
		endDefinition(126063)
lbl(126104)	putRecord('#' [1 2 fast] x(15))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAToken' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(126150)	definition(x(7) 126255 pid('SANameToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4457 6) nil 4) <Q: 923> [y(0) y(7)])
		allocateL2
		inlineAt(isToplevel x(0) cache)
		move(x(1) y(0))
		testBool(x(0) 126215 126242)
lbl(126169)	move(g(0) x(0))
		inlineDot(x(0) isCopyableName x(2) cache)
		inlineAt(value x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 126215)
lbl(126199)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		deAllocateL2
		return
lbl(126215)	getRecord(type 1 y(0))
		unifyVariable(x(1))
		move(g(1) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL2
		tailCall(x(2) 2)
lbl(126242)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4458)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126150)
lbl(126255)	definition(x(8) 126290 pid('SANameToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4457 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 923> 5)
		endDefinition(126255)
lbl(126290)	putRecord('#' [1 2 fast] x(9))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANameToken' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(68))
		unifyValue(y(23))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(32))
		unifyValue(y(28))
		unifyValue(y(33))
		unifyValue(y(20))
		unifyValue(y(17))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyLiteral(<M: ImAConstruction>)
		unifyLiteral(<M: ImAToken>)
		unifyLiteral(<M: ImAValueNode>)
		unifyLiteral(<M: ImAVariableOccurrence>)
		unifyValue(y(27))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(14))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(0))
		unifyValue(y(24))
		unifyValue(y(29))
		unifyValue(y(6))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(16))
		unifyValue(y(25))
		unifyValue(y(4))
		unifyValue(y(26))
		unifyValue(y(15))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(2))
		deAllocateL
		return
		endDefinition(83394)
lbl(126413)	tailCall(x(3) 0)
		endDefinition(81576)
lbl(126418)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(11))
		setConstant(isBuiltin)
		setConstant(nil)
		putList(x(10))
		setConstant(nameVariable)
		setValue(x(11))
		putList(x(9))
		setConstant(newCopyablePredicateRef)
		setValue(x(10))
		putList(x(8))
		setConstant(newPredicateRef)
		setValue(x(9))
		putList(x(7))
		setConstant(isCopyableName)
		setValue(x(8))
		putList(x(6))
		setConstant(newCopyableName)
		setValue(x(7))
		putList(x(5))
		setConstant(newNamedName)
		setValue(x(6))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putRecord(info [type] x(12))
		setConstant(nil)
		putList(x(18))
		setConstant(distribute)
		setConstant(nil)
		putList(x(17))
		setConstant(distinct)
		setValue(x(18))
		putList(x(16))
		setConstant(less)
		setValue(x(17))
		putList(x(15))
		setConstant(is)
		setValue(x(16))
		putList(x(14))
		setConstant(int)
		setValue(x(15))
		putRecord(info [type] x(13))
		setValue(x(14))
		putList(x(25))
		setConstant(isIn)
		setConstant(nil)
		putList(x(24))
		setConstant(reflect)
		setValue(x(25))
		putList(x(23))
		setConstant(value)
		setValue(x(24))
		putList(x(22))
		setConstant(subset)
		setValue(x(23))
		putList(x(21))
		setConstant(var)
		setValue(x(22))
		putList(x(20))
		setConstant(include)
		setValue(x(21))
		putRecord(info [type] x(19))
		setValue(x(20))
		putList(x(27))
		setConstant(tokens)
		setConstant(nil)
		putRecord(info [type] x(26))
		setValue(x(27))
		putList(x(31))
		setConstant(printName)
		setConstant(nil)
		putList(x(30))
		setConstant(valueToVirtualString)
		setValue(x(31))
		putList(x(29))
		setConstant(eq)
		setValue(x(30))
		putRecord(info [type] x(28))
		setValue(x(29))
		putList(x(33))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(32))
		setValue(x(33))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'RunTime' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(12))
		setValue(x(13))
		setValue(x(19))
		setValue(x(26))
		setValue(x(28))
		setValue(x(32))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant(name x(18))
		putConstant(name x(19))
		putConstant(name x(20))
		putConstant(name x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(126837)	definition(x(2) 183469 pid('' 2 pos('./compiler/CodeGen.oz' 35 0) nil 4) <P: 924> [y(156) y(150) y(206) y(96) y(149) y(154) y(148) y(213) y(216) y(153) y(98) y(186) y(187) y(169) y(95) y(97) y(210) y(207) y(155) y(151) y(205) y(211) y(212) y(99) y(7) y(144) y(2) y(166) y(94) y(203) y(1) y(163) y(165) y(47) y(170)])
		putList(x(2))
		setPredicateRef(<Q: 925>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 926>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 927>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 928>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 929>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 930>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Temporaries>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Permanents>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LastAliveRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ShortLivedTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UsedX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LowestFreeX>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HighestEverX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UsedY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LowestFreeY>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestEverY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GRegRef>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestUsedG>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvSize>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LocalVarnames>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeHd>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CodeTl>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvsInhibited>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AdjDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DelayedInitsDict>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoneDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentID>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stack>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arity>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LetDie>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LetDieSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVInstr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DebugEntry>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DebugExit>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitSendMsg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GenericEmitCall>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SetArguments>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OrderMoves>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetCycle>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordRead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitUnifies>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitDisjunction>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitTestConstant>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrepareShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PushContLabel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PopContLabel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dereference>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DereferenceSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsFirst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: IsLast>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitInitialization>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ReserveTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocatePerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CopyTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CopyPerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FreeX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictArgReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForCall>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictRegForInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictPermReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Emit>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitMultiple>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 931>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 932>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 933>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 934>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 935>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 936>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 937>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 938>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 939>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 940>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 941>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 942>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 943>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 944>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 945>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 946>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 947>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 948>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 949>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 950>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 951>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 952>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 953>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 954>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 955>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 956>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 957>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 958>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 959>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 960>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 961>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 962>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 963>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 964>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 965>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 966>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 967>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 968>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 969>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 970>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 971>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 972>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 973>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 974>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 975>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 976>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 977>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 978>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 979>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 980>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 981>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 982>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 983>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 984>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 985>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 986>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 987>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 988>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 989>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 990>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 991>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 992>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 993>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 994>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 995>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 996>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 997>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 998>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 999>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1000>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1001>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1002>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1003>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1004>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmptyRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Saved>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ComputeOccs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOcc>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOccVArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1005>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1006>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1007>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1008>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1009>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1010>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1011>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1012>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1013>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1014>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1015>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1016>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1017>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1018>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1019>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1020>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1021>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1022>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1023>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1024>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1025>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1026>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1027>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1028>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1029>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1030>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1031>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1032>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1033>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1034>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1035>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1036>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1037>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1038>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1039>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1040>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1041>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1042>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1043>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1044>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1045>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1046>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Scalars>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Records>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AltNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arbiter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: WarnedCatchAll>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Reg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRecord>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeGenRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1047>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1048>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1049>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1050>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1051>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1052>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1053>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1054>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1055>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1056>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1057>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1058>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1059>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1060>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1061>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1062>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1063>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1064>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Val>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1065>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1066>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1067>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1068>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1069>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1070>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1071>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1072>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1073>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1074>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1075>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1076>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1077>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1078>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1079>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1080>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1081>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1082>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1083>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1084>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1085>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1086>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1087>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1088>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1089>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1090>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1091>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1092>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1093>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1094>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1095>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1096>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1097>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1098>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1099>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1100>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1101>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1102>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1103>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1104>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1105>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1106>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1107>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1108>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1109>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1110>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1111>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1112>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1113>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1114>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1115>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1116>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1117>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1118>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1119>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1120>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MessagePatternVO>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1121>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1122>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1123>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1124>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1125>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1126>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1127>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1128>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1129>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1130>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1131>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1132>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1133>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1134>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1135>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1136>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1137>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1138>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1139>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1140>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1141>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1142>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1143>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1144>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1145>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1146>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1147>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1148>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1149>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1150>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1151>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1152>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1153>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1154>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1155>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1156>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1157>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1158>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1159>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1160>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1161>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1162>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1163>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1164>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1165>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1166>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1167>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1168>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1169>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1170>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1171>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1172>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1173>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1174>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1175>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1176>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1177>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ClauseBodyShared>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1178>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1179>)
		setValue(x(3))
lbl(129093)	definitionCopy(x(2) 183464 pid('/body' 0 pos('./compiler/CodeGen.oz' 35 0) [once] 84) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) x(1)])
		allocateL(51)
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(129134)	definition(x(8) 129159 pid('NextFreeIndex' 3 pos('./compiler/CodeEmitter.oz' 25 3) nil 4) <Q: 925> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129153)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 925> 7)
lbl(129153)	unify(x(2) x(1))
		return
		endDefinition(129134)
lbl(129159)	definition(x(8) 129211 pid('NextFreeIndexWithoutPrintName' 4 pos('./compiler/CodeEmitter.oz' 31 3) nil 5) <Q: 926> [g(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129198)
lbl(129180)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 926> 9)
lbl(129198)	testBI('Dictionary.member' [x(1) x(2)]#[x(4)] 129204)
		branch(129180)
lbl(129204)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129159)
lbl(129211)	definition(x(8) 129267 pid('NextFreeIndexWithEmptyPrintName' 4 pos('./compiler/CodeEmitter.oz' 38 3) nil 6) <Q: 927> [g(1) g(2)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129250)
lbl(129232)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 927> 9)
lbl(129250)	putConstant('' x(4))
		callBI('Dictionary.condGet' [x(1) x(2) x(4)]#[x(5)])
		testLiteral(x(5) '' 129232)
lbl(129260)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129211)
lbl(129267)	definition(x(8) 129304 pid('LastUsedIndex' 3 pos('./compiler/CodeEmitter.oz' 46 3) nil 5) <Q: 928> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129281)
		unify(x(2) x(1))
		return
lbl(129281)	putConstant(0 x(3))
		testLE(x(1) x(3) x(4) 129293)
		getNumber(~1 x(2))
		return
lbl(129293)	inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 928> 7)
		endDefinition(129267)
lbl(129304)	definition(x(8) 129424 pid('OccursInVArgs' 3 pos('./compiler/CodeEmitter.oz' 53 3) nil 4) <Q: 929> nil)
		match(x(0) ht(129409 [onScalar(nil 129313) onRecord('|' 2 129317)]))
lbl(129313)	getLiteral(false x(2))
		return
lbl(129317)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testRecord(y(0) value 1 129347)
lbl(129334)	getVariable(x(3))
		shallowGuard(129347)
		unify(y(1) x(3))
lbl(129341)	shallowThen
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129347)	testRecord(y(0) record 3 129397)
lbl(129352)	getVoid(2)
		getVariable(x(0))
		move(y(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(0) 129374 129386)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129374)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129386)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129397)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129409)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(61)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(129304)
lbl(129424)	definition(x(8) 129450 pid('IsStep' 2 pos('./compiler/CodeEmitter.oz' 64 3) nil 3) <Q: 930> nil)
		callBI('Record.label' [x(0)]#[x(2)])
		match(x(2) ht(129444 [onScalar('pos' 129436) onScalar(unit 129440)]))
lbl(129436)	getLiteral(false x(1))
		return
lbl(129440)	getLiteral(false x(1))
		return
lbl(129444)	getLiteral(true x(1))
		return
		endDefinition(129424)
lbl(129450)	putRecord('attr' [<M: AdjDict> <M: Arity> <M: CodeHd> <M: CodeTl> <M: CurrentID> <M: DelayedInitsDict> <M: DoneDict> <M: GRegRef> <M: HighestEverX> <M: HighestEverY> <M: HighestUsedG> <M: LastAliveRS> <M: LocalEnvSize> <M: LocalEnvsInhibited> <M: LocalVarnames> <M: LowestFreeX> <M: LowestFreeY> <M: Permanents> <M: ShortLivedTemps> <M: Stack> <M: Temporaries> <M: UsedX> <M: UsedY> contLabels continuations] x(8))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(129504)	definition(x(9) 129553 pid('Emitter,init/fast' 0 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) <Q: 931> nil)
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(<M: GRegRef> x(0) cache)
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(<M: LocalVarnames> x(0) cache)
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(<M: AdjDict> x(0) cache)
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(<M: DoneDict> x(0) cache)
		return
		endDefinition(129504)
lbl(129553)	definition(x(10) 129567 pid('Emitter,init/slow' 1 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 931> 1)
		endDefinition(129553)
lbl(129567)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(0))
		createVariable(y(1))
lbl(129581)	definition(x(9) 130243 pid('Emitter,doEmit/fast' 6 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) <Q: 932> [y(0) g(3) g(4) y(1) g(5) g(2) g(6)])
		allocateL7
		callBI('Dictionary.new' nil#[x(6)])
		inlineAssign(<M: Temporaries> x(6) cache)
		callBI('Dictionary.new' nil#[x(6)])
		inlineAssign(<M: Permanents> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(6) x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
lbl(129633)	definition(x(1) 129648 pid('' 1 pos('./compiler/CodeEmitter.oz' 106 21) nil 2) unit [g(1) y(6)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(129633)
lbl(129648)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		putConstant(nil x(2))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(<M: UsedX> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeX> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverX> x(2) cache)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(<M: UsedY> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestUsedG> x(2) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: LocalEnvSize> x(2) cache)
		putRecord('allocateL' 1 x(0))
		setValue(x(2))
		putList(x(3))
		setValue(x(0))
		setVariable(x(4))
		inlineAssign(<M: CodeHd> x(3) cache)
		inlineAssign(<M: CodeTl> x(4) cache)
		putConstant(false x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(continuations x(2) cache)
		putConstant(nil x(2))
		inlineAssign(contLabels x(2) cache)
		getSelf(x(2))
lbl(129778)	definition(x(1) 129802 pid('' 2 pos('./compiler/CodeEmitter.oz' 122 3) nil 4) unit [x(2) g(3)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		createVariable(x(2))
		genCall(gci(g(1) true <M: AllocateThisTemp> true 3) 0)
		endDefinition(129778)
lbl(129802)	move(y(0) x(0))
		genFastCall(<P: 86> 4)
		getSelf(x(2))
lbl(129810)	definition(x(1) 129828 pid('' 1 pos('./compiler/CodeEmitter.oz' 124 3) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(x(1))
		genCall(gci(g(1) true <M: GetPerm> true 2) 0)
		endDefinition(129810)
lbl(129828)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		genCall(gci(g(3) true <M: EmitAddr> false 1) 0)
		inlineAt(<M: HighestUsedG> x(0) cache)
		getSelf(x(6))
lbl(129847)	definition(x(3) 129878 pid('' 3 pos('./compiler/CodeEmitter.oz' 127 4) nil 5) unit [x(6) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(129847)
lbl(129878)	move(y(4) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(nil x(0))
		inlineAt(<M: CodeTl> x(1) cache)
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		testBool(x(0) 130103 130121)
		inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 129975)
lbl(129941)	testLiteral(y(4) nil 129975)
lbl(129945)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('localVarname' 1 x(2))
		unifyLiteral('')
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130132)
lbl(129975)	getRecord('#' 2 y(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: CodeHd> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: HighestEverY> x(0) cache)
		getSelf(x(3))
lbl(129998)	definition(x(1) 130032 pid('' 3 pos('./compiler/CodeEmitter.oz' 140 2) nil 6) unit [x(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: LocalVarnames> x(4) cache)
		callBI('Dictionary.get' [x(4) x(1)]#[x(5)])
		getList(x(2))
		unifyVariable(x(1))
		unifyValue(x(0))
		getRecord('localVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(129998)
lbl(130032)	getSelf(x(3))
lbl(130034)	definition(x(4) 130065 pid('' 2 pos('./compiler/CodeEmitter.oz' 145 3) nil 6) unit [x(3) g(5)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		putConstant('' x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getRecord('globalVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(130034)
lbl(130065)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(0) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(130132)
lbl(130103)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130132)
lbl(130121)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(130132)	inlineAt(<M: HighestEverX> x(0) cache)
		inlinePlus1(x(0) x(1))
		unify(x(1) y(5))
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Temporaries> x(0) cache)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Permanents> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: CodeHd> x(0) cache)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedX> x(0) cache)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: LocalVarnames> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL7
		return
		endDefinition(129581)
lbl(130243)	definition(x(10) 130302 pid('Emitter,doEmit/slow' 1 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 932> 13)
		endDefinition(130243)
lbl(130302)	putRecord('#' [1 2 fast] x(12))
		setConstant(doEmit)
		setValue(x(10))
		setValue(x(9))
lbl(130312)	definition(x(9) 130337 pid('Emitter,newLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 2) <Q: 933> nil)
		inlineAt(nextLabel x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(nextLabel x(1) cache)
		return
		endDefinition(130312)
lbl(130337)	definition(x(10) 130363 pid('Emitter,newLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 933> 3)
		endDefinition(130337)
lbl(130363)	putRecord('#' [1 2 fast] x(13))
		setConstant(newLabel)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(2))
lbl(130375)	definition(x(9) 130637 pid('Emitter,EmitAddr/fast' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 5) <Q: 934> [y(1) g(1) g(7) y(2)])
		match(x(0) ht(130539 [onScalar(nil 130384) onRecord(vShared 4 130419)]))
lbl(130384)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130406 [onScalar(nil 130392) onRecord('|' 2 130395)]))
lbl(130392)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130395)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130419)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(2) nil 130465)
lbl(130430)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130452 [onScalar(nil 130438) onRecord('|' 2 130441)]))
lbl(130438)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130441)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130452)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130465)	inlineAt(sharedDone x(3) cache)
		testBI('Dictionary.member' [x(3) x(0)]#[x(4)] 130486)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130486)	allocateL2
		inlineAt(sharedDone x(3) cache)
		putConstant(true x(4))
		callBI('Dictionary.put' [x(3) x(0) x(4)]#nil)
		putRecord('lbl' 1 x(3))
		setValue(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		putConstant(1 x(2))
		testLT(x(2) x(1) x(0) 130532)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
lbl(130532)	move(y(1) x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130539)	allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		move(g(3) x(2))
		callBI('Record.\'.\'' [x(2) x(1)]#[x(3)])
		callBI('Record.\'.\'' [x(0) x(3)]#[x(1)])
		testLiteral(x(1) nil 130590)
lbl(130580)	genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		putConstant(nil x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130590)	inlineAt(continuations x(3) cache)
		putList(x(4))
		setValue(x(1))
		setValue(x(3))
		inlineAssign(continuations x(4) cache)
		move(x(3) y(1))
		genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		inlineAt(continuations x(1) cache)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineAssign(continuations x(1) cache)
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(130375)
lbl(130637)	definition(x(10) 130663 pid('Emitter,EmitAddr/slow' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 934> 3)
		endDefinition(130637)
lbl(130663)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: EmitAddr>)
		setValue(x(10))
		setValue(x(9))
lbl(130673)	definition(x(9) 130722 pid('Emitter,FlushShortLivedTemps/fast' 0 pos('./compiler/CodeEmitter.oz' 239 6) nil 2) <Q: 935> [y(1)])
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		match(x(0) ht(130707 [onScalar(nil 130687) onRecord('|' 2 130688)]))
lbl(130687)	return
lbl(130688)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL1
		genCall(gci(g(0) true <M: FlushShortLivedTemps> true 0) 0)
lbl(130707)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130673)
lbl(130722)	definition(x(10) 130736 pid('Emitter,FlushShortLivedTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 239 6) nil 1) unit nil)
		getLiteral(<M: FlushShortLivedTemps> x(0))
		genFastCall(<Q: 935> 1)
		endDefinition(130722)
lbl(130736)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(10))
		setValue(x(9))
lbl(130746)	definition(x(9) 130778 pid('Emitter,LetDie/fast' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) <Q: 936> [g(8) g(9) y(1)])
		inlineAt(<M: LastAliveRS> x(1) cache)
		testBI('Value.\'\\=\'' [x(1) x(0)]#[x(2)] 130775)
		inlineAssign(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.nimpl' [x(1) x(0)]#nil)
		callBI('BitArray.toList' [x(1)]#[x(0)])
		genCall(gci(g(2) true <M: LetDieSub> true 1) 0)
lbl(130775)	return
		endDefinition(130746)
lbl(130778)	definition(x(10) 130804 pid('Emitter,LetDie/slow' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 936> 3)
		endDefinition(130778)
lbl(130804)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: LetDie>)
		setValue(x(10))
		setValue(x(9))
lbl(130814)	definition(x(9) 130923 pid('Emitter,LetDieSub/fast' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 4) <Q: 937> [g(2) y(1) g(10)])
		match(x(0) ht(130908 [onScalar(nil 130823) onRecord('|' 2 130824)]))
lbl(130823)	return
lbl(130824)	allocateL2
		getVarVar(x(0) y(0))
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(1))
		testRecord(x(3) x 1 130866)
lbl(130847)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(130866)	inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 130901)
lbl(130885)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(130901)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true <M: LetDieSub> true 1) 0)
lbl(130908)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(269)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130814)
lbl(130923)	definition(x(10) 130949 pid('Emitter,LetDieSub/slow' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 937> 3)
		endDefinition(130923)
lbl(130949)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: LetDieSub>)
		setValue(x(10))
		setValue(x(9))
lbl(130959)	definition(x(9) 136179 pid('Emitter,EmitVInstr/fast' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 9) <Q: 938> [y(1) g(1) g(5) g(7) x(7) g(11) g(2) g(12) g(10) g(13)])
		match(x(0) ht(136164 [onRecord(vStepPoint 5 130968) onRecord(vMakePermanent 3 131012) onRecord(vClear 3 131208) onRecord(vUnify 4 131338) onRecord(vFailure 2 131521) onRecord(vEquateNumber 4 131527) onRecord(vEquateLiteral 4 131609) onRecord(vEquateRecord 6 131776) onRecord(vGetVariable 3 131970) onRecord(vCallBuiltin 5 132051) onRecord(vGenCall 8 132765) onRecord(vCall 5 132972) onRecord(vFastCall 5 133047) onRecord(vApplMeth 7 133144) onRecord(vInlineDot 7 133227) onRecord(vInlineAt 4 133438) onRecord(vInlineAssign 4 133511) onRecord(vGetSelf 3 133537) onRecord(vSetSelf 3 133633) onRecord(vDefinition 7 133654) onRecord(vDefinitionCopy 8 133951) onRecord(vExHandler 7 134228) onRecord(vPopEx 3 134361) onRecord(vCreateCond 7 134377) onRecord(vCreateOr 6 134666) onRecord(vCreateEnumOr 6 134686) onRecord(vCreateChoice 6 134706) onRecord(vAsk 2 134726) onRecord(vWait 2 134745) onRecord(vWaitTop 2 134764) onRecord(vShallowGuard 8 134783) onRecord(vTestBool 8 134940) onRecord(vTestBuiltin 7 135233) onRecord(vTestNumber 8 135432) onRecord(vTestLiteral 8 135454) onRecord(vMatch 7 135476) onRecord(vThread 5 135803) onRecord(vLockThread 5 135971) onRecord(vLockEnd 4 136074)]))
lbl(130968)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(131012)	getVoid(1)
		getVariable(x(0))
		getSelf(x(2))
lbl(131018)	definition(x(1) 131205 pid('' 1 pos('./compiler/CodeEmitter.oz' 282 6) nil 4) unit [x(2) g(1) g(0) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(regNames x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 131202)
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131200)
lbl(131052)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131188)
lbl(131074)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoNameVarsSwitch x(0) cache)
		testBool(x(0) 131175 131177)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		createVariableMove(y(3) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putList(x(3))
		setValue(y(3))
		setConstant(nil)
		putList(x(2))
		setValue(y(2))
		setValue(x(3))
		putRecord('#' 2 x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord('callBI' 2 x(0))
		setConstant(nameVariable)
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131175)	deAllocateL4
		return
lbl(131177)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(288)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131188)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131200)	deAllocateL4
		return
lbl(131202)	return
		endDefinition(131018)
lbl(131205)	genFastCall(<P: 34> 5)
lbl(131208)	getVoid(1)
		getVariable(x(0))
		inlineAt(continuations x(1) cache)
		testLiteral(x(1) nil 131222)
		return
lbl(131222)	getSelf(x(2))
lbl(131224)	definition(x(1) 131335 pid('' 1 pos('./compiler/CodeEmitter.oz' 306 2) nil 2) unit [x(2) g(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131251)
lbl(131249)	deAllocateL3
		return
lbl(131251)	testRecord(y(1) y 1 131320)
lbl(131256)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: IsLast> false 2) 0)
		testBool(y(2) 131271 131299)
		branch(131310)
lbl(131271)	move(y(0) x(0))
		genCall(gci(g(1) true <M: FreeReg> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocateUnnamedPerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(131310)
lbl(131299)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(309)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131310)	putRecord(clear 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(131320)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(316)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(131224)
lbl(131335)	genFastCall(<P: 34> 5)
lbl(131338)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 131390)
lbl(131366)	testLiteral(y(3) none 131404)
lbl(131370)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(131404)
lbl(131390)	match(y(3) ht(131393 [onScalar(none 131404)]))
lbl(131393)	putRecord('unify' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
lbl(131404)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131439)
lbl(131417)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		match(y(2) ht(131429 [onScalar(none 131460)]))
lbl(131429)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
		branch(131460)
lbl(131439)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(3) none 131460)
lbl(131452)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
lbl(131460)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131497)
lbl(131473)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131488)
lbl(131486)	deAllocateL4
		return
lbl(131488)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131497)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(0) none 131519)
lbl(131510)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131519)	deAllocateL4
		return
lbl(131521)	putConstant('failure' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131527)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(3) none 131597)
lbl(131548)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(0) 131563 131586)
		deAllocateL4
		return
lbl(131563)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(131586)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131597)	putRecord('getNumber' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131609)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131764)
lbl(131632)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 131665 131753)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131665)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131680 131742)
		deAllocateL5
		return
lbl(131680)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(5))
		putConstant(0 x(3))
		putConstant(nil x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131708 131731)
		deAllocateL5
		return
lbl(131708)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL5
		return
lbl(131731)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131764)	putRecord('getLiteral' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131776)	allocateL6
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(x(5))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(3) x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131809 131959)
		deAllocateL6
		return
lbl(131809)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(3) x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131885)
lbl(131836)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131851 131874)
		deAllocateL6
		return
lbl(131851)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordWrite> true 4) 0)
lbl(131874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131885)	move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 131945 131934)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(5) 131915 131923)
		branch(131945)
lbl(131915)	move(y(2) x(0))
		genCall(gci(g(0) true <M: FreeReg> false 1) 0)
		branch(131945)
lbl(131923)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(398)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131934)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131945)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordRead> true 4) 0)
lbl(131959)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131970)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132041)
lbl(131988)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(1) 132011 132030)
		putRecord('getVoid' 1 x(0))
		setConstant(1)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132011)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132041)	putRecord('unifyValue' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132051)	allocateL(14)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(5) x(0))
		putConstant(test x(1))
		putConstant(false x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(6))
		testBool(x(3) 132581 132586)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(4) vTestBool 8 132576)
lbl(132111)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		getVoid(1)
		getVarVar(x(3) x(4))
		getVariable(x(5))
		createVariable(y(4))
		shallowGuard(132576)
		unify(y(7) x(0))
lbl(132132)	shallowThen
		getSelf(x(6))
		inlineDot(x(6) debugInfoControlSwitch x(6) cache)
		testBI('Bool.not' [x(6)]#[x(7)] 132560)
lbl(132145)	moveMoveXYXY(x(1) y(8) x(2) y(9))
		moveMoveXYXY(x(3) y(10) x(4) y(11))
		move(x(5) y(12))
		createVariableMove(y(13) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(13) 132560 132565)
lbl(132168)	moveMoveYXYX(y(7) x(0) y(8) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132560 132565)
lbl(132183)	moveMoveYXYX(y(7) x(0) y(9) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132560 132565)
lbl(132198)	moveMoveYXYX(y(7) x(0) y(11) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132560 132565)
lbl(132213)	createVariable(y(7))
		match(y(1) ht(132528 [onScalar('Value.\'==\'' 132218) onScalar('Value.\'\\=\'' 132373)]))
lbl(132218)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132302 [onRecord(vEquateNumber 4 132250) onRecord(vEquateLiteral 4 132276)]))
lbl(132250)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132276)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132302)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132368 [onRecord(vEquateNumber 4 132316) onRecord(vEquateLiteral 4 132342)]))
lbl(132316)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132342)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132368)	getNumber(~1 y(7))
		branch(132531)
lbl(132373)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132457 [onRecord(vEquateNumber 4 132405) onRecord(vEquateLiteral 4 132431)]))
lbl(132405)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132431)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132457)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132523 [onRecord(vEquateNumber 4 132471) onRecord(vEquateLiteral 4 132497)]))
lbl(132471)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132497)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132531)
lbl(132523)	getNumber(~1 y(7))
		branch(132531)
lbl(132528)	getNumber(~1 y(7))
lbl(132531)	testNumber(y(7) ~1 132555)
lbl(132535)	getRecord(vTestBuiltin 7 y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132597)
lbl(132555)	unify(y(6) y(7))
		branch(132597)
lbl(132560)	getNumber(~1 y(6))
		branch(132597)
lbl(132565)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(426)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132576)	getNumber(~1 y(6))
		branch(132597)
lbl(132581)	getNumber(~1 y(6))
		branch(132597)
lbl(132586)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(421)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(132597)	testNumber(y(6) ~1 132741)
lbl(132601)	testLiteral(y(1) 'getReturn' 132670)
lbl(132605)	getList(y(2))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132643)
lbl(132624)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(1))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132643)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132670)	move(y(5) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(2) x(0))
		move(g(7) x(3))
		createVariableMove(y(0) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('#' 2 x(1))
		setValue(y(0))
		setValue(y(4))
		putRecord('callBI' 2 x(0))
		setValue(y(1))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: EmitUnifies> false 1) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(132741)	inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		putList(x(1))
		setValue(y(6))
		setValue(x(0))
		inlineAssign(continuations x(1) cache)
		deAllocateL
		return
lbl(132765)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testRecord(y(6) g 1 132833)
lbl(132791)	putRecord('gci' 5 x(0))
		setVariable(x(4))
		setValue(y(1))
		setValue(y(2))
		setConstant(false)
		setValue(y(3))
		putRecord('genCall' 2 x(3))
		setValue(x(0))
		setConstant(0)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(5) x(6))
		putConstant(any x(0))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132833)	testBool(y(1) 132901 132961)
		putRecord('ami' 2 x(1))
		setValue(y(2))
		setValue(y(3))
		putRecord('applMeth' 2 x(0))
		setValue(x(1))
		setVariable(x(2))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariable(y(3))
		testLiteral(x(1) nil 132874)
lbl(132869)	getLiteral(non_y y(3))
		branch(132877)
lbl(132874)	getLiteral(any y(3))
lbl(132877)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132901)	putRecord('call' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		inlineAt(continuations x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariable(y(6))
		testLiteral(x(3) nil 132933)
lbl(132928)	getLiteral(non_y y(6))
		branch(132936)
lbl(132933)	getLiteral(any y(6))
lbl(132936)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(5) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132961)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132972)	allocateL7
		getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putRecord('call' 2 x(3))
		setVariable(x(4))
		setVariable(x(5))
		inlineAt(continuations x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariable(y(6))
		testLiteral(x(6) nil 133019)
lbl(133014)	getLiteral(non_y y(6))
		branch(133022)
lbl(133019)	getLiteral(any y(6))
lbl(133022)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		move(y(2) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133047)	allocateL5
		getVoid(1)
		getVarVar(x(0) y(0))
		getVariable(y(1))
		createVariable(y(2))
		testBI('Procedure.is' [x(0)]#[x(1)] 133091)
		getRecord('marshalledFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('Number.\'*\'' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
		branch(133119)
lbl(133091)	getRecord('genFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('Number.\'*\'' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
lbl(133119)	moveMoveYXYX(y(0) x(2) y(2) x(3))
		move(y(1) x(6))
		putConstant(none x(0))
		putConstant(~1 x(1))
		createVariable(x(4))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL5
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133144)	allocateL6
		getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord('ami' 2 x(6))
		setValue(x(1))
		setValue(x(2))
		putRecord('applMeth' 2 x(5))
		setValue(x(6))
		setVariable(x(7))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) y(4))
		createVariable(y(5))
		testLiteral(x(1) nil 133200)
lbl(133195)	getLiteral(non_y y(5))
		branch(133203)
lbl(133200)	getLiteral(any y(5))
lbl(133203)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(2) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL6
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133227)	allocateL6
		getVoid(1)
		getVarVar(y(0) x(0))
		getVarVar(x(1) x(2))
		getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testBool(y(3) 133252 133308)
		branch(133319)
lbl(133252)	moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133319 133297)
		getSelf(x(3))
		inlineDot(x(3) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('dot access on undetermined variable suspends ')
		setConstant(forever)
		move(y(4) x(0))
		putConstant('code generation warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(133319)
lbl(133297)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133308)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(133319)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 133396)
lbl(133332)	testBool(y(3) 133351 133385)
lbl(133336)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(3) 133351 133385)
		deAllocateL6
		return
lbl(133351)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133385)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(552)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133396)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(2))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133438)	allocateL3
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133480)
lbl(133457)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(2))
		setConstant(cache)
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133480)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133511)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('inlineAssign' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133537)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133606)
lbl(133557)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(2) 133572 133595)
		deAllocateL3
		return
lbl(133572)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(133595)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133606)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getSelf' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133633)	allocateL1
		getVoid(1)
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('setSelf' 1 x(0))
		setValue(y(0))
		deAllocateL1
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133654)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133697 133940)
lbl(133678)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 133697 133940)
lbl(133691)	testLiteral(y(2) unit 133697)
		deAllocateL9
		return
lbl(133697)	getSelf(x(3))
lbl(133699)	definition(x(1) 133751 pid('' 2 pos('./compiler/CodeEmitter.oz' 597 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133744)
lbl(133726)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(133744)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(133699)
lbl(133751)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		createVariable(y(6))
		createVariable(y(7))
		testBool(y(3) 133790 133801)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		getLiteral(false y(7))
		branch(133812)
lbl(133790)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getLiteral(true y(7))
		branch(133812)
lbl(133801)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133812)	createVariableMove(y(3) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(1))
		unifyVariable(y(4))
		putRecord('definition' 6 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(1))
		setValue(y(2))
		setValue(y(5))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(133871)	definition(x(1) 133887 pid('' 1 pos('./compiler/CodeEmitter.oz' 618 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(133871)
lbl(133887)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		testBool(y(7) 133927 133929)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		putRecord('unify' 2 x(0))
		setValue(y(6))
		setValue(y(1))
		deAllocateL9
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133927)	deAllocateL9
		return
lbl(133929)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(620)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133940)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(592)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133951)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 133995 134217)
lbl(133976)	move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(6) 133995 134217)
lbl(133989)	testLiteral(y(3) unit 133995)
		deAllocateL10
		return
lbl(133995)	getSelf(x(3))
lbl(133997)	definition(x(1) 134049 pid('' 2 pos('./compiler/CodeEmitter.oz' 631 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 134042)
lbl(134024)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(134042)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(133997)
lbl(134049)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(4))
		getRecord(x 1 y(4))
		unifyVariable(y(7))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(9) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(y(5))
		putRecord('definitionCopy' 6 x(0))
		setValue(y(4))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(6))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(134133)	definition(x(1) 134149 pid('' 1 pos('./compiler/CodeEmitter.oz' 646 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(134133)
lbl(134149)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(0) none 134205)
lbl(134194)	moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariable(x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(134205)	putRecord('unify' 2 x(0))
		setValue(y(4))
		setValue(y(0))
		deAllocateL10
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134217)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(626)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134228)	allocateL8
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(x(2) y(4))
		move(x(0) y(5))
		move(x(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putRecord('exHandler' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		move(y(1) x(1))
		putConstant(0 x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: AllocateThisTemp> false 3) 0)
		inlineAt(<M: LocalEnvsInhibited> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYYX(x(0) y(1) y(2) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(3) x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(6) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(134361)	getVoid(1)
		getVariable(x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugExit> false 2) 0)
		putConstant('popEx' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134377)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVoid(1)
		getVariable(x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('createCond' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(134451)	definition(x(0) 134601 pid('' 3 pos('./compiler/CodeEmitter.oz' 689 6) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(134588)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(134480)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(134535 [onScalar(nil 134510) onRecord('|' 2 134518)]))
lbl(134510)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134548)
lbl(134518)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134548)
lbl(134535)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(696)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134548)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(134588)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(134451)
lbl(134601)	move(x(0) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(134666)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134686)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createEnumOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134706)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createChoice' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134726)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('ask' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134745)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('wait' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134764)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('waitTop' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134783)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		getVoid(1)
		getVariable(x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('shallowGuard' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitGuard> false 1) 0)
		putConstant('shallowThen' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(134940)	allocateL(11)
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		getVariable(x(0))
		move(y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		callBI('Bool.and' [x(0) x(1)]#[x(2)])
		move(y(8) x(0))
		callBI('Bool.and' [x(2) x(0)]#[x(1)])
		move(y(5) x(0))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(8))
		testLiteral(y(7) none 135081)
lbl(135026)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135084)
lbl(135081)	unify(y(8) y(7))
lbl(135084)	move(y(5) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('testBool' 3 x(0))
		setValue(y(8))
		setValue(y(7))
		setValue(y(10))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135233)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		callBI('Bool.and' [x(0) x(1)]#[x(3)])
		move(y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(y(8) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(1) x(0))
		move(g(9) x(3))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		putRecord('#' 2 x(1))
		setValue(y(8))
		setValue(y(9))
		putRecord('testBI' 3 x(0))
		setValue(y(0))
		setValue(x(1))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(6) x(0))
		deAllocateL10
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(135432)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testNumber' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135454)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testLiteral' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135476)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(7))
		testLiteral(y(5) none 135584)
lbl(135529)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as pattern case arbiter')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(3) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135587)
lbl(135584)	unify(y(7) y(5))
lbl(135587)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('ht' 2 x(1))
		setValue(y(5))
		setVariable(y(8))
		putRecord('match' 2 x(0))
		setValue(y(7))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(3))
lbl(135638)	definition(x(1) 135750 pid('' 2 pos('./compiler/CodeEmitter.oz' 844 6) nil 5) unit [x(3) g(0) y(6)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		createVariable(y(0))
		createVariable(y(1))
		match(x(0) ht(135693 [onRecord('onScalar' 2 135657) onRecord('onRecord' 3 135673)]))
lbl(135657)	getVarVar(x(0) x(3))
		unify(y(0) x(3))
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(y(1))
		branch(135706)
lbl(135673)	getVarVar(x(0) x(3))
		getVariable(x(4))
		unify(y(0) x(4))
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		branch(135706)
lbl(135693)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(851)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(135706)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: Dereference> false 3) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(1) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		deAllocateL3
		genCall(gci(g(1) true <M: RestoreAllRegisterMappings> true 1) 0)
		endDefinition(135638)
lbl(135750)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135803)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		move(g(9) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('thread' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(contLabels x(0) cache)
		putConstant(nil x(1))
		inlineAssign(contLabels x(1) cache)
		inlineAt(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYXY(x(0) y(5) x(1) y(6))
		testBool(y(3) 135901 135911)
		branch(135922)
lbl(135901)	putConstant(true x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		branch(135922)
lbl(135911)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(878)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(135922)	moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(6) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(5) x(0))
		inlineAssign(contLabels x(0) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135971)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVoid(1)
		getVariable(y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(3) 136044 136033)
		getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setConstant('undetermined variable used as lock')
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('code generation warning' x(2))
		putConstant('lock suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		branch(136044)
lbl(136033)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(889)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136044)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(1) x(0))
		putConstant('lock' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('lockThread' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136074)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136111 136116)
		unify(y(2) y(3))
		branch(136127)
lbl(136111)	unify(y(2) y(4))
		branch(136127)
lbl(136116)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136127)	move(y(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		putConstant('lock' x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(136164)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130959)
lbl(136179)	definition(x(7) 136205 pid('Emitter,EmitVInstr/slow' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 938> 3)
		endDefinition(136179)
lbl(136205)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: EmitVInstr>)
		setValue(x(7))
		setValue(x(9))
lbl(136215)	definition(x(7) 136384 pid('Emitter,DebugEntry/fast' 2 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) <Q: 939> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136369 136371)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136324 [onRecord(fineStep 3 136248) onRecord(fineStep 6 136267) onRecord(coarseStep 3 136286) onRecord(coarseStep 6 136305)]))
lbl(136248)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136337)
lbl(136267)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136337)
lbl(136286)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136337)
lbl(136305)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136337)
lbl(136324)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(926)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136337)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugEntry' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136369)	deAllocateL6
		return
lbl(136371)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136215)
lbl(136384)	definition(x(9) 136419 pid('Emitter,DebugEntry/slow' 1 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 939> 5)
		endDefinition(136384)
lbl(136419)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: DebugEntry>)
		setValue(x(9))
		setValue(x(7))
lbl(136429)	definition(x(7) 136602 pid('Emitter,DebugExit/fast' 2 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) <Q: 940> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136587 136589)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136542 [onRecord(fineStep 3 136462) onRecord(fineStep 6 136481) onRecord(coarseStep 3 136502) onRecord(coarseStep 6 136521)]))
lbl(136462)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136555)
lbl(136481)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136555)
lbl(136502)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136555)
lbl(136521)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136555)
lbl(136542)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(942)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136555)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugExit' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136587)	deAllocateL6
		return
lbl(136589)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(933)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136429)
lbl(136602)	definition(x(9) 136637 pid('Emitter,DebugExit/slow' 1 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 940> 5)
		endDefinition(136602)
lbl(136637)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: DebugExit>)
		setValue(x(9))
		setValue(x(7))
lbl(136647)	definition(x(7) 137058 pid('Emitter,TryToUseAsSendMsg/fast' 7 pos('./compiler/CodeEmitter.oz' 949 6) nil 7) <Q: 941> [y(1)])
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136669 137045)
		getLiteral(false x(6))
		return
lbl(136669)	allocateL(11)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 137029 137034)
		testRecord(y(4) vCall 5 136783)
lbl(136704)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(136783)
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136720)	shallowThen
		moveMoveXYXY(x(0) y(4) x(2) y(6))
		moveMoveXYYX(x(3) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136767 136772)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136767)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136772)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(957)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136783)	testRecord(y(4) vGenCall 8 136874)
lbl(136788)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(136874)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136811)	shallowThen
		moveMoveXYXY(x(0) y(4) x(3) y(6))
		moveMoveXYYX(x(4) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136858 136863)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136858)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136863)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(964)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136874)	testRecord(y(4) vCallBuiltin 5 137024)
lbl(136879)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		createVariable(y(4))
		shallowGuard(137024)
		getLiteral('Object.new' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getListValVar(x(1) y(0) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(136910)	shallowThen
		moveMoveXYXY(x(0) y(6) x(4) y(7))
		moveMoveXYXY(x(2) y(8) x(3) y(9))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(10) 137008 137013)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putList(x(3))
		setValue(y(6))
		setConstant(nil)
		putRecord('#' 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord('callBI' 2 x(0))
		setConstant('Object.newObject')
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(137008)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137013)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(972)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137024)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137029)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(955)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137045)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(954)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136647)
lbl(137058)	definition(x(9) 137123 pid('Emitter,TryToUseAsSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 949 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 941> 15)
		endDefinition(137058)
lbl(137123)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137133)	definition(x(7) 137683 pid('Emitter,EmitSendMsg/fast' 6 pos('./compiler/CodeEmitter.oz' 989 6) nil 8) <Q: 942> [y(1) g(15) g(1)])
		allocateL9
		putRecord('sendMsg' 4 x(6))
		setValue(x(1))
		setVariable(x(7))
		setValue(x(2))
		setConstant(cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		createVariable(y(6))
		testBI('Int.is' [x(2)]#[x(1)] 137178)
		unify(y(6) x(2))
		branch(137187)
lbl(137178)	move(x(2) x(0))
		move(y(6) x(1))
		genFastCall(<P: 24> 4)
lbl(137187)	move(y(6) x(0))
		inlinePlus1(x(0) x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: ReserveTemps> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setVariable(y(7))
		getSelf(x(4))
lbl(137209)	definition(x(1) 137592 pid('' 4 pos('./compiler/CodeEmitter.oz' 999 3) nil 13) unit [x(4) g(2) g(0)])
		move(g(0) x(4))
		setSelf(x(4))
		shallowGuard(137579)
		getRecord('#' 2 x(2))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(137230)	shallowThen
		match(x(1) ht(137566 [onRecord(number 1 137234) onRecord(literal 1 137296) onRecord(value 1 137358) onRecord(record 3 137375)]))
lbl(137234)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137296)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137358)	getVariable(x(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyValue(x(6))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(137375)	allocateL8
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(0) x(2))
		testBI('Dictionary.member' [x(1) x(2)]#[x(7)] 137486)
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('move' 2 x(5))
		unifyValVar(y(7) x(6))
		getRecord(x 1 x(6))
		unifyVariable(x(7))
		move(y(3) x(0))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(7))
		deAllocateL8
		return
lbl(137486)	inlineMinus1(x(0) x(2))
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(2) true <M: AllocateThisShortLivedTemp> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyLiteral('skip')
		move(y(3) x(0))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		deAllocateL8
		return
lbl(137566)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1016)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137579)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(999)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137209)
lbl(137592)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 83> 8)
		inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(x(0) y(1))
		createVariable(y(8))
		testLiteral(y(3) nil 137631)
lbl(137626)	unify(y(8) y(1))
		branch(137637)
lbl(137631)	getList(y(8))
		unifyValue(y(3))
		unifyValue(y(1))
lbl(137637)	move(y(8) x(0))
		inlineAssign(continuations x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		moveMoveYXYX(y(2) x(6) y(7) x(7))
		putConstant(any x(0))
		createVariable(x(5))
		genCall(gci(g(0) true <M: GenericEmitCall> false 8) 0)
		putList(x(0))
		setValue(y(3))
		setValue(y(1))
		inlineAssign(continuations x(0) cache)
		deAllocateL9
		return
		endDefinition(137133)
lbl(137683)	definition(x(9) 137742 pid('Emitter,EmitSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 989 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 942> 13)
		endDefinition(137683)
lbl(137742)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: EmitSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137752)	definition(x(7) 138514 pid('Emitter,GenericEmitCall/fast' 8 pos('./compiler/CodeEmitter.oz' 1026 6) nil 11) <Q: 943> [g(9) g(2) y(1)])
		allocateL(11)
		inlineAt(continuations x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		match(x(8) ht(137954 [onScalar(nil 137967) onRecord('|' 2 137788)]))
lbl(137788)	getVariable(x(8))
		inlineDot(x(8) 1 x(8) cache)
		callBI('BitArray.toList' [x(8)]#[x(9)])
		getSelf(x(8))
lbl(137801)	definition(x(10) 137943 pid('' 1 pos('./compiler/CodeEmitter.oz' 1061 6) nil 5) unit [x(8) g(1) g(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(137866 [onScalar(none 137826) onRecord(x 1 137827)]))
lbl(137826)	return
lbl(137827)	allocateL3
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 137864)
lbl(137843)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(137864)	deAllocateL3
		return
lbl(137866)	allocateL3
		move(x(0) y(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 137928 137930)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 137926)
lbl(137896)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(137926)	deAllocateL3
		return
lbl(137928)	deAllocateL3
		return
lbl(137930)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1073)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137801)
lbl(137943)	move(x(9) x(0))
		move(x(10) x(1))
		genFastCall(<P: 34> 4)
		branch(137967)
lbl(137954)	putRecord(kernel 3 x(9))
		setConstant(noElse)
		setConstant(1088)
		setValue(x(8))
		callBI('Exception.raiseError' [x(9)]#nil)
lbl(137967)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		createVariable(y(8))
		testLiteral(y(0) none 137992)
lbl(137987)	getLiteral(none y(8))
		branch(138398)
lbl(137992)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testLiteral(y(9) none 138111)
lbl(138005)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable called ')
		setConstant('as procedure')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(6) x(0))
		putConstant('code generation warning' x(2))
		putConstant('application suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138073 138089)
lbl(138063)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		branch(138100)
lbl(138073)	testLiteral(y(0) non_y 138079)
		branch(138063)
lbl(138079)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		branch(138100)
lbl(138089)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1114)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138100)	putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138314)
lbl(138111)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138259 138303)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138197)
lbl(138137)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(9) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(y(5) x(2))
		testLT(x(1) x(2) x(3) 138314)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138314)
lbl(138197)	testLiteral(y(0) non_y 138314)
lbl(138201)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testRecord(y(9) x 1 138314)
lbl(138215)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(0) x(1) x(2) 138314)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138314)
lbl(138259)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138314)
lbl(138272)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138314)
lbl(138303)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138314)	match(y(0) ht(138385 [onScalar(non_y 138317) onScalar(any 138375)]))
lbl(138317)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testRecord(y(0) y 1 138370)
lbl(138331)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(9) none 138365)
lbl(138344)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138398)
lbl(138365)	unify(y(8) y(9))
		branch(138398)
lbl(138370)	unify(y(8) y(0))
		branch(138398)
lbl(138375)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		branch(138398)
lbl(138385)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1177)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138398)	moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(2) x(2))
		genCall(gci(g(2) true <M: SetArguments> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 138471 138476)
		testRecord(y(8) x 1 138466)
lbl(138426)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(1) x(0) x(2) 138455)
		getRecord(x 1 y(4))
		unifyValue(y(5))
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(4))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138458)
lbl(138455)	unify(y(4) y(8))
lbl(138458)	move(y(5) x(0))
		inlinePlus1(x(0) x(2))
		branch(138487)
lbl(138466)	unify(y(4) y(8))
		branch(138487)
lbl(138471)	unify(y(4) y(8))
		branch(138487)
lbl(138476)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138487)	move(y(6) x(0))
		putConstant('call' x(1))
		genCall(gci(g(2) true <M: DebugEntry> false 2) 0)
		move(y(3) x(0))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		move(y(6) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(2) true <M: DebugExit> true 2) 0)
		endDefinition(137752)
lbl(138514)	definition(x(9) 138585 pid('Emitter,GenericEmitCall/slow' 1 pos('./compiler/CodeEmitter.oz' 1026 6) nil 9) unit nil)
		putConstant(8 x(8))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(8))
		inlineDot(x(0) 1 x(8) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		move(x(8) x(0))
		genFastCall(<Q: 943> 17)
		endDefinition(138514)
lbl(138585)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: GenericEmitCall>)
		setValue(x(9))
		setValue(x(7))
lbl(138595)	definition(x(7) 139350 pid('Emitter,SetArguments/fast' 3 pos('./compiler/CodeEmitter.oz' 1207 6) nil 5) <Q: 944> [y(1) g(16) g(1) g(3) g(2) g(10) g(7) g(5) g(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: EnterDelayedInits> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: Arity> x(0) cache)
		getSelf(x(2))
lbl(138623)	definition(x(1) 139177 pid('' 2 pos('./compiler/CodeEmitter.oz' 1233 3) nil 7) unit [x(2) g(2) g(3) g(4) g(5) g(6) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(139164)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(138642)	shallowThen
		inlineMinus1(x(0) x(1))
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(5)] 138672)
		putConstant(0 x(0))
		testLE(x(0) x(3) x(1) 138671)
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.set' [x(0) x(3)]#nil)
lbl(138671)	return
lbl(138672)	inlineAt(<M: Temporaries> x(0) cache)
		putConstant(none x(5))
		callBI('Dictionary.condGet' [x(0) x(3) x(5)]#[x(6)])
		match(x(6) ht(138809 [onRecord(vEquateNumber 4 138686) onRecord(vEquateLiteral 4 138729) onRecord(vGetSelf 3 138772)]))
lbl(138686)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138729)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138772)	inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		putRecord(x 1 x(4))
		setValue(x(1))
		putRecord('getSelf' 1 x(3))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		return
lbl(138809)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(6) true <M: GetTemp> false 2) 0)
		putRecord(x 1 x(0))
		setValue(y(2))
		createVariable(y(4))
		move(y(3) x(1))
		testBI('Value.\'==\'' [x(1) x(0)]#[x(2)] 138846)
		getLiteral('skip' y(4))
		branch(139149)
lbl(138846)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(6) true <M: GetPerm> false 2) 0)
		testLiteral(y(5) none 139136)
lbl(138859)	match(y(3) ht(139123 [onScalar(none 138862) onRecord(x 1 139081)]))
lbl(138862)	inlineAt(<M: LastAliveRS> x(0) cache)
		move(y(0) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 139017 139070)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 138964)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		getRecord(x 1 y(1))
		unifyVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(1) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139149)
lbl(138964)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(6) true <M: AllocateThisTemp> false 3) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		inlineAt(<M: AdjDict> x(0) cache)
		inlineAt(<M: AdjDict> x(1) cache)
		move(y(2) x(2))
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		putList(x(1))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
		getLiteral('skip' y(4))
		branch(139149)
lbl(139017)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: IsLast> false 2) 0)
		testBool(y(1) 139044 139059)
		getRecord('createVariable' 1 y(4))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139149)
lbl(139044)	getRecord(delayedCreateVariableMove 2 y(4))
		unifyValVar(y(0) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139149)
lbl(139059)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1281)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139070)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1265)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139081)	getVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(3) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139149)
lbl(139123)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1290)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139136)	getRecord('move' 2 y(4))
		unifyValVar(y(5) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
lbl(139149)	inlineAt(<M: DelayedInitsDict> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(139164)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1233)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(138623)
lbl(139177)	move(y(1) x(0))
		genFastCall(<P: 89> 4)
		putConstant(0 x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		putConstant(nil x(4))
		inlineAssign(<M: Stack> x(4) cache)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139209)	definition(x(3) 139237 pid('' 1 pos('./compiler/CodeEmitter.oz' 1305 3) nil 4) unit [x(4) g(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DoneDict> x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 139230)
		return
lbl(139230)	createVariable(x(1))
		genCall(gci(g(2) true <M: OrderMoves> true 2) 0)
		endDefinition(139209)
lbl(139237)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139259)	definition(x(3) 139313 pid('' 1 pos('./compiler/CodeEmitter.oz' 1313 3) nil 4) unit [x(4) g(7) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DelayedInitsDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		match(x(3) ht(139305 [onScalar('skip' 139281) onRecord('move' 2 139282) onRecord(delayedCreateVariableMove 2 139283)]))
lbl(139281)	return
lbl(139282)	return
lbl(139283)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariableMove' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL2
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139305)	move(x(3) x(0))
		genCall(gci(g(2) true <M: Emit> true 1) 0)
		endDefinition(139259)
lbl(139313)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: AdjDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: DoneDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL2
		return
		endDefinition(138595)
lbl(139350)	definition(x(9) 139391 pid('Emitter,SetArguments/slow' 1 pos('./compiler/CodeEmitter.oz' 1207 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 944> 7)
		endDefinition(139350)
lbl(139391)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: SetArguments>)
		setValue(x(9))
		setValue(x(7))
lbl(139401)	definition(x(7) 139460 pid('Emitter,EnterDelayedInits/fast' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 5) <Q: 945> [g(7) y(1)])
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(139445 [onScalar(nil 139414) onRecord('|' 2 139416)]))
lbl(139414)	deAllocateL1
		return
lbl(139416)	getVarVar(x(1) x(2))
		shallowGuard(139445)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(139429)	shallowThen
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.put' [x(0) x(3) x(4)]#nil)
		move(x(2) x(0))
		deAllocateL1
		genCall(gci(g(1) true <M: EnterDelayedInits> true 1) 0)
lbl(139445)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1331)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(139401)
lbl(139460)	definition(x(9) 139486 pid('Emitter,EnterDelayedInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 945> 3)
		endDefinition(139460)
lbl(139486)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(9))
		setValue(x(7))
lbl(139496)	definition(x(7) 139826 pid('Emitter,OrderMoves/fast' 2 pos('./compiler/CodeEmitter.oz' 1333 6) nil 7) <Q: 946> [g(7) g(2) y(1) g(5)])
		allocateL4
		inlineAt(<M: CurrentID> x(2) cache)
		inlineAt(<M: DoneDict> x(3) cache)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
		inlinePlus1(x(2) x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		inlineAt(<M: Stack> x(4) cache)
		putList(x(5))
		setValue(x(0))
		setValue(x(4))
		inlineAssign(<M: Stack> x(5) cache)
		inlineAt(<M: AdjDict> x(3) cache)
		putConstant(nil x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getSelf(x(4))
lbl(139553)	definition(x(6) 139616 pid('' 3 pos('./compiler/CodeEmitter.oz' 1338 4) nil 7) unit [x(4) g(1) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		putConstant(~1 x(5))
		callBI('Dictionary.condGet' [x(4) x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testNumber(x(6) ~1 139598)
lbl(139587)	move(x(1) x(0))
		move(y(2) x(1))
		genCall(gci(g(2) true <M: OrderMoves> false 2) 0)
		branch(139601)
lbl(139598)	unify(y(2) x(6))
lbl(139601)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Value.min' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(139553)
lbl(139616)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(6) x(1))
		move(y(1) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 139822)
		inlineAt(<M: Stack> x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(2) true <M: GetCycle> false 3) 0)
		testList(y(1) 139691)
lbl(139662)	getVarVar(x(0) x(1))
		testLiteral(x(1) nil 139691)
		inlineAt(<M: DelayedInitsDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) 'move' 2 139689)
lbl(139682)	move(x(2) x(0))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139689)	deAllocateL4
		return
lbl(139691)	testList(y(1) 139809)
lbl(139694)	getVarVar(y(0) y(1))
		putRecord(x 1 y(2))
		setVariable(x(1))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(1))
		putRecord(x 1 x(1))
		setValue(y(0))
		putRecord('move' 2 x(0))
		setValue(x(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(4))
lbl(139730)	definition(x(1) 139780 pid('' 3 pos('./compiler/CodeEmitter.oz' 1358 7) nil 7) unit [x(4) g(2)])
		allocateL2
		move(g(0) x(3))
		setSelf(x(3))
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord(x 1 x(6))
		setValue(x(0))
		putRecord('move' 2 x(4))
		setValue(x(5))
		setValue(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(139730)
lbl(139780)	moveMoveYXYX(y(1) x(0) y(0) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		putRecord(x 1 x(1))
		setValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139809)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1360)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139822)	deAllocateL4
		return
		endDefinition(139496)
lbl(139826)	definition(x(9) 139861 pid('Emitter,OrderMoves/slow' 1 pos('./compiler/CodeEmitter.oz' 1333 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 946> 5)
		endDefinition(139826)
lbl(139861)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: OrderMoves>)
		setValue(x(9))
		setValue(x(7))
lbl(139871)	definition(x(7) 139924 pid('Emitter,GetCycle/fast' 3 pos('./compiler/CodeEmitter.oz' 1363 6) nil 6) <Q: 947> [g(7) y(1)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		inlineAt(<M: Arity> x(5) cache)
		callBI('Dictionary.put' [x(4) x(1) x(5)]#nil)
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 139912)
		getList(x(2))
		unifyValue(x(1))
		unifyLiteral(nil)
		inlineAssign(<M: Stack> x(3) cache)
		return
lbl(139912)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(1) true <M: GetCycle> true 3) 0)
		endDefinition(139871)
lbl(139924)	definition(x(9) 139965 pid('Emitter,GetCycle/slow' 1 pos('./compiler/CodeEmitter.oz' 1363 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 947> 7)
		endDefinition(139924)
lbl(139965)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: GetCycle>)
		setValue(x(9))
		setValue(x(7))
lbl(139975)	definition(x(7) 140148 pid('Emitter,CreateNonlinearRegs/fast' 3 pos('./compiler/CodeEmitter.oz' 1374 6) nil 3) <Q: 948> [y(1)])
		match(x(0) ht(140133 [onScalar(nil 139984) onRecord('|' 2 139988)]))
lbl(139984)	unify(x(2) x(1))
		return
lbl(139988)	allocateL5
		getVarVar(x(0) y(0))
		match(x(0) ht(140126 [onRecord(value 1 139995) onRecord(record 3 140101)]))
lbl(139995)	getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 140086)
lbl(140015)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 140060 140075)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140060)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140075)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140086)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140101)	getVoid(2)
		getVariable(x(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140126)	move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140133)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(139975)
lbl(140148)	definition(x(9) 140189 pid('Emitter,CreateNonlinearRegs/slow' 1 pos('./compiler/CodeEmitter.oz' 1374 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 948> 7)
		endDefinition(140148)
lbl(140189)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(9))
		setValue(x(7))
lbl(140199)	definition(x(7) 140250 pid('Emitter,EmitRecordWrite/fast' 4 pos('./compiler/CodeEmitter.oz' 1397 6) nil 4) <Q: 949> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: EmitVArgsWrite> false 3) 0)
		putRecord('putRecord' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: EmitMultiple> true 2) 0)
		endDefinition(140199)
lbl(140250)	definition(x(9) 140297 pid('Emitter,EmitRecordWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1397 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 949> 9)
		endDefinition(140250)
lbl(140297)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140307)	definition(x(7) 140555 pid('Emitter,EmitVArgsWrite/fast' 3 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) <Q: 950> [y(1)])
		match(x(0) ht(140540 [onScalar(nil 140316) onRecord('|' 2 140320)]))
lbl(140316)	unify(x(1) x(2))
		return
lbl(140320)	allocateL8
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(140515 [onRecord(number 1 140334) onRecord(literal 1 140350) onRecord(predicateRef 1 140366) onRecord(value 1 140382) onRecord(record 3 140474)]))
lbl(140334)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140528)
lbl(140350)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140528)
lbl(140366)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setPredicateRef' 1 x(1))
		unifyValue(x(0))
		branch(140528)
lbl(140382)	getVariable(y(3))
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(5) none 140460)
lbl(140399)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 140426 140449)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVoid' 1 x(0))
		unifyNumber(1)
		branch(140528)
lbl(140426)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVariable' 1 x(0))
		unifyValue(y(5))
		branch(140528)
lbl(140449)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140460)	getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(5))
		branch(140528)
lbl(140474)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(x(1) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(7) x(2) y(5) x(3))
		genCall(gci(g(0) true <M: EmitRecordWrite> false 4) 0)
		getList(y(6))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(7))
		branch(140528)
lbl(140515)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1428)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(140528)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL8
		genCall(gci(g(0) true <M: EmitVArgsWrite> true 3) 0)
lbl(140540)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140307)
lbl(140555)	definition(x(9) 140596 pid('Emitter,EmitVArgsWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 950> 7)
		endDefinition(140555)
lbl(140596)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140606)	definition(x(7) 140712 pid('Emitter,EmitRecordRead/fast' 4 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) <Q: 951> [y(1)])
		allocateL2
		putRecord('getRecord' 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(3) y(0))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		genCall(gci(g(0) true <M: EmitVArgsRead> false 3) 0)
		getSelf(x(2))
lbl(140646)	definition(x(1) 140703 pid('' 1 pos('./compiler/CodeEmitter.oz' 1441 3) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(140690)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(record 3 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(140677)	shallowThen
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(6) x(3))
		genCall(gci(g(1) true <M: EmitRecordRead> true 4) 0)
lbl(140690)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140646)
lbl(140703)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(140606)
lbl(140712)	definition(x(9) 140759 pid('Emitter,EmitRecordRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 951> 9)
		endDefinition(140712)
lbl(140759)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: EmitRecordRead>)
		setValue(x(9))
		setValue(x(7))
lbl(140769)	definition(x(7) 140986 pid('Emitter,EmitVArgsRead/fast' 3 pos('./compiler/CodeEmitter.oz' 1445 6) nil 5) <Q: 952> [y(1)])
		match(x(0) ht(140971 [onScalar(nil 140778) onRecord('|' 2 140782)]))
lbl(140778)	unify(x(1) x(2))
		return
lbl(140782)	allocateL6
		getVarVar(y(0) x(3))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariable(y(3))
		match(y(0) ht(140946 [onRecord(number 1 140796) onRecord(literal 1 140812) onRecord(value 1 140828) onRecord(record 3 140912)]))
lbl(140796)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyNumber' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140959)
lbl(140812)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyLiteral' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140959)
lbl(140828)	getVariable(y(0))
		unify(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 140901)
lbl(140846)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 140870 140890)
		putRecord('unifyVoid' 1 x(0))
		setConstant(1)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140959)
lbl(140870)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140959)
lbl(140890)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140901)	putRecord('unifyValue' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140959)
lbl(140912)	move(x(1) y(4))
		createVariableMove(y(5) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		branch(140959)
lbl(140946)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1469)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140959)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitVArgsRead> true 3) 0)
lbl(140971)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1473)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140769)
lbl(140986)	definition(x(9) 141027 pid('Emitter,EmitVArgsRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1445 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 952> 7)
		endDefinition(140986)
lbl(141027)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(9))
		setValue(x(7))
lbl(141037)	definition(x(7) 141194 pid('Emitter,AllocateBuiltinArgs/fast' 6 pos('./compiler/CodeEmitter.oz' 1475 6) nil 6) <Q: 953> [y(1)])
		testList(x(1) 141177)
lbl(141046)	allocateL9
		getVarVar(x(1) y(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		getList(x(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		testBool(x(1) 141137 141147)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(8) none 141124)
lbl(141093)	move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141158)
lbl(141124)	putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141158)
lbl(141137)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(141158)
lbl(141147)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1480)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141158)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		deAllocateL9
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> true 6) 0)
lbl(141177)	getLiteral(nil x(2))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
		endDefinition(141037)
lbl(141194)	definition(x(9) 141253 pid('Emitter,AllocateBuiltinArgs/slow' 1 pos('./compiler/CodeEmitter.oz' 1475 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 953> 13)
		endDefinition(141194)
lbl(141253)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(9))
		setValue(x(7))
lbl(141263)	definition(x(7) 141405 pid('Emitter,AllocateBuiltinOutputs/fast' 4 pos('./compiler/CodeEmitter.oz' 1499 6) nil 4) <Q: 954> [y(1)])
		match(x(0) ht(141390 [onScalar(nil 141272) onRecord('|' 2 141279)]))
lbl(141272)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(141279)	allocateL8
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		createVariable(y(3))
		testBool(y(2) 141312 141365)
		move(x(3) y(4))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		unify(y(4) y(3))
		branch(141376)
lbl(141312)	moveMoveXYXY(x(3) y(4) x(0) y(5))
		move(x(2) y(6))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(7) none 141343)
lbl(141330)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		unify(y(4) y(3))
		branch(141376)
lbl(141343)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		branch(141376)
lbl(141365)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1501)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141376)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
lbl(141390)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141263)
lbl(141405)	definition(x(9) 141452 pid('Emitter,AllocateBuiltinOutputs/slow' 1 pos('./compiler/CodeEmitter.oz' 1499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 954> 9)
		endDefinition(141405)
lbl(141452)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(9))
		setValue(x(7))
lbl(141462)	definition(x(7) 141517 pid('Emitter,EmitUnifies/fast' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) <Q: 955> [y(1)])
		match(x(0) ht(141502 [onScalar(nil 141471) onRecord('|' 2 141472)]))
lbl(141471)	return
lbl(141472)	allocateL1
		getVarVar(x(1) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		putRecord('unify' 2 x(0))
		setValue(x(1))
		setValue(x(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitUnifies> true 1) 0)
lbl(141502)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1525)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141462)
lbl(141517)	definition(x(9) 141543 pid('Emitter,EmitUnifies/slow' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 955> 3)
		endDefinition(141517)
lbl(141543)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: EmitUnifies>)
		setValue(x(9))
		setValue(x(7))
lbl(141553)	definition(x(7) 141643 pid('Emitter,EmitGuard/fast' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 6) <Q: 956> [g(17) y(1)])
		allocateL4
		inlineAt(continuations x(1) cache)
		putRecord(vDummy 1 x(2))
		setVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testLiteral(y(0) nil 141588)
lbl(141583)	getLiteral(nil x(3))
		branch(141600)
lbl(141588)	inlineDot(x(0) 1 x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(3))
lbl(141600)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: PushContLabel> false 2) 0)
		putList(x(1))
		setValue(y(2))
		setValue(y(1))
		inlineAssign(continuations x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(continuations x(0) cache)
		move(y(3) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: PopContLabel> true 1) 0)
		endDefinition(141553)
lbl(141643)	definition(x(9) 141669 pid('Emitter,EmitGuard/slow' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 956> 3)
		endDefinition(141643)
lbl(141669)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: EmitGuard>)
		setValue(x(9))
		setValue(x(7))
lbl(141679)	definition(x(7) 141924 pid('Emitter,EmitDisjunction/fast' 6 pos('./compiler/CodeEmitter.oz' 1541 6) nil 6) <Q: 957> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(141734)	definition(x(0) 141884 pid('' 3 pos('./compiler/CodeEmitter.oz' 1550 3) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(141871)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(141763)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(141818 [onScalar(nil 141793) onRecord('|' 2 141801)]))
lbl(141793)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141831)
lbl(141801)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141831)
lbl(141818)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1557)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141831)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(141871)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(141734)
lbl(141884)	move(x(0) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(141679)
lbl(141924)	definition(x(9) 141983 pid('Emitter,EmitDisjunction/slow' 1 pos('./compiler/CodeEmitter.oz' 1541 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 957> 13)
		endDefinition(141924)
lbl(141983)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: EmitDisjunction>)
		setValue(x(9))
		setValue(x(7))
lbl(141993)	definition(x(7) 142300 pid('Emitter,EmitTestConstant/fast' 9 pos('./compiler/CodeEmitter.oz' 1568 6) nil 9) <Q: 958> [y(1)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(7) x(0))
		move(y(6) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(7) x(0) y(8) x(1))
		callBI('Bool.and' [x(0) x(1)]#[x(3)])
		move(y(6) x(0))
		move(x(3) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(9))
		testLiteral(y(8) none 142135)
lbl(142080)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(5) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(1) x(0) y(9) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(142138)
lbl(142135)	unify(y(9) y(8))
lbl(142138)	move(y(6) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariable(x(3))
		marshalledFastCall(<R: tuple> 8)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: tuple> 8)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(141993)
lbl(142300)	definition(x(9) 142377 pid('Emitter,EmitTestConstant/slow' 1 pos('./compiler/CodeEmitter.oz' 1568 6) nil 10) unit nil)
		putConstant(9 x(9))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(9))
		inlineDot(x(0) 1 x(9) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		inlineDot(x(0) 9 x(8) cache)
		move(x(9) x(0))
		genFastCall(<Q: 958> 19)
		endDefinition(142300)
lbl(142377)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: EmitTestConstant>)
		setValue(x(9))
		setValue(x(7))
lbl(142387)	definition(x(7) 142612 pid('Emitter,DoInits/fast' 2 pos('./compiler/CodeEmitter.oz' 1603 6) nil 4) <Q: 959> [g(9) y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(1) nil 142445)
lbl(142403)	inlineAt(continuations x(1) cache)
		match(x(1) ht(142432 [onScalar(nil 142411) onRecord('|' 2 142416)]))
lbl(142411)	getLiteral(nil y(1))
		branch(142457)
lbl(142416)	getVariable(x(1))
		inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(142457)
lbl(142432)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1610)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(142445)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(142457)	getSelf(x(2))
lbl(142459)	definition(x(1) 142524 pid('' 1 pos('./compiler/CodeEmitter.oz' 1614 3) nil 2) unit [x(2) g(1)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 142520)
lbl(142484)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetTemp> false 2) 0)
		testLiteral(y(1) none 142499)
lbl(142497)	deAllocateL3
		return
lbl(142499)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142520)	deAllocateL3
		return
		endDefinition(142459)
lbl(142524)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(0) nil 142536)
lbl(142534)	deAllocateL2
		return
lbl(142536)	move(y(0) x(0))
		callBI('BitArray.toList' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(142544)	definition(x(1) 142603 pid('' 1 pos('./compiler/CodeEmitter.oz' 1628 6) nil 2) unit [x(3) g(1)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: IsFirst> false 2) 0)
		testBool(y(1) 142588 142590)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142588)	deAllocateL2
		return
lbl(142590)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1629)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142544)
lbl(142603)	move(x(2) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(142387)
lbl(142612)	definition(x(9) 142647 pid('Emitter,DoInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1603 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 959> 5)
		endDefinition(142612)
lbl(142647)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: DoInits>)
		setValue(x(9))
		setValue(x(7))
lbl(142657)	definition(x(7) 142708 pid('Emitter,PrepareShared/fast' 2 pos('./compiler/CodeEmitter.oz' 1636 6) nil 6) <Q: 960> [y(1)])
		testRecord(x(0) vShared 4 142702)
lbl(142668)	getVoid(2)
		getVarVar(x(2) x(3))
		callBI('Cell.access' [x(2)]#[x(4)])
		putConstant(1 x(2))
		testLT(x(2) x(4) x(5) 142696)
		getLiteral(false x(1))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> true 2) 0)
lbl(142696)	move(x(3) x(0))
		genCall(gci(g(0) true <M: PrepareShared> true 2) 0)
lbl(142702)	getLiteral(true x(1))
		return
		endDefinition(142657)
lbl(142708)	definition(x(9) 142743 pid('Emitter,PrepareShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1636 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 960> 5)
		endDefinition(142708)
lbl(142743)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: PrepareShared>)
		setValue(x(9))
		setValue(x(7))
lbl(142753)	definition(x(7) 142821 pid('Emitter,PushContLabel/fast' 2 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) <Q: 961> [y(1)])
		allocateL2
		inlineAt(contLabels x(2) cache)
		unify(x(2) x(1))
		move(x(1) y(0))
		testLiteral(x(0) nil 142787)
lbl(142775)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 142806 142808)
lbl(142787)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putList(x(0))
		setValue(y(1))
		setValue(y(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL2
		return
lbl(142806)	deAllocateL2
		return
lbl(142808)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142753)
lbl(142821)	definition(x(9) 142856 pid('Emitter,PushContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 961> 5)
		endDefinition(142821)
lbl(142856)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: PushContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(142866)	definition(x(7) 142934 pid('Emitter,PopContLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) <Q: 962> [y(1)])
		allocateL1
		inlineAt(contLabels x(1) cache)
		move(x(0) y(0))
		testBI('Value.\'\\=\'' [x(1) x(0)]#[x(2)] 142922)
lbl(142885)	inlineAt(contLabels x(1) cache)
		testList(x(1) 142909)
lbl(142893)	getVariable(x(1))
		putRecord('lbl' 1 x(2))
		setValue(x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(142922)
lbl(142909)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1659)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(142922)	move(y(0) x(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL1
		return
		endDefinition(142866)
lbl(142934)	definition(x(9) 142960 pid('Emitter,PopContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 962> 3)
		endDefinition(142934)
lbl(142960)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: PopContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(142970)	definition(x(7) 143004 pid('Emitter,Dereference/fast' 3 pos('./compiler/CodeEmitter.oz' 1663 6) nil 3) <Q: 963> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
		endDefinition(142970)
lbl(143004)	definition(x(9) 143045 pid('Emitter,Dereference/slow' 1 pos('./compiler/CodeEmitter.oz' 1663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 963> 7)
		endDefinition(143004)
lbl(143045)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: Dereference>)
		setValue(x(9))
		setValue(x(7))
lbl(143055)	definition(x(7) 143148 pid('Emitter,DereferenceSub/fast' 3 pos('./compiler/CodeEmitter.oz' 1667 6) nil 5) <Q: 964> [y(1)])
		match(x(0) ht(143142 [onScalar(nil 143064) onRecord(vShared 4 143095)]))
lbl(143064)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143082 [onScalar(nil 143072) onRecord('|' 2 143076)]))
lbl(143072)	unify(x(2) x(1))
		return
lbl(143076)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(143082)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1673)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143095)	allocateL3
		getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(0) y(1))
		move(x(3) y(2))
		testLiteral(y(2) nil 143130)
lbl(143116)	inlineAt(contLabels x(4) cache)
		testLiteral(x(4) nil 143130)
lbl(143125)	unify(y(0) x(1))
		deAllocateL3
		return
lbl(143130)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
lbl(143142)	unify(x(2) x(1))
		return
		endDefinition(143055)
lbl(143148)	definition(x(9) 143189 pid('Emitter,DereferenceSub/slow' 1 pos('./compiler/CodeEmitter.oz' 1667 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 964> 7)
		endDefinition(143148)
lbl(143189)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: DereferenceSub>)
		setValue(x(9))
		setValue(x(7))
lbl(143199)	definition(x(7) 143227 pid('Emitter,DeallocateAndReturn/fast' 0 pos('./compiler/CodeEmitter.oz' 1684 6) nil 2) <Q: 965> [y(1)])
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('deAllocateL' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
		endDefinition(143199)
lbl(143227)	definition(x(9) 143241 pid('Emitter,DeallocateAndReturn/slow' 1 pos('./compiler/CodeEmitter.oz' 1684 6) nil 1) unit nil)
		getLiteral(<M: DeallocateAndReturn> x(0))
		genFastCall(<Q: 965> 1)
		endDefinition(143227)
lbl(143241)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(9))
		setValue(x(7))
lbl(143251)	definition(x(7) 143364 pid('Emitter,MayAllocateEnvLocally/fast' 3 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) <Q: 966> nil)
		inlineAt(<M: LocalEnvsInhibited> x(3) cache)
		testBool(x(3) 143270 143351)
		getLiteral(false x(2))
		return
lbl(143270)	allocateL1
		move(x(2) y(0))
		testBool(x(1) 143335 143340)
lbl(143278)	testLiteral(x(0) nil 143335)
lbl(143282)	inlineAt(contLabels x(0) cache)
		testLiteral(x(0) nil 143335)
lbl(143291)	inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 143335)
lbl(143300)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Bool.not' [x(0)]#[x(1)] 143335)
lbl(143312)	putConstant(0 x(0))
		inlineAt(<M: LocalEnvSize> x(1) cache)
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		getLiteral(true y(0))
		deAllocateL1
		return
lbl(143335)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(143340)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143351)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143251)
lbl(143364)	definition(x(9) 143405 pid('Emitter,MayAllocateEnvLocally/slow' 1 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 966> 7)
		endDefinition(143364)
lbl(143405)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(9))
		setValue(x(7))
lbl(143415)	definition(x(7) 143511 pid('Emitter,EmitAddrInLocalEnv/fast' 2 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) <Q: 967> [y(1)])
		testBool(x(1) 143495 143498)
		allocateL1
		testRecord(x(0) vShared 4 143436)
lbl(143431)	genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> false 1) 0)
		branch(143462)
lbl(143436)	inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
lbl(143462)	inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(~1 x(0))
		inlineAssign(<M: HighestEverY> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		deAllocateL1
		return
lbl(143495)	genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(143498)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1707)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143415)
lbl(143511)	definition(x(9) 143546 pid('Emitter,EmitAddrInLocalEnv/slow' 1 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 967> 5)
		endDefinition(143511)
lbl(143546)	putRecord('#' [1 2 fast] x(46))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(9))
		setValue(x(7))
lbl(143556)	definition(x(7) 143699 pid('Emitter,EmitAddrInLocalEnvShared/fast' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 4) <Q: 968> [y(1) g(1) g(7)])
		testRecord(x(0) vShared 4 143669)
lbl(143567)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(1) nil 143614)
lbl(143579)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143601 [onScalar(nil 143587) onRecord('|' 2 143590)]))
lbl(143587)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(143590)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143601)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1728)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143614)	inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 143635)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143635)	allocateL1
		inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		putRecord('lbl' 1 x(2))
		setValue(x(0))
		move(x(1) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> true 1) 0)
lbl(143669)	allocateL1
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(143556)
lbl(143699)	definition(x(9) 143725 pid('Emitter,EmitAddrInLocalEnvShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 968> 3)
		endDefinition(143699)
lbl(143725)	putRecord('#' [1 2 fast] x(47))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(9))
		setValue(x(7))
lbl(143735)	definition(x(7) 143767 pid('Emitter,IsFirst/fast' 2 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) <Q: 969> [y(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		putConstant(none x(1))
		callBI('Value.\'==\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(143735)
lbl(143767)	definition(x(9) 143802 pid('Emitter,IsFirst/slow' 1 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 969> 5)
		endDefinition(143767)
lbl(143802)	putRecord('#' [1 2 fast] x(48))
		setConstant(<M: IsFirst>)
		setValue(x(9))
		setValue(x(7))
lbl(143812)	definition(x(7) 143864 pid('Emitter,IsLast/fast' 2 pos('./compiler/CodeEmitter.oz' 1751 6) nil 4) <Q: 970> [g(18)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 143832)
		getLiteral(false x(1))
		return
lbl(143832)	inlineAt(continuations x(2) cache)
		testList(x(2) 143858)
lbl(143840)	getVariable(x(2))
		inlineDot(x(2) 1 x(2) cache)
		callBI('BitArray.test' [x(2) x(0)]#[x(3)])
		callBI('Bool.not' [x(3)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(143858)	getLiteral(true x(1))
		return
		endDefinition(143812)
lbl(143864)	definition(x(9) 143899 pid('Emitter,IsLast/slow' 1 pos('./compiler/CodeEmitter.oz' 1751 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 970> 5)
		endDefinition(143864)
lbl(143899)	putRecord('#' [1 2 fast] x(49))
		setConstant(<M: IsLast>)
		setValue(x(9))
		setValue(x(7))
lbl(143909)	definition(x(7) 143955 pid('Emitter,DoesNotOccurIn/fast' 3 pos('./compiler/CodeEmitter.oz' 1760 6) nil 5) <Q: 971> [g(18)])
		inlineAt(minReg x(3) cache)
		testLT(x(0) x(3) x(4) 143929)
		getLiteral(false x(2))
		return
lbl(143929)	testLiteral(x(1) nil 143937)
lbl(143933)	getLiteral(true x(2))
		return
lbl(143937)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.test' [x(1) x(0)]#[x(3)])
		callBI('Bool.not' [x(3)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(143909)
lbl(143955)	definition(x(9) 143996 pid('Emitter,DoesNotOccurIn/slow' 1 pos('./compiler/CodeEmitter.oz' 1760 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 971> 7)
		endDefinition(143955)
lbl(143996)	putRecord('#' [1 2 fast] x(50))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(9))
		setValue(x(7))
lbl(144006)	definition(x(7) 144075 pid('Emitter,EmitInitialization/fast' 2 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) <Q: 972> [y(1)])
		match(x(0) ht(144060 [onRecord(vEquateNumber 4 144015) onRecord(vEquateLiteral 4 144030) onRecord(vGetSelf 3 144045)]))
lbl(144015)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144030)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144045)	getRecord(x 1 x(1))
		unifyVoid(1)
		putRecord('getSelf' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144060)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(144006)
lbl(144075)	definition(x(9) 144110 pid('Emitter,EmitInitialization/slow' 1 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 972> 5)
		endDefinition(144075)
lbl(144110)	putRecord('#' [1 2 fast] x(51))
		setConstant(<M: EmitInitialization>)
		setValue(x(9))
		setValue(x(7))
lbl(144120)	definition(x(7) 144255 pid('Emitter,GetReg/fast' 2 pos('./compiler/CodeEmitter.oz' 1779 6) nil 5) <Q: 973> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144209 [onScalar(none 144140) onRecord(y 1 144201) onRecord(g 1 144205)]))
lbl(144140)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144186)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144186)	inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
lbl(144201)	unify(x(1) x(4))
		return
lbl(144205)	unify(x(1) x(4))
		return
lbl(144209)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		testRecord(y(1) vGetSelf 3 144241)
lbl(144236)	genCall(gci(g(3) true <M: PredictTemp> false 2) 0)
		branch(144244)
lbl(144241)	genCall(gci(g(3) true <M: PredictReg> false 2) 0)
lbl(144244)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144120)
lbl(144255)	definition(x(9) 144290 pid('Emitter,GetReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 973> 5)
		endDefinition(144255)
lbl(144290)	putRecord('#' [1 2 fast] x(52))
		setConstant(<M: GetReg>)
		setValue(x(9))
		setValue(x(7))
lbl(144300)	definition(x(7) 144423 pid('Emitter,GetPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1806 6) nil 5) <Q: 974> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144378 [onScalar(none 144320) onRecord(y 1 144370) onRecord(g 1 144374)]))
lbl(144320)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144366)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144366)	getLiteral(none x(1))
		return
lbl(144370)	unify(x(1) x(4))
		return
lbl(144374)	unify(x(1) x(4))
		return
lbl(144378)	testRecord(x(4) vGetSelf 3 144387)
lbl(144383)	getLiteral(none x(1))
		return
lbl(144387)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(3) true <M: AllocatePerm> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144300)
lbl(144423)	definition(x(9) 144458 pid('Emitter,GetPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1806 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 974> 5)
		endDefinition(144423)
lbl(144458)	putRecord('#' [1 2 fast] x(53))
		setConstant(<M: GetPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(144468)	definition(x(7) 144532 pid('Emitter,GetTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1829 6) nil 5) <Q: 975> [g(2) g(10) y(1)])
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144496 [onScalar(none 144488) onRecord(x 1 144492)]))
lbl(144488)	getLiteral(none x(1))
		return
lbl(144492)	unify(x(1) x(4))
		return
lbl(144496)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(2) true <M: PredictTemp> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(2) true <M: EmitInitialization> true 2) 0)
		endDefinition(144468)
lbl(144532)	definition(x(9) 144567 pid('Emitter,GetTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1829 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 975> 5)
		endDefinition(144532)
lbl(144567)	putRecord('#' [1 2 fast] x(54))
		setConstant(<M: GetTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144577)	definition(x(7) 144648 pid('Emitter,ReserveTemps/fast' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 4) <Q: 976> nil)
		inlineAt(<M: HighestEverX> x(1) cache)
		testLE(x(0) x(1) x(2) 144632)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(1) x(0) x(2) 144631)
		allocateL1
		inlineAt(<M: UsedX> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 925> 6)
		move(y(0) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		deAllocateL1
		return
lbl(144631)	return
lbl(144632)	inlineMinus1(x(0) x(1))
		inlineAssign(<M: HighestEverX> x(1) cache)
		inlineAssign(<M: LowestFreeX> x(0) cache)
		return
		endDefinition(144577)
lbl(144648)	definition(x(9) 144674 pid('Emitter,ReserveTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 976> 3)
		endDefinition(144648)
lbl(144674)	putRecord('#' [1 2 fast] x(55))
		setConstant(<M: ReserveTemps>)
		setValue(x(9))
		setValue(x(7))
lbl(144684)	definition(x(7) 144799 pid('Emitter,AllocateAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1855 6) nil 4) <Q: 977> [y(1) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 144792)
lbl(144706)	inlineAt(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(1))
		move(x(0) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: HighestEverX> x(0) cache)
		move(y(2) x(1))
		testLT(x(0) x(1) x(2) 144757)
lbl(144752)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(144757)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(144792)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(144684)
lbl(144799)	definition(x(9) 144834 pid('Emitter,AllocateAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1855 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 977> 5)
		endDefinition(144799)
lbl(144834)	putRecord('#' [1 2 fast] x(56))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144844)	definition(x(7) 144951 pid('Emitter,AllocateThisTemp/fast' 3 pos('./compiler/CodeEmitter.oz' 1867 6) nil 5) <Q: 978> [g(7)])
		allocateL4
		inlineAt(<M: LowestFreeX> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('Value.\'==\'' [x(3) x(0)]#[x(4)] 144896)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(144896)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		testLT(x(0) x(1) x(2) 144914)
lbl(144909)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(144914)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(2))
		unifyValue(y(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(144844)
lbl(144951)	definition(x(9) 144992 pid('Emitter,AllocateThisTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1867 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 978> 7)
		endDefinition(144951)
lbl(144992)	putRecord('#' [1 2 fast] x(57))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145002)	definition(x(7) 145024 pid('Emitter,AllocateShortLivedTemp/fast' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) <Q: 979> [y(1)])
		inlineAt(<M: LowestFreeX> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateThisShortLivedTemp> true 2) 0)
		endDefinition(145002)
lbl(145024)	definition(x(9) 145050 pid('Emitter,AllocateShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 979> 3)
		endDefinition(145024)
lbl(145050)	putRecord('#' [1 2 fast] x(58))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145060)	definition(x(7) 145182 pid('Emitter,AllocateThisShortLivedTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1881 6) nil 5) <Q: 980> [g(7)])
		allocateL3
		inlineAt(<M: LowestFreeX> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('Value.\'==\'' [x(2) x(0)]#[x(3)] 145109)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(145109)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145142 145131)
		inlineAssign(<M: HighestEverX> x(1) cache)
		branch(145142)
lbl(145131)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145142)	inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(x 1 y(1))
		unifyValue(y(0))
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		deAllocateL3
		return
		endDefinition(145060)
lbl(145182)	definition(x(9) 145217 pid('Emitter,AllocateThisShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1881 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 980> 5)
		endDefinition(145182)
lbl(145217)	putRecord('#' [1 2 fast] x(59))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145227)	definition(x(7) 145299 pid('Emitter,AllocateAndInitializeAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1893 6) nil 2) <Q: 981> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 145292)
lbl(145249)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145280)
lbl(145270)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145280)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145292)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145227)
lbl(145299)	definition(x(9) 145334 pid('Emitter,AllocateAndInitializeAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1893 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 981> 5)
		endDefinition(145299)
lbl(145334)	putRecord('#' [1 2 fast] x(60))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145344)	definition(x(7) 145458 pid('Emitter,AllocateUnnamedPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1904 6) nil 4) <Q: 982> [y(1) g(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145451)
lbl(145366)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(1) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: HighestEverY> x(0) cache)
		testLT(x(0) x(1) x(2) 145416)
		inlineAssign(<M: HighestEverY> x(1) cache)
lbl(145416)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(145451)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145344)
lbl(145458)	definition(x(9) 145493 pid('Emitter,AllocateUnnamedPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1904 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 982> 5)
		endDefinition(145458)
lbl(145493)	putRecord('#' [1 2 fast] x(61))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145503)	definition(x(7) 145800 pid('Emitter,AllocatePerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1917 6) nil 5) <Q: 983> [y(1) g(2) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145793)
lbl(145525)	getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		createVariable(y(2))
		testBool(x(0) 145676 145714)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		putConstant('' x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) '' 145597)
lbl(145557)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		branch(145637)
lbl(145597)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(3) y(3))
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 926> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(145637)	inlineAt(<M: LowestFreeY> x(0) cache)
		move(y(2) x(1))
		testBI('Value.\'==\'' [x(1) x(0)]#[x(2)] 145725)
		inlineAt(<M: UsedY> x(0) cache)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145725)
lbl(145676)	inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) y(2))
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145725)
lbl(145714)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1919)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145725)	inlineAt(<M: HighestEverY> x(0) cache)
		move(y(2) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145758 145747)
		inlineAssign(<M: HighestEverY> x(1) cache)
		branch(145758)
lbl(145747)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1936)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145758)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(145793)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(145503)
lbl(145800)	definition(x(9) 145835 pid('Emitter,AllocatePerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1917 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 983> 5)
		endDefinition(145800)
lbl(145835)	putRecord('#' [1 2 fast] x(62))
		setConstant(<M: AllocatePerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145845)	definition(x(7) 145887 pid('Emitter,CopyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1944 6) nil 6) <Q: 984> [g(7) g(5)])
		getRecord(x 1 x(0))
		unifyVariable(x(2))
		inlineAt(<M: UsedX> x(3) cache)
		inlineAt(<M: UsedX> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.put' [x(2) x(1) x(0)]#nil)
		return
		endDefinition(145845)
lbl(145887)	definition(x(9) 145922 pid('Emitter,CopyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1944 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 984> 5)
		endDefinition(145887)
lbl(145922)	putRecord('#' [1 2 fast] x(63))
		setConstant(<M: CopyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145932)	definition(x(7) 146002 pid('Emitter,CopyPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1948 6) nil 6) <Q: 985> [g(7) g(5)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(145972 [onRecord(y 1 145947) onRecord(g 1 145970)]))
lbl(145947)	getVariable(x(2))
		inlineAt(<M: UsedY> x(3) cache)
		inlineAt(<M: UsedY> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		branch(145985)
lbl(145970)	branch(145985)
lbl(145972)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1952)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(145985)	inlineAt(<M: Permanents> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
		endDefinition(145932)
lbl(146002)	definition(x(9) 146037 pid('Emitter,CopyPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1948 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 985> 5)
		endDefinition(146002)
lbl(146037)	putRecord('#' [1 2 fast] x(64))
		setConstant(<M: CopyPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(146047)	definition(x(7) 146131 pid('Emitter,FreeReg/fast' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 4) <Q: 986> [g(2) y(1) g(10)])
		allocateL1
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(0))
		testRecord(x(3) x 1 146092)
lbl(146073)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146092)	inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 146127)
lbl(146111)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146127)	deAllocateL1
		return
		endDefinition(146047)
lbl(146131)	definition(x(9) 146157 pid('Emitter,FreeReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 986> 3)
		endDefinition(146131)
lbl(146157)	putRecord('#' [1 2 fast] x(65))
		setConstant(<M: FreeReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146167)	definition(x(7) 146226 pid('Emitter,FreeX/fast' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 4) <Q: 987> [g(2) g(10) g(7)])
		inlineAt(<M: UsedX> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146212 [onScalar(0 146187) onScalar(1 146188)]))
lbl(146187)	return
lbl(146188)	inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(0) x(1) x(2) 146211)
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(146211)	return
lbl(146212)	inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146167)
lbl(146226)	definition(x(9) 146252 pid('Emitter,FreeX/slow' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 987> 3)
		endDefinition(146226)
lbl(146252)	putRecord('#' [1 2 fast] x(66))
		setConstant(<M: FreeX>)
		setValue(x(9))
		setValue(x(7))
lbl(146262)	definition(x(7) 146321 pid('Emitter,FreeY/fast' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 4) <Q: 988> [g(2) g(10) g(7)])
		inlineAt(<M: UsedY> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146307 [onScalar(0 146282) onScalar(1 146283)]))
lbl(146282)	return
lbl(146283)	inlineAt(<M: UsedY> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeY> x(1) cache)
		testLT(x(0) x(1) x(2) 146306)
		inlineAssign(<M: LowestFreeY> x(0) cache)
lbl(146306)	return
lbl(146307)	inlineAt(<M: UsedY> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146262)
lbl(146321)	definition(x(9) 146347 pid('Emitter,FreeY/slow' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 988> 3)
		endDefinition(146321)
lbl(146347)	putRecord('#' [1 2 fast] x(67))
		setConstant(<M: FreeY>)
		setValue(x(9))
		setValue(x(7))
lbl(146357)	definition(x(7) 146439 pid('Emitter,PredictBuiltinOutput/fast' 2 pos('./compiler/CodeEmitter.oz' 1990 6) nil 4) <Q: 989> [y(1) g(3)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146424 [onScalar(nil 146371) onRecord('|' 2 146377)]))
lbl(146371)	move(x(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> true 1) 0)
lbl(146377)	allocateL3
		getVariable(y(0))
		move(y(0) x(2))
		inlineDot(x(2) 1 x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictTemp> true 2) 0)
lbl(146424)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2001)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146357)
lbl(146439)	definition(x(9) 146474 pid('Emitter,PredictBuiltinOutput/slow' 1 pos('./compiler/CodeEmitter.oz' 1990 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 989> 5)
		endDefinition(146439)
lbl(146474)	putRecord('#' [1 2 fast] x(68))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(9))
		setValue(x(7))
lbl(146484)	definition(x(7) 146551 pid('Emitter,PredictTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 2003 6) nil 4) <Q: 990> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146536 [onScalar(nil 146498) onRecord('|' 2 146501)]))
lbl(146498)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146501)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146531)
lbl(146522)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146531)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146536)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2014)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146484)
lbl(146551)	definition(x(9) 146586 pid('Emitter,PredictTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 2003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 990> 5)
		endDefinition(146551)
lbl(146586)	putRecord('#' [1 2 fast] x(69))
		setConstant(<M: PredictTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(146596)	definition(x(7) 146663 pid('Emitter,PredictReg/fast' 2 pos('./compiler/CodeEmitter.oz' 2016 6) nil 4) <Q: 991> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146648 [onScalar(nil 146610) onRecord('|' 2 146613)]))
lbl(146610)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146613)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146643)
lbl(146634)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocatePerm> true 2) 0)
lbl(146643)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146648)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2025)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146596)
lbl(146663)	definition(x(9) 146698 pid('Emitter,PredictReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2016 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 991> 5)
		endDefinition(146663)
lbl(146698)	putRecord('#' [1 2 fast] x(70))
		setConstant(<M: PredictReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146708)	definition(x(7) 147646 pid('Emitter,PredictRegSub/fast' 3 pos('./compiler/CodeEmitter.oz' 2027 6) nil 11) <Q: 992> [y(1) y(2)])
		match(x(1) ht(147626 [onScalar(nil 146717) onRecord(vMakePermanent 3 146723) onRecord(vEquateLiteral 4 146772) onRecord(vEquateRecord 6 146934) onRecord(vCallBuiltin 5 147099) onRecord(vGenCall 8 147155) onRecord(vCall 5 147175) onRecord(vFastCall 5 147193) onRecord(vApplMeth 7 147213) onRecord(vShared 4 147233) onRecord(vExHandler 7 147239) onRecord(vCreateCond 7 147269) onRecord(vCreateOr 6 147272) onRecord(vCreateEnumOr 6 147275) onRecord(vCreateChoice 6 147278) onRecord(vAsk 2 147281) onRecord(vWait 2 147288) onRecord(vWaitTop 2 147295) onRecord(vShallowGuard 8 147302) onRecord(vTestBool 8 147350) onRecord(vTestNumber 8 147395) onRecord(vTestLiteral 8 147432) onRecord(vMatch 7 147469) onRecord(vThread 5 147569) onRecord(vLockThread 5 147589) onRecord(vLockEnd 4 147613) onRecord(vDummy 1 147620)]))
lbl(146717)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146723)	allocateL4
		getVoid(1)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 146749 146761)
		getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(146749)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(146761)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2032)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(146772)	allocateL4
		getVoid(2)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) vCall 5 146825)
lbl(146791)	getVoid(1)
		getVarVar(x(3) x(4))
		getVoid(1)
		getVariable(x(5))
		shallowGuard(146825)
		getList(x(4))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146808)	shallowThen
		move(x(3) x(1))
		move(x(5) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146825)	testRecord(y(0) vGenCall 8 146870)
lbl(146830)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(146870)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146854)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146870)	testRecord(y(0) vCallBuiltin 5 146922)
lbl(146875)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(146922)
		getLiteral('Object.new' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(146905)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146922)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(146934)	allocateL5
		getVoid(3)
		getVarVar(x(1) x(3))
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testRecord(y(0) vCall 5 146991)
lbl(146957)	getVoid(1)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVariable(x(6))
		shallowGuard(146991)
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146974)	shallowThen
		move(x(4) x(1))
		move(y(4) x(2))
		move(x(6) x(3))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146991)	testRecord(y(0) vGenCall 8 147036)
lbl(146996)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(147036)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(147020)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147036)	testRecord(y(0) vCallBuiltin 5 147087)
lbl(147041)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(147087)
		getLiteral('Object.new' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(147071)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		moveMoveYXYX(y(4) x(2) y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147087)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147099)	allocateL4
		getVoid(2)
		getVariable(x(1))
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 147132 147144)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147132)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147144)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2058)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(147155)	getVoid(5)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147175)	getVoid(1)
		getVarVar(x(1) x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147193)	getVoid(2)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147213)	getVoid(4)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147233)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147239)	getVoid(1)
		getVariable(x(4))
		getVoid(3)
		getVarVar(x(5) x(1))
		putList(x(3))
		setValue(x(5))
		setConstant(nil)
		putList(x(6))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(6) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147269)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147272)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147275)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147278)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147281)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147288)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147295)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147302)	getVoid(1)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVariable(x(7))
		getVoid(1)
		getVariable(x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147350)	getVoid(2)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVarVar(x(7) x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147395)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147432)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147469)	allocateL4
		getVoid(2)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) y(0))
lbl(147480)	definition(x(1) 147526 pid('' 3 pos('./compiler/CodeEmitter.oz' 2103 7) nil 3) unit nil)
		match(x(0) ht(147511 [onRecord('onScalar' 2 147489) onRecord('onRecord' 3 147500)]))
lbl(147489)	getVoid(1)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147500)	getVoid(2)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147511)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(147480)
lbl(147526)	putList(x(3))
		setValue(x(6))
		setConstant(nil)
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(5) x(0))
		move(x(7) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147569)	getVoid(3)
		getVarVar(x(4) x(1))
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(2) x(3))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147589)	getVoid(1)
		getVariable(x(1))
		getVoid(1)
		getVariable(x(3))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 147607)
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147607)	move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147613)	getVoid(2)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147620)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147626)	callBI('Record.label' [x(1)]#[x(3)])
		move(g(1) x(4))
		callBI('Record.\'.\'' [x(4) x(3)]#[x(5)])
		callBI('Record.\'.\'' [x(1) x(5)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
		endDefinition(146708)
lbl(147646)	definition(x(9) 147687 pid('Emitter,PredictRegSub/slow' 1 pos('./compiler/CodeEmitter.oz' 2027 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 992> 7)
		endDefinition(147646)
lbl(147687)	putRecord('#' [1 2 fast] x(71))
		setConstant(<M: PredictRegSub>)
		setValue(x(9))
		setValue(x(7))
lbl(147697)	definition(x(7) 147860 pid('Emitter,PredictArgReg/fast' 5 pos('./compiler/CodeEmitter.oz' 2127 6) nil 8) <Q: 993> [y(1) g(18) g(1)])
		match(x(1) ht(147845 [onScalar(nil 147706) onRecord('|' 2 147760)]))
lbl(147706)	allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		testLiteral(x(3) nil 147745)
lbl(147719)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147745)	inlineDot(x(3) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 147719)
lbl(147755)	getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(147760)	allocateL5
		getVarVar(x(1) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Value.\'==\'' [x(1) x(0)]#[x(6)] 147822)
lbl(147781)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 147810)
		inlinePlus1(x(1) x(2))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147810)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147822)	putRecord(value 1 x(6))
		setValue(y(0))
		testBI('Value.\'\\=\'' [x(1) x(6)]#[x(7)] 147781)
lbl(147832)	inlinePlus1(x(2) x(6))
		move(y(4) x(1))
		move(x(6) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147845)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2145)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147697)
lbl(147860)	definition(x(9) 147913 pid('Emitter,PredictArgReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2127 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 993> 11)
		endDefinition(147860)
lbl(147913)	putRecord('#' [1 2 fast] x(72))
		setConstant(<M: PredictArgReg>)
		setValue(x(9))
		setValue(x(7))
lbl(147923)	definition(x(7) 148027 pid('Emitter,PredictRegForCall/fast' 5 pos('./compiler/CodeEmitter.oz' 2147 6) nil 7) <Q: 994> [y(1) g(18)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testLiteral(y(3) nil 148010)
lbl(147947)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(2)] 147995)
		inlineAt(<M: UsedX> x(1) cache)
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147995)	moveMoveYXYX(y(2) x(1) y(3) x(3))
		move(y(4) x(4))
		putConstant(0 x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(148010)	inlineDot(x(3) 1 x(5) cache)
		testBI('BitArray.test' [x(5) x(0)]#[x(6)] 147947)
lbl(148020)	getLiteral(anyperm y(4))
		deAllocateL5
		return
		endDefinition(147923)
lbl(148027)	definition(x(9) 148080 pid('Emitter,PredictRegForCall/slow' 1 pos('./compiler/CodeEmitter.oz' 2147 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 994> 11)
		endDefinition(148027)
lbl(148080)	putRecord('#' [1 2 fast] x(73))
		setConstant(<M: PredictRegForCall>)
		setValue(x(9))
		setValue(x(7))
lbl(148090)	definition(x(7) 148118 pid('Emitter,PredictRegForInits/fast' 4 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) <Q: 995> [g(18) y(1)])
		testBI('BitArray.test' [x(1) x(0)]#[x(4)] 148104)
		getLiteral(anyperm x(3))
		return
lbl(148104)	move(x(0) x(1))
		move(x(2) x(0))
		move(x(3) x(2))
		genCall(gci(g(1) true <M: PredictRegForBranches> true 3) 0)
		endDefinition(148090)
lbl(148118)	definition(x(9) 148165 pid('Emitter,PredictRegForInits/slow' 1 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 995> 9)
		endDefinition(148118)
lbl(148165)	putRecord('#' [1 2 fast] x(74))
		setConstant(<M: PredictRegForInits>)
		setValue(x(9))
		setValue(x(7))
lbl(148175)	definition(x(7) 148256 pid('Emitter,PredictRegForBranches/fast' 3 pos('./compiler/CodeEmitter.oz' 2164 6) nil 6) <Q: 996> [y(1) g(18)])
		match(x(0) ht(148241 [onScalar(nil 148184) onRecord('|' 2 148193)]))
lbl(148184)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148193)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) nil 148221)
lbl(148209)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegForBranches> true 3) 0)
lbl(148221)	inlineDot(x(0) 1 x(4) cache)
		testBI('BitArray.test' [x(4) x(1)]#[x(5)] 148209)
lbl(148231)	move(x(0) x(1))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(148241)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(148175)
lbl(148256)	definition(x(9) 148297 pid('Emitter,PredictRegForBranches/slow' 1 pos('./compiler/CodeEmitter.oz' 2164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 996> 7)
		endDefinition(148256)
lbl(148297)	putRecord('#' [1 2 fast] x(75))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(9))
		setValue(x(7))
lbl(148307)	definition(x(7) 148349 pid('Emitter,PredictPermReg/fast' 3 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) <Q: 997> [y(1) g(18)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) nil 148332)
lbl(148323)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148332)	inlineDot(x(1) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 148323)
lbl(148342)	getLiteral(anyperm y(1))
		deAllocateL2
		return
		endDefinition(148307)
lbl(148349)	definition(x(9) 148390 pid('Emitter,PredictPermReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 997> 7)
		endDefinition(148349)
lbl(148390)	putRecord('#' [1 2 fast] x(76))
		setConstant(<M: PredictPermReg>)
		setValue(x(9))
		setValue(x(7))
lbl(148400)	definition(x(7) 148480 pid('Emitter,SaveRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 7) <Q: 998> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 5 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		inlineAt(<M: Permanents> x(5) cache)
		callBI('Dictionary.clone' [x(5)]#[x(6)])
		unify(x(6) x(0))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(5)])
		unify(x(5) x(1))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(4))
		deAllocateL1
		return
		endDefinition(148400)
lbl(148480)	definition(x(9) 148506 pid('Emitter,SaveRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 998> 3)
		endDefinition(148480)
lbl(148506)	putRecord('#' [1 2 fast] x(77))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148516)	definition(x(7) 148624 pid('Emitter,RestoreRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 6) <Q: 999> [g(7) g(5) y(1)])
		allocateL2
		getRecord('#' 5 x(0))
		unifyVariable(x(4))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(x(5))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(5) cache)
		inlineAssign(<M: Permanents> x(4) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148557)	definition(x(3) 148593 pid('' 1 pos('./compiler/CodeEmitter.oz' 2195 3) nil 5) unit [x(5) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148557)
lbl(148593)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		deAllocateL2
		genCall(gci(g(2) true <M: KillAllTemporaries> true 0) 0)
		endDefinition(148516)
lbl(148624)	definition(x(9) 148650 pid('Emitter,RestoreRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 999> 3)
		endDefinition(148624)
lbl(148650)	putRecord('#' [1 2 fast] x(78))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148660)	definition(x(7) 148776 pid('Emitter,SaveAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 10) <Q: 1000> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 8 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		inlineAt(<M: Temporaries> x(8) cache)
		callBI('Dictionary.clone' [x(8)]#[x(9)])
		unify(x(9) x(0))
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(8)])
		unify(x(8) x(1))
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(7))
		deAllocateL1
		return
		endDefinition(148660)
lbl(148776)	definition(x(9) 148802 pid('Emitter,SaveAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1000> 3)
		endDefinition(148776)
lbl(148802)	putRecord('#' [1 2 fast] x(79))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(148812)	definition(x(7) 148982 pid('Emitter,RestoreAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 8) <Q: 1001> [g(6) g(7) g(5)])
		allocateL3
		getRecord('#' 8 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(x(7))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(7) cache)
		inlineAt(<M: Temporaries> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Temporaries> x(4) cache)
		inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: UsedX> x(5) cache)
		inlineAt(<M: Permanents> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Permanents> x(6) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148893)	definition(x(3) 148929 pid('' 1 pos('./compiler/CodeEmitter.oz' 2221 3) nil 5) unit [x(5) g(1) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148893)
lbl(148929)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL3
		return
		endDefinition(148812)
lbl(148982)	definition(x(9) 149008 pid('Emitter,RestoreAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1001> 3)
		endDefinition(148982)
lbl(149008)	putRecord('#' [1 2 fast] x(80))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(149018)	definition(x(7) 149088 pid('Emitter,KillAllTemporaries/fast' 0 pos('./compiler/CodeEmitter.oz' 2230 6) nil 3) <Q: 1002> [g(20) g(5) g(10) g(6)])
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(2)])
lbl(149032)	definition(x(1) 149055 pid('' 1 pos('./compiler/CodeEmitter.oz' 2232 3) nil 3) unit [g(1) x(0) g(2)])
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) x 1 149052)
lbl(149049)	callBI('Dictionary.remove' [x(1) x(0)]#nil)
lbl(149052)	return
		endDefinition(149032)
lbl(149055)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(0 x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		return
		endDefinition(149018)
lbl(149088)	definition(x(9) 149102 pid('Emitter,KillAllTemporaries/slow' 1 pos('./compiler/CodeEmitter.oz' 2230 6) nil 1) unit nil)
		getLiteral(<M: KillAllTemporaries> x(0))
		genFastCall(<Q: 1002> 1)
		endDefinition(149088)
lbl(149102)	putRecord('#' [1 2 fast] x(81))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(9))
		setValue(x(7))
lbl(149112)	definition(x(7) 149140 pid('Emitter,Emit/fast' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) <Q: 1003> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		inlineAt(<M: CodeTl> x(0) cache)
		unify(x(0) x(1))
		inlineAssign(<M: CodeTl> x(2) cache)
		return
		endDefinition(149112)
lbl(149140)	definition(x(9) 149166 pid('Emitter,Emit/slow' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1003> 3)
		endDefinition(149140)
lbl(149166)	putRecord('#' [1 2 fast] x(82))
		setConstant(<M: Emit>)
		setValue(x(9))
		setValue(x(7))
lbl(149176)	definition(x(7) 149198 pid('Emitter,EmitMultiple/fast' 2 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) <Q: 1004> nil)
		inlineAt(<M: CodeTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: CodeTl> x(1) cache)
		return
		endDefinition(149176)
lbl(149198)	definition(x(9) 149233 pid('Emitter,EmitMultiple/slow' 1 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1004> 5)
		endDefinition(149198)
lbl(149233)	putRecord('#' [1 2 fast] x(83))
		setConstant(<M: EmitMultiple>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 74 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(10))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		setValue(x(71))
		setValue(x(72))
		setValue(x(73))
		setValue(x(74))
		setValue(x(75))
		setValue(x(76))
		setValue(x(77))
		setValue(x(78))
		setValue(x(79))
		setValue(x(80))
		setValue(x(81))
		setValue(x(82))
		setValue(x(83))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(7) x(1))
		move(x(8) x(2))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Emitter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		getRecord(c [vApplMeth vAsk vBranch vCall vCallBuiltin vClear vCreateChoice vCreateCond vCreateEnumOr vCreateOr vDefinition vDefinitionCopy vEquateLiteral vEquateNumber vEquateRecord vExHandler vFailure vFastCall vGenCall vGetSelf vGetVariable vInlineAssign vInlineAt vInlineDot vLockEnd vLockThread vMakePermanent vMatch vPopEx vSetSelf vShallowGuard vShared vStepPoint vTestBool vTestBuiltin vTestLiteral vTestNumber vThread vUnify vWait vWaitTop] y(2))
		unifyNumber(7)
		unifyNumber(2)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(5)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(7)
		unifyNumber(8)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(6)
		unifyNumber(6)
		unifyNumber(2)
		unifyNumber(5)
		unifyNumber(8)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(7)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(7)
		unifyNumber(6)
		unifyNumber(7)
		unifyNumber(7)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(2)
		unifyNumber(2)
		putList(x(0))
		setValue(y(1))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: EmptyRS> <M: NextReg> <M: Saved> minReg nextLabel regNames sharedDone] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [debugInfoControlSwitch debugInfoNameVarsSwitch debugInfoVarnamesSwitch reporter switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(149559)	definition(x(7) 149691 pid('CodeStore,init/fast' 2 pos('./compiler/CodeStore.oz' 77 3) nil 3) <Q: 1005> [y(1)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(regNames x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Saved> x(2) cache)
		putConstant(1 x(2))
		inlineAssign(nextLabel x(2) cache)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(sharedDone x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoControlSwitch x(1) cache)
		putConstant(debuginfocontrol x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoVarnamesSwitch x(1) cache)
		putConstant(debuginfovarnames x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoNameVarsSwitch x(1) cache)
		putConstant(debuginfonamevars x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) switches x(1) cache)
		unify(x(1) y(0))
		getSelf(x(0))
		inlineDot(x(0) reporter x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(149559)
lbl(149691)	definition(x(8) 149726 pid('CodeStore,init/slow' 1 pos('./compiler/CodeStore.oz' 77 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1005> 5)
		endDefinition(149691)
lbl(149726)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(149736)	definition(x(7) 149776 pid('CodeStore,makeRegSet/fast' 1 pos('./compiler/CodeStore.oz' 94 3) nil 4) <Q: 1006> [g(21)])
		inlineAt(minReg x(1) cache)
		inlineAt(<M: NextReg> x(2) cache)
		inlineMinus1(x(2) x(3))
		testLE(x(1) x(3) x(2) 149767)
		callBI('BitArray.new' [x(1) x(3)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(149767)	callBI('BitArray.new' [x(1) x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(149736)
lbl(149776)	definition(x(8) 149802 pid('CodeStore,makeRegSet/slow' 1 pos('./compiler/CodeStore.oz' 94 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1006> 3)
		endDefinition(149776)
lbl(149802)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRegSet)
		setValue(x(8))
		setValue(x(7))
lbl(149812)	definition(x(7) 149881 pid('CodeStore,enterVs/fast' 2 pos('./compiler/CodeStore.oz' 104 3) nil 3) <Q: 1007> [g(3) y(0)])
		match(x(0) ht(149866 [onScalar(nil 149821) onRecord('|' 2 149822)]))
lbl(149821)	return
lbl(149822)	allocateL3
		getVarVar(x(2) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(reg x(2) 1 cache)
		inlineAt(minReg x(0) cache)
		move(y(2) x(1))
		testLE(x(0) x(1) x(2) 149857)
		move(y(1) x(0))
		callBI('BitArray.set' [x(0) x(1)]#nil)
lbl(149857)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(1) true enterVs true 2) 0)
lbl(149866)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(149812)
lbl(149881)	definition(x(8) 149916 pid('CodeStore,enterVs/slow' 1 pos('./compiler/CodeStore.oz' 104 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1007> 5)
		endDefinition(149881)
lbl(149916)	putRecord('#' [1 2 fast] x(11))
		setConstant(enterVs)
		setValue(x(8))
		setValue(x(7))
lbl(149926)	definition(x(7) 149966 pid('CodeStore,startDefinition/fast' 0 pos('./compiler/CodeStore.oz' 113 3) nil 3) <Q: 1008> nil)
		inlineAt(minReg x(0) cache)
		inlineAt(<M: Saved> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<M: Saved> x(2) cache)
		inlineAt(<M: NextReg> x(0) cache)
		inlineAssign(minReg x(0) cache)
		return
		endDefinition(149926)
lbl(149966)	definition(x(8) 149980 pid('CodeStore,startDefinition/slow' 1 pos('./compiler/CodeStore.oz' 113 3) nil 1) unit nil)
		getLiteral(startDefinition x(0))
		genFastCall(<Q: 1008> 1)
		endDefinition(149966)
lbl(149980)	putRecord('#' [1 2 fast] x(12))
		setConstant(startDefinition)
		setValue(x(8))
		setValue(x(7))
lbl(149990)	definition(x(7) 150015 pid('CodeStore,newReg/fast' 1 pos('./compiler/CodeStore.oz' 117 3) nil 2) <Q: 1009> nil)
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		return
		endDefinition(149990)
lbl(150015)	definition(x(8) 150041 pid('CodeStore,newReg/slow' 1 pos('./compiler/CodeStore.oz' 117 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1009> 3)
		endDefinition(150015)
lbl(150041)	putRecord('#' [1 2 fast] x(13))
		setConstant(newReg)
		setValue(x(8))
		setValue(x(7))
lbl(150051)	definition(x(7) 150087 pid('CodeStore,newSelfReg/fast' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) <Q: 1010> [g(7)])
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		inlineAt(regNames x(1) cache)
		putConstant('self' x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(150051)
lbl(150087)	definition(x(8) 150113 pid('CodeStore,newSelfReg/slow' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1010> 3)
		endDefinition(150087)
lbl(150113)	putRecord('#' [1 2 fast] x(14))
		setConstant(newSelfReg)
		setValue(x(8))
		setValue(x(7))
lbl(150123)	definition(x(7) 150209 pid('CodeStore,newVariableReg/fast' 2 pos('./compiler/CodeStore.oz' 126 3) nil 3) <Q: 1011> [g(10) g(7)])
		allocateL4
		inlineAt(<M: NextReg> x(2) cache)
		unify(x(2) x(1))
		inlinePlus1(x(1) x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(2) generated 150177)
lbl(150164)	inlineAt(regNames x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL4
		return
lbl(150177)	inlineAt(regNames x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(150123)
lbl(150209)	definition(x(8) 150244 pid('CodeStore,newVariableReg/slow' 1 pos('./compiler/CodeStore.oz' 126 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1011> 5)
		endDefinition(150209)
lbl(150244)	putRecord('#' [1 2 fast] x(15))
		setConstant(newVariableReg)
		setValue(x(8))
		setValue(x(7))
lbl(150254)	definition(x(7) 150384 pid('CodeStore,endDefinition/fast' 6 pos('./compiler/CodeStore.oz' 135 3) nil 7) <Q: 1012> [y(0) g(6) y(1)])
		allocateL9
		inlineAt(<M: Saved> x(6) cache)
		getList(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(8) x(0))
		inlineAssign(<M: EmptyRS> x(0) cache)
		move(y(2) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		inlineAt(<M: EmptyRS> x(1) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: AddRegOccs> false 2) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		moveMoveYXYX(y(5) x(4) y(7) x(5))
		genCall(gci(g(2) true doEmit false 6) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(minReg x(0) cache)
		inlineAssign(<M: NextReg> x(0) cache)
		move(y(0) x(0))
		inlineAssign(minReg x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: Saved> x(0) cache)
		deAllocateL9
		return
		endDefinition(150254)
lbl(150384)	definition(x(8) 150443 pid('CodeStore,endDefinition/slow' 1 pos('./compiler/CodeStore.oz' 135 3) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1012> 13)
		endDefinition(150384)
lbl(150443)	putRecord('#' [1 2 fast] x(16))
		setConstant('endDefinition')
		setValue(x(8))
		setValue(x(7))
lbl(150453)	definition(x(7) 150497 pid('CodeStore,getRegNames/fast' 2 pos('./compiler/CodeStore.oz' 150 3) nil 5) <Q: 1013> [g(5)])
		getSelf(x(3))
lbl(150461)	definition(x(4) 150486 pid('' 2 pos('./compiler/CodeStore.oz' 151 24) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(150461)
lbl(150486)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(150453)
lbl(150497)	definition(x(8) 150532 pid('CodeStore,getRegNames/slow' 1 pos('./compiler/CodeStore.oz' 150 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1013> 5)
		endDefinition(150497)
lbl(150532)	putRecord('#' [1 2 fast] x(17))
		setConstant(getRegNames)
		setValue(x(8))
		setValue(x(7))
lbl(150542)	definition(x(7) 150573 pid('CodeStore,GetOccs/fast' 2 pos('./compiler/CodeStore.oz' 154 3) nil 3) <Q: 1014> nil)
		testLiteral(x(0) nil 150561)
lbl(150552)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150561)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(150542)
lbl(150573)	definition(x(8) 150608 pid('CodeStore,GetOccs/slow' 1 pos('./compiler/CodeStore.oz' 154 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1014> 5)
		endDefinition(150573)
lbl(150608)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: GetOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(150618)	definition(x(7) 151939 pid('CodeStore,ComputeOccs/fast' 2 pos('./compiler/CodeStore.oz' 157 3) nil 7) <Q: 1015> [y(0) y(2) g(17) g(22) g(23) g(9) g(3)])
		match(x(0) ht(150678 [onScalar(nil 150627) onRecord(vShared 4 150636)]))
lbl(150627)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150636)	allocateL2
		getVariable(x(0))
		getVoid(1)
		getVarVar(x(2) x(3))
		callBI('Cell.access' [x(2)]#[x(4)])
		inlinePlus1(x(4) x(5))
		callBI('Cell.assign' [x(2) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testBI('Value.isDet' [x(0)]#[x(2)] 150664)
		branch(150673)
lbl(150664)	move(x(3) x(0))
		move(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
lbl(150673)	unify(y(0) y(1))
		deAllocateL2
		return
lbl(150678)	allocateL7
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		callBI('Record.label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(2)]#[x(4)])
		callBI('Record.\'.\'' [x(0) x(4)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testLiteral(x(2) nil 150717)
lbl(150709)	move(y(0) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		branch(150735)
lbl(150717)	move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(0))
lbl(150735)	match(y(1) ht(151924 [onRecord(vStepPoint 5 150738) onRecord(vMakePermanent 3 150758) onRecord(vClear 3 150769) onRecord(vUnify 4 150780) onRecord(vFailure 2 150800) onRecord(vEquateNumber 4 150802) onRecord(vEquateLiteral 4 150813) onRecord(vEquateRecord 6 150824) onRecord(vGetVariable 3 150844) onRecord(vCallBuiltin 5 150855) onRecord(vGenCall 8 150866) onRecord(vCall 5 150889) onRecord(vFastCall 5 150909) onRecord(vApplMeth 7 150920) onRecord(vInlineDot 7 150943) onRecord(vInlineAt 4 150966) onRecord(vInlineAssign 4 150977) onRecord(vGetSelf 3 150988) onRecord(vSetSelf 3 150999) onRecord(vDefinition 7 151010) onRecord(vDefinitionCopy 8 151033) onRecord(vExHandler 7 151065) onRecord(vPopEx 3 151139) onRecord(vCreateCond 7 151141) onRecord(vCreateOr 6 151401) onRecord(vCreateEnumOr 6 151417) onRecord(vCreateChoice 6 151433) onRecord(vAsk 2 151449) onRecord(vWait 2 151451) onRecord(vWaitTop 2 151453) onRecord(vShallowGuard 8 151455) onRecord(vTestBool 8 151575) onRecord(vMatch 7 151670) onRecord(vThread 5 151875) onRecord(vLockThread 5 151911) onRecord(vLockEnd 4 151922)]))
lbl(150738)	getVoid(1)
		getVariable(x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(150758)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150769)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150780)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150800)	deAllocateL7
		return
lbl(150802)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150813)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150824)	getVoid(3)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(150844)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150855)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150866)	getVoid(1)
		getVariable(x(0))
		getVoid(3)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150889)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150909)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150920)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150943)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150966)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150977)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150988)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150999)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151010)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151033)	getVoid(1)
		getVarVar(x(0) y(1))
		getVoid(2)
		getVariable(y(2))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151065)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		moveMoveYXYX(y(3) x(1) y(5) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(0) x(3))
		callBI('BitArray.and' [x(1) x(3)]#nil)
		callBI('BitArray.clone' [x(0)]#[x(4)])
		callBI('BitArray.and' [x(4) x(2)]#nil)
		callBI('BitArray.or' [x(1) x(4)]#nil)
		callBI('BitArray.or' [x(3) x(0)]#nil)
		callBI('BitArray.or' [x(3) x(2)]#nil)
		deAllocateL7
		return
lbl(151139)	deAllocateL7
		return
lbl(151141)	getVoid(1)
		getVarVar(y(1) x(0))
		getVoid(2)
		getVarVar(y(2) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151168)	definition(x(1) 151258 pid('' 1 pos('./compiler/CodeStore.oz' 245 6) nil 5) unit [x(2) g(0) g(3) y(3) g(2) g(4)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151245)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151191)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(151245)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(245)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151168)
lbl(151258)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(2) ht(151275 [onScalar(nil 151305)]))
lbl(151275)	move(y(2) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(151281)	definition(x(2) 151296 pid('' 1 pos('./compiler/CodeStore.oz' 259 2) nil 2) unit [g(6) y(3)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151281)
lbl(151296)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(151305)	moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151315)	definition(x(1) 151394 pid('' 1 pos('./compiler/CodeStore.oz' 263 6) nil 5) unit [x(2) g(3) g(0) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151381)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151338)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(151381)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(263)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151315)
lbl(151394)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151401)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151417)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151433)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151449)	deAllocateL7
		return
lbl(151451)	deAllocateL7
		return
lbl(151453)	deAllocateL7
		return
lbl(151455)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVarVar(y(3) y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(1) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		match(y(3) ht(151523 [onScalar(nil 151553)]))
lbl(151523)	move(y(3) x(5))
		callBI('BitArray.toList' [x(5)]#[x(6)])
lbl(151529)	definition(x(5) 151544 pid('' 1 pos('./compiler/CodeStore.oz' 294 2) nil 2) unit [g(6) y(4)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151529)
lbl(151544)	move(x(6) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
lbl(151553)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151575)	getVoid(1)
		getVarVar(y(1) x(0))
		getVarVar(y(2) y(3))
		getVoid(2)
		getVariable(y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(2) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151670)	getVoid(1)
		getVarVar(y(1) x(0))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151698)	definition(x(1) 151768 pid('' 1 pos('./compiler/CodeStore.oz' 317 6) nil 3) unit [x(2) g(3) g(0) y(3)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151733 [onRecord('onScalar' 2 151715) onRecord('onRecord' 3 151724)]))
lbl(151715)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151746)
lbl(151724)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151746)
lbl(151733)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(320)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151746)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151698)
lbl(151768)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151798)	definition(x(1) 151868 pid('' 1 pos('./compiler/CodeStore.oz' 327 6) nil 3) unit [x(2) g(3) g(0) y(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151833 [onRecord('onScalar' 2 151815) onRecord('onRecord' 3 151824)]))
lbl(151815)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151846)
lbl(151824)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151846)
lbl(151833)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(330)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151846)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151798)
lbl(151868)	move(y(2) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151875)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(1))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		callBI('BitArray.or' [x(2) x(0)]#nil)
		deAllocateL7
		return
lbl(151911)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151922)	deAllocateL7
		return
lbl(151924)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(342)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150618)
lbl(151939)	definition(x(8) 151974 pid('CodeStore,ComputeOccs/slow' 1 pos('./compiler/CodeStore.oz' 157 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1015> 5)
		endDefinition(151939)
lbl(151974)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ComputeOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(151984)	definition(x(7) 152241 pid('CodeStore,ComputeDisjunctionOccs/fast' 4 pos('./compiler/CodeStore.oz' 345 3) nil 6) <Q: 1016> [g(17) y(0) g(22) g(23) g(9) g(3)])
		allocateL4
		inlineAt(<M: EmptyRS> x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(2))
		getSelf(x(4))
lbl(152004)	definition(x(5) 152094 pid('' 1 pos('./compiler/CodeStore.oz' 348 7) nil 5) unit [x(4) g(1) g(2) x(2) g(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152081)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152027)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(152081)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(348)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152004)
lbl(152094)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(1) ht(152121 [onScalar(nil 152151)]))
lbl(152121)	move(y(1) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(152127)	definition(x(2) 152142 pid('' 1 pos('./compiler/CodeStore.oz' 360 3) nil 2) unit [g(5) y(2)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152127)
lbl(152142)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(152151)	getSelf(x(2))
lbl(152153)	definition(x(1) 152232 pid('' 1 pos('./compiler/CodeStore.oz' 363 7) nil 5) unit [x(2) g(2) g(1) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152219)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152176)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(152219)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(363)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152153)
lbl(152232)	move(y(0) x(0))
		deAllocateL4
		genFastCall(<P: 34> 5)
		endDefinition(151984)
lbl(152241)	definition(x(8) 152288 pid('CodeStore,ComputeDisjunctionOccs/slow' 1 pos('./compiler/CodeStore.oz' 345 3) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1016> 9)
		endDefinition(152241)
lbl(152288)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152298)	definition(x(7) 152321 pid('CodeStore,RegOcc/fast' 2 pos('./compiler/CodeStore.oz' 368 3) nil 4) <Q: 1017> [g(3)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 152315)
		return
lbl(152315)	callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152298)
lbl(152321)	definition(x(8) 152356 pid('CodeStore,RegOcc/slow' 1 pos('./compiler/CodeStore.oz' 368 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1017> 5)
		endDefinition(152321)
lbl(152356)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RegOcc>)
		setValue(x(8))
		setValue(x(7))
lbl(152366)	definition(x(7) 152422 pid('CodeStore,RegOccs/fast' 2 pos('./compiler/CodeStore.oz' 373 3) nil 5) <Q: 1018> [g(3) y(0)])
		match(x(0) ht(152407 [onScalar(nil 152375) onRecord('|' 2 152376)]))
lbl(152375)	return
lbl(152376)	allocateL2
		getVarVar(x(0) x(2))
		inlineAt(minReg x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testLE(x(3) x(0) x(4) 152398)
lbl(152395)	callBI('BitArray.set' [x(1) x(0)]#nil)
lbl(152398)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: RegOccs> true 2) 0)
lbl(152407)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(380)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152366)
lbl(152422)	definition(x(8) 152457 pid('CodeStore,RegOccs/slow' 1 pos('./compiler/CodeStore.oz' 373 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1018> 5)
		endDefinition(152422)
lbl(152457)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: RegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152467)	definition(x(7) 152527 pid('CodeStore,RegOccVArgs/fast' 2 pos('./compiler/CodeStore.oz' 382 3) nil 3) <Q: 1019> [y(0)])
		match(x(0) ht(152512 [onScalar(nil 152476) onRecord('|' 2 152477)]))
lbl(152476)	return
lbl(152477)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		match(x(0) ht(152503 [onRecord(value 1 152489) onRecord(record 3 152496)]))
lbl(152489)	getVariable(x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		branch(152503)
lbl(152496)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(0) true <M: RegOccVArgs> false 2) 0)
lbl(152503)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(152512)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152467)
lbl(152527)	definition(x(8) 152562 pid('CodeStore,RegOccVArgs/slow' 1 pos('./compiler/CodeStore.oz' 382 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1019> 5)
		endDefinition(152527)
lbl(152562)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: RegOccVArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(152572)	definition(x(7) 153083 pid('CodeStore,AddRegOccs/fast' 2 pos('./compiler/CodeStore.oz' 393 3) nil 5) <Q: 1020> [g(22) y(2) y(0) g(1) g(7) g(17)])
		testLiteral(x(0) nil 152583)
lbl(152582)	return
lbl(152583)	allocateL6
		inlineDot(x(0) 1 x(2) cache)
		callBI('BitArray.or' [x(2) x(1)]#nil)
		callBI('Record.label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(2)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testNumber(x(4) ~1 152616)
lbl(152611)	unify(y(1) x(1))
		branch(152644)
lbl(152616)	callBI('Record.\'.\'' [x(0) x(4)]#[x(2)])
		testLiteral(x(2) nil 152628)
lbl(152623)	unify(y(1) x(1))
		branch(152644)
lbl(152628)	moveMoveXYYX(x(2) y(2) y(2) x(0))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
lbl(152644)	match(y(0) ht(153068 [onRecord(vStepPoint 5 152647) onRecord(vMakePermanent 3 152658) onRecord(vClear 3 152660) onRecord(vUnify 4 152662) onRecord(vFailure 2 152664) onRecord(vEquateNumber 4 152666) onRecord(vEquateLiteral 4 152668) onRecord(vEquateRecord 6 152670) onRecord(vGetVariable 3 152672) onRecord(vCallBuiltin 5 152674) onRecord(vGenCall 8 152676) onRecord(vCall 5 152678) onRecord(vFastCall 5 152680) onRecord(vApplMeth 7 152682) onRecord(vInlineDot 7 152684) onRecord(vInlineAt 4 152686) onRecord(vInlineAssign 4 152688) onRecord(vGetSelf 3 152690) onRecord(vSetSelf 3 152692) onRecord(vDefinition 7 152694) onRecord(vDefinitionCopy 8 152696) onRecord(vShared 4 152698) onRecord(vExHandler 7 152738) onRecord(vPopEx 3 152788) onRecord(vCreateCond 7 152790) onRecord(vCreateOr 6 152824) onRecord(vCreateEnumOr 6 152837) onRecord(vCreateChoice 6 152850) onRecord(vAsk 2 152863) onRecord(vWait 2 152865) onRecord(vWaitTop 2 152867) onRecord(vShallowGuard 8 152869) onRecord(vTestBool 8 152943) onRecord(vMatch 7 152973) onRecord(vThread 5 153053) onRecord(vLockThread 5 153064) onRecord(vLockEnd 4 153066)]))
lbl(152647)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152658)	deAllocateL6
		return
lbl(152660)	deAllocateL6
		return
lbl(152662)	deAllocateL6
		return
lbl(152664)	deAllocateL6
		return
lbl(152666)	deAllocateL6
		return
lbl(152668)	deAllocateL6
		return
lbl(152670)	deAllocateL6
		return
lbl(152672)	deAllocateL6
		return
lbl(152674)	deAllocateL6
		return
lbl(152676)	deAllocateL6
		return
lbl(152678)	deAllocateL6
		return
lbl(152680)	deAllocateL6
		return
lbl(152682)	deAllocateL6
		return
lbl(152684)	deAllocateL6
		return
lbl(152686)	deAllocateL6
		return
lbl(152688)	deAllocateL6
		return
lbl(152690)	deAllocateL6
		return
lbl(152692)	deAllocateL6
		return
lbl(152694)	deAllocateL6
		return
lbl(152696)	deAllocateL6
		return
lbl(152698)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 152717)
		deAllocateL6
		return
lbl(152717)	inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		move(x(1) x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152738)	getVoid(1)
		getVariable(y(0))
		getVoid(1)
		getVariable(y(2))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152788)	deAllocateL6
		return
lbl(152790)	getVoid(1)
		getVarVar(y(0) y(2))
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152824)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152837)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152850)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152863)	deAllocateL6
		return
lbl(152865)	deAllocateL6
		return
lbl(152867)	deAllocateL6
		return
lbl(152869)	getVoid(1)
		getVarVar(y(0) y(2))
		getVariable(y(3))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152943)	getVoid(2)
		getVarVar(x(0) y(0))
		getVariable(y(2))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152973)	getVoid(2)
		getVarVar(x(0) y(0))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		getSelf(x(2))
lbl(152986)	definition(x(1) 153046 pid('' 1 pos('./compiler/CodeStore.oz' 469 6) nil 3) unit [x(2) y(1) g(2)])
		allocateL1
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(153021 [onRecord('onScalar' 2 153003) onRecord('onRecord' 3 153012)]))
lbl(153003)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153034)
lbl(153012)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153034)
lbl(153021)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(153034)	move(y(0) x(0))
		move(g(1) x(1))
		deAllocateL1
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
		endDefinition(152986)
lbl(153046)	move(y(0) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(153053)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(153064)	deAllocateL6
		return
lbl(153066)	deAllocateL6
		return
lbl(153068)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(481)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152572)
lbl(153083)	definition(x(8) 153118 pid('CodeStore,AddRegOccs/slow' 1 pos('./compiler/CodeStore.oz' 393 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1020> 5)
		endDefinition(153083)
lbl(153118)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AddRegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(153128)	definition(x(7) 153290 pid('CodeStore,AddRegOccsClauses/fast' 3 pos('./compiler/CodeStore.oz' 484 3) nil 5) <Q: 1021> [g(17) y(0) g(22)])
		allocateL2
		callBI('BitArray.clone' [x(1)]#[x(3)])
		getSelf(x(4))
lbl(153140)	definition(x(1) 153209 pid('' 1 pos('./compiler/CodeStore.oz' 487 7) nil 5) unit [x(4) x(2) g(1) g(2) x(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(153196)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(153163)	shallowThen
		allocateL2
		moveMoveXYYX(x(4) y(0) y(0) x(0))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(4) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(153196)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153140)
lbl(153209)	moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<P: 34> 4)
		getSelf(x(4))
lbl(153219)	definition(x(1) 153277 pid('' 3 pos('./compiler/CodeStore.oz' 492 7) nil 7) unit [x(4) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(153264)
		getRecord('#' 3 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(153242)	shallowThen
		allocateL2
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(y(1) x(0))
		genCall(gci(g(1) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: GetOccs> true 2) 0)
lbl(153264)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(492)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153219)
lbl(153277)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariable(x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(153128)
lbl(153290)	definition(x(8) 153331 pid('CodeStore,AddRegOccsClauses/slow' 1 pos('./compiler/CodeStore.oz' 484 3) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1021> 7)
		endDefinition(153290)
lbl(153331)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 17 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		move(y(0) x(6))
		putConstant('CodeStore' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(153388)	definition(x(7) 153454 pid('CodeGenList' 4 pos('./compiler/CodeGen.oz' 100 3) nil 5) <Q: 1022> nil)
		match(x(0) ht(153439 [onScalar(nil 153397) onRecord('|' 2 153401)]))
lbl(153397)	unify(x(2) x(3))
		return
lbl(153401)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(codeGen x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(153439)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(153388)
lbl(153454)	definition(x(7) 153483 pid('CoordNoDebug' 2 pos('./compiler/CodeGen.oz' 109 3) nil 4) <Q: 1023> nil)
		callBI('Record.label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 153471)
lbl(153467)	unify(x(1) x(0))
		return
lbl(153471)	putConstant('pos' x(2))
		callBI('Record.adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(153454)
lbl(153483)	definition(x(7) 153555 pid('StepPoint' 6 pos('./compiler/CodeGen.oz' 115 3) nil 6) <Q: 1024> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(6) 153534 153542)
		getLiteral(nil y(5))
		getRecord(vStepPoint 5 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(3))
		deAllocateL7
		return
lbl(153534)	unify(y(2) y(4))
		unify(y(5) y(3))
		deAllocateL7
		return
lbl(153542)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(116)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153483)
lbl(153555)	definition(x(7) 153584 pid('MakeUnify' 4 pos('./compiler/CodeGen.oz' 125 3) nil 5) <Q: 1025> nil)
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 153569)
		unify(x(2) x(3))
		return
lbl(153569)	getRecord(vUnify 4 x(2))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(3))
		return
		endDefinition(153555)
lbl(153584)	definition(x(7) 153685 pid('MakePermanent' 4 pos('./compiler/CodeGen.oz' 134 3) nil 5) <Q: 1026> nil)
		allocateL3
lbl(153591)	definition(x(4) 153642 pid('' 3 pos('./compiler/CodeGen.oz' 136 7) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(3) generated 153624)
lbl(153619)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(153624)	getList(y(2))
		unifyVariable(x(0))
		unifyValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(153591)
lbl(153642)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		move(y(0) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 8)
		testLiteral(y(0) nil 153671)
lbl(153666)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(153671)	getRecord(vMakePermanent 3 y(1))
		unifyVoid(1)
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL3
		return
		endDefinition(153584)
lbl(153685)	definition(x(7) 153712 pid('Clear' 3 pos('./compiler/CodeGen.oz' 148 3) nil 3) <Q: 1027> nil)
		testLiteral(x(0) nil 153699)
lbl(153695)	unify(x(1) x(2))
		return
lbl(153699)	getRecord(vClear 3 x(1))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(2))
		return
		endDefinition(153685)
lbl(153712)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [coord reg value] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(153728)	definition(x(7) 153748 pid('PseudoVariableOccurrence,init/fast' 1 pos('./compiler/CodeGen.oz' 166 6) nil 3) <Q: 1028> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(153728)
lbl(153748)	definition(x(8) 153774 pid('PseudoVariableOccurrence,init/slow' 1 pos('./compiler/CodeGen.oz' 166 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1028> 3)
		endDefinition(153748)
lbl(153774)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(153784)	definition(x(7) 153812 pid('PseudoVariableOccurrence,getCoord/fast' 1 pos('./compiler/CodeGen.oz' 169 6) nil 3) <Q: 1029> nil)
		getSelf(x(1))
		inlineDot(x(1) coord x(1) cache)
		testBI('Value.isDet' [x(1)]#[x(2)] 153806)
		unify(x(0) x(1))
		return
lbl(153806)	getLiteral(unit x(0))
		return
		endDefinition(153784)
lbl(153812)	definition(x(8) 153838 pid('PseudoVariableOccurrence,getCoord/slow' 1 pos('./compiler/CodeGen.oz' 169 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1029> 3)
		endDefinition(153812)
lbl(153838)	putRecord('#' [1 2 fast] x(10))
		setConstant(getCoord)
		setValue(x(8))
		setValue(x(7))
lbl(153848)	definition(x(7) 153862 pid('PseudoVariableOccurrence,getVariable/fast' 1 pos('./compiler/CodeGen.oz' 172 6) nil 2) <Q: 1030> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(153848)
lbl(153862)	definition(x(8) 153888 pid('PseudoVariableOccurrence,getVariable/slow' 1 pos('./compiler/CodeGen.oz' 172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1030> 3)
		endDefinition(153862)
lbl(153888)	putRecord('#' [1 2 fast] x(11))
		setConstant('getVariable')
		setValue(x(8))
		setValue(x(7))
lbl(153898)	definition(x(7) 153910 pid('PseudoVariableOccurrence,isToplevel/fast' 1 pos('./compiler/CodeGen.oz' 175 6) nil 1) <Q: 1031> nil)
		getLiteral(false x(0))
		return
		endDefinition(153898)
lbl(153910)	definition(x(8) 153936 pid('PseudoVariableOccurrence,isToplevel/slow' 1 pos('./compiler/CodeGen.oz' 175 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1031> 3)
		endDefinition(153910)
lbl(153936)	putRecord('#' [1 2 fast] x(12))
		setConstant(isToplevel)
		setValue(x(8))
		setValue(x(7))
lbl(153946)	definition(x(7) 153955 pid('PseudoVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 178 6) nil 1) <Q: 1032> nil)
		return
		endDefinition(153946)
lbl(153955)	definition(x(8) 153981 pid('PseudoVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1032> 3)
		endDefinition(153955)
lbl(153981)	putRecord('#' [1 2 fast] x(13))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(153991)	definition(x(7) 154011 pid('PseudoVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 181 6) nil 3) <Q: 1033> nil)
		getSelf(x(1))
		inlineDot(x(1) value x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(153991)
lbl(154011)	definition(x(8) 154037 pid('PseudoVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 181 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1033> 3)
		endDefinition(154011)
lbl(154037)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(154047)	definition(x(7) 154067 pid('PseudoVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 184 6) nil 3) <Q: 1034> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154047)
lbl(154067)	definition(x(8) 154093 pid('PseudoVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 184 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1034> 3)
		endDefinition(154067)
lbl(154093)	putRecord('#' [1 2 fast] x(15))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(154103)	definition(x(7) 154251 pid('PseudoVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 187 6) nil 5) <Q: 1035> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		testBI('Value.isDet' [x(0)]#[x(4)] 154209)
		testBI('Number.is' [x(0)]#[x(4)] 154145)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154145)	testBI('Literal.is' [x(0)]#[x(4)] 154169)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154169)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
lbl(154209)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
		endDefinition(154103)
lbl(154251)	definition(x(8) 154298 pid('PseudoVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 187 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1035> 9)
		endDefinition(154251)
lbl(154298)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(154308)	definition(x(7) 154389 pid('PseudoVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 200 6) nil 4) <Q: 1036> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		unify(x(1) x(2))
		testBI('Value.isDet' [x(0)]#[x(1)] 154369)
		testBI('Number.is' [x(0)]#[x(1)] 154340)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(154340)	testBI('Literal.is' [x(0)]#[x(1)] 154351)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(154351)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
lbl(154369)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154308)
lbl(154389)	definition(x(8) 154436 pid('PseudoVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 200 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1036> 9)
		endDefinition(154389)
lbl(154436)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(154446)	definition(x(7) 154463 pid('PseudoVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 214 6) nil 4) <Q: 1037> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(154446)
lbl(154463)	definition(x(8) 154510 pid('PseudoVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 214 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1037> 9)
		endDefinition(154463)
lbl(154510)	putRecord('#' [1 2 fast] x(18))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('PseudoVariableOccurrence' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(154559)	definition(x(7) 154605 pid('NewPseudoVariableOccurrence' 2 pos('./compiler/CodeGen.oz' 220 3) nil 3) <Q: 1038> [y(1)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(newReg x(2) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(154559)
lbl(154605)	definition(x(7) 154693 pid('MakeMessageArgs' 5 pos('./compiler/CodeGen.oz' 224 3) nil 6) <Q: 1039> nil)
		match(x(0) ht(154678 [onScalar(nil 154614) onRecord('|' 2 154621)]))
lbl(154614)	getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(154621)	allocateL7
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(4) y(3) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		sendMsg(makeVO x(5) 4 cache)
		createVariableMove(y(6) x(0))
		sendMsg(reg y(5) 1 cache)
		getList(y(2))
		unifyValVar(y(6) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(3) y(3) x(4))
		deAllocateL7
		genFastCall(<Q: 1039> 11)
lbl(154678)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(233)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154605)
lbl(154693)	definition(x(7) 154837 pid('LoadActualArgs' 5 pos('./compiler/CodeGen.oz' 237 6) nil 5) <Q: 1040> nil)
		match(x(0) ht(154822 [onScalar(nil 154702) onRecord('|' 2 154709)]))
lbl(154702)	unify(x(2) x(3))
		getLiteral(nil x(4))
		return
lbl(154709)	allocateL9
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 154796)
lbl(154743)	testBI('Name.is' [x(0)]#[x(1)] 154796)
lbl(154747)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(0) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(6))
		getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(7))
		move(x(1) x(0))
		sendMsg(reg y(0) 1 cache)
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
		branch(154805)
lbl(154796)	unify(y(3) y(7))
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
lbl(154805)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(4) x(3))
		move(y(8) x(4))
		deAllocateL9
		genFastCall(<Q: 1040> 11)
lbl(154822)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(253)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154693)
lbl(154837)	definition(x(7) 154890 pid('GetRegs' 2 pos('./compiler/CodeGen.oz' 256 6) nil 3) <Q: 1041> nil)
		match(x(0) ht(154875 [onScalar(nil 154846) onRecord('|' 2 154850)]))
lbl(154846)	getLiteral(nil x(1))
		return
lbl(154850)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(reg x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1041> 5)
lbl(154875)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(259)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154837)
lbl(154890)	definition(x(7) 155094 pid('MakeApplication' 6 pos('./compiler/CodeGen.oz' 262 6) nil 7) <Q: 1042> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(4) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1040> 10)
		move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 154974)
lbl(154945)	testBI('Procedure.is' [x(0)]#[x(1)] 154974)
lbl(154949)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(8) x(2) y(3) x(3))
		moveMoveYXYX(y(7) x(4) y(5) x(5))
		move(y(0) x(6))
		deAllocateL9
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(154974)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(4) 155052 155081)
lbl(154996)	move(y(3) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Bool.not' [x(0)]#[x(1)] 155052)
lbl(155009)	getRecord(vGenCall 8 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(false)
		unifyLiteral('')
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(8) x(0) y(3) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155052)	getRecord(vCall 5 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(270)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(154890)
lbl(155094)	definition(x(7) 155285 pid('MakeRunTimeProcApplication' 6 pos('./compiler/CodeGen.oz' 282 6) nil 9) <Q: 1043> [y(6) y(3) y(5)])
		allocateL8
		move(g(0) x(6))
		inlineDot(x(6) procs x(7) cache)
		callBI('Record.\'.\'' [x(7) x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getLastValue x(8) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(5) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1040> 10)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 155232 155272)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(6) x(0))
		sendMsg(init y(1) 1 cache)
		moveMoveYXYX(y(0) x(1) y(7) x(2))
		moveMoveYXYX(y(2) x(3) y(5) x(4))
		move(y(4) x(5))
		putConstant(unit x(0))
		move(y(1) x(6))
		deAllocateL8
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(155232)	getRecord(vFastCall 5 y(5))
		unifyVoid(1)
		unifyValVar(y(6) x(2))
		unifyValue(y(0))
		unifyValue(y(4))
lbl(155245)	definition(x(1) 155265 pid('' 2 pos('./compiler/CodeGen.oz' 292 26) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155245)
lbl(155265)	move(y(1) x(0))
		deAllocateL8
		genFastCall(<P: 29> 7)
lbl(155272)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(287)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(155094)
lbl(155285)	definition(x(7) 155472 pid('MakeException' 6 pos('./compiler/CodeGen.oz' 298 3) nil 6) <Q: 1044> [y(1)])
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(3) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		putRecord(literal 1 x(1))
		setValue(y(0))
		putRecord(number 1 x(3))
		setVariable(x(4))
		putList(x(2))
		setValue(x(3))
		setVariable(x(5))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(0) x(5) y(8))
		testLiteral(y(1) unit 155371)
lbl(155366)	getNumber(~1 x(4))
		branch(155383)
lbl(155371)	move(y(1) x(1))
		inlineDot(x(1) 2 x(2) cache)
		unify(x(2) x(4))
lbl(155383)	definition(x(1) 155409 pid('' 2 pos('./compiler/CodeGen.oz' 303 15) nil 3) unit nil)
		getRecord(value 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155383)
lbl(155409)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral(kernel)
		unifyVariable(x(1))
		unifyValue(y(6))
		unifyValVar(y(0) y(2))
		move(y(0) x(0))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(0) x(1) y(3) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		putConstant('RaiseError' x(0))
		deAllocateL9
		genFastCall(<Q: 1043> 13)
		endDefinition(155285)
lbl(155472)	definition(x(7) 155534 pid('GuardNeedsThread' 2 pos('./compiler/CodeGen.oz' 309 3) nil 3) <Q: 1045> nil)
		testBI('Value.isFree' [x(0)]#[x(2)] 155486)
		getLiteral(false x(1))
		return
lbl(155486)	match(x(0) ht(155528 [onScalar(nil 155489) onRecord(vEquateNumber 4 155493) onRecord(vEquateLiteral 4 155500) onRecord(vEquateRecord 6 155507) onRecord(vUnify 4 155514) onRecord(vFailure 2 155521)]))
lbl(155489)	getLiteral(false x(1))
		return
lbl(155493)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155500)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155507)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155514)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155521)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155528)	getLiteral(true x(1))
		return
		endDefinition(155472)
lbl(155534)	definition(x(7) 155589 pid('GuardIsShallow' 2 pos('./compiler/CodeGen.oz' 323 3) nil 3) <Q: 1046> nil)
		testBI('Value.isFree' [x(0)]#[x(2)] 155548)
		getLiteral(true x(1))
		return
lbl(155548)	match(x(0) ht(155583 [onScalar(nil 155551) onRecord(vEquateNumber 4 155555) onRecord(vEquateLiteral 4 155562) onRecord(vEquateRecord 6 155569) onRecord(vUnify 4 155576)]))
lbl(155551)	getLiteral(true x(1))
		return
lbl(155555)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155562)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155569)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155576)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155583)	getLiteral(false x(1))
		return
		endDefinition(155534)
lbl(155589)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: AltNode> <M: Arbiter> <M: Records> <M: Scalars> <M: WarnedCatchAll> coord] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		setConstant(unit)
		putRecord('feat' [<M: Reg> cs] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(155619)	definition(x(7) 155665 pid('SwitchHashTable,init/fast' 5 pos('./compiler/CodeGen.oz' 342 6) nil 5) <Q: 1047> nil)
		inlineAssign(coord x(0) cache)
		inlineAssign(<M: AltNode> x(2) cache)
		inlineAssign(<M: Arbiter> x(3) cache)
		getSelf(x(0))
		inlineDot(x(0) <M: Reg> x(2) cache)
		unify(x(2) x(1))
		getSelf(x(0))
		inlineDot(x(0) cs x(1) cache)
		unify(x(1) x(4))
		return
		endDefinition(155619)
lbl(155665)	definition(x(8) 155718 pid('SwitchHashTable,init/slow' 1 pos('./compiler/CodeGen.oz' 342 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1047> 11)
		endDefinition(155665)
lbl(155718)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(155728)	definition(x(7) 155763 pid('SwitchHashTable,addScalar/fast' 3 pos('./compiler/CodeGen.oz' 349 6) nil 6) <Q: 1048> nil)
		inlineAt(<M: Scalars> x(3) cache)
		putRecord('#' 3 x(5))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(3))
		inlineAssign(<M: Scalars> x(4) cache)
		return
		endDefinition(155728)
lbl(155763)	definition(x(8) 155804 pid('SwitchHashTable,addScalar/slow' 1 pos('./compiler/CodeGen.oz' 349 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1048> 7)
		endDefinition(155763)
lbl(155804)	putRecord('#' [1 2 fast] x(10))
		setConstant(addScalar)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(155816)	definition(x(7) 155855 pid('SwitchHashTable,addRecord/fast' 2 pos('./compiler/CodeGen.oz' 352 6) nil 5) <Q: 1049> [y(2)])
		allocateL1
		inlineAt(<M: Records> x(4) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(0) x(3))
		genCall(gci(g(0) true <M: AddRecord> false 4) 0)
		move(y(0) x(0))
		inlineAssign(<M: Records> x(0) cache)
		deAllocateL1
		return
		endDefinition(155816)
lbl(155855)	definition(x(8) 155890 pid('SwitchHashTable,addRecord/slow' 1 pos('./compiler/CodeGen.oz' 352 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1049> 5)
		endDefinition(155855)
lbl(155890)	putRecord('#' [1 2 fast] x(11))
		setConstant(addRecord)
		setValue(x(8))
		setValue(x(7))
lbl(155900)	definition(x(7) 155989 pid('SwitchHashTable,AddRecord/fast' 4 pos('./compiler/CodeGen.oz' 355 6) nil 8) <Q: 1050> [y(2)])
		match(x(0) ht(155974 [onScalar(nil 155909) onRecord('|' 2 155929)]))
lbl(155909)	getList(x(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(155929)	getVarVar(x(0) x(4))
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		testBI('Value.\'==\'' [x(5) x(1)]#[x(7)] 155964)
		getList(x(3))
		unifyVariable(x(0))
		unifyValue(x(4))
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
		return
lbl(155964)	getListValVar(x(3) x(0) x(3))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: AddRecord> true 4) 0)
lbl(155974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(362)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(155900)
lbl(155989)	definition(x(8) 156036 pid('SwitchHashTable,AddRecord/slow' 1 pos('./compiler/CodeGen.oz' 355 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1050> 9)
		endDefinition(155989)
lbl(156036)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AddRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(156046)	definition(x(7) 156420 pid('SwitchHashTable,codeGen/fast' 2 pos('./compiler/CodeGen.oz' 365 6) nil 5) <Q: 1051> [y(2)])
		allocateL7
		getSelf(x(2))
		inlineDot(x(2) cs x(2) cache)
		inlineAt(<M: Scalars> x(3) cache)
		inlineDot(x(2) debugInfoVarnamesSwitch x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariable(y(4))
		testBool(x(4) 156193 156270)
lbl(156088)	definition(x(4) 156188 pid('' 3 pos('./compiler/CodeGen.oz' 370 6) nil 6) unit [y(2)])
		shallowGuard(156175)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156106)	shallowThen
		allocateL8
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(3) x(0))
		move(g(0) x(1))
		move(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL8
		return
lbl(156175)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(370)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156088)
lbl(156188)	unify(x(4) y(4))
		branch(156281)
lbl(156193)	definition(x(4) 156265 pid('' 3 pos('./compiler/CodeGen.oz' 378 6) nil 6) unit [y(2)])
		shallowGuard(156252)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156211)	shallowThen
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(156252)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156193)
lbl(156265)	unify(x(4) y(4))
		branch(156281)
lbl(156270)	putRecord(kernel 2 x(4))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(156281)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: Records> x(0) cache)
		getSelf(x(3))
lbl(156302)	definition(x(1) 156349 pid('' 2 pos('./compiler/CodeGen.oz' 385 3) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(156336)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(156323)	shallowThen
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genCall(gci(g(1) true <M: CodeGenRecord> true 3) 0)
lbl(156336)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156302)
lbl(156349)	move(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vMatch 7 y(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValVar(y(6) x(1))
		unifyValue(y(1))
		unifyVoid(1)
		getSelf(x(2))
		inlineDot(x(2) <M: Reg> x(3) cache)
		unify(x(3) x(0))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL7
		return
		endDefinition(156046)
lbl(156420)	definition(x(8) 156455 pid('SwitchHashTable,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 365 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1051> 5)
		endDefinition(156420)
lbl(156455)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
lbl(156465)	definition(x(7) 157519 pid('SwitchHashTable,CodeGenRecord/fast' 3 pos('./compiler/CodeGen.oz' 391 6) nil 10) <Q: 1052> nil)
		allocateL(13)
		getSelf(x(3))
		inlineDot(x(3) cs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testList(y(3) 156968)
lbl(156496)	getVarVar(x(4) x(5))
		shallowGuard(156968)
		getRecord('#' 4 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getLiteral(nil x(5))
lbl(156516)	shallowThen
		createVariable(x(9))
lbl(156519)	definition(x(1) 156605 pid('MakeGuard' 6 pos('./compiler/CodeGen.oz' 399 5) nil 8) unit [y(4) x(9)])
		match(x(0) ht(156590 [onScalar(nil 156528) onRecord('|' 2 156535)]))
lbl(156528)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(156535)	allocateL6
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(g(0) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		move(x(3) x(4))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(5))
		createVariableMove(y(5) x(6))
		sendMsg(makeGetArg x(7) 7 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		deAllocateL6
		tailCall(g(1) 6)
lbl(156590)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(411)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156519)
lbl(156605)	unify(x(1) x(9))
		moveMoveXYXY(x(4) y(3) x(7) y(5))
		move(x(8) y(6))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		call(x(9) 6)
		move(y(4) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(10))
		testBool(x(1) 156693 156709)
		moveMoveYXYX(y(3) x(0) y(10) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(12) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(156720)
lbl(156693)	moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(10) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(156720)
lbl(156709)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(417)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(156720)	move(y(8) x(0))
		testBI('Value.isFree' [x(0)]#[x(1)] 156732)
		unify(y(7) y(10))
		branch(157462)
lbl(156732)	createVariableMove(y(3) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(3) 156821 156957)
		getLiteral(nil y(9))
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeRegSet y(4) 1 cache)
		inlineAt(<M: Arbiter> x(2) cache)
		putList(x(0))
		setValue(x(2))
		setConstant(nil)
		move(y(5) x(1))
		sendMsg(enterVs y(4) 2 cache)
		getRecord(vShallowGuard 8 y(7))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(3))
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyValue(y(5))
		unifyVoid(1)
		branch(157462)
lbl(156821)	move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 156888 156877)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating deep pattern as ')
		setConstant('general conditional')
		move(y(5) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(156888)
lbl(156877)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(436)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(156888)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord('#' 3 x(1))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		branch(157462)
lbl(156957)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(156968)	createVariable(y(5))
lbl(156970)	definition(x(0) 157037 pid('MakeGuard' 4 pos('./compiler/CodeGen.oz' 448 5) nil 5) unit [y(4) y(5)])
		match(x(0) ht(157022 [onScalar(nil 156979) onRecord('|' 2 156983)]))
lbl(156979)	unify(x(2) x(3))
		return
lbl(156983)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(3) y(2))
		move(g(0) x(0))
		createVariableMove(y(3) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		tailCall(g(1) 4)
lbl(157022)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(454)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156970)
lbl(157037)	unify(x(0) y(5))
		move(y(0) x(0))
		callBI('Record.arity' [x(0)]#[x(3)])
lbl(157046)	definition(x(1) 157060 pid('' 2 pos('./compiler/CodeGen.oz' 459 5) nil 2) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1038> 5)
		endDefinition(157046)
lbl(157060)	move(x(3) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(157069)	definition(x(1) 157093 pid('' 3 pos('./compiler/CodeGen.oz' 461 6) nil 3) unit nil)
		getRecord(vGetVariable 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(157069)
lbl(157093)	moveMoveYXYX(y(6) x(0) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
lbl(157104)	definition(x(1) 157333 pid('' 3 pos('./compiler/CodeGen.oz' 466 6) nil 7) unit [y(5) y(6) y(4)])
		shallowGuard(157320)
		getRecord('#' 4 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(157124)	shallowThen
		allocateL10
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		call(g(0) 4)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(8))
		createVariable(y(9))
		testBool(y(7) 157190 157198)
		getLiteral(nil y(6))
		getRecord(vThread 5 y(8))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(3))
		unifyValue(y(9))
		unifyVoid(1)
		branch(157209)
lbl(157190)	unify(y(6) y(9))
		unify(y(8) y(5))
		branch(157209)
lbl(157198)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(470)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157209)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		move(g(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(3))
		testBool(x(1) 157274 157291)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(4) x(0))
		move(g(2) x(1))
		move(y(6) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(157302)
lbl(157274)	move(y(4) x(0))
		move(g(2) x(1))
		move(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(157302)
lbl(157291)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(478)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157302)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		deAllocateL10
		return
lbl(157320)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(466)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157104)
lbl(157333)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 157444 157433)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(3) x(0))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 3 x(0) cache)
		putConstant('optimization warning' x(1))
		putConstant('translating deep pattern as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(157444)
lbl(157433)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(488)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157444)	getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
lbl(157462)	move(y(0) x(0))
		testBI('Tuple.is' [x(0)]#[x(1)] 157493)
		getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Record.label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
lbl(157493)	getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Record.label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
		endDefinition(156465)
lbl(157519)	definition(x(8) 157560 pid('SwitchHashTable,CodeGenRecord/slow' 1 pos('./compiler/CodeGen.oz' 391 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1052> 7)
		endDefinition(157519)
lbl(157560)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CodeGenRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('SwitchHashTable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(157598)	definition(x(7) 157713 pid('MakeFromPropSub' 5 pos('./compiler/CodeGen.oz' 504 6) nil 5) <Q: 1053> nil)
		match(x(0) ht(157698 [onScalar(nil 157607) onRecord('|' 2 157617)]))
lbl(157607)	unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyLiteral(nil)
		return
lbl(157617)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1053> 10)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeRecordArgument y(0) 4 cache)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(7) x(1))
		getList(x(1))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(3))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(157698)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(514)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157598)
lbl(157713)	definition(x(7) 157807 pid('MakeFromProp' 5 pos('./compiler/CodeGen.oz' 517 6) nil 6) <Q: 1054> [y(1)])
		allocateL4
		move(x(4) y(0))
		createVariable(y(1))
		match(x(0) ht(157770 [onScalar(nil 157728) onRecord('|' 2 157756)]))
lbl(157728)	moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(newReg x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(1))
		unifyValue(y(3))
		branch(157783)
lbl(157756)	putRecord(value 1 x(5))
		setValue(y(1))
		move(x(5) x(4))
		genFastCall(<Q: 1053> 10)
		branch(157783)
lbl(157770)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(523)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157783)	move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL4
		return
		endDefinition(157713)
lbl(157807)	definition(x(7) 157924 pid('MakeAttrFeatSub' 3 pos('./compiler/CodeGen.oz' 529 6) nil 5) <Q: 1055> [y(6)])
		match(x(0) ht(157909 [onScalar(nil 157816) onRecord('|' 2 157820)]))
lbl(157816)	getLiteral(nil x(2))
		return
lbl(157820)	allocateL6
		getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(4) y(2))
		testRecord(x(0) '#' 2 157848)
lbl(157843)	unify(x(2) x(0))
		branch(157897)
lbl(157848)	moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(5) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(0) x(2))
		inlineDot(x(2) literals x(3) cache)
		inlineDot(x(3) ooFreeFlag x(4) cache)
		unify(x(4) x(1))
		getRecord('#' 2 y(4))
		unifyValue(y(3))
		unifyValue(y(5))
lbl(157897)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1055> 7)
lbl(157909)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(539)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157807)
lbl(157924)	definition(x(7) 158037 pid('MakeAttrFeat' 6 pos('./compiler/CodeGen.oz' 542 6) nil 9) <Q: 1056> [y(5)])
		allocateL7
		move(g(0) x(6))
		inlineDot(x(6) atomNode x(7) cache)
		callBI('Object.newObject' [x(7)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(8) y(5))
		putConstant(unit x(1))
		sendMsg(init y(5) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1055> 6)
		move(g(0) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		move(y(6) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(157924)
lbl(158037)	definition(x(7) 158153 pid('CodeGenRecord,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 553 6) nil 3) <Q: 1057> nil)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 158149)
lbl(158068)	inlineAt(args x(0) cache)
lbl(158073)	definition(x(1) 158116 pid('' 2 pos('./compiler/CodeGen.oz' 556 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 158110)
lbl(158084)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('Value.isDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(158110)	getLiteral(true x(1))
		return
		endDefinition(158073)
lbl(158116)	createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 158136 158138)
lbl(158126)	inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(158136)	deAllocateL2
		return
lbl(158138)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(554)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158149)	deAllocateL2
		return
		endDefinition(158037)
lbl(158153)	definition(x(8) 158179 pid('CodeGenRecord,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 553 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1057> 3)
		endDefinition(158153)
lbl(158179)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(3))
lbl(158191)	definition(x(7) 158840 pid('CodeGenRecord,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 565 6) nil 6) <Q: 1058> [y(3) g(24) g(25) g(26) g(27) g(28)])
		allocateL8
		inlineAt(args x(4) cache)
lbl(158203)	definition(x(5) 158241 pid('' 1 pos('./compiler/CodeGen.oz' 569 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 158227)
lbl(158214)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
lbl(158227)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
		endDefinition(158203)
lbl(158241)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 158300 158827)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: MakeConstructionOpen> false 4) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158300)	inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(158319)	definition(x(1) 158347 pid('' 3 pos('./compiler/CodeGen.oz' 583 7) nil 3) unit nil)
		testRecord(x(1) '#' 2 158341)
lbl(158330)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(158341)	unify(x(2) x(0))
		return
		endDefinition(158319)
lbl(158347)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		move(y(4) x(0))
		callBI('Value.isDet' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		move(g(2) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 158417 158816)
lbl(158377)	testBool(y(7) 158417 158816)
lbl(158381)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		move(y(2) x(4))
		createVariableMove(y(6) x(5))
		genCall(gci(g(0) true <M: MakeConstructionBasic> false 6) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158417)	testBool(y(7) 158684 158805)
		inlineAt(args x(1) cache)
lbl(158426)	definition(x(2) 158461 pid('' 3 pos('./compiler/CodeGen.oz' 596 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 158450)
lbl(158437)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(158450)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(158426)
lbl(158461)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(158592)
		move(x(0) y(6))
		createCond(158586)
lbl(158479)	lastClause
		clause
		thread(158497)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(158497)	ask
lbl(158498)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(158536)	definition(x(1) 158573 pid('' 3 pos('./compiler/CodeGen.oz' 605 26) nil 5) unit nil)
		shallowGuard(158560)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(158552)	shallowThen
		callBI('Record.adjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(158560)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(605)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158536)
lbl(158573)	moveMoveYXYX(y(4) x(0) y(5) x(3))
		putConstant(someLabel x(2))
		genFastCall(<P: 30> 8)
		branch(158605)
lbl(158586)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(158592)	putConstant(someLabel x(0))
		move(y(4) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(158605)	move(y(5) x(0))
		testBI('Tuple.is' [x(0)]#[x(1)] 158645)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		createVariableMove(y(4) x(4))
		genCall(gci(g(0) true <M: MakeConstructionTuple> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158645)	createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158684)	inlineAt(args x(1) cache)
lbl(158689)	definition(x(2) 158763 pid('' 3 pos('./compiler/CodeGen.oz' 618 9) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(1) '#' 2 158721)
lbl(158710)	getVarVar(x(1) x(3))
		unify(y(2) x(1))
		unify(y(3) x(3))
		branch(158724)
lbl(158721)	unify(y(3) x(1))
lbl(158724)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(3))
		moveMoveXYYX(x(0) y(1) y(0) x(1))
		testBI('Value.isDet' [x(1)]#[x(2)] 158756)
lbl(158741)	testBI('Int.is' [x(1)]#[x(2)] 158750)
lbl(158745)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(158750)	testBI('Literal.is' [x(1)]#[x(2)] 158756)
		branch(158745)
lbl(158756)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(158689)
lbl(158763)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158805)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(594)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158816)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(590)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158827)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(577)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158191)
lbl(158840)	definition(x(8) 158887 pid('CodeGenRecord,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 565 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1058> 9)
		endDefinition(158840)
lbl(158887)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(158897)	definition(x(7) 159405 pid('CodeGenRecord,MakeConstructionBasic/fast' 6 pos('./compiler/CodeGen.oz' 632 6) nil 8) <Q: 1059> [g(26) g(27)])
		testLiteral(x(3) nil 158924)
lbl(158907)	getRecord(vEquateLiteral 4 x(4))
		unifyVoid(1)
		unifyValVar(x(2) x(0))
		unifyValue(x(5))
		tailSendMsg(reg x(1) 1 cache)
lbl(158924)	allocateL9
		inlineAt(args x(6) cache)
lbl(158930)	definition(x(7) 158965 pid('' 3 pos('./compiler/CodeGen.oz' 637 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 158954)
lbl(158941)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(158954)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(158930)
lbl(158965)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(3) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(6))
		exHandler(159134)
		move(x(0) y(7))
		createCond(159128)
lbl(159002)	lastClause
		clause
		thread(159020)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(159020)	ask
lbl(159021)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(159059)	definition(x(0) 159096 pid('' 3 pos('./compiler/CodeGen.oz' 646 30) nil 5) unit nil)
		shallowGuard(159083)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159075)	shallowThen
		callBI('Record.adjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(159083)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(646)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159059)
lbl(159096)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(159146)
lbl(159128)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(159134)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(159146)	createVariable(y(5))
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(1))
		testBI('Tuple.is' [x(1)]#[x(2)] 159271)
		callBI('Record.width' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(8))
lbl(159173)	definition(x(3) 159249 pid('' 3 pos('./compiler/CodeGen.oz' 652 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159236)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159189)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159236)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159173)
lbl(159249)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(159378)
lbl(159271)	callBI('Record.arity' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(8))
lbl(159285)	definition(x(4) 159361 pid('' 3 pos('./compiler/CodeGen.oz' 659 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159348)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159301)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159348)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159285)
lbl(159361)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(159378)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValVar(y(5) x(0))
		unifyValue(y(7))
		unifyValue(y(8))
		move(y(1) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(158897)
lbl(159405)	definition(x(8) 159464 pid('CodeGenRecord,MakeConstructionBasic/slow' 1 pos('./compiler/CodeGen.oz' 632 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1059> 13)
		endDefinition(159405)
lbl(159464)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(8))
		setValue(x(7))
lbl(159474)	definition(x(7) 159894 pid('CodeGenRecord,MakeConstructionOpen/fast' 4 pos('./compiler/CodeGen.oz' 667 6) nil 7) <Q: 1060> [y(1) g(29)])
		allocateL10
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(4) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyValVar(y(4) y(2))
		inlineAt(args x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		createVariable(y(7))
		testBool(y(4) 159620 159705)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159716)
lbl(159620)	createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(4) x(0))
		sendMsg(init y(8) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(9))
		unifyValVar(y(4) x(4))
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(y(8))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159716)
lbl(159705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(678)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(159716)	inlineAt(args x(0) cache)
lbl(159721)	definition(x(1) 159883 pid('' 4 pos('./compiler/CodeGen.oz' 690 3) nil 6) unit [y(0) y(1) y(5)])
		allocateL7
		move(x(3) y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(2) '#' 2 159779)
lbl(159742)	getVarVar(x(4) y(4))
		move(g(0) x(0))
		move(y(1) x(3))
		createVariableMove(y(5) x(2))
		sendMsg(makeVO x(4) 4 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(4) 4 cache)
		branch(159845)
lbl(159779)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(2) y(6))
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(4))
		getRecord(vEquateNumber 4 y(5))
		unifyVoid(1)
		unifyValVar(y(4) x(1))
		unifyVariable(y(5))
		move(x(1) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(6) 4 cache)
lbl(159845)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putList(x(0))
		setValue(y(1))
		setValue(x(1))
		putList(x(2))
		setValue(g(1))
		setValue(x(0))
		move(g(2) x(1))
		move(g(0) x(3))
		moveMoveYXYX(y(3) x(4) y(0) x(5))
		putConstant('^' x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
		endDefinition(159721)
lbl(159883)	moveMoveYXYX(y(7) x(2) y(3) x(3))
		deAllocateL10
		genFastCall(<P: 82> 9)
		endDefinition(159474)
lbl(159894)	definition(x(8) 159941 pid('CodeGenRecord,MakeConstructionOpen/slow' 1 pos('./compiler/CodeGen.oz' 667 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1060> 9)
		endDefinition(159894)
lbl(159941)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(8))
		setValue(x(7))
lbl(159951)	definition(x(7) 160455 pid('CodeGenRecord,MakeConstructionTuple/fast' 5 pos('./compiler/CodeGen.oz' 704 6) nil 7) <Q: 1061> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		move(y(2) x(0))
		callBI('Record.width' [x(0)]#[x(1)])
		move(x(1) y(8))
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(9) x(0))
		sendMsg(init y(10) 1 cache)
		createVariable(y(11))
		testNumber(y(8) 0 160067)
lbl(160053)	getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(6))
		unifyValue(y(11))
		branch(160257)
lbl(160067)	createVariable(x(4))
lbl(160069)	definition(x(0) 160188 pid('MakeList' 4 pos('./compiler/CodeGen.oz' 719 5) nil 6) unit [y(8) x(4) y(0) y(2)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 160176)
		allocateL7
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(1) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(2) 1 cache)
		move(g(3) x(0))
		move(y(0) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(4)])
		move(g(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(160176)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
		endDefinition(160069)
lbl(160188)	unify(x(0) x(4))
		move(y(3) x(1))
		putConstant(2 x(0))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(4) 4)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(4) cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(11))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(13))
		unifyLiteral(nil)
lbl(160257)	getRecord(vEquateNumber 4 y(11))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(9) y(2))
		inlineAt(label x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(3) 160341 160442)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160341)	createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(3) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(3) y(2))
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160442)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(740)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159951)
lbl(160455)	definition(x(8) 160508 pid('CodeGenRecord,MakeConstructionTuple/slow' 1 pos('./compiler/CodeGen.oz' 704 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1061> 11)
		endDefinition(160455)
lbl(160508)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(8))
		setValue(x(7))
lbl(160518)	definition(x(7) 161162 pid('CodeGenRecord,MakeConstructionRecord/fast' 5 pos('./compiler/CodeGen.oz' 752 6) nil 7) <Q: 1062> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		createVariable(y(8))
		testList(y(2) 160974)
lbl(160584)	getVarVar(x(0) x(1))
		shallowGuard(160974)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(160597)	shallowThen
		createVariable(x(4))
lbl(160600)	definition(x(0) 160821 pid('MakePairList' 4 pos('./compiler/CodeGen.oz' 761 5) nil 8) unit [x(4) y(0)])
		allocateL10
		move(x(0) y(0))
		match(y(0) ht(160806 [onScalar(nil 160613) onRecord('|' 2 160624)]))
lbl(160613)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		deAllocateL10
		return
lbl(160624)	getVarVar(x(4) x(5))
		shallowGuard(160806)
		getRecord('#' 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(160637)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(g(0) 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(8))
		move(y(2) x(0))
		testBI('Int.is' [x(0)]#[x(1)] 160695)
		getRecord(number 1 y(8))
		unifyValue(y(2))
		branch(160722)
lbl(160695)	testBI('Literal.is' [x(0)]#[x(1)] 160707)
		getRecord(literal 1 y(8))
		unifyValue(y(2))
		branch(160722)
lbl(160707)	getRecord(value 1 y(8))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(160722)	move(g(1) x(0))
		move(y(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeRecordArgument y(3) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(8) x(2))
		getList(x(2))
		unifyValue(y(9))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(6))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(1))
		unifyValue(y(7))
		deAllocateL10
		return
lbl(160806)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(782)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160600)
lbl(160821)	unify(x(0) x(4))
		moveMoveXYXY(x(2) y(2) x(3) y(9))
		move(x(1) x(0))
		move(y(3) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		call(x(4) 4)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		createVariable(y(12))
		move(y(2) x(0))
		testBI('Int.is' [x(0)]#[x(1)] 160870)
		getRecord(number 1 y(12))
		unifyValue(y(2))
		branch(160897)
lbl(160870)	testBI('Literal.is' [x(0)]#[x(1)] 160882)
		getRecord(literal 1 y(12))
		unifyValue(y(2))
		branch(160897)
lbl(160882)	getRecord(value 1 y(12))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(160897)	moveMoveYXYX(y(0) x(0) y(10) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(13) x(3))
		sendMsg(makeRecordArgument y(9) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(3) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(12) x(2))
		getList(x(2))
		unifyValue(y(13))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(11))
		unifyLiteral(nil)
		branch(160987)
lbl(160974)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(797)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(160987)	inlineAt(label x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 161054 161149)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161054)	createVariableMove(y(2) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValVar(y(2) y(8))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(3))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161149)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(798)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160518)
lbl(161162)	definition(x(8) 161215 pid('CodeGenRecord,MakeConstructionRecord/slow' 1 pos('./compiler/CodeGen.oz' 752 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1062> 11)
		endDefinition(161162)
lbl(161215)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(3) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenRecord' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(161262)	definition(x(7) 161345 pid('OzValueToVArg' 5 pos('./compiler/CodeGen.oz' 813 6) nil 6) <Q: 1063> nil)
		testBI('Number.is' [x(0)]#[x(5)] 161282)
		unify(x(2) x(3))
		getRecord(number 1 x(4))
		unifyValue(x(0))
		return
lbl(161282)	testBI('Literal.is' [x(0)]#[x(5)] 161296)
		unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyValue(x(0))
		return
lbl(161296)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		genFastCall(<Q: 1064> 10)
		getRecord(value 1 y(4))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(161262)
lbl(161345)	definition(x(7) 161683 pid('OzValueToVInstr' 5 pos('./compiler/CodeGen.oz' 827 6) nil 8) <Q: 1064> nil)
		testBI('Number.is' [x(0)]#[x(5)] 161368)
		getRecord(vEquateNumber 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161368)	testBI('Literal.is' [x(0)]#[x(5)] 161385)
		getRecord(vEquateLiteral 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161385)	testBI('Tuple.is' [x(0)]#[x(5)] 161534)
		allocateL6
		createVariable(x(5))
		createVariable(x(6))
lbl(161394)	definition(x(7) 161473 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 833 5) nil 7) unit [x(5) x(0) x(2) x(6)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 161464)
		allocateL5
		move(g(1) x(5))
		callBI('Record.\'.\'' [x(5) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		tailCall(g(3) 4)
lbl(161464)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
		endDefinition(161394)
lbl(161473)	unify(x(7) x(6))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(1))
		putConstant(1 x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(6) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Record.label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161534)	testBI('Record.is' [x(0)]#[x(5)] 161680)
		allocateL6
		createVariable(x(5))
lbl(161541)	definition(x(6) 161622 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 848 5) nil 6) unit [x(0) x(2) x(5)])
		match(x(0) ht(161607 [onScalar(nil 161550) onRecord('|' 2 161557)]))
lbl(161550)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(161557)	allocateL5
		getVarVar(x(0) y(0))
		move(g(0) x(4))
		callBI('Record.\'.\'' [x(4) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(g(2) 4)
lbl(161607)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(855)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(161541)
lbl(161622)	unify(x(6) x(5))
		callBI('Record.arity' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(2) y(3))
		move(y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Record.label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161680)	return
		endDefinition(161345)
lbl(161683)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [<M: Val> reg] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(161697)	definition(x(7) 161717 pid('CodeGenOzValue,init/fast' 1 pos('./compiler/CodeGen.oz' 872 2) nil 3) <Q: 1065> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161697)
lbl(161717)	definition(x(8) 161743 pid('CodeGenOzValue,init/slow' 1 pos('./compiler/CodeGen.oz' 872 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1065> 3)
		endDefinition(161717)
lbl(161743)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(161753)	definition(x(7) 161773 pid('CodeGenOzValue,reg/fast' 1 pos('./compiler/CodeGen.oz' 875 2) nil 3) <Q: 1066> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161753)
lbl(161773)	definition(x(8) 161799 pid('CodeGenOzValue,reg/slow' 1 pos('./compiler/CodeGen.oz' 875 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1066> 3)
		endDefinition(161773)
lbl(161799)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(161809)	definition(x(7) 161862 pid('CodeGenOzValue,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 878 2) nil 5) <Q: 1067> nil)
		allocateL5
		getSelf(x(4))
		inlineDot(x(4) <M: Val> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<Q: 1064> 11)
		endDefinition(161809)
lbl(161862)	definition(x(8) 161909 pid('CodeGenOzValue,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 878 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1067> 9)
		endDefinition(161862)
lbl(161909)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(161919)	definition(x(7) 161947 pid('CodeGenOzValue,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 881 2) nil 3) <Q: 1068> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(161919)
lbl(161947)	definition(x(8) 161973 pid('CodeGenOzValue,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 881 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1068> 3)
		endDefinition(161947)
lbl(161973)	putRecord('#' [1 2 fast] x(12))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(161983)	definition(x(7) 162042 pid('CodeGenOzValue,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 884 2) nil 4) <Q: 1069> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Val> x(0) cache)
		unify(x(1) x(2))
		testBI('Number.is' [x(0)]#[x(1)] 162011)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(162011)	testBI('Literal.is' [x(0)]#[x(1)] 162022)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(162022)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161983)
lbl(162042)	definition(x(8) 162089 pid('CodeGenOzValue,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 884 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1069> 9)
		endDefinition(162042)
lbl(162089)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(162099)	definition(x(7) 162133 pid('CodeGenOzValue,isConstruction/fast' 1 pos('./compiler/CodeGen.oz' 891 2) nil 3) <Q: 1070> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(1) cache)
		testBI('Record.is' [x(1)]#[x(2)] 162127)
		callBI('Literal.is' [x(1)]#[x(2)])
		callBI('Bool.not' [x(2)]#[x(1)])
		unify(x(1) x(0))
		return
lbl(162127)	getLiteral(false x(0))
		return
		endDefinition(162099)
lbl(162133)	definition(x(8) 162159 pid('CodeGenOzValue,isConstruction/slow' 1 pos('./compiler/CodeGen.oz' 891 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1070> 3)
		endDefinition(162133)
lbl(162159)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('CodeGenOzValue' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162200)	definition(x(7) 162520 pid('CodeGenStatement,startCodeGen/fast' 7 pos('./compiler/CodeGen.oz' 898 6) nil 12) <Q: 1071> [y(0) g(24)])
		allocateL7
		move(g(0) x(7))
		callBI('Object.newObject' [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		move(x(2) x(1))
		sendMsg(init y(5) 2 cache)
lbl(162240)	definition(x(1) 162260 pid('' 1 pos('./compiler/CodeGen.oz' 903 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162240)
lbl(162260)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(162266)	definition(x(1) 162286 pid('' 1 pos('./compiler/CodeGen.oz' 904 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162266)
lbl(162286)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		sendMsg(startDefinition y(5) 0 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		putConstant(nil x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		createVariableMove(y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg('endDefinition' y(5) 6 cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(y(3) x(1))
		sendMsg(getRegNames y(5) 2 cache)
		callBI('Name.new' nil#[x(3)])
		callBI('Name.new' nil#[x(0)])
		getList(y(4))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
		getList(x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('definition' 6 x(4))
		unifyVariable(x(6))
		unifyValVar(x(0) x(7))
		unifyLiteral(unit)
		unifyVariable(x(8))
		unifyValue(y(2))
		getRecord(x 1 x(6))
		unifyNumber(0)
		getRecord('pid' 5 x(7))
		unifyLiteral('Toplevel abstraction')
		unifyNumber(0)
		unifyVariable(x(9))
		unifyVariable(x(10))
		unifyValue(y(6))
		getRecord('pos' 3 x(9))
		unifyLiteral('')
		unifyNumber(0)
		unifyNumber(0)
		getList(x(10))
		unifyLiteral(native)
		unifyLiteral(nil)
		getList(x(5))
		unifyVariable(x(11))
		unifyVariable(y(3))
		getRecord('endDefinition' 1 x(11))
		unifyValue(x(3))
lbl(162445)	definition(x(1) 162466 pid('' 3 pos('./compiler/CodeGen.oz' 918 30) nil 3) unit nil)
		getRecord(g 1 x(2))
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		unify(x(2) x(1))
		return
		endDefinition(162445)
lbl(162466)	moveMoveXYYX(x(0) y(2) y(0) x(0))
		move(x(8) x(2))
		genFastCall(<P: 81> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		putRecord(x 1 x(4))
		setConstant(0)
		putRecord('tailCall' 2 x(3))
		setValue(x(4))
		setConstant(0)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putList(x(1))
		setValue(x(0))
		setValue(x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL7
		genFastCall(<P: 21> 7)
		endDefinition(162200)
lbl(162520)	definition(x(8) 162585 pid('CodeGenStatement,startCodeGen/slow' 1 pos('./compiler/CodeGen.oz' 898 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1071> 15)
		endDefinition(162520)
lbl(162585)	putRecord('#' [1 2 fast] x(9))
		setConstant(startCodeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStatement' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162622)	definition(x(7) 162684 pid('CodeGenTypeOf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 926 6) nil 6) <Q: 1072> [y(7)])
		allocateL4
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		move(x(3) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(res x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(3) x(4))
		deAllocateL4
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(162622)
lbl(162684)	definition(x(8) 162725 pid('CodeGenTypeOf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 926 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1072> 7)
		endDefinition(162684)
lbl(162725)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTypeOf' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162762)	definition(x(7) 162820 pid('CodeGenStepPoint,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 932 6) nil 6) <Q: 1073> nil)
		allocateL4
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(coord x(0) cache)
		inlineAt(kind x(1) cache)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		deAllocateL4
		genFastCall(<Q: 1024> 13)
		endDefinition(162762)
lbl(162820)	definition(x(8) 162861 pid('CodeGenStepPoint,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 932 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1073> 7)
		endDefinition(162820)
lbl(162861)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStepPoint' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162898)	definition(x(7) 163041 pid('CodeGenDeclaration,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 939 6) nil 5) <Q: 1074> nil)
		allocateL5
		inlineAt(localVars x(3) cache)
lbl(162910)	definition(x(4) 162930 pid('' 1 pos('./compiler/CodeGen.oz' 940 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(162910)
lbl(162930)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 163008 163028)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(163008)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(163028)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(941)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(162898)
lbl(163041)	definition(x(8) 163082 pid('CodeGenDeclaration,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 939 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1074> 7)
		endDefinition(163041)
lbl(163082)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDeclaration' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163119)	definition(x(7) 163149 pid('CodeGenSkipNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 952 6) nil 6) <Q: 1075> nil)
		inlineAt(coord x(0) cache)
		createVariable(x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(5))
		putConstant('skip' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(163119)
lbl(163149)	definition(x(8) 163190 pid('CodeGenSkipNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 952 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1075> 7)
		endDefinition(163149)
lbl(163190)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenSkipNode' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163227)	definition(x(7) 163260 pid('CodeGenEquation,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 958 6) nil 6) <Q: 1076> nil)
		inlineAt(right x(4) cache)
		inlineAt(left x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(163227)
lbl(163260)	definition(x(8) 163301 pid('CodeGenEquation,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 958 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1076> 7)
		endDefinition(163260)
lbl(163301)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquation' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(163350)	definition(x(7) 163359 pid('CodeGenConstruction,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 965 6) nil 1) <Q: 1077> nil)
		return
		endDefinition(163350)
lbl(163359)	definition(x(8) 163385 pid('CodeGenConstruction,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 965 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1077> 3)
		endDefinition(163359)
lbl(163385)	putRecord('#' [1 2 fast] x(9))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(163395)	definition(x(7) 163407 pid('CodeGenConstruction,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 968 6) nil 3) <Q: 1078> nil)
		unify(x(1) x(2))
		return
		endDefinition(163395)
lbl(163407)	definition(x(8) 163448 pid('CodeGenConstruction,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 968 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1078> 7)
		endDefinition(163407)
lbl(163448)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(163458)	definition(x(7) 163497 pid('CodeGenConstruction,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 971 6) nil 4) <Q: 1079> [y(3)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true makeEquation true 4) 0)
		endDefinition(163458)
lbl(163497)	definition(x(8) 163544 pid('CodeGenConstruction,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 971 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1079> 9)
		endDefinition(163497)
lbl(163544)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(163554)	definition(x(7) 164166 pid('CodeGenConstruction,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 975 6) nil 6) <Q: 1080> [g(24) g(25) g(26) g(27) y(3)])
		allocateL9
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(4) 1 cache)
		inlineAt(args x(0) cache)
lbl(163590)	definition(x(1) 163618 pid('' 3 pos('./compiler/CodeGen.oz' 978 4) nil 3) unit nil)
		testRecord(x(1) '#' 2 163612)
lbl(163601)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(163612)	unify(x(2) x(0))
		return
		endDefinition(163590)
lbl(163618)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		inlineAt(isOpen x(0) cache)
		testBI('Bool.not' [x(0)]#[x(1)] 164115)
lbl(163633)	move(y(4) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 164115)
lbl(163640)	move(y(5) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 164115 164153)
lbl(163656)	testLiteral(y(5) nil 163671)
lbl(163660)	unify(y(1) y(2))
		getRecord(literal 1 y(3))
		unifyValue(y(4))
		deAllocateL9
		return
lbl(163671)	inlineAt(args x(1) cache)
lbl(163676)	definition(x(2) 163711 pid('' 3 pos('./compiler/CodeGen.oz' 987 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 163700)
lbl(163687)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(163700)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(163676)
lbl(163711)	move(y(5) x(0))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(163861)
		move(x(0) y(7))
		createCond(163855)
lbl(163729)	lastClause
		clause
		thread(163747)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(163747)	ask
lbl(163748)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(163786)	definition(x(0) 163823 pid('' 3 pos('./compiler/CodeGen.oz' 996 26) nil 5) unit nil)
		shallowGuard(163810)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163802)	shallowThen
		callBI('Record.adjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(163810)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(996)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163786)
lbl(163823)	moveMoveXYYX(x(0) y(7) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		genFastCall(<P: 30> 8)
		branch(163873)
lbl(163855)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(163861)	moveMoveYXYX(y(4) x(0) y(6) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(163873)	createVariable(y(6))
		createVariable(y(7))
		move(y(5) x(1))
		testBI('Tuple.is' [x(1)]#[x(2)] 163996)
		callBI('Record.width' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(1))
lbl(163898)	definition(x(3) 163974 pid('' 3 pos('./compiler/CodeGen.oz' 1002 10) nil 6) unit [y(5) y(0)])
		shallowGuard(163961)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163914)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(163961)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1002)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163898)
lbl(163974)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(164103)
lbl(163996)	callBI('Record.arity' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(1))
lbl(164010)	definition(x(4) 164086 pid('' 3 pos('./compiler/CodeGen.oz' 1009 10) nil 6) unit [y(5) y(0)])
		shallowGuard(164073)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(164026)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('Record.\'.\'' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(164073)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1009)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164010)
lbl(164086)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(164103)	getRecord(record 3 y(3))
		unifyValue(y(4))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL9
		return
lbl(164115)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		genCall(gci(g(4) true makeEquation false 4) 0)
		getRecord(value 1 y(3))
		unifyVariable(x(0))
		move(y(4) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
lbl(164153)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(981)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163554)
lbl(164166)	definition(x(8) 164213 pid('CodeGenConstruction,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 975 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1080> 9)
		endDefinition(164166)
lbl(164213)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenConstruction' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(164250)	definition(x(7) 165410 pid('CodeGenDefinition,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1025 6) nil 7) <Q: 1081> [g(14) g(30) g(31)])
		allocateL(19)
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' x(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariable(y(4))
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164306)
lbl(164295)	getLiteral('' y(4))
		getNumber(1 y(5))
		getNumber(0 y(6))
		branch(164333)
lbl(164306)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(4))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(6))
lbl(164333)	createVariableMove(y(7) x(0))
		sendMsg(getOrigin y(3) 1 cache)
		createVariable(y(8))
		testLiteral(y(7) generated 164358)
lbl(164348)	inlineAt(printName x(0) cache)
		unify(x(0) y(8))
		branch(164367)
lbl(164358)	move(y(8) x(0))
		sendMsg(getPrintName y(3) 1 cache)
lbl(164367)	putRecord('pos' 3 x(0))
		setValue(y(4))
		setValue(y(5))
		setValue(y(6))
		putRecord('pid' 5 y(7))
		setValue(y(8))
		setVariable(x(1))
		setValue(x(0))
		setVariable(y(9))
		setVariable(y(10))
		inlineAt(formalArgs x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(procFlags x(1) cache)
		putConstant(native x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 164425 164430)
		getList(y(9))
		unifyLiteral(native)
		unifyLiteral(nil)
		branch(164441)
lbl(164425)	getLiteral(nil y(9))
		branch(164441)
lbl(164430)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1036)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164441)	inlineAt(isStateUsing x(0) cache)
		createVariable(y(4))
		testBool(x(0) 164498 164503)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 164476 164487)
		move(y(4) x(0))
		sendMsg(newSelfReg y(0) 1 cache)
		branch(164514)
lbl(164476)	move(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		branch(164514)
lbl(164487)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1044)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164498)	getLiteral(none y(4))
		branch(164514)
lbl(164503)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1043)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164514)	inlineAt(toCopy x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164814)
lbl(164527)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164538)	definition(x(1) 164574 pid('' 2 pos('./compiler/CodeGen.oz' 1057 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164538)
lbl(164574)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(9))
		testBool(x(1) 164644 164665)
		inlineAt(formalArgs x(4) cache)
		move(x(4) x(0))
		move(y(9) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(12) x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(13) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(164676)
lbl(164644)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(164676)
lbl(164665)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1061)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164676)	inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 164692)
lbl(164687)	getLiteral(nil y(11))
		branch(164723)
lbl(164692)	inlineAt(allVariables x(0) cache)
lbl(164697)	definition(x(1) 164717 pid('' 2 pos('./compiler/CodeGen.oz' 1069 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(164697)
lbl(164717)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(164723)	createVariable(y(12))
		createVariable(y(13))
		testLiteral(y(4) none 164739)
lbl(164731)	unify(y(12) y(9))
		unify(y(5) y(13))
		branch(164759)
lbl(164739)	getRecord(vSetSelf 3 y(12))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(9))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(164759)	moveMoveYXYX(y(12) x(0) y(8) x(1))
		moveMoveYXYX(y(11) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(9))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
		branch(165377)
lbl(164814)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164825)	definition(x(1) 164861 pid('' 2 pos('./compiler/CodeGen.oz' 1090 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164825)
lbl(164861)	createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
		sendMsg(startDefinition y(0) 0 cache)
		inlineAt(statements x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(11) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(allVariables x(0) cache)
		createVariable(y(12))
		testLiteral(x(0) nil 164906)
lbl(164901)	getLiteral(nil y(12))
		branch(164937)
lbl(164906)	inlineAt(allVariables x(0) cache)
lbl(164911)	definition(x(1) 164931 pid('' 2 pos('./compiler/CodeGen.oz' 1097 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(164911)
lbl(164931)	move(y(12) x(2))
		genFastCall(<P: 29> 6)
lbl(164937)	createVariable(y(13))
		createVariable(y(14))
		testLiteral(y(4) none 164953)
lbl(164945)	unify(y(14) y(11))
		unify(y(5) y(13))
		branch(164973)
lbl(164953)	getRecord(vSetSelf 3 y(14))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(11))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(164973)	moveMoveYXYX(y(14) x(0) y(12) x(2))
		putConstant(nil x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		createVariableMove(y(15) x(5))
		sendMsg('endDefinition' y(0) 6 cache)
		createVariableMove(y(14) x(0))
		sendMsg(newReg y(0) 1 cache)
		putRecord('#' 2 x(0))
		setValue(y(8))
		setConstant('/body')
		createVariableMove(y(8) x(1))
		genFastCall(<P: 195> 4)
		inlineAt(procFlags x(0) cache)
lbl(165024)	definition(x(1) 165050 pid('' 2 pos('./compiler/CodeGen.oz' 1112 7) nil 4) unit nil)
		testLiteral(x(0) once 165038)
		getLiteral(true x(1))
		return
lbl(165038)	putConstant(native x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(165024)
lbl(165050)	createVariableMove(y(16) x(2))
		genFastCall(<P: 39> 6)
		putRecord('pid' [1 2 4 5] x(0))
		setValue(y(8))
		setConstant(0)
		setValue(y(16))
		setValue(y(15))
		move(y(7) x(1))
		callBI('Record.adjoin' [x(1) x(0)]#[x(2)])
		inlineAt(toCopy x(0) cache)
		createVariable(y(8))
		createVariable(y(15))
		testLiteral(x(0) nil 165132)
lbl(165087)	move(x(2) y(16))
		createVariableMove(y(17) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValVar(y(17) x(0))
		getRecord(vDefinitionCopy 8 x(0))
		unifyVoid(1)
		unifyValue(y(17))
		unifyValue(y(14))
		unifyValue(y(16))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
		branch(165310)
lbl(165132)	createVariable(x(4))
lbl(165134)	definition(x(3) 165270 pid('MakeCopyList' 4 pos('./compiler/CodeGen.oz' 1122 8) nil 4) unit [x(4) y(0) g(1) g(2)])
		match(x(0) ht(165255 [onScalar(nil 165143) onRecord('|' 2 165153)]))
lbl(165143)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
lbl(165153)	allocateL7
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(0) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(6))
		move(y(0) x(0))
		testBI('ForeignPointer.is' [x(0)]#[x(1)] 165197)
		getRecord(predicateRef 1 y(6))
		unifyValue(y(0))
		branch(165222)
lbl(165197)	testBI('Name.is' [x(0)]#[x(1)] 165209)
		getRecord(literal 1 y(6))
		unifyValue(y(0))
		branch(165222)
lbl(165209)	putRecord(compiler 3 x(1))
		setConstant(internalTypeError)
		setValue(y(0))
		setConstant('ForeignPointerOrName')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(165222)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(165255)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(165134)
lbl(165270)	unify(x(3) x(4))
		putRecord(value 1 x(3))
		setVariable(y(16))
		moveMoveXYYX(x(2) y(17) y(8) x(1))
		createVariableMove(y(18) x(2))
		call(x(4) 4)
		getRecord(vDefinitionCopy 8 y(18))
		unifyVoid(1)
		unifyValue(y(16))
		unifyValue(y(14))
		unifyValue(y(17))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
lbl(165310)	getRecord(vCall 5 y(15))
		unifyVoid(1)
		unifyValue(y(14))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		moveMoveYXYX(y(12) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
lbl(165377)	inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		putConstant('definition' x(1))
		genFastCall(<Q: 1024> 12)
		putConstant(unit x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL
		return
		endDefinition(164250)
lbl(165410)	definition(x(8) 165451 pid('CodeGenDefinition,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1025 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1081> 7)
		endDefinition(165410)
lbl(165451)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDefinition' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFunctionDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165512)	definition(x(7) 165524 pid('CodeGenClauseBody,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1165 6) nil 3) <Q: 1082> nil)
		unify(x(1) x(2))
		return
		endDefinition(165512)
lbl(165524)	definition(x(8) 165565 pid('CodeGenClauseBody,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1165 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1082> 7)
		endDefinition(165524)
lbl(165565)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBody' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165602)	definition(x(7) 165729 pid('CodeGenApplication,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1173 6) nil 9) <Q: 1083> [g(11)])
		getSelf(x(3))
		inlineDot(x(3) codeGenMakeEquateLiteral x(3) cache)
		testBI('Value.isDet' [x(3)]#[x(4)] 165691)
		allocateL6
		putRecord(vEquateLiteral 4 y(0))
		setVoid(1)
		setVariable(x(3))
		setVariable(y(1))
		setVariable(y(2))
		getSelf(x(4))
		inlineDot(x(4) codeGenMakeEquateLiteral x(0) cache)
		unify(x(0) x(3))
		inlineAt(actualArgs x(0) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 79> 4)
		move(y(1) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(0) x(4) y(2) x(5))
		putConstant('name generation' x(1))
		deAllocateL6
		genFastCall(<Q: 1024> 13)
lbl(165691)	inlineAt(designator x(6) cache)
		inlineAt(coord x(7) cache)
		inlineAt(actualArgs x(8) cache)
		move(x(0) x(3))
		move(x(6) x(0))
		move(x(1) x(4))
		move(x(7) x(1))
		move(x(2) x(5))
		move(x(8) x(2))
		genFastCall(<Q: 1042> 13)
		endDefinition(165602)
lbl(165729)	definition(x(8) 165770 pid('CodeGenApplication,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1173 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1083> 7)
		endDefinition(165729)
lbl(165770)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenApplication' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165807)	definition(x(7) 166046 pid('CodeGenBoolCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1187 6) nil 7) <Q: 1084> nil)
		allocateL6
		getSelf(x(3))
		inlineDot(x(3) noBoolShared x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Value.isFree' [x(3)]#[x(4)] 165888)
		getRecord(vShared 4 y(3))
		unifyVoid(1)
		unifyVariable(x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		move(x(4) x(0))
		sendMsg(newLabel y(0) 1 cache)
		putConstant(0 x(6))
		callBI('Cell.new' [x(6)]#[x(0)])
		unify(x(0) y(4))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(0) x(3) y(5) x(4))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
lbl(165888)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(4) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 165933)
lbl(165909)	testLiteral(y(4) true 165933)
lbl(165913)	inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGen x(3) 3 cache)
lbl(165933)	move(y(4) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 165964)
lbl(165940)	testLiteral(y(4) false 165964)
lbl(165944)	inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGenNoShared x(3) 3 cache)
lbl(165964)	inlineAt(consequent x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		sendMsg(codeGen x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenShared x(3) 3 cache)
		getRecord(vTestBool 8 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValVar(y(3) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(arbiter x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL6
		return
		endDefinition(165807)
lbl(166046)	definition(x(8) 166087 pid('CodeGenBoolCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1187 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1084> 7)
		endDefinition(166046)
lbl(166087)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolCase' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166124)	definition(x(7) 166152 pid('CodeGenBoolClause,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1210 6) nil 5) <Q: 1085> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1022> 9)
		endDefinition(166124)
lbl(166152)	definition(x(8) 166193 pid('CodeGenBoolClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1210 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1085> 7)
		endDefinition(166152)
lbl(166193)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolClause' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166230)	definition(x(7) 166599 pid('CodeGenPatternCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1216 6) nil 6) <Q: 1086> [y(2)])
		allocateL5
		inlineAt(clauses x(3) cache)
lbl(166242)	definition(x(4) 166262 pid('' 2 pos('./compiler/CodeGen.oz' 1217 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(isSwitchable x(2) 1 cache)
		endDefinition(166242)
lbl(166262)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 166384 166586)
		inlineAt(arbiter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(3) cache)
		move(g(0) x(1))
		callBI('Object.newObject' [x(1)]#[x(4)])
		moveMoveXYYX(x(4) y(4) y(3) x(1))
		move(y(0) x(4))
		sendMsg(init y(4) 5 cache)
		inlineAt(clauses x(0) cache)
lbl(166340)	definition(x(1) 166366 pid('' 1 pos('./compiler/CodeGen.oz' 1224 6) nil 4) unit [y(3) y(0) y(4)])
		move(x(0) x(3))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(2))
		tailSendMsg(makeSwitchable x(3) 3 cache)
		endDefinition(166340)
lbl(166366)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(codeGen x(2) 2 cache)
lbl(166384)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 166451 166440)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		inlineAt(coord x(4) cache)
		move(x(4) x(0))
		putConstant('optimization warning' x(1))
		putConstant('translating `case\' as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(166451)
lbl(166440)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(166451)	createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(3))
lbl(166467)	definition(x(1) 166528 pid('' 2 pos('./compiler/CodeGen.oz' 1234 3) nil 4) unit [x(3) y(0) y(3)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPatternGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(2) x(1))
		sendMsg(enterVs g(1) 2 cache)
		inlineAt(arbiter x(1) cache)
		move(g(1) x(0))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(makeCondClause x(3) 3 cache)
		endDefinition(166467)
lbl(166528)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(4) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterNoShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(4))
		unifyValVar(y(2) x(0))
		unifyLiteral(nil)
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL5
		return
lbl(166586)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1217)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(166230)
lbl(166599)	definition(x(8) 166640 pid('CodeGenPatternCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1216 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1086> 7)
		endDefinition(166599)
lbl(166640)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternCase' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166677)	definition(x(7) 166696 pid('CodeGenPatternClause,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1247 6) nil 2) <Q: 1087> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(166677)
lbl(166696)	definition(x(8) 166722 pid('CodeGenPatternClause,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1087> 3)
		endDefinition(166696)
lbl(166722)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166732)	definition(x(7) 166838 pid('CodeGenPatternClause,makeSwitchable/fast' 3 pos('./compiler/CodeGen.oz' 1250 6) nil 8) <Q: 1088> nil)
		allocateL3
		inlineAt(pattern x(5) cache)
		inlineAt(localVars x(6) cache)
		inlineAt(statements x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(2) x(4))
		sendMsg(makeSwitchable x(5) 5 cache)
		inlineAt(localVars x(0) cache)
lbl(166782)	definition(x(1) 166824 pid('' 1 pos('./compiler/CodeGen.oz' 1254 3) nil 3) unit [y(0)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(reg y(0) 1 cache)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 166810)
		deAllocateL2
		return
lbl(166810)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(newVariableReg g(0) 2 cache)
		endDefinition(166782)
lbl(166824)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(1) y(2) x(0))
		deAllocateL3
		tailCall(x(1) 1)
		endDefinition(166732)
lbl(166838)	definition(x(8) 166879 pid('CodeGenPatternClause,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1250 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1088> 7)
		endDefinition(166838)
lbl(166879)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166889)	definition(x(7) 167147 pid('CodeGenPatternClause,makeCondClause/fast' 3 pos('./compiler/CodeGen.oz' 1261 6) nil 5) <Q: 1089> nil)
		allocateL7
		inlineAt(localVars x(3) cache)
lbl(166901)	definition(x(4) 166921 pid('' 1 pos('./compiler/CodeGen.oz' 1264 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(166901)
lbl(166921)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(5))
		createVariable(y(6))
		testBool(y(1) 167010 167018)
		inlineAt(pattern x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		getLiteral(nil y(4))
		getRecord(vThread 5 y(5))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(6))
		unifyVoid(1)
		branch(167029)
lbl(167010)	unify(y(4) y(6))
		unify(y(5) y(3))
		branch(167029)
lbl(167018)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1266)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167029)	getRecord(vAsk 2 y(6))
		unifyVoid(1)
		unifyLiteral(nil)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(1))
		testBool(x(1) 167101 167122)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(167133)
lbl(167101)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(167133)
lbl(167122)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167133)	getRecord('#' 3 y(2))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(1))
		deAllocateL7
		return
		endDefinition(166889)
lbl(167147)	definition(x(8) 167188 pid('CodeGenPatternClause,makeCondClause/slow' 1 pos('./compiler/CodeGen.oz' 1261 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1089> 7)
		endDefinition(167147)
lbl(167188)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeCondClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(167241)	definition(x(7) 167261 pid('CodeGenRecordPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1288 6) nil 3) <Q: 1090> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(167241)
lbl(167261)	definition(x(8) 167287 pid('CodeGenRecordPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1288 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1090> 3)
		endDefinition(167261)
lbl(167287)	putRecord('#' [1 2 fast] x(9))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(167297)	definition(x(7) 167403 pid('CodeGenRecordPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1291 6) nil 3) <Q: 1091> nil)
		inlineAt(isOpen x(1) cache)
		testBI('Bool.not' [x(1)]#[x(2)] 167397)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 167392)
		inlineAt(args x(0) cache)
lbl(167342)	definition(x(1) 167385 pid('' 2 pos('./compiler/CodeGen.oz' 1295 4) nil 3) unit nil)
		testRecord(x(0) '#' 2 167379)
lbl(167353)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('Value.isDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(167379)	getLiteral(true x(1))
		return
		endDefinition(167342)
lbl(167385)	move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 35> 7)
lbl(167392)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(167397)	getLiteral(false x(0))
		return
		endDefinition(167297)
lbl(167403)	definition(x(8) 167429 pid('CodeGenRecordPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1291 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1091> 3)
		endDefinition(167403)
lbl(167429)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(167439)	definition(x(7) 167751 pid('CodeGenRecordPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1301 6) nil 6) <Q: 1092> [g(24) g(27) g(32) g(33)])
		allocateL8
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(5) 1 cache)
		inlineAt(args x(0) cache)
lbl(167475)	definition(x(1) 167514 pid('' 3 pos('./compiler/CodeGen.oz' 1304 7) nil 4) unit nil)
		testRecord(x(1) '#' 2 167503)
lbl(167486)	getVarVar(x(1) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(167503)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(167475)
lbl(167514)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		createVariable(y(6))
		exHandler(167661)
		move(x(0) y(7))
		createCond(167655)
lbl(167529)	lastClause
		clause
		thread(167547)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(167547)	ask
lbl(167548)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(167586)	definition(x(0) 167623 pid('' 3 pos('./compiler/CodeGen.oz' 1315 27) nil 5) unit nil)
		shallowGuard(167610)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(167602)	shallowThen
		callBI('Record.adjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(167610)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1315)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(167586)
lbl(167623)	moveMoveXYYX(x(0) y(2) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(7) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(167673)
lbl(167655)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(167661)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(167673)	move(y(6) x(0))
		testBI('Literal.is' [x(0)]#[x(1)] 167692)
		getRecord(addScalar 3 y(3))
		unifyValue(y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL8
		return
lbl(167692)	getRecord(addRecord 2 y(3))
		unifyVariable(x(2))
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyValVar(y(0) y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
lbl(167711)	definition(x(1) 167723 pid('' 2 pos('./compiler/CodeGen.oz' 1321 31) nil 2) unit nil)
		getLiteral('' x(1))
		return
		endDefinition(167711)
lbl(167723)	genFastCall(<P: 161> 6)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		genFastCall(<P: 159> 4)
		inlineAt(label x(1) cache)
		move(y(3) x(0))
		deAllocateL8
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(167439)
lbl(167751)	definition(x(8) 167804 pid('CodeGenRecordPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1301 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1092> 11)
		endDefinition(167751)
lbl(167804)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(3))
lbl(167816)	definition(x(7) 167901 pid('CodeGenRecordPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1325 6) nil 7) <Q: 1093> [y(1) y(3)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		genCall(gci(g(1) true makeEquation false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		deAllocateL8
		genCall(gci(g(1) true addPatternVs true 2) 0)
		endDefinition(167816)
lbl(167901)	definition(x(8) 167966 pid('CodeGenRecordPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1325 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1093> 15)
		endDefinition(167901)
lbl(167966)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(167976)	definition(x(7) 168042 pid('CodeGenRecordPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1332 6) nil 6) <Q: 1094> nil)
		inlineAt(args x(4) cache)
lbl(167987)	definition(x(5) 168025 pid('' 3 pos('./compiler/CodeGen.oz' 1334 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 168011)
lbl(167998)	getVoid(1)
		getVariable(x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
lbl(168011)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
		endDefinition(167987)
lbl(168025)	move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(167976)
lbl(168042)	definition(x(8) 168077 pid('CodeGenRecordPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1332 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1094> 5)
		endDefinition(168042)
lbl(168077)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(168087)	definition(x(7) 168115 pid('CodeGenRecordPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1340 6) nil 3) <Q: 1095> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(168087)
lbl(168115)	definition(x(8) 168141 pid('CodeGenRecordPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1095> 3)
		endDefinition(168115)
lbl(168141)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(168151)	definition(x(7) 168288 pid('CodeGenRecordPattern,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 1343 6) nil 6) <Q: 1096> [y(1)])
		inlineAt(args x(4) cache)
lbl(168162)	definition(x(5) 168271 pid('' 3 pos('./compiler/CodeGen.oz' 1345 3) nil 5) unit [g(0) x(0)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(1) '#' 2 168190)
lbl(168181)	getVoid(1)
		getVariable(x(1))
		unify(y(2) x(1))
		branch(168193)
lbl(168190)	unify(y(2) x(1))
lbl(168193)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 168253 168258)
		createVariableMove(y(3) x(0))
		sendMsg(reg y(2) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		move(g(1) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		move(y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(168253)	unify(y(0) y(1))
		deAllocateL5
		return
lbl(168258)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1347)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168162)
lbl(168271)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(168151)
lbl(168288)	definition(x(8) 168329 pid('CodeGenRecordPattern,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 1343 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1096> 7)
		endDefinition(168288)
lbl(168329)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(168339)	definition(x(7) 168381 pid('CodeGenRecordPattern,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1355 6) nil 4) <Q: 1097> [y(1)])
		allocateL2
		unify(x(1) x(2))
		getSelf(x(1))
		inlineDot(x(1) reg x(0) cache)
		move(g(0) x(1))
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYXY(x(3) y(0) x(2) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(168339)
lbl(168381)	definition(x(8) 168428 pid('CodeGenRecordPattern,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1355 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1097> 9)
		endDefinition(168381)
lbl(168428)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(168438)	definition(x(7) 168467 pid('CodeGenRecordPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1359 6) nil 4) <Q: 1098> nil)
		unify(x(1) x(2))
		getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(168438)
lbl(168467)	definition(x(8) 168514 pid('CodeGenRecordPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1359 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1098> 9)
		endDefinition(168467)
lbl(168514)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(y(3) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenRecordPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(168561)	definition(x(7) 168580 pid('CodeGenEquationPattern,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1366 6) nil 2) <Q: 1099> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(168561)
lbl(168580)	definition(x(8) 168606 pid('CodeGenEquationPattern,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1366 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1099> 3)
		endDefinition(168580)
lbl(168606)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(168616)	definition(x(7) 168635 pid('CodeGenEquationPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1369 6) nil 2) <Q: 1100> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(168616)
lbl(168635)	definition(x(8) 168661 pid('CodeGenEquationPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1369 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1100> 3)
		endDefinition(168635)
lbl(168661)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(168671)	definition(x(7) 168690 pid('CodeGenEquationPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1372 6) nil 2) <Q: 1101> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(168671)
lbl(168690)	definition(x(8) 168716 pid('CodeGenEquationPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1372 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1101> 3)
		endDefinition(168690)
lbl(168716)	putRecord('#' [1 2 fast] x(11))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168726)	definition(x(7) 168796 pid('CodeGenEquationPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1375 6) nil 6) <Q: 1102> nil)
		allocateL6
		inlineAt(left x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg('getVariable' x(5) 1 cache)
		move(y(0) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(right x(5) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		tailSendMsg(makeSwitchable x(5) 5 cache)
		endDefinition(168726)
lbl(168796)	definition(x(8) 168849 pid('CodeGenEquationPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1375 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1102> 11)
		endDefinition(168796)
lbl(168849)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168859)	definition(x(7) 169029 pid('CodeGenEquationPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1379 6) nil 8) <Q: 1103> [y(1)])
		allocateL9
		inlineAt(left x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' x(7) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(reg x(1) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 168955 168977)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(168988)
lbl(168955)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(7))
		setValue(y(1))
		move(y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(168988)
lbl(168977)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(168988)	move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(8) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		deAllocateL9
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(168859)
lbl(169029)	definition(x(8) 169094 pid('CodeGenEquationPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1379 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1103> 15)
		endDefinition(169029)
lbl(169094)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(169104)	definition(x(7) 169196 pid('CodeGenEquationPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1393 6) nil 3) <Q: 1104> nil)
		allocateL4
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 169162 169183)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169162)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(2))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169183)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1395)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(169104)
lbl(169196)	definition(x(8) 169231 pid('CodeGenEquationPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1393 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1104> 5)
		endDefinition(169196)
lbl(169231)	putRecord('#' [1 2 fast] x(14))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(169241)	definition(x(7) 169319 pid('CodeGenEquationPattern,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1401 6) nil 5) <Q: 1105> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg y(1) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1025> 8)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(3) x(3))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(169241)
lbl(169319)	definition(x(8) 169366 pid('CodeGenEquationPattern,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1401 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1105> 9)
		endDefinition(169319)
lbl(169366)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(169376)	definition(x(7) 169426 pid('CodeGenEquationPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1405 6) nil 2) <Q: 1106> nil)
		allocateL2
		inlineAt(right x(1) cache)
		inlineDot(x(1) reg x(0) cache)
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(169376)
lbl(169426)	definition(x(8) 169452 pid('CodeGenEquationPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1405 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1106> 3)
		endDefinition(169426)
lbl(169452)	putRecord('#' [1 2 fast] x(16))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(169462)	definition(x(7) 169481 pid('CodeGenEquationPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1408 6) nil 5) <Q: 1107> nil)
		inlineAt(left x(4) cache)
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(169462)
lbl(169481)	definition(x(8) 169528 pid('CodeGenEquationPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1408 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1107> 9)
		endDefinition(169481)
lbl(169528)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquationPattern' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [shared] x(3))
		setConstant(<U: ooFreeFlag>)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenAbstractElse' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [localVars] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(169614)	definition(x(7) 169633 pid('CodeGenElseNode,codeGenInit/fast' 2 pos('./compiler/CodeGen.oz' 1418 6) nil 2) <Q: 1108> nil)
		inlineAssign(localVars x(0) cache)
		inlineAssign(statements x(1) cache)
		return
		endDefinition(169614)
lbl(169633)	definition(x(8) 169668 pid('CodeGenElseNode,codeGenInit/slow' 1 pos('./compiler/CodeGen.oz' 1418 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1108> 5)
		endDefinition(169633)
lbl(169668)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenInit)
		setValue(x(8))
		setValue(x(7))
lbl(169678)	definition(x(7) 169837 pid('CodeGenElseNode,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1422 6) nil 5) <Q: 1109> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('Value.isFree' [x(1)]#[x(2)] 169834)
		allocateL4
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(0))
		callBI('Cell.new' [x(0)]#[x(1)])
		unify(x(1) y(0))
		move(y(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 169806 169823)
lbl(169749)	inlineAt(localVars x(1) cache)
		testBI('Value.isDet' [x(1)]#[x(2)] 169806)
lbl(169758)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(0) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<Q: 1027> 7)
lbl(169806)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(169823)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1429)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(169834)	return
		endDefinition(169678)
lbl(169837)	definition(x(8) 169878 pid('CodeGenElseNode,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1422 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1109> 7)
		endDefinition(169837)
lbl(169878)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(23))
lbl(169890)	definition(x(7) 169907 pid('CodeGenElseNode,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1440 6) nil 4) <Q: 1110> [y(23)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenShared true 3) 0)
		endDefinition(169890)
lbl(169907)	definition(x(8) 169954 pid('CodeGenElseNode,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1440 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1110> 9)
		endDefinition(169907)
lbl(169954)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(169964)	definition(x(7) 170076 pid('CodeGenElseNode,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1443 6) nil 5) <Q: 1111> nil)
		allocateL5
		inlineDot(x(0) debugInfoVarnamesSwitch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBool(x(3) 170046 170063)
lbl(169989)	inlineAt(localVars x(3) cache)
		testBI('Value.isDet' [x(3)]#[x(4)] 170046)
lbl(169998)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(170046)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(170063)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1444)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(169964)
lbl(170076)	definition(x(8) 170117 pid('CodeGenElseNode,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1443 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1111> 7)
		endDefinition(170076)
lbl(170117)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170127)	definition(x(7) 170144 pid('CodeGenElseNode,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1453 6) nil 4) <Q: 1112> [y(23)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenNoShared true 3) 0)
		endDefinition(170127)
lbl(170144)	definition(x(8) 170191 pid('CodeGenElseNode,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1453 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1112> 9)
		endDefinition(170144)
lbl(170191)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(23) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenElseNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(170233)	definition(x(7) 170317 pid('CodeGenNoElse,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1458 6) nil 7) <Q: 1113> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('Value.isFree' [x(1)]#[x(2)] 170314)
		allocateL3
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('Cell.new' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		deAllocateL3
		genFastCall(<Q: 1044> 13)
lbl(170314)	return
		endDefinition(170233)
lbl(170317)	definition(x(8) 170358 pid('CodeGenNoElse,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1458 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1113> 7)
		endDefinition(170317)
lbl(170358)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
lbl(170368)	definition(x(7) 170457 pid('CodeGenNoElse,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1468 6) nil 7) <Q: 1114> nil)
		getSelf(x(4))
		inlineDot(x(4) shared x(5) cache)
		unify(x(5) x(2))
		getLiteral(nil x(3))
		testBI('Value.isFree' [x(2)]#[x(3)] 170454)
		allocateL4
		getRecord(vShared 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(2) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('Cell.new' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(5))
		deAllocateL4
		genFastCall(<Q: 1044> 13)
lbl(170454)	return
		endDefinition(170368)
lbl(170457)	definition(x(8) 170504 pid('CodeGenNoElse,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1468 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1114> 9)
		endDefinition(170457)
lbl(170504)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(170514)	definition(x(7) 170548 pid('CodeGenNoElse,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1478 6) nil 7) <Q: 1115> nil)
		inlineAt(coord x(6) cache)
		move(x(0) x(3))
		move(x(1) x(4))
		move(x(6) x(1))
		move(x(2) x(5))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		genFastCall(<Q: 1044> 13)
		endDefinition(170514)
lbl(170548)	definition(x(8) 170589 pid('CodeGenNoElse,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1478 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1115> 7)
		endDefinition(170548)
lbl(170589)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170599)	definition(x(7) 170639 pid('CodeGenNoElse,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1481 6) nil 8) <Q: 1116> nil)
		inlineAt(coord x(6) cache)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		move(x(3) x(5))
		move(x(0) x(3))
		move(x(6) x(1))
		move(x(2) x(4))
		move(x(7) x(2))
		putConstant(noElse x(0))
		genFastCall(<Q: 1044> 13)
		endDefinition(170599)
lbl(170639)	definition(x(8) 170686 pid('CodeGenNoElse,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1481 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1116> 9)
		endDefinition(170639)
lbl(170686)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNoElse' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170729)	definition(x(7) 170786 pid('CodeGenThreadNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1487 6) nil 5) <Q: 1117> nil)
		allocateL3
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getRecord(vThread 5 y(0))
		unifyVoid(1)
		unifyValVar(y(2) x(0))
		unifyValue(y(1))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
		endDefinition(170729)
lbl(170786)	definition(x(8) 170827 pid('CodeGenThreadNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1487 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1117> 7)
		endDefinition(170786)
lbl(170827)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenThreadNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170864)	definition(x(7) 171066 pid('CodeGenTryNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1494 6) nil 6) <Q: 1118> nil)
		allocateL8
		inlineAt(tryStatements x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(vPopEx 3 x(3))
		setVoid(1)
		setValue(x(5))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1022> 8)
		inlineAt(exception x(1) cache)
		move(y(0) x(0))
		sendMsg(setReg x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(4))
		testBool(x(1) 170995 171016)
		inlineAt(exception x(4) cache)
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(5) x(0))
		move(y(4) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(171027)
lbl(170995)	inlineAt(catchStatements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(171027)
lbl(171016)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1497)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(171027)	getRecord(vExHandler 7 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(0))
		unifyValVar(y(4) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(exception x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL8
		return
		endDefinition(170864)
lbl(171066)	definition(x(8) 171107 pid('CodeGenTryNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1494 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1118> 7)
		endDefinition(171066)
lbl(171107)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTryNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171144)	definition(x(7) 171225 pid('CodeGenLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1510 6) nil 5) <Q: 1119> nil)
		allocateL5
		getRecord(vLockThread 5 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(x(1) x(0))
		sendMsg(reg x(3) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
		endDefinition(171144)
lbl(171225)	definition(x(8) 171266 pid('CodeGenLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1510 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1119> 7)
		endDefinition(171225)
lbl(171266)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenLockNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171303)	definition(x(7) 171810 pid('CodeGenClassNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1517 6) nil 8) <Q: 1120> [y(1)])
		allocateL(14)
		inlineAt(parents x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(attributes x(1) cache)
		moveMoveYXYX(y(0) x(2) y(6) x(3))
		putConstant('attr' x(0))
		createVariableMove(y(4) x(4))
		createVariableMove(y(8) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(features x(1) cache)
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		putConstant('feat' x(0))
		createVariableMove(y(6) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(printName x(0) cache)
		createVariable(y(4))
		testLiteral(x(0) '' 171441)
lbl(171416)	inlineAt(designator x(1) cache)
		createVariableMove(y(10) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getPrintName y(10) 1 cache)
		branch(171449)
lbl(171441)	inlineAt(printName x(0) cache)
		unify(x(0) y(4))
lbl(171449)	move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1038> 4)
		inlineAt(methods x(0) cache)
		createVariable(y(11))
		match(x(0) ht(171653 [onScalar(nil 171468) onRecord('|' 2 171488)]))
lbl(171468)	getRecord(vEquateLiteral 4 y(6))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValue(y(11))
		sendMsg(reg y(10) 1 cache)
		branch(171666)
lbl(171488)	getSelf(x(4))
		createVariable(x(5))
lbl(171492)	definition(x(0) 171598 pid('MakeMethods' 4 pos('./compiler/CodeGen.oz' 1534 5) nil 7) unit [x(4) y(0) y(4) x(5)])
		move(g(0) x(4))
		setSelf(x(4))
		match(x(0) ht(171583 [onScalar(nil 171506) onRecord('|' 2 171513)]))
lbl(171506)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(171513)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		inlineAt(isToplevel x(3) cache)
		move(g(2) x(0))
		move(g(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg(makeQuadruple y(0) 6 cache)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(value 1 x(0))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailCall(g(3) 4)
lbl(171583)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1542)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(171492)
lbl(171598)	unify(x(0) x(5))
		inlineAt(methods x(0) cache)
		move(y(6) x(1))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(12))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(1))
		unifyVariable(y(6))
		unifyValue(y(13))
		unifyValue(y(11))
		inlineAt(methods x(0) cache)
		genFastCall(<P: 24> 4)
		move(y(6) x(0))
		sendMsg(reg y(10) 1 cache)
		branch(171666)
lbl(171653)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1551)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(171666)	putConstant(unit x(1))
		inlineAssign(methods x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(11))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(6) y(11))
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(6) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(designator x(6) cache)
		putList(x(7))
		setValue(x(6))
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(3))
		setValue(y(9))
		setValue(x(4))
		putList(x(1))
		setValue(y(8))
		setValue(x(3))
		putList(x(0))
		setValue(y(10))
		setValue(x(1))
		putList(x(2))
		setValue(y(5))
		setValue(x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(11) x(4))
		putConstant('class' x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		putConstant('definition' x(1))
		deAllocateL
		genFastCall(<Q: 1024> 13)
		endDefinition(171303)
lbl(171810)	definition(x(8) 171851 pid('CodeGenClassNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1517 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1120> 7)
		endDefinition(171810)
lbl(171851)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClassNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: MessagePatternVO> hasDefaults] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(29))
lbl(171898)	definition(x(7) 173365 pid('CodeGenMethod,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1566 6) nil 12) <Q: 1121> [g(27) g(33) g(34) g(35) y(29) y(1) y(5)])
		allocateL(19)
		inlineAt(formalArgs x(6) cache)
lbl(171911)	definition(x(7) 171953 pid('' 2 pos('./compiler/CodeGen.oz' 1574 3) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(0) x(1))
		createVariableMove(y(1) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(171911)
lbl(171953)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(7))
		exHandler(172065)
		move(x(0) y(6))
		createCond(172059)
lbl(171989)	lastClause
		clause
		thread(172007)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL
		return
lbl(172007)	ask
lbl(172008)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(formalArgs x(0) cache)
		move(y(7) x(1))
		genFastCall(<P: 24> 4)
		branch(172113)
lbl(172059)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(172065)	putConstant(someLabel x(0))
		move(y(6) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBI('Tuple.is' [x(2)]#[x(0)] 172089)
		callBI('Record.width' [x(2)]#[x(0)])
		unify(x(0) y(7))
		branch(172095)
lbl(172089)	callBI('Record.arity' [x(2)]#[x(0)])
		unify(x(0) y(7))
lbl(172095)	move(y(6) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 159> 4)
		move(y(8) x(0))
		inlineAssign(formalArgs x(0) cache)
		popEx
lbl(172113)	getSelf(x(3))
		inlineDot(x(3) hasDefaults x(2) cache)
		inlineAt(formalArgs x(0) cache)
lbl(172126)	definition(x(1) 172146 pid('' 2 pos('./compiler/CodeGen.oz' 1591 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(172126)
lbl(172146)	genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(6))
		createVariable(y(8))
		createVariable(y(9))
		testLiteral(x(0) unit 172175)
lbl(172164)	getLiteral('' y(6))
		getNumber(1 y(8))
		getNumber(0 y(9))
		branch(172202)
lbl(172175)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(8))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(9))
lbl(172202)	putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setValue(y(7))
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(7))
		setConstant('/fast')
		createVariableMove(y(7) x(1))
		genFastCall(<P: 194> 4)
		move(y(7) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		sendMsg(startDefinition y(1) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(172278)	definition(x(1) 172324 pid('' 2 pos('./compiler/CodeGen.oz' 1605 5) nil 3) unit [y(1)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(g(0) x(0))
		sendMsg(setFreshReg y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172278)
lbl(172324)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 172346)
lbl(172341)	getLiteral(nil y(11))
		branch(172377)
lbl(172346)	inlineAt(allVariables x(0) cache)
lbl(172351)	definition(x(1) 172371 pid('' 2 pos('./compiler/CodeGen.oz' 1610 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(172351)
lbl(172371)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(172377)	move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(13))
		testBool(x(1) 172515 172536)
		createVariableMove(y(14) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(14))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(14) y(15))
		inlineAt(formalArgs x(0) cache)
lbl(172431)	definition(x(1) 172451 pid('' 2 pos('./compiler/CodeGen.oz' 1618 30) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(172431)
lbl(172451)	createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(16) x(0) y(15) x(2))
		createVariableMove(y(17) x(1))
		createVariableMove(y(18) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(18) x(2))
		createVariableMove(y(15) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(17) x(0) y(15) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<Q: 1027> 6)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
		move(y(16) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(172547)
lbl(172515)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(13) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(172547)
lbl(172536)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1612)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(172547)	putConstant(unit x(6))
		inlineAssign(statements x(6) cache)
		moveMoveYXYX(y(13) x(0) y(7) x(1))
		moveMoveYXYX(y(11) x(2) y(12) x(5))
		createVariableMove(y(14) x(3))
		createVariableMove(y(15) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(4))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValVar(y(10) x(1))
		unifyValue(y(14))
		unifyValVar(y(15) y(4))
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(1))
		putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(6))
		setConstant('/slow')
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		createVariableMove(y(0) x(2))
		genCall(gci(g(4) true makeArityCheckInit false 3) 0)
		sendMsg(startDefinition y(1) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		putList(y(6))
		setVariable(x(4))
		setConstant(nil)
		move(y(4) x(0))
		inlineDot(x(0) reg x(1) cache)
		unify(x(1) x(4))
		move(y(1) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(4) true makeArityCheck false 4) 0)
		inlineAt(formalArgs x(0) cache)
lbl(172736)	definition(x(1) 172765 pid('' 3 pos('./compiler/CodeGen.oz' 1650 6) nil 5) unit [y(4) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(172736)
lbl(172765)	move(y(9) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 172847 172962)
		getRecord(vFastCall 5 y(4))
		unifyVoid(1)
		unifyVariable(x(3))
		unifyVariable(x(2))
		unifyLiteral(unit)
		unifyLiteral(nil)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(172805)	definition(x(1) 172842 pid('' 2 pos('./compiler/CodeGen.oz' 1656 6) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172805)
lbl(172842)	genFastCall(<P: 29> 6)
		branch(172973)
lbl(172847)	move(g(5) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(formalArgs x(0) cache)
lbl(172880)	definition(x(1) 172935 pid('' 2 pos('./compiler/CodeGen.oz' 1664 3) nil 3) unit [g(5)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(172880)
lbl(172935)	createVariableMove(y(11) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(9) x(1))
		moveMoveYXYX(y(11) x(2) y(1) x(3))
		move(y(4) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1042> 12)
		branch(172973)
lbl(172962)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1653)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(172973)	moveMoveYXYX(y(8) x(0) y(6) x(1))
		move(y(12) x(5))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyValVar(y(4) y(0))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 173265 173352)
		inlineAt(formalArgs x(0) cache)
lbl(173039)	definition(x(1) 173081 pid('' 2 pos('./compiler/CodeGen.oz' 1676 6) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(0))
		move(x(0) y(1))
		move(x(1) x(0))
		sendMsg(getFeature y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getDefault x(1) 1 cache)
		endDefinition(173039)
lbl(173081)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(6) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		inlineAt(label x(4) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		move(x(1) y(4))
		move(x(4) x(0))
		move(y(3) x(1))
		putConstant(false x(2))
		sendMsg(init y(4) 3 cache)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		createVariableMove(y(8) x(3))
		sendMsg(makeEquation y(4) 4 cache)
		getRecord(vEquateRecord 6 y(8))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(default)
		unifyVariable(x(4))
		getList(x(4))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(value 1 x(7))
		unifyValue(y(6))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(value 1 x(9))
		unifyVariable(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(value 1 x(11))
		unifyValue(y(7))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		move(x(5) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		sendMsg(makeRecordArgument x(4) 4 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(reg x(1) 1 cache)
lbl(173265)	getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(value 1 x(6))
		unifyValue(y(6))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(value 1 x(8))
		unifyValue(y(7))
		inlineAt(label x(5) cache)
		move(y(1) x(0))
		move(x(4) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(5) 4 cache)
lbl(173352)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1674)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(171898)
lbl(173365)	definition(x(8) 173424 pid('CodeGenMethod,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1566 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1121> 13)
		endDefinition(173365)
lbl(173424)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
lbl(173434)	definition(x(7) 173678 pid('CodeGenMethod,makeArityCheck/fast' 4 pos('./compiler/CodeGen.oz' 1692 6) nil 7) <Q: 1122> [y(1)])
		getSelf(x(4))
		inlineDot(x(4) hasDefaults x(4) cache)
		testBool(x(4) 173514 173665)
		allocateL5
		inlineAt(coord x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		getSelf(x(6))
		inlineDot(x(6) <M: MessagePatternVO> x(6) cache)
		putList(x(0))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(aritySublist x(0))
		deAllocateL5
		genFastCall(<Q: 1043> 13)
lbl(173514)	allocateL7
		inlineAt(formalArgs x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		testNumber(y(4) 0 173588)
lbl(173557)	move(y(5) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 173588)
lbl(173564)	getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValVar(y(5) x(1))
		unifyValue(y(3))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(reg x(1) 1 cache)
lbl(173588)	createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(5) y(2))
		inlineAt(coord x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(0))
		setValue(y(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(width x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
lbl(173665)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1693)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173434)
lbl(173678)	definition(x(8) 173725 pid('CodeGenMethod,makeArityCheck/slow' 1 pos('./compiler/CodeGen.oz' 1692 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1122> 9)
		endDefinition(173678)
lbl(173725)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeArityCheck)
		setValue(x(8))
		setValue(x(7))
lbl(173735)	definition(x(7) 173997 pid('CodeGenMethod,makeArityCheckInit/fast' 3 pos('./compiler/CodeGen.oz' 1710 6) nil 5) <Q: 1123> [y(1) y(5)])
		allocateL7
		getSelf(x(3))
		inlineDot(x(3) <M: MessagePatternVO> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		unify(y(5) y(3))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 173979 173984)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		putConstant(messagePattern x(3))
		move(y(4) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(3))
		move(g(1) x(1))
		inlineDot(x(1) construction x(2) cache)
		inlineAt(formalArgs x(3) cache)
lbl(173856)	definition(x(4) 173915 pid('' 2 pos('./compiler/CodeGen.oz' 1720 7) nil 3) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1038> 4)
		putConstant(unit x(1))
		move(y(2) x(0))
		inlineDot(x(0) value x(2) cache)
		unify(x(2) x(1))
		getRecord('#' 2 y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getFeature x(1) 1 cache)
		endDefinition(173856)
lbl(173915)	move(x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(6) 3 cache)
		getSelf(x(4))
		inlineDot(x(4) <M: MessagePatternVO> x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(173979)	unify(y(1) y(2))
		deAllocateL7
		return
lbl(173984)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173735)
lbl(173997)	definition(x(8) 174038 pid('CodeGenMethod,makeArityCheckInit/slow' 1 pos('./compiler/CodeGen.oz' 1710 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1123> 7)
		endDefinition(173997)
lbl(174038)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeArityCheckInit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(29) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenMethod' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(174076)	definition(x(7) 174767 pid('CodeGenMethodWithDesignator,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1732 6) nil 8) <Q: 1124> [g(34) g(35) y(29) y(1)])
		allocateL(15)
		getSelf(x(3))
		inlineDot(x(3) hasDefaults x(3) cache)
		inlineAt(formalArgs x(6) cache)
lbl(174097)	definition(x(7) 174117 pid('' 2 pos('./compiler/CodeGen.oz' 1736 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(174097)
lbl(174117)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(6) x(0))
		move(x(7) x(1))
		move(x(3) x(2))
		genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		createVariable(y(7))
		testLiteral(x(0) unit 174168)
lbl(174157)	getLiteral('' y(5))
		getNumber(1 y(6))
		getNumber(0 y(7))
		branch(174195)
lbl(174168)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(7))
lbl(174195)	putRecord('pos' 3 x(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(7))
		putRecord('pid' 5 y(8))
		setVariable(y(9))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(10))
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 3 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		unify(x(1) y(9))
		inlineAt(isOpen x(0) cache)
		createVariable(y(0))
		testBool(x(0) 174274 174287)
		unify(y(3) y(0))
		branch(174298)
lbl(174274)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		genCall(gci(g(2) true makeArityCheckInit false 3) 0)
		branch(174298)
lbl(174287)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1751)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174298)	sendMsg(startDefinition y(1) 0 cache)
		inlineAt(messageDesignator x(1) cache)
		move(y(1) x(0))
		sendMsg(setReg x(1) 1 cache)
		inlineAt(messageDesignator x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(3) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(3) x(0))
		sendMsg(init y(5) 1 cache)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		inlineAt(allVariables x(1) cache)
		move(x(0) y(3))
		createVariable(y(6))
		testLiteral(x(1) nil 174374)
lbl(174369)	getLiteral(nil y(6))
		branch(174408)
lbl(174374)	inlineAt(allVariables x(3) cache)
lbl(174379)	definition(x(1) 174399 pid('' 2 pos('./compiler/CodeGen.oz' 1762 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(174379)
lbl(174399)	move(x(3) x(0))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(174408)	inlineAt(isOpen x(0) cache)
		createVariable(y(7))
		createVariable(y(9))
		testBool(x(0) 174426 174441)
		unify(y(7) y(9))
		branch(174452)
lbl(174426)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(9) x(3))
		genCall(gci(g(2) true makeArityCheck false 4) 0)
		branch(174452)
lbl(174441)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1764)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174452)	inlineAt(formalArgs x(0) cache)
lbl(174457)	definition(x(1) 174486 pid('' 3 pos('./compiler/CodeGen.oz' 1770 6) nil 5) unit [y(5) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(174457)
lbl(174486)	move(y(9) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(5) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(5))
		testBool(x(1) 174644 174652)
		createVariableMove(y(11) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(5))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(11))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(11) y(12))
		putList(y(13))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(174579)	definition(x(1) 174599 pid('' 2 pos('./compiler/CodeGen.oz' 1781 5) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(174579)
lbl(174599)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(13) x(0) y(12) x(2))
		move(y(7) x(3))
		createVariableMove(y(14) x(1))
		genFastCall(<Q: 1026> 8)
		putList(x(0))
		setValue(y(11))
		setConstant(nil)
		move(y(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1027> 6)
		moveMoveYXYX(y(14) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(174663)
lbl(174644)	unify(y(5) y(7))
		getLiteral(nil y(9))
		branch(174663)
lbl(174652)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1774)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(174663)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		moveMoveYXYX(y(6) x(2) y(10) x(5))
		createVariableMove(y(7) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(8))
		unifyLiteral(unit)
		unifyValue(y(7))
		unifyValVar(y(9) x(4))
		getRecord(vEquateRecord 6 x(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(value 1 x(2))
		unifyValue(y(3))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(174076)
lbl(174767)	definition(x(8) 174826 pid('CodeGenMethodWithDesignator,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1732 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1124> 13)
		endDefinition(174767)
lbl(174826)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethodWithDesignator' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(174863)	definition(x(7) 174912 pid('CodeGenMethFormal,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1801 6) nil 5) <Q: 1125> [y(6) y(7)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooRequiredArg x(2) cache)
		move(g(1) x(3))
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(174863)
lbl(174912)	definition(x(8) 174938 pid('CodeGenMethFormal,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1801 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1125> 3)
		endDefinition(174912)
lbl(174938)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(174948)	definition(x(7) 175092 pid('CodeGenMethFormal,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1804 6) nil 6) <Q: 1126> [y(1)])
		allocateL8
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(feature x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeVO x(4) 4 cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(6))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		putConstant('.' x(0))
		deAllocateL8
		genFastCall(<Q: 1043> 13)
		endDefinition(174948)
lbl(175092)	definition(x(8) 175139 pid('CodeGenMethFormal,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1804 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1126> 9)
		endDefinition(175092)
lbl(175139)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormal' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175178)	definition(x(7) 175227 pid('CodeGenMethFormalOptional,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1814 6) nil 5) <Q: 1127> [y(6) y(7)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooDefaultVar x(2) cache)
		move(g(1) x(3))
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175178)
lbl(175227)	definition(x(8) 175253 pid('CodeGenMethFormalOptional,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1814 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1127> 3)
		endDefinition(175227)
lbl(175253)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175263)	definition(x(7) 175536 pid('CodeGenMethFormalOptional,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1817 6) nil 6) <Q: 1128> [y(1)])
		allocateL(11)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(isInitialized x(0) cache)
		testBool(x(0) 175309 175523)
		unify(y(2) y(3))
		deAllocateL
		return
lbl(175309)	inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyLiteral(nil)
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
lbl(175523)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1819)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(175263)
lbl(175536)	definition(x(8) 175583 pid('CodeGenMethFormalOptional,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1817 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1128> 9)
		endDefinition(175536)
lbl(175583)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalOptional' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175622)	definition(x(7) 175661 pid('CodeGenMethFormalWithDefault,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1843 6) nil 4) <Q: 1129> [y(7)])
		allocateL2
		inlineAt(default x(1) cache)
		move(g(0) x(2))
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(1) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175622)
lbl(175661)	definition(x(8) 175687 pid('CodeGenMethFormalWithDefault,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1843 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1129> 3)
		endDefinition(175661)
lbl(175687)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175697)	definition(x(7) 175982 pid('CodeGenMethFormalWithDefault,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1846 6) nil 6) <Q: 1130> [y(1) y(7)])
		allocateL(13)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(default x(0) cache)
		move(g(1) x(1))
		callBI('Object.newObject' [x(1)]#[x(2)])
		move(x(2) y(11))
		sendMsg(init y(11) 1 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(12) x(2))
		putConstant(nil x(3))
		sendMsg(makeEquation y(11) 4 cache)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyValue(y(12))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
		endDefinition(175697)
lbl(175982)	definition(x(8) 176029 pid('CodeGenMethFormalWithDefault,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1846 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1130> 9)
		endDefinition(175982)
lbl(176029)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalWithDefault' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176068)	definition(x(7) 176195 pid('CodeGenObjectLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1870 6) nil 6) <Q: 1131> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(1) x(4))
		putConstant(ooGetLock x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vLockThread 5 y(4))
		unifyVoid(1)
		unifyValVar(y(3) x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		inlineAt(coord x(0) cache)
		unify(x(0) x(4))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(2))
		setValue(x(5))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1022> 9)
		endDefinition(176068)
lbl(176195)	definition(x(8) 176236 pid('CodeGenObjectLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1870 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1131> 7)
		endDefinition(176195)
lbl(176236)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176273)	definition(x(7) 176302 pid('CodeGenGetSelf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1881 6) nil 3) <Q: 1132> nil)
		getRecord(vGetSelf 3 x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		inlineAt(destination x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(176273)
lbl(176302)	definition(x(8) 176343 pid('CodeGenGetSelf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1881 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1132> 7)
		endDefinition(176302)
lbl(176343)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenGetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176380)	definition(x(7) 176413 pid('CodeGenFailNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1887 6) nil 6) <Q: 1133> nil)
		inlineAt(coord x(0) cache)
		putRecord(vFailure 2 x(4))
		setVoid(1)
		setVariable(x(5))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant('fail' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(176380)
lbl(176413)	definition(x(8) 176454 pid('CodeGenFailNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1887 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1133> 7)
		endDefinition(176413)
lbl(176454)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176491)	definition(x(7) 176829 pid('CodeGenIfNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1893 6) nil 6) <Q: 1134> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		testList(x(0) 176698)
lbl(176523)	getVarVar(x(0) x(1))
		createVariable(y(4))
		testLiteral(x(1) nil 176698)
		move(x(0) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getGuardGlobalVars y(5) 1 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		sendMsg(enterVs y(0) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		sendMsg(codeGen y(5) 5 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(0) 176641 176687)
		getLiteral(nil y(7))
		getRecord(vShallowGuard 8 y(1))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValVar(y(5) x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
lbl(176641)	unify(y(7) y(8))
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(5))
		unifyValVar(y(2) x(1))
		unifyValue(y(3))
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL10
		return
lbl(176687)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(176698)	inlineAt(clauses x(0) cache)
lbl(176703)	definition(x(1) 176774 pid('' 2 pos('./compiler/CodeGen.oz' 1912 3) nil 6) unit [y(0) y(3)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(176703)
lbl(176774)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyValVar(y(2) x(0))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
		endDefinition(176491)
lbl(176829)	definition(x(8) 176870 pid('CodeGenIfNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1893 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1134> 7)
		endDefinition(176829)
lbl(176870)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176907)	definition(x(7) 177074 pid('CodeGenChoicesAndDisjunctions,codeGen/fast' 4 pos('./compiler/CodeGen.oz' 1927 6) nil 6) <Q: 1135> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(makeRegSet y(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(176938)	definition(x(1) 177009 pid('' 2 pos('./compiler/CodeGen.oz' 1930 7) nil 6) unit [y(1) y(4)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(176938)
lbl(177009)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(4))
		setVoid(1)
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(4))
		putList(x(4))
		setVariable(y(4))
		setValue(x(5))
		putList(x(5))
		setValue(y(3))
		setValue(x(4))
		putList(x(4))
		setValue(y(1))
		setValue(x(5))
		putList(x(1))
		setVoid(1)
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		putConstant(6 x(2))
		marshalledFastCall(<R: tuple> 8)
		inlineAt(coord x(0) cache)
		unify(x(0) y(4))
		deAllocateL5
		return
		endDefinition(176907)
lbl(177074)	definition(x(8) 177121 pid('CodeGenChoicesAndDisjunctions,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1927 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1135> 9)
		endDefinition(177074)
lbl(177121)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177158)	definition(x(7) 177181 pid('CodeGenOrNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1942 6) nil 4) <Q: 1136> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177158)
lbl(177181)	definition(x(8) 177222 pid('CodeGenOrNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1942 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1136> 7)
		endDefinition(177181)
lbl(177222)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenOrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177259)	definition(x(7) 177282 pid('CodeGenDisNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1947 6) nil 4) <Q: 1137> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateEnumOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177259)
lbl(177282)	definition(x(8) 177323 pid('CodeGenDisNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1947 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1137> 7)
		endDefinition(177282)
lbl(177323)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177360)	definition(x(7) 177383 pid('CodeGenChoiceNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1952 6) nil 4) <Q: 1138> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateChoice x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177360)
lbl(177383)	definition(x(8) 177424 pid('CodeGenChoiceNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1952 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1138> 7)
		endDefinition(177383)
lbl(177424)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177461)	definition(x(7) 177815 pid('CodeGenClause,codeGen/fast' 5 pos('./compiler/CodeGen.oz' 1958 6) nil 7) <Q: 1139> nil)
		allocateL9
		inlineAt(localVars x(5) cache)
lbl(177473)	definition(x(6) 177493 pid('' 1 pos('./compiler/CodeGen.oz' 1959 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(177473)
lbl(177493)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		testBool(y(7) 177651 177659)
		inlineAt(guard x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 177632 177621)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating `cond\', `or\', `dis\' or `choice\' ')
		setConstant('clause with thread')
		move(y(7) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(177632)
lbl(177621)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1963)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177632)	getLiteral(nil y(6))
		getRecord(vThread 5 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(2))
		unifyVoid(1)
		branch(177670)
lbl(177651)	unify(y(6) y(2))
		unify(y(1) y(5))
		branch(177670)
lbl(177659)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1961)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177670)	inlineAt(kind x(0) cache)
		match(x(0) ht(177708 [onScalar('ask' 177678) onScalar('wait' 177688) onScalar('waitTop' 177698)]))
lbl(177678)	getRecord(vAsk 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177721)
lbl(177688)	getRecord(vWait 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177721)
lbl(177698)	getRecord(vWaitTop 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177721)
lbl(177708)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1978)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(177721)	move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 177782 177802)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(4) x(2))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		putConstant(nil x(2))
		deAllocateL9
		genFastCall(<Q: 1027> 7)
lbl(177782)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<Q: 1022> 9)
lbl(177802)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1979)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(177461)
lbl(177815)	definition(x(8) 177868 pid('CodeGenClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1958 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1139> 11)
		endDefinition(177815)
lbl(177868)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177905)	definition(x(7) 177922 pid('CodeGenValueNode,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1990 6) nil 2) <Q: 1140> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(177905)
lbl(177922)	definition(x(8) 177948 pid('CodeGenValueNode,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1990 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1140> 3)
		endDefinition(177922)
lbl(177948)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(177958)	definition(x(7) 177970 pid('CodeGenValueNode,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1993 6) nil 1) <Q: 1141> nil)
		getLiteral(true x(0))
		return
		endDefinition(177958)
lbl(177970)	definition(x(8) 177996 pid('CodeGenValueNode,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1993 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1141> 3)
		endDefinition(177970)
lbl(177996)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(178006)	definition(x(7) 178032 pid('CodeGenValueNode,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1996 6) nil 5) <Q: 1142> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(178006)
lbl(178032)	definition(x(8) 178085 pid('CodeGenValueNode,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1996 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1142> 11)
		endDefinition(178032)
lbl(178085)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(178095)	definition(x(7) 178181 pid('CodeGenValueNode,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1999 6) nil 7) <Q: 1143> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(178095)
lbl(178181)	definition(x(8) 178246 pid('CodeGenValueNode,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1999 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1143> 15)
		endDefinition(178181)
lbl(178246)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(178256)	definition(x(7) 178268 pid('CodeGenValueNode,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2006 6) nil 2) <Q: 1144> nil)
		unify(x(1) x(0))
		return
		endDefinition(178256)
lbl(178268)	definition(x(8) 178303 pid('CodeGenValueNode,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2006 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1144> 5)
		endDefinition(178268)
lbl(178303)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(178313)	definition(x(7) 178322 pid('CodeGenValueNode,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2009 6) nil 1) <Q: 1145> nil)
		return
		endDefinition(178313)
lbl(178322)	definition(x(8) 178348 pid('CodeGenValueNode,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2009 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1145> 3)
		endDefinition(178322)
lbl(178348)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178395)	definition(x(7) 178429 pid('CodeGenAtomNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2015 6) nil 4) <Q: 1146> nil)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178395)
lbl(178429)	definition(x(8) 178476 pid('CodeGenAtomNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2015 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1146> 9)
		endDefinition(178429)
lbl(178476)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178486)	definition(x(7) 178512 pid('CodeGenAtomNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2018 6) nil 4) <Q: 1147> nil)
		unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178486)
lbl(178512)	definition(x(8) 178559 pid('CodeGenAtomNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2018 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1147> 9)
		endDefinition(178512)
lbl(178559)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(178569)	definition(x(7) 178641 pid('CodeGenAtomNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2022 6) nil 4) <Q: 1148> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateLiteral 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178569)
lbl(178641)	definition(x(8) 178688 pid('CodeGenAtomNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2022 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1148> 9)
		endDefinition(178641)
lbl(178688)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(178698)	definition(x(7) 178715 pid('CodeGenAtomNode,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 2) <Q: 1149> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178698)
lbl(178715)	definition(x(8) 178741 pid('CodeGenAtomNode,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1149> 3)
		endDefinition(178715)
lbl(178741)	putRecord('#' [1 2 fast] x(12))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenAtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178784)	definition(x(7) 178818 pid('CodeGenIntNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2033 6) nil 4) <Q: 1150> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178784)
lbl(178818)	definition(x(8) 178865 pid('CodeGenIntNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2033 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1150> 9)
		endDefinition(178818)
lbl(178865)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178875)	definition(x(7) 178901 pid('CodeGenIntNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2036 6) nil 4) <Q: 1151> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178875)
lbl(178901)	definition(x(8) 178948 pid('CodeGenIntNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2036 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1151> 9)
		endDefinition(178901)
lbl(178948)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(178958)	definition(x(7) 179030 pid('CodeGenIntNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2040 6) nil 4) <Q: 1152> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178958)
lbl(179030)	definition(x(8) 179077 pid('CodeGenIntNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2040 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1152> 9)
		endDefinition(179030)
lbl(179077)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179118)	definition(x(7) 179152 pid('CodeGenFloatNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2048 6) nil 4) <Q: 1153> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179118)
lbl(179152)	definition(x(8) 179199 pid('CodeGenFloatNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2048 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1153> 9)
		endDefinition(179152)
lbl(179199)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(179209)	definition(x(7) 179235 pid('CodeGenFloatNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2051 6) nil 4) <Q: 1154> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179209)
lbl(179235)	definition(x(8) 179282 pid('CodeGenFloatNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2051 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1154> 9)
		endDefinition(179235)
lbl(179282)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(179292)	definition(x(7) 179364 pid('CodeGenFloatNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2055 6) nil 4) <Q: 1155> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179292)
lbl(179364)	definition(x(8) 179411 pid('CodeGenFloatNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2055 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1155> 9)
		endDefinition(179364)
lbl(179411)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFloatNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [reg] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(179458)	definition(x(7) 179482 pid('CodeGenVariable,setReg/fast' 1 pos('./compiler/CodeGen.oz' 2064 6) nil 3) <Q: 1156> nil)
		inlineAt(reg x(1) cache)
		move(x(0) x(2))
		getSelf(x(0))
		tailSendMsg(newVariableReg x(2) 2 cache)
		endDefinition(179458)
lbl(179482)	definition(x(8) 179508 pid('CodeGenVariable,setReg/slow' 1 pos('./compiler/CodeGen.oz' 2064 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1156> 3)
		endDefinition(179482)
lbl(179508)	putRecord('#' [1 2 fast] x(9))
		setConstant(setReg)
		setValue(x(8))
		setValue(x(7))
lbl(179518)	definition(x(7) 179551 pid('CodeGenVariable,setFreshReg/fast' 1 pos('./compiler/CodeGen.oz' 2067 6) nil 3) <Q: 1157> nil)
		allocateL1
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(0) x(1))
		sendMsg(newVariableReg x(2) 2 cache)
		move(y(0) x(0))
		inlineAssign(reg x(0) cache)
		deAllocateL1
		return
		endDefinition(179518)
lbl(179551)	definition(x(8) 179577 pid('CodeGenVariable,setFreshReg/slow' 1 pos('./compiler/CodeGen.oz' 2067 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1157> 3)
		endDefinition(179551)
lbl(179577)	putRecord('#' [1 2 fast] x(10))
		setConstant(setFreshReg)
		setValue(x(8))
		setValue(x(7))
lbl(179587)	definition(x(7) 179604 pid('CodeGenVariable,reg/fast' 1 pos('./compiler/CodeGen.oz' 2070 6) nil 2) <Q: 1158> nil)
		inlineAt(reg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179587)
lbl(179604)	definition(x(8) 179630 pid('CodeGenVariable,reg/slow' 1 pos('./compiler/CodeGen.oz' 2070 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1158> 3)
		endDefinition(179604)
lbl(179630)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179668)	definition(x(7) 179709 pid('CodeGenVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2076 6) nil 4) <Q: 1159> nil)
		inlineAt(value x(1) cache)
		testBI('Value.isDet' [x(1)]#[x(2)] 179706)
		inlineAt(value x(1) cache)
		getSelf(x(2))
		testBI('Value.\'==\'' [x(1) x(2)]#[x(3)] 179695)
		return
lbl(179695)	inlineAt(value x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(179706)	return
		endDefinition(179668)
lbl(179709)	definition(x(8) 179735 pid('CodeGenVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2076 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1159> 3)
		endDefinition(179709)
lbl(179735)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(179745)	definition(x(7) 179764 pid('CodeGenVariableOccurrence,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2084 6) nil 7) <Q: 1160> nil)
		inlineAt(value x(6) cache)
		tailSendMsg(codeGenApplication x(6) 6 cache)
		endDefinition(179745)
lbl(179764)	definition(x(8) 179823 pid('CodeGenVariableOccurrence,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2084 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1160> 13)
		endDefinition(179764)
lbl(179823)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
lbl(179833)	definition(x(7) 179931 pid('CodeGenVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 2087 6) nil 5) <Q: 1161> [y(5)])
		allocateL3
		inlineAt(value x(1) cache)
		move(x(0) y(0))
		testBI('Value.isDet' [x(1)]#[x(2)] 179914)
lbl(179852)	testBI('Object.is' [x(1)]#[x(2)] 179914)
lbl(179856)	move(g(0) x(2))
		inlineDot(x(2) imAVariableOccurrence x(3) cache)
		testBI('Value.hasFeature' [x(1) x(3)]#[x(4)] 179914)
lbl(179869)	createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(y(2) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 179899)
		unify(y(0) y(2))
		deAllocateL3
		return
lbl(179899)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
lbl(179914)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179833)
lbl(179931)	definition(x(8) 179957 pid('CodeGenVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 2087 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1161> 3)
		endDefinition(179931)
lbl(179957)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(179969)	definition(x(7) 180244 pid('CodeGenVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2102 6) nil 4) <Q: 1162> [y(46)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 180065)
		testBI('Number.is' [x(0)]#[x(1)] 180032)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
		branch(180065)
lbl(180032)	testBI('Literal.is' [x(0)]#[x(1)] 180065)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
lbl(180065)	move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 180074)
		deAllocateL5
		return
lbl(180074)	createVariableMove(y(3) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 180196)
		testBI('Number.is' [x(0)]#[x(1)] 180120)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180120)	testBI('Literal.is' [x(0)]#[x(1)] 180150)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180150)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
lbl(180196)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(179969)
lbl(180244)	definition(x(8) 180291 pid('CodeGenVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2102 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1162> 9)
		endDefinition(180244)
lbl(180291)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(180301)	definition(x(7) 180389 pid('CodeGenVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2133 6) nil 4) <Q: 1163> [y(46)])
		allocateL2
		unify(x(1) x(2))
		move(x(3) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 180369)
		testBI('Number.is' [x(0)]#[x(1)] 180339)
		getRecord(number 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180339)	testBI('Literal.is' [x(0)]#[x(1)] 180351)
		getRecord(literal 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180351)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
lbl(180369)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(180301)
lbl(180389)	definition(x(8) 180436 pid('CodeGenVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2133 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1163> 9)
		endDefinition(180389)
lbl(180436)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(180446)	definition(x(7) 180463 pid('CodeGenVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2148 6) nil 4) <Q: 1164> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(180446)
lbl(180463)	definition(x(8) 180510 pid('CodeGenVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2148 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1164> 9)
		endDefinition(180463)
lbl(180510)	putRecord('#' [1 2 fast] x(14))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(180520)	definition(x(7) 180567 pid('CodeGenVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2152 6) nil 2) <Q: 1165> [y(46)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 180560)
		testBI('Number.is' [x(0)]#[x(1)] 180552)
		getLiteral(true y(0))
		deAllocateL2
		return
lbl(180552)	callBI('Literal.is' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(180560)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(180520)
lbl(180567)	definition(x(8) 180593 pid('CodeGenVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2152 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1165> 3)
		endDefinition(180567)
lbl(180593)	putRecord('#' [1 2 fast] x(15))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180603)	definition(x(7) 180629 pid('CodeGenVariableOccurrence,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 2156 6) nil 5) <Q: 1166> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(180603)
lbl(180629)	definition(x(8) 180682 pid('CodeGenVariableOccurrence,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2156 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1166> 11)
		endDefinition(180629)
lbl(180682)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180692)	definition(x(7) 180778 pid('CodeGenVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2159 6) nil 7) <Q: 1167> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(180692)
lbl(180778)	definition(x(8) 180843 pid('CodeGenVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2159 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1167> 15)
		endDefinition(180778)
lbl(180843)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(180853)	definition(x(7) 180872 pid('CodeGenVariableOccurrence,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2166 6) nil 2) <Q: 1168> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(180853)
lbl(180872)	definition(x(8) 180898 pid('CodeGenVariableOccurrence,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2166 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1168> 3)
		endDefinition(180872)
lbl(180898)	putRecord('#' [1 2 fast] x(18))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(180908)	definition(x(7) 180920 pid('CodeGenVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2169 6) nil 2) <Q: 1169> nil)
		unify(x(1) x(0))
		return
		endDefinition(180908)
lbl(180920)	definition(x(8) 180955 pid('CodeGenVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2169 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1169> 5)
		endDefinition(180920)
lbl(180955)	putRecord('#' [1 2 fast] x(19))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(180965)	definition(x(7) 180974 pid('CodeGenVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2172 6) nil 1) <Q: 1170> nil)
		return
		endDefinition(180965)
lbl(180974)	definition(x(8) 181000 pid('CodeGenVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1170> 3)
		endDefinition(180974)
lbl(181000)	putRecord('#' [1 2 fast] x(20))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181059)	definition(x(7) 181071 pid('CodeGenPatternVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2178 6) nil 1) <Q: 1171> nil)
		getLiteral(false x(0))
		return
		endDefinition(181059)
lbl(181071)	definition(x(8) 181097 pid('CodeGenPatternVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1171> 3)
		endDefinition(181071)
lbl(181097)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(181109)	definition(x(7) 181158 pid('CodeGenPatternVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2181 6) nil 7) <Q: 1172> [y(1)])
		allocateL4
		getRecord(vGetVariable 3 x(2))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(3))
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		getSelf(x(2))
		sendMsg(reg x(2) 1 cache)
		unify(y(1) y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true addPatternVs true 2) 0)
		endDefinition(181109)
lbl(181158)	definition(x(8) 181223 pid('CodeGenPatternVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2181 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1172> 15)
		endDefinition(181158)
lbl(181223)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(181233)	definition(x(7) 181300 pid('CodeGenPatternVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2187 6) nil 4) <Q: 1173> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 181271 181287)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(181271)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
lbl(181287)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181233)
lbl(181300)	definition(x(8) 181335 pid('CodeGenPatternVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2187 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1173> 5)
		endDefinition(181300)
lbl(181335)	putRecord('#' [1 2 fast] x(11))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(181345)	definition(x(7) 181399 pid('CodeGenPatternVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2194 6) nil 5) <Q: 1174> nil)
		allocateL5
		inlineAt(variable x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(4) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(181345)
lbl(181399)	definition(x(8) 181446 pid('CodeGenPatternVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2194 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1174> 9)
		endDefinition(181399)
lbl(181446)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181489)	definition(x(7) 181506 pid('CodeGenToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2200 6) nil 2) <Q: 1175> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(181489)
lbl(181506)	definition(x(8) 181532 pid('CodeGenToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2200 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1175> 3)
		endDefinition(181506)
lbl(181532)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenToken' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181569)	definition(x(7) 181606 pid('CodeGenNameToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2206 6) nil 2) <Q: 1176> nil)
		inlineAt(isToplevel x(1) cache)
		testBool(x(1) 181592 181593)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
lbl(181592)	return
lbl(181593)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2207)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181569)
lbl(181606)	definition(x(8) 181632 pid('CodeGenNameToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2206 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1176> 3)
		endDefinition(181606)
lbl(181632)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181669)	definition(x(7) 181799 pid('CodeGenProcedureToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2212 6) nil 7) <Q: 1177> nil)
		allocateL5
		getSelf(x(3))
		inlineDot(x(3) predicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Value.isDet' [x(3)]#[x(6)] 181705)
lbl(181701)	testLiteral(x(3) unit 181754)
lbl(181705)	getRecord(vCall 5 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(4))
		sendMsg(reg y(0) 1 cache)
lbl(181725)	definition(x(1) 181745 pid('' 2 pos('./compiler/CodeGen.oz' 2220 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181725)
lbl(181745)	moveMoveYXYX(y(2) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(181754)	getRecord(vFastCall 5 y(3))
		unifyVoid(1)
		unifyValVar(x(3) x(4))
		unifyValue(y(1))
		unifyValue(y(4))
lbl(181767)	definition(x(1) 181787 pid('' 2 pos('./compiler/CodeGen.oz' 2216 42) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181767)
lbl(181787)	move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(181669)
lbl(181799)	definition(x(8) 181858 pid('CodeGenProcedureToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2212 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1177> 13)
		endDefinition(181799)
lbl(181858)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: ClauseBodyShared>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(181901)	definition(x(7) 181982 pid('CodeGenClauseBodyToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2227 6) nil 6) <Q: 1178> nil)
		getLiteral(nil x(2))
		getSelf(x(0))
		inlineDot(x(0) <M: ClauseBodyShared> x(1) cache)
		unify(x(1) x(4))
		getLiteral(nil x(5))
		testBI('Value.isFree' [x(4)]#[x(0)] 181979)
		allocateL3
		getRecord(vShared 4 x(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(3) y(2))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(4))
		callBI('Cell.new' [x(4)]#[x(0)])
		unify(x(0) y(0))
		getSelf(x(4))
		inlineDot(x(4) clauseBodyStatements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<Q: 1022> 9)
lbl(181979)	return
		endDefinition(181901)
lbl(181982)	definition(x(8) 182041 pid('CodeGenClauseBodyToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2227 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1178> 13)
		endDefinition(181982)
lbl(182041)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(182075)	definition(x(7) 183260 pid('CodeGenBuiltinToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2241 6) nil 8) <Q: 1179> [y(4) y(5)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) printName x(6) cache)
		inlineAt(value x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(7) x(0))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(5) ht(182607 [onScalar('Object.new' 182122) onScalar('Number.\'+\'' 182217) onScalar('Number.\'-\'' 182478)]))
lbl(182122)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(7))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(8))
		unifyLiteral(nil)
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(2) 1 cache)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Object.new')
		unifyVariable(x(0))
		unifyValVar(y(0) y(2))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(10))
		unifyVariable(x(3))
		getList(x(3))
		unifyValue(y(9))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(10) x(0))
		sendMsg(reg y(7) 1 cache)
		getRecord(vUnify 4 y(2))
		unifyVoid(1)
		unifyValVar(y(9) x(0))
		unifyValue(y(4))
		sendMsg(reg y(8) 1 cache)
		branch(183204)
lbl(182217)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(2) 1 cache)
		move(y(8) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 182344)
		match(y(8) ht(182344 [onScalar(1 182254) onScalar(~1 182300)]))
lbl(182254)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'+1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(182344)
lbl(182300)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'-1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
lbl(182344)	move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 182353)
		branch(183204)
lbl(182353)	createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		move(y(8) x(0))
		callBI('Value.isDet' [x(0)]#[x(1)])
		testBool(x(1) 183204 182467)
		match(y(8) ht(183204 [onScalar(1 182375) onScalar(~1 182421)]))
lbl(182375)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'+1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183204)
lbl(182421)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'-1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183204)
lbl(182467)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2271)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182478)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(7) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183204)
		match(y(7) ht(183204 [onScalar(1 182515) onScalar(~1 182561)]))
lbl(182515)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'-1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183204)
lbl(182561)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('Int.\'+1\'')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183204)
lbl(182607)	move(y(2) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(1) cache)
		testBool(x(1) 182622 183193)
		branch(183204)
lbl(182622)	match(y(5) ht(183204 [onScalar('Record.\'.\'' 182625) onScalar('Object.\'@\'' 182842) onScalar('Object.\'<-\'' 182896) onScalar('Object.\',\'' 182950)]))
lbl(182625)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(8) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183204)
lbl(182659)	testBI('Literal.is' [x(0)]#[x(1)] 182836)
lbl(182663)	createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		createVariable(y(10))
		move(y(9) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 182701)
		testBI('Record.is' [x(0)]#[x(1)] 182696)
		move(y(8) x(1))
		callBI('Value.hasFeature' [x(0) x(1)]#[x(2)])
		unify(x(2) y(10))
		branch(182704)
lbl(182696)	getLiteral(false y(10))
		branch(182704)
lbl(182701)	getLiteral(false y(10))
lbl(182704)	testBool(y(10) 182782 182825)
lbl(182708)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		testBI('Object.is' [x(2)]#[x(3)] 182782)
lbl(182720)	callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) imAVariableOccurrence x(4) cache)
		testBI('Value.hasFeature' [x(2) x(4)]#[x(5)] 182782)
lbl(182736)	callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		createVariableMove(y(11) x(0))
		sendMsg(reg x(2) 1 cache)
		move(y(11) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 182782)
lbl(182755)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(4)])
		move(y(2) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		sendMsg(makeEquation y(7) 4 cache)
		branch(183204)
lbl(182782)	getRecord(vInlineDot 7 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(8) y(2))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		move(y(2) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183204)
lbl(182825)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2308)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182836)	testBI('Int.is' [x(0)]#[x(1)] 183204)
		branch(182663)
lbl(182842)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183204)
lbl(182870)	testBI('Literal.is' [x(0)]#[x(1)] 183204)
lbl(182874)	getRecord(vInlineAt 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183204)
lbl(182896)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183204)
lbl(182924)	testBI('Literal.is' [x(0)]#[x(1)] 183204)
lbl(182928)	getRecord(vInlineAssign 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183204)
lbl(182950)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(7) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183204)
lbl(182978)	testBI('Record.is' [x(0)]#[x(1)] 183204)
lbl(182982)	createVariable(y(8))
		createVariable(y(9))
		testBI('Tuple.is' [x(0)]#[x(1)] 183039)
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(182996)	definition(x(3) 183020 pid('' 3 pos('./compiler/CodeGen.oz' 2345 10) nil 4) unit [y(7)])
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(g(0) x(0))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(182996)
lbl(183020)	moveMoveYXYX(y(8) x(0) y(9) x(5))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		branch(183071)
lbl(183039)	callBI('Record.arity' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(183045)	definition(x(1) 183063 pid('' 2 pos('./compiler/CodeGen.oz' 2348 33) nil 4) unit [y(7)])
		move(g(0) x(2))
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(183045)
lbl(183063)	moveMoveYXYX(y(8) x(0) y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(183071)	moveMoveYXYX(y(9) x(0) y(2) x(1))
		move(y(3) x(3))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(4))
		genFastCall(<Q: 1039> 10)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(6) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(9) 183147 183182)
		getRecord(vGenCall 8 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(true)
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183204)
lbl(183147)	getRecord(vApplMeth 7 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183204)
lbl(183182)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183193)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183204)	move(y(3) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 183213)
		deAllocateL
		return
lbl(183213)	definition(x(1) 183233 pid('' 2 pos('./compiler/CodeGen.oz' 2367 28) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(183213)
lbl(183233)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(4))
		deAllocateL
		return
		endDefinition(182075)
lbl(183260)	definition(x(8) 183319 pid('CodeGenBuiltinToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2241 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1179> 13)
		endDefinition(183260)
lbl(183319)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBuiltinToken' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(36))
		unifyValue(y(22))
		unifyValue(y(17))
		unifyValue(y(42))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(4))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(28))
		unifyValue(y(40))
		unifyValue(y(16))
		unifyValue(y(50))
		unifyValue(y(13))
		unifyValue(y(10))
		unifyValue(y(14))
		unifyValue(y(38))
		unifyValue(y(23))
		unifyValue(y(12))
		unifyValue(y(21))
		unifyValue(y(34))
		unifyValue(y(44))
		unifyValue(y(15))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(43))
		unifyValue(y(27))
		unifyValue(y(31))
		unifyValue(y(6))
		unifyValue(y(7))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(48))
		unifyValue(y(24))
		unifyValue(y(32))
		unifyValue(y(37))
		unifyValue(y(2))
		unifyValue(y(20))
		unifyValue(y(1))
		unifyValue(y(49))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(0))
		unifyValue(y(9))
		unifyValue(y(25))
		unifyValue(y(47))
		unifyValue(y(26))
		unifyValue(y(8))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(129093)
lbl(183464)	tailCall(x(2) 0)
		endDefinition(126837)
lbl(183469)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(5))
		setConstant(isBuiltin)
		setConstant(nil)
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putRecord(info [type] x(6))
		setConstant(nil)
		putList(x(9))
		setConstant(literals)
		setConstant(nil)
		putList(x(8))
		setConstant(procs)
		setValue(x(9))
		putRecord(info [type] x(7))
		setValue(x(8))
		putList(x(11))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(10))
		setValue(x(11))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'RunTime' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(6))
		setValue(x(7))
		setValue(x(10))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		createVariableMove(y(95) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(183805)	definition(x(2) 216409 pid('' 2 pos('./compiler/Core.oz' 42 0) nil 4) <P: 1180> [y(144)])
		putList(x(2))
		setPredicateRef(<Q: 1181>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1182>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1183>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1184>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1185>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1186>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1187>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1188>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1189>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1190>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1191>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1192>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1193>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1194>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1195>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1196>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1197>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1198>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1199>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1200>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1201>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1202>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1203>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1204>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1205>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1206>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1207>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1208>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1209>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1210>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1211>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1212>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1213>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1214>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1215>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1216>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1217>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1218>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1219>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1220>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1221>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1222>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1223>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1224>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1225>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1226>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1227>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1228>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1229>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1230>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1231>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1232>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1233>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1234>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1235>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1236>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1237>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1238>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1239>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1240>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1241>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1242>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1243>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1244>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1245>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1246>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1247>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1248>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1249>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1250>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1251>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1252>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1253>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1254>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CheckUse>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1255>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1256>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1257>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1258>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1259>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1260>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1261>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1262>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1263>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1264>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1265>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1266>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1267>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1268>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1269>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1270>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1271>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1272>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1273>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1274>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1275>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1276>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1277>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1278>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1279>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1280>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1281>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1282>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1283>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1284>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1285>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1286>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1287>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1288>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1289>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1290>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1291>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1292>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1294>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputApplication>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1327>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1328>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1329>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1330>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1331>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1332>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1341>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1342>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1343>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1344>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1345>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1346>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1347>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1348>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1349>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1350>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1351>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1352>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1353>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1354>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1355>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1356>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1357>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1358>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1359>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1360>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1361>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1362>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1363>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1364>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1365>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1366>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1367>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1368>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1369>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1370>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1371>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1372>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1373>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1374>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1375>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1376>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1377>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1378>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1379>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1380>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1381>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1391>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsDenied>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1392>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1393>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1394>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1395>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputValue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1403>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1404>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1405>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1406>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1407>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1408>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1409>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1410>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1411>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1412>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1413>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1414>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1415>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1416>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1417>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1418>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1419>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1420>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1421>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1422>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1423>)
		setValue(x(2))
lbl(185323)	definitionCopy(x(3) 216404 pid('/body' 0 pos('./compiler/Core.oz' 42 0) [once] 23) unit [x(0) g(0) x(1)])
		allocateL(67)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'StaticAnalysis' x(2) cache)
		inlineDot(x(0) 'CodeGen' x(3) cache)
lbl(185352)	definition(x(7) 185440 pid('VariableUnion' 3 pos('./compiler/Annotate.oz' 46 3) nil 3) <Q: 1181> nil)
		match(x(0) ht(185425 [onScalar(nil 185361) onRecord('|' 2 185365)]))
lbl(185361)	unify(x(2) x(1))
		return
lbl(185365)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 185399 185414)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185399)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185414)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(50)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(185425)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(54)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185352)
lbl(185440)	definition(x(7) 185506 pid('AnnotateGlobalVarsList' 4 pos('./compiler/Annotate.oz' 57 3) nil 5) <Q: 1182> nil)
		match(x(0) ht(185491 [onScalar(nil 185449) onRecord('|' 2 185453)]))
lbl(185449)	unify(x(2) x(3))
		return
lbl(185453)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
lbl(185491)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(63)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185440)
lbl(185506)	definition(x(7) 185563 pid('MarkFirstList' 3 pos('./compiler/Annotate.oz' 66 3) nil 4) <Q: 1183> nil)
		match(x(0) ht(185548 [onScalar(nil 185515) onRecord('|' 2 185516)]))
lbl(185515)	return
lbl(185516)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(markFirst x(3) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1183> 7)
lbl(185548)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(71)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185506)
lbl(185563)	createVariable(x(7))
lbl(185565)	definition(x(8) 185674 pid('MarkFirstClauses' 6 pos('./compiler/Annotate.oz' 74 3) nil 7) <Q: 1184> [x(7)])
		allocateL7
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYYX(x(5) y(5) y(1) x(0))
		moveMoveYXYX(y(2) x(1) y(4) x(3))
		move(y(5) x(4))
		createVariableMove(y(6) x(2))
		sendMsg(markFirstClause x(6) 5 cache)
lbl(185610)	definition(x(1) 185660 pid('' 3 pos('./compiler/Annotate.oz' 78 3) nil 6) unit [y(1) y(2) y(4) y(5) g(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(3))
		move(g(3) x(4))
		createVariableMove(y(2) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(4) false '' true 3) 0)
		endDefinition(185610)
lbl(185660)	moveMoveYXYX(y(0) x(0) y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		genFastCall(<P: 30> 9)
		endDefinition(185565)
lbl(185674)	definition(x(8) 185725 pid('SetUninitVars' 1 pos('./compiler/Annotate.oz' 85 3) nil 2) <Q: 1185> nil)
lbl(185680)	definition(x(1) 185720 pid('' 1 pos('./compiler/Annotate.oz' 87 7) nil 2) unit nil)
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getUse y(0) 1 cache)
		testLiteral(y(1) unused 185716)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setUse x(1) 1 cache)
lbl(185716)	deAllocateL2
		return
		endDefinition(185680)
lbl(185720)	genFastCall(<P: 34> 5)
		endDefinition(185674)
lbl(185725)	definition(x(8) 185762 pid('GetUses' 2 pos('./compiler/Annotate.oz' 92 3) nil 4) <Q: 1186> nil)
lbl(185731)	definition(x(3) 185751 pid('' 2 pos('./compiler/Annotate.oz' 93 14) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getUse x(2) 1 cache)
		endDefinition(185731)
lbl(185751)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(185725)
lbl(185762)	definition(x(8) 185815 pid('SetUses' 2 pos('./compiler/Annotate.oz' 96 3) nil 3) <Q: 1187> nil)
		match(x(0) ht(185800 [onScalar(nil 185771) onRecord('|' 2 185775)]))
lbl(185771)	getLiteral(nil x(1))
		return
lbl(185775)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(setUse x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
lbl(185800)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(102)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185762)
lbl(185815)	putRecord(use [linear multiple unused wildcard] x(4))
		setConstant(linear)
		setConstant(multiple)
		setConstant(linear)
		setConstant(linear)
		putRecord(use [linear multiple unused wildcard] x(5))
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		putRecord(use [linear multiple unused wildcard] x(6))
		setConstant(linear)
		setConstant(multiple)
		setConstant(unused)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(9))
		setConstant(linear)
		setConstant(multiple)
		setConstant(wildcard)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(8))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(9))
lbl(185875)	definition(x(4) 185913 pid('UsesMax' 3 pos('./compiler/Annotate.oz' 115 6) nil 5) <Q: 1188> [g(1) x(8)])
lbl(185881)	definition(x(4) 185902 pid('' 3 pos('./compiler/Annotate.oz' 117 24) nil 5) unit [g(1)])
		move(g(0) x(3))
		callBI('Record.\'.\'' [x(3) x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(4) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(185881)
lbl(185902)	move(x(2) x(3))
		move(x(4) x(2))
		genFastCall(<P: 73> 9)
		endDefinition(185875)
lbl(185913)	unify(x(4) x(7))
lbl(185916)	definition(x(7) 185953 pid('CheckUses' 3 pos('./compiler/Annotate.oz' 121 3) nil 4) <Q: 1189> nil)
lbl(185922)	definition(x(3) 185945 pid('' 1 pos('./compiler/Annotate.oz' 122 17) nil 3) unit [x(1) x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(185922)
lbl(185945)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(185916)
lbl(185953)	definition(x(7) 185965 pid('AnnotateDefaults,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 126 6) nil 3) <Q: 1190> nil)
		unify(x(1) x(2))
		return
		endDefinition(185953)
lbl(185965)	definition(x(8) 186006 pid('AnnotateDefaults,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 126 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1190> 7)
		endDefinition(185965)
lbl(186006)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186016)	definition(x(7) 186025 pid('AnnotateDefaults,markFirst/fast' 2 pos('./compiler/Annotate.oz' 129 6) nil 2) <Q: 1191> nil)
		return
		endDefinition(186016)
lbl(186025)	definition(x(8) 186060 pid('AnnotateDefaults,markFirst/slow' 1 pos('./compiler/Annotate.oz' 129 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1191> 5)
		endDefinition(186025)
lbl(186060)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(9))
		setValue(x(10))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(7) x(1))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefaults' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStatement' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186134)	definition(x(7) 186153 pid('AnnotateTypeOf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 138 6) nil 4) <Q: 1192> nil)
		inlineAt(res x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186134)
lbl(186153)	definition(x(8) 186194 pid('AnnotateTypeOf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 138 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1192> 7)
		endDefinition(186153)
lbl(186194)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186204)	definition(x(7) 186223 pid('AnnotateTypeOf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 141 6) nil 3) <Q: 1193> nil)
		inlineAt(res x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186204)
lbl(186223)	definition(x(8) 186258 pid('AnnotateTypeOf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1193> 5)
		endDefinition(186223)
lbl(186258)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTypeOf' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186297)	definition(x(7) 186325 pid('AnnotateStepPoint,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 147 6) nil 5) <Q: 1194> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(186297)
lbl(186325)	definition(x(8) 186366 pid('AnnotateStepPoint,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 147 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1194> 7)
		endDefinition(186325)
lbl(186366)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186376)	definition(x(7) 186401 pid('AnnotateStepPoint,markFirst/fast' 2 pos('./compiler/Annotate.oz' 150 6) nil 4) <Q: 1195> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(186376)
lbl(186401)	definition(x(8) 186436 pid('AnnotateStepPoint,markFirst/slow' 1 pos('./compiler/Annotate.oz' 150 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1195> 5)
		endDefinition(186401)
lbl(186436)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStepPoint' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186475)	definition(x(7) 186528 pid('AnnotateDeclaration,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 156 6) nil 5) <Q: 1196> nil)
		allocateL4
		inlineAt(statements x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
		endDefinition(186475)
lbl(186528)	definition(x(8) 186569 pid('AnnotateDeclaration,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 156 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1196> 7)
		endDefinition(186528)
lbl(186569)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186579)	definition(x(7) 186655 pid('AnnotateDeclaration,markFirst/fast' 2 pos('./compiler/Annotate.oz' 159 6) nil 4) <Q: 1197> nil)
		allocateL2
		inlineAt(localVars x(2) cache)
lbl(186591)	definition(x(3) 186611 pid('' 1 pos('./compiler/Annotate.oz' 160 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(186591)
lbl(186611)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(1) x(2))
		putConstant('local variable' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
		endDefinition(186579)
lbl(186655)	definition(x(8) 186690 pid('AnnotateDeclaration,markFirst/slow' 1 pos('./compiler/Annotate.oz' 159 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1197> 5)
		endDefinition(186655)
lbl(186690)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDeclaration' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateSkipNode' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186756)	definition(x(7) 186804 pid('AnnotateEquation,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 170 6) nil 4) <Q: 1198> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186756)
lbl(186804)	definition(x(8) 186845 pid('AnnotateEquation,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 170 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1198> 7)
		endDefinition(186804)
lbl(186845)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186855)	definition(x(7) 186897 pid('AnnotateEquation,markFirst/fast' 2 pos('./compiler/Annotate.oz' 174 6) nil 3) <Q: 1199> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186855)
lbl(186897)	definition(x(8) 186932 pid('AnnotateEquation,markFirst/slow' 1 pos('./compiler/Annotate.oz' 174 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1199> 5)
		endDefinition(186897)
lbl(186932)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquation' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186971)	definition(x(7) 187081 pid('AnnotateConstruction,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 181 6) nil 4) <Q: 1200> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(187002)	definition(x(1) 187070 pid('' 3 pos('./compiler/Annotate.oz' 184 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 187053)
lbl(187013)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(187053)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(187002)
lbl(187070)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(186971)
lbl(187081)	definition(x(8) 187122 pid('AnnotateConstruction,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 181 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1200> 7)
		endDefinition(187081)
lbl(187122)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187132)	definition(x(7) 187226 pid('AnnotateConstruction,markFirst/fast' 2 pos('./compiler/Annotate.oz' 193 6) nil 3) <Q: 1201> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(187160)	definition(x(1) 187220 pid('' 1 pos('./compiler/Annotate.oz' 196 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 187203)
lbl(187171)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(187203)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(187160)
lbl(187220)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(187132)
lbl(187226)	definition(x(8) 187261 pid('AnnotateConstruction,markFirst/slow' 1 pos('./compiler/Annotate.oz' 193 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1201> 5)
		endDefinition(187226)
lbl(187261)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateConstruction' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(187306)	definition(x(7) 187441 pid('AnnotateDefinition,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 209 6) nil 4) <Q: 1202> nil)
		allocateL5
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		inlineAt(formalArgs x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(187371)	definition(x(1) 187427 pid('' 3 pos('./compiler/Annotate.oz' 214 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 187406 187414)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(187406)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(187414)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(215)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187371)
lbl(187427)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(187306)
lbl(187441)	definition(x(8) 187482 pid('AnnotateDefinition,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1202> 7)
		endDefinition(187441)
lbl(187482)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187492)	definition(x(7) 187606 pid('AnnotateDefinition,markFirst/fast' 2 pos('./compiler/Annotate.oz' 220 6) nil 3) <Q: 1203> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
lbl(187536)	definition(x(1) 187556 pid('' 1 pos('./compiler/Annotate.oz' 223 22) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(187536)
lbl(187556)	genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 187591 187593)
		inlineAt(formalArgs x(0) cache)
		move(y(1) x(2))
		putConstant('formal parameter' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
lbl(187591)	deAllocateL2
		return
lbl(187593)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(225)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187492)
lbl(187606)	definition(x(8) 187641 pid('AnnotateDefinition,markFirst/slow' 1 pos('./compiler/Annotate.oz' 220 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1203> 5)
		endDefinition(187606)
lbl(187641)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefinition' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFunctionDefinition' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClauseBody' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(187725)	definition(x(7) 187770 pid('AnnotateApplication,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 236 6) nil 4) <Q: 1204> nil)
		allocateL3
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(187725)
lbl(187770)	definition(x(8) 187811 pid('AnnotateApplication,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 236 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1204> 7)
		endDefinition(187770)
lbl(187811)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187821)	definition(x(7) 187860 pid('AnnotateApplication,markFirst/fast' 2 pos('./compiler/Annotate.oz' 240 6) nil 3) <Q: 1205> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(187821)
lbl(187860)	definition(x(8) 187895 pid('AnnotateApplication,markFirst/slow' 1 pos('./compiler/Annotate.oz' 240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1205> 5)
		endDefinition(187860)
lbl(187895)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateApplication' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(187940)	definition(x(7) 188055 pid('AnnotateBoolCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 248 6) nil 4) <Q: 1206> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		inlineAt(alternative x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(2) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(187940)
lbl(188055)	definition(x(8) 188096 pid('AnnotateBoolCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 248 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1206> 7)
		endDefinition(188055)
lbl(188096)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188106)	definition(x(7) 188240 pid('AnnotateBoolCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 256 6) nil 6) <Q: 1207> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(consequent x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(3) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(alternative x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(globalVars x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(188106)
lbl(188240)	definition(x(8) 188275 pid('AnnotateBoolCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 256 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1207> 5)
		endDefinition(188240)
lbl(188275)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolCase' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188317)	definition(x(7) 188442 pid('AnnotateBoolClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 270 6) nil 5) <Q: 1208> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(188372)	definition(x(1) 188428 pid('' 3 pos('./compiler/Annotate.oz' 274 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 188407 188415)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(188407)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(188415)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(275)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(188372)
lbl(188428)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(188317)
lbl(188442)	definition(x(8) 188483 pid('AnnotateBoolClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 270 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1208> 7)
		endDefinition(188442)
lbl(188483)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188493)	definition(x(7) 188510 pid('AnnotateBoolClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 280 6) nil 2) <Q: 1209> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(188493)
lbl(188510)	definition(x(8) 188536 pid('AnnotateBoolClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1209> 3)
		endDefinition(188510)
lbl(188536)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188546)	definition(x(7) 188597 pid('AnnotateBoolClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 283 6) nil 6) <Q: 1210> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(188546)
lbl(188597)	definition(x(8) 188650 pid('AnnotateBoolClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 283 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1210> 11)
		endDefinition(188597)
lbl(188650)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolClause' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188694)	definition(x(7) 188861 pid('AnnotatePatternCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 292 6) nil 4) <Q: 1211> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188725)	definition(x(1) 188748 pid('' 3 pos('./compiler/Annotate.oz' 295 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(188725)
lbl(188748)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188781)	definition(x(1) 188816 pid('' 3 pos('./compiler/Annotate.oz' 300 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(188781)
lbl(188816)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(188694)
lbl(188861)	definition(x(8) 188902 pid('AnnotatePatternCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 292 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1211> 7)
		endDefinition(188861)
lbl(188902)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188912)	definition(x(7) 189029 pid('AnnotatePatternCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 304 6) nil 6) <Q: 1212> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(188912)
lbl(189029)	definition(x(8) 189064 pid('AnnotatePatternCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1212> 5)
		endDefinition(189029)
lbl(189064)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternCase' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars patternGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(189108)	definition(x(7) 189276 pid('AnnotatePatternClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 319 6) nil 5) <Q: 1213> nil)
		allocateL6
		inlineAt(pattern x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(patternGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(5) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(189206)	definition(x(1) 189262 pid('' 3 pos('./compiler/Annotate.oz' 325 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 189241 189249)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(189241)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(189249)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(326)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(189206)
lbl(189262)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(189108)
lbl(189276)	definition(x(8) 189317 pid('AnnotatePatternClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 319 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1213> 7)
		endDefinition(189276)
lbl(189317)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189327)	definition(x(7) 189344 pid('AnnotatePatternClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 331 6) nil 2) <Q: 1214> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189327)
lbl(189344)	definition(x(8) 189370 pid('AnnotatePatternClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 331 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1214> 3)
		endDefinition(189344)
lbl(189370)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189380)	definition(x(7) 189397 pid('AnnotatePatternClause,getPatternGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 334 6) nil 2) <Q: 1215> nil)
		inlineAt(patternGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189380)
lbl(189397)	definition(x(8) 189423 pid('AnnotatePatternClause,getPatternGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 334 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1215> 3)
		endDefinition(189397)
lbl(189423)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPatternGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189433)	definition(x(7) 189549 pid('AnnotatePatternClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 337 6) nil 7) <Q: 1216> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(189445)	definition(x(6) 189465 pid('' 1 pos('./compiler/Annotate.oz' 338 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(189445)
lbl(189465)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(189433)
lbl(189549)	definition(x(8) 189602 pid('AnnotatePatternClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 337 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1216> 11)
		endDefinition(189549)
lbl(189602)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternClause' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(189642)	definition(x(7) 189752 pid('AnnotateRecordPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 348 6) nil 4) <Q: 1217> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(189673)	definition(x(1) 189741 pid('' 3 pos('./compiler/Annotate.oz' 351 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 189724)
lbl(189684)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(189724)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(189673)
lbl(189741)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(189642)
lbl(189752)	definition(x(8) 189793 pid('AnnotateRecordPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 348 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1217> 7)
		endDefinition(189752)
lbl(189793)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189803)	definition(x(7) 189897 pid('AnnotateRecordPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 360 6) nil 3) <Q: 1218> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(189831)	definition(x(1) 189891 pid('' 1 pos('./compiler/Annotate.oz' 363 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 189874)
lbl(189842)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(189874)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(189831)
lbl(189891)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(189803)
lbl(189897)	definition(x(8) 189932 pid('AnnotateRecordPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 360 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1218> 5)
		endDefinition(189897)
lbl(189932)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRecordPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(189971)	definition(x(7) 190019 pid('AnnotateEquationPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 375 6) nil 4) <Q: 1219> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(189971)
lbl(190019)	definition(x(8) 190060 pid('AnnotateEquationPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 375 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1219> 7)
		endDefinition(190019)
lbl(190060)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190070)	definition(x(7) 190112 pid('AnnotateEquationPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 379 6) nil 3) <Q: 1220> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(190070)
lbl(190112)	definition(x(8) 190147 pid('AnnotateEquationPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 379 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1220> 5)
		endDefinition(190112)
lbl(190147)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquationPattern' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAbstractElse' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190216)	definition(x(7) 190341 pid('AnnotateElseNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 389 6) nil 5) <Q: 1221> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(190271)	definition(x(1) 190327 pid('' 3 pos('./compiler/Annotate.oz' 393 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 190306 190314)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(190306)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(190314)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(190271)
lbl(190327)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190216)
lbl(190341)	definition(x(8) 190382 pid('AnnotateElseNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 389 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1221> 7)
		endDefinition(190341)
lbl(190382)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190392)	definition(x(7) 190409 pid('AnnotateElseNode,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 399 6) nil 2) <Q: 1222> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(190392)
lbl(190409)	definition(x(8) 190435 pid('AnnotateElseNode,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 399 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1222> 3)
		endDefinition(190409)
lbl(190435)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190445)	definition(x(7) 190496 pid('AnnotateElseNode,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 402 6) nil 6) <Q: 1223> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(190445)
lbl(190496)	definition(x(8) 190549 pid('AnnotateElseNode,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 402 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1223> 11)
		endDefinition(190496)
lbl(190549)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateElseNode' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(190587)	definition(x(7) 190599 pid('AnnotateNoElse,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 409 6) nil 3) <Q: 1224> nil)
		unify(x(1) x(2))
		return
		endDefinition(190587)
lbl(190599)	definition(x(8) 190640 pid('AnnotateNoElse,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 409 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1224> 7)
		endDefinition(190599)
lbl(190640)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190650)	definition(x(7) 190662 pid('AnnotateNoElse,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 412 6) nil 1) <Q: 1225> nil)
		getLiteral(nil x(0))
		return
		endDefinition(190650)
lbl(190662)	definition(x(8) 190688 pid('AnnotateNoElse,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 412 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1225> 3)
		endDefinition(190662)
lbl(190688)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190698)	definition(x(7) 190727 pid('AnnotateNoElse,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 415 6) nil 5) <Q: 1226> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
		endDefinition(190698)
lbl(190727)	definition(x(8) 190780 pid('AnnotateNoElse,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 415 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1226> 11)
		endDefinition(190727)
lbl(190780)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateNoElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190827)	definition(x(7) 190952 pid('AnnotateThreadNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 423 6) nil 5) <Q: 1227> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(190882)	definition(x(1) 190938 pid('' 3 pos('./compiler/Annotate.oz' 427 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 190917 190925)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(190917)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(190925)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(190882)
lbl(190938)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190827)
lbl(190952)	definition(x(8) 190993 pid('AnnotateThreadNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 423 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1227> 7)
		endDefinition(190952)
lbl(190993)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191003)	definition(x(7) 191042 pid('AnnotateThreadNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 433 6) nil 3) <Q: 1228> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(191003)
lbl(191042)	definition(x(8) 191077 pid('AnnotateThreadNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 433 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1228> 5)
		endDefinition(191042)
lbl(191077)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateThreadNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(191119)	definition(x(7) 191269 pid('AnnotateTryNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 441 6) nil 5) <Q: 1229> nil)
		allocateL5
		inlineAt(tryStatements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(catchStatements x(0) cache)
		inlineAt(exception x(4) cache)
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		move(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(191199)	definition(x(1) 191255 pid('' 3 pos('./compiler/Annotate.oz' 446 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 191234 191242)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(191234)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(191242)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(191199)
lbl(191255)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(191119)
lbl(191269)	definition(x(8) 191310 pid('AnnotateTryNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 441 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1229> 7)
		endDefinition(191269)
lbl(191310)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191320)	definition(x(7) 191403 pid('AnnotateTryNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 452 6) nil 3) <Q: 1230> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(tryStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(2) cache)
		move(y(1) x(1))
		putConstant('exception variable' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(191320)
lbl(191403)	definition(x(8) 191438 pid('AnnotateTryNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1230> 5)
		endDefinition(191403)
lbl(191438)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTryNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191474)	definition(x(7) 191519 pid('AnnotateLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 462 6) nil 4) <Q: 1231> nil)
		allocateL3
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(191474)
lbl(191519)	definition(x(8) 191560 pid('AnnotateLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 462 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1231> 7)
		endDefinition(191519)
lbl(191560)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191570)	definition(x(7) 191609 pid('AnnotateLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 466 6) nil 3) <Q: 1232> nil)
		allocateL2
		inlineAt(lockVar x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(191570)
lbl(191609)	definition(x(8) 191644 pid('AnnotateLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 466 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1232> 5)
		endDefinition(191609)
lbl(191644)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateLockNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191683)	definition(x(7) 191986 pid('AnnotateClassNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 473 6) nil 4) <Q: 1233> nil)
		allocateL4
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(parents x(0) cache)
lbl(191714)	definition(x(1) 191737 pid('' 3 pos('./compiler/Annotate.oz' 477 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191714)
lbl(191737)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(properties x(0) cache)
lbl(191751)	definition(x(1) 191774 pid('' 3 pos('./compiler/Annotate.oz' 481 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191751)
lbl(191774)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(attributes x(0) cache)
lbl(191788)	definition(x(1) 191856 pid('' 3 pos('./compiler/Annotate.oz' 485 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191839)
lbl(191799)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191839)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191788)
lbl(191856)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(features x(0) cache)
lbl(191870)	definition(x(1) 191938 pid('' 3 pos('./compiler/Annotate.oz' 494 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191921)
lbl(191881)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191921)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191870)
lbl(191938)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(methods x(0) cache)
lbl(191952)	definition(x(1) 191975 pid('' 3 pos('./compiler/Annotate.oz' 503 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191952)
lbl(191975)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(191683)
lbl(191986)	definition(x(8) 192027 pid('AnnotateClassNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 473 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1233> 7)
		endDefinition(191986)
lbl(192027)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192037)	definition(x(7) 192238 pid('AnnotateClassNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 507 6) nil 3) <Q: 1234> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(parents x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(attributes x(0) cache)
lbl(192091)	definition(x(1) 192151 pid('' 1 pos('./compiler/Annotate.oz' 512 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192134)
lbl(192102)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192134)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192091)
lbl(192151)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(192159)	definition(x(1) 192219 pid('' 1 pos('./compiler/Annotate.oz' 521 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192202)
lbl(192170)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192202)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192159)
lbl(192219)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192037)
lbl(192238)	definition(x(8) 192273 pid('AnnotateClassNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 507 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1234> 5)
		endDefinition(192238)
lbl(192273)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClassNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(192318)	definition(x(7) 192539 pid('AnnotateMethod,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 535 6) nil 4) <Q: 1235> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192355)	definition(x(1) 192396 pid('' 3 pos('./compiler/Annotate.oz' 538 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192355)
lbl(192396)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(formalArgs x(0) cache)
lbl(192410)	definition(x(1) 192430 pid('' 2 pos('./compiler/Annotate.oz' 541 27) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(192410)
lbl(192430)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192472)	definition(x(1) 192528 pid('' 3 pos('./compiler/Annotate.oz' 546 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192507 192515)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192507)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192515)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(547)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192472)
lbl(192528)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192318)
lbl(192539)	definition(x(8) 192580 pid('AnnotateMethod,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 535 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1235> 7)
		endDefinition(192539)
lbl(192580)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192590)	definition(x(7) 192703 pid('AnnotateMethod,markFirst/fast' 2 pos('./compiler/Annotate.oz' 552 6) nil 4) <Q: 1236> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(192602)	definition(x(3) 192636 pid('' 1 pos('./compiler/Annotate.oz' 554 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(192602)
lbl(192636)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192590)
lbl(192703)	definition(x(8) 192738 pid('AnnotateMethod,markFirst/slow' 1 pos('./compiler/Annotate.oz' 552 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1236> 5)
		endDefinition(192703)
lbl(192738)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethod' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(192774)	definition(x(7) 193006 pid('AnnotateMethodWithDesignator,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 562 6) nil 4) <Q: 1237> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192811)	definition(x(1) 192852 pid('' 3 pos('./compiler/Annotate.oz' 565 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192811)
lbl(192852)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		putList(y(4))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(192880)	definition(x(1) 192900 pid('' 2 pos('./compiler/Annotate.oz' 569 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(192880)
lbl(192900)	genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192939)	definition(x(1) 192995 pid('' 3 pos('./compiler/Annotate.oz' 574 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192974 192982)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192974)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192982)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(575)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192939)
lbl(192995)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192774)
lbl(193006)	definition(x(8) 193047 pid('AnnotateMethodWithDesignator,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 562 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1237> 7)
		endDefinition(193006)
lbl(193047)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193057)	definition(x(7) 193218 pid('AnnotateMethodWithDesignator,markFirst/fast' 2 pos('./compiler/Annotate.oz' 580 6) nil 4) <Q: 1238> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(193069)	definition(x(3) 193103 pid('' 1 pos('./compiler/Annotate.oz' 582 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(193069)
lbl(193103)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(messageDesignator x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 193203 193205)
		inlineAt(messageDesignator x(2) cache)
		move(y(1) x(1))
		putConstant('message designator' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
lbl(193203)	deAllocateL2
		return
lbl(193205)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(193057)
lbl(193218)	definition(x(8) 193253 pid('AnnotateMethodWithDesignator,markFirst/slow' 1 pos('./compiler/Annotate.oz' 580 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1238> 5)
		endDefinition(193218)
lbl(193253)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethodWithDesignator' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193292)	definition(x(7) 193311 pid('AnnotateMethFormal,markFirst/fast' 2 pos('./compiler/Annotate.oz' 595 6) nil 3) <Q: 1239> nil)
		inlineAt(feature x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193292)
lbl(193311)	definition(x(8) 193346 pid('AnnotateMethFormal,markFirst/slow' 1 pos('./compiler/Annotate.oz' 595 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1239> 5)
		endDefinition(193311)
lbl(193346)	putRecord('#' [1 2 fast] x(9))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormal' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalOptional' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalWithDefault' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193431)	definition(x(7) 193459 pid('AnnotateObjectLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 605 6) nil 5) <Q: 1240> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(193431)
lbl(193459)	definition(x(8) 193500 pid('AnnotateObjectLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 605 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1240> 7)
		endDefinition(193459)
lbl(193500)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193510)	definition(x(7) 193535 pid('AnnotateObjectLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 608 6) nil 4) <Q: 1241> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(193510)
lbl(193535)	definition(x(8) 193570 pid('AnnotateObjectLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 608 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1241> 5)
		endDefinition(193535)
lbl(193570)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateObjectLockNode' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193609)	definition(x(7) 193628 pid('AnnotateGetSelf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 614 6) nil 4) <Q: 1242> nil)
		inlineAt(destination x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193609)
lbl(193628)	definition(x(8) 193669 pid('AnnotateGetSelf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 614 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1242> 7)
		endDefinition(193628)
lbl(193669)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193679)	definition(x(7) 193698 pid('AnnotateGetSelf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 617 6) nil 3) <Q: 1243> nil)
		inlineAt(destination x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193679)
lbl(193698)	definition(x(8) 193733 pid('AnnotateGetSelf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 617 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1243> 5)
		endDefinition(193698)
lbl(193733)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateGetSelf' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFailNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(193805)	definition(x(7) 193964 pid('AnnotateIfNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 627 6) nil 6) <Q: 1244> nil)
		allocateL4
		inlineAt(clauses x(4) cache)
lbl(193817)	definition(x(5) 193840 pid('' 3 pos('./compiler/Annotate.oz' 629 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193817)
lbl(193840)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(193884)	definition(x(1) 193919 pid('' 3 pos('./compiler/Annotate.oz' 634 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(193884)
lbl(193919)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(193805)
lbl(193964)	definition(x(8) 194005 pid('AnnotateIfNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 627 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1244> 7)
		endDefinition(193964)
lbl(194005)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194015)	definition(x(7) 194116 pid('AnnotateIfNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 638 6) nil 6) <Q: 1245> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(194015)
lbl(194116)	definition(x(8) 194151 pid('AnnotateIfNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 638 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1245> 5)
		endDefinition(194116)
lbl(194151)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIfNode' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(194193)	definition(x(7) 194304 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 652 6) nil 6) <Q: 1246> nil)
		allocateL1
		inlineAt(clauses x(4) cache)
lbl(194205)	definition(x(5) 194228 pid('' 3 pos('./compiler/Annotate.oz' 654 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(194205)
lbl(194228)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 8)
		inlineAt(clauses x(0) cache)
lbl(194248)	definition(x(1) 194283 pid('' 3 pos('./compiler/Annotate.oz' 658 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(194248)
lbl(194283)	putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL1
		return
		endDefinition(194193)
lbl(194304)	definition(x(8) 194345 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 652 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1246> 7)
		endDefinition(194304)
lbl(194345)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194355)	definition(x(7) 194421 pid('AnnotateChoicesAndDisjunctions,markFirst/fast' 2 pos('./compiler/Annotate.oz' 662 6) nil 6) <Q: 1247> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(194355)
lbl(194421)	definition(x(8) 194456 pid('AnnotateChoicesAndDisjunctions,markFirst/slow' 1 pos('./compiler/Annotate.oz' 662 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1247> 5)
		endDefinition(194421)
lbl(194456)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoicesAndDisjunctions' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateOrNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDisNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoiceNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars guardGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(194572)	definition(x(7) 194743 pid('AnnotateClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 680 6) nil 6) <Q: 1248> nil)
		allocateL5
		inlineAt(guard x(4) cache)
		inlineAt(localVars x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(guardGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(guardGlobalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(194673)	definition(x(1) 194729 pid('' 3 pos('./compiler/Annotate.oz' 686 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 194708 194716)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(194708)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(194716)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(687)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(194673)
lbl(194729)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(194572)
lbl(194743)	definition(x(8) 194784 pid('AnnotateClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 680 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1248> 7)
		endDefinition(194743)
lbl(194784)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194794)	definition(x(7) 194811 pid('AnnotateClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 692 6) nil 2) <Q: 1249> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194794)
lbl(194811)	definition(x(8) 194837 pid('AnnotateClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 692 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1249> 3)
		endDefinition(194811)
lbl(194837)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194847)	definition(x(7) 194864 pid('AnnotateClause,getGuardGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 695 6) nil 2) <Q: 1250> nil)
		inlineAt(guardGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194847)
lbl(194864)	definition(x(8) 194890 pid('AnnotateClause,getGuardGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 695 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1250> 3)
		endDefinition(194864)
lbl(194890)	putRecord('#' [1 2 fast] x(11))
		setConstant(getGuardGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194900)	definition(x(7) 195013 pid('AnnotateClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 698 6) nil 7) <Q: 1251> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(194912)	definition(x(6) 194932 pid('' 1 pos('./compiler/Annotate.oz' 699 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(194912)
lbl(194932)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local clause variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(194900)
lbl(195013)	definition(x(8) 195066 pid('AnnotateClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 698 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1251> 11)
		endDefinition(195013)
lbl(195066)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClause' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateValueNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAtomNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIntNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFloatNode' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [use] x(2))
		setConstant(unit)
lbl(195220)	definition(x(7) 195234 pid('AnnotateVariable,setUse/fast' 1 pos('./compiler/Annotate.oz' 722 6) nil 1) <Q: 1252> nil)
		inlineAssign(use x(0) cache)
		return
		endDefinition(195220)
lbl(195234)	definition(x(8) 195260 pid('AnnotateVariable,setUse/slow' 1 pos('./compiler/Annotate.oz' 722 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1252> 3)
		endDefinition(195234)
lbl(195260)	putRecord('#' [1 2 fast] x(9))
		setConstant(setUse)
		setValue(x(8))
		setValue(x(7))
lbl(195270)	definition(x(7) 195287 pid('AnnotateVariable,getUse/fast' 1 pos('./compiler/Annotate.oz' 725 6) nil 2) <Q: 1253> nil)
		inlineAt(use x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(195270)
lbl(195287)	definition(x(8) 195313 pid('AnnotateVariable,getUse/slow' 1 pos('./compiler/Annotate.oz' 725 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1253> 3)
		endDefinition(195287)
lbl(195313)	putRecord('#' [1 2 fast] x(10))
		setConstant(getUse)
		setValue(x(8))
		setValue(x(7))
lbl(195323)	definition(x(7) 195436 pid('AnnotateVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 728 6) nil 7) <Q: 1254> nil)
		inlineAt(origin x(2) cache)
		testLiteral(x(2) user 195433)
		inlineAt(use x(2) cache)
		match(x(2) ht(195432 [onScalar(unused 195346) onScalar(wildcard 195389)]))
lbl(195346)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195389)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195432)	return
lbl(195433)	return
		endDefinition(195323)
lbl(195436)	definition(x(8) 195471 pid('AnnotateVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1254> 5)
		endDefinition(195436)
lbl(195471)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(46))
lbl(195511)	definition(x(7) 195621 pid('AnnotateRestrictedVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 743 6) nil 7) <Q: 1255> [y(46)])
		inlineAt(use x(2) cache)
		match(x(2) ht(195611 [onScalar(unused 195525) onScalar(wildcard 195568)]))
lbl(195525)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195568)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195611)	inlineAt(features x(0) cache)
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
		endDefinition(195511)
lbl(195621)	definition(x(8) 195656 pid('AnnotateRestrictedVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 743 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1255> 5)
		endDefinition(195621)
lbl(195656)	putRecord('#' [1 2 fast] x(9))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
lbl(195666)	definition(x(7) 195778 pid('AnnotateRestrictedVariable,CheckUse/fast' 2 pos('./compiler/Annotate.oz' 754 6) nil 8) <Q: 1256> [y(46)])
		match(x(0) ht(195763 [onScalar(nil 195675) onRecord('|' 2 195676)]))
lbl(195675)	return
lbl(195676)	allocateL2
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(195741 [onRecord('#' 3 195688) onRecord('#' 4 195739)]))
lbl(195688)	getVarVar(x(4) x(0))
		getVariable(x(2))
		testBI('Value.isFree' [x(2)]#[x(5)] 195754)
		inlineAt(printName x(5) cache)
		putRecord(pn 1 x(6))
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(x(4))
		putRecord('#' 5 x(2))
		setConstant('feature ')
		setValue(x(6))
		setConstant('.')
		setValue(x(7))
		setConstant(' imported but never used')
		putConstant('binding analysis warning' x(1))
		sendMsg(warn y(0) [coord kind msg] cache)
		branch(195754)
lbl(195739)	branch(195754)
lbl(195741)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(763)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(195754)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
lbl(195763)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(766)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(195666)
lbl(195778)	definition(x(8) 195813 pid('AnnotateRestrictedVariable,CheckUse/slow' 1 pos('./compiler/Annotate.oz' 754 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1256> 5)
		endDefinition(195778)
lbl(195813)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: CheckUse>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(195852)	definition(x(7) 195914 pid('AnnotateVariableOccurrence,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 771 6) nil 4) <Q: 1257> nil)
		allocateL4
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 195893 195901)
		unify(y(0) y(1))
		deAllocateL4
		return
lbl(195893)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(195901)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(772)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(195852)
lbl(195914)	definition(x(8) 195955 pid('AnnotateVariableOccurrence,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 771 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1257> 7)
		endDefinition(195914)
lbl(195955)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195965)	definition(x(7) 196036 pid('AnnotateVariableOccurrence,markFirst/fast' 2 pos('./compiler/Annotate.oz' 776 6) nil 2) <Q: 1258> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getUse x(1) 1 cache)
		match(y(0) ht(196019 [onScalar(unused 195989) onScalar(wildcard 196004)]))
lbl(195989)	inlineAt(variable x(1) cache)
		putConstant(wildcard x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(196004)	inlineAt(variable x(1) cache)
		putConstant(linear x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(196019)	inlineAt(variable x(1) cache)
		putConstant(multiple x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(195965)
lbl(196036)	definition(x(8) 196071 pid('AnnotateVariableOccurrence,markFirst/slow' 1 pos('./compiler/Annotate.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1258> 5)
		endDefinition(196036)
lbl(196071)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariableOccurrence' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternVariableOccurrence' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(format 1 y(49))
		setConstant(indent)
		putRecord(format 1 y(50))
		setConstant(exdent)
		putRecord(format 1 y(51))
		setConstant(push)
		putRecord(format 1 y(52))
		setConstant(pop)
		putList(x(1))
		setConstant(32)
		setConstant(nil)
		putRecord(glue 1 x(0))
		setValue(x(1))
		putRecord(format 1 y(53))
		setValue(x(0))
		putRecord(format 1 y(54))
		setConstant(break)
lbl(196182)	definition(x(7) 196224 pid('LI' 4 pos('./compiler/Core.oz' 131 3) nil 4) <Q: 1259> nil)
		getRecord(list 2 x(3))
		unifyVariable(x(3))
		unifyValue(x(1))
lbl(196196)	definition(x(1) 196216 pid('' 2 pos('./compiler/Core.oz' 132 19) nil 3) unit [x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(196196)
lbl(196216)	move(x(3) x(2))
		genFastCall(<P: 29> 7)
		endDefinition(196182)
lbl(196224)	definition(x(7) 196408 pid('LI2' 5 pos('./compiler/Core.oz' 134 3) nil 6) <Q: 1260> nil)
		match(x(0) ht(196393 [onScalar(nil 196233) onRecord('|' 2 196240)]))
lbl(196233)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(196240)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(output2 x(5) 3 cache)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(3))
lbl(196277)	definition(x(1) 196358 pid('' 3 pos('./compiler/Core.oz' 138 5) nil 6) unit [y(2)])
		shallowGuard(196345)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(196293)	shallowThen
		allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(196345)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(138)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196277)
lbl(196358)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(6))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(y(1))
		move(y(7) x(0))
		deAllocateL8
		genFastCall(<P: 28> 5)
lbl(196393)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196224)
lbl(196408)	definition(x(7) 196426 pid('CheckOutput' 3 pos('./compiler/Core.oz' 149 3) nil 5) <Q: 1261> nil)
		putConstant(false x(3))
		callBI('Value.condSelect' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(196408)
lbl(196426)	definition(x(7) 196508 pid('OutputAttrFeat' 4 pos('./compiler/Core.oz' 153 3) nil 5) <Q: 1262> nil)
		testRecord(x(0) '#' 2 196491)
lbl(196437)	allocateL4
		getVarVar(x(4) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		getRecord('#' 3 x(3))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(outputEscaped2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
lbl(196491)	move(x(0) x(4))
		move(x(1) x(0))
		move(x(3) x(1))
		tailSendMsg(outputEscaped2 x(4) 3 cache)
		endDefinition(196426)
lbl(196508)	definition(x(7) 196562 pid('FilterUnitsToVS' 2 pos('./compiler/Core.oz' 162 3) nil 3) <Q: 1263> nil)
		match(x(0) ht(196547 [onScalar(nil 196517) onRecord('|' 2 196521)]))
lbl(196517)	getLiteral(nil x(1))
		return
lbl(196521)	getVarVar(x(0) x(2))
		testLiteral(x(0) unit 196534)
lbl(196528)	move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196534)	getRecord('#' 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196547)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(168)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196508)
lbl(196562)	definition(x(7) 196648 pid('FlattenSequenceSub' 3 pos('./compiler/Core.oz' 172 6) nil 3) <Q: 1264> nil)
		match(x(0) ht(196600 [onScalar(nil 196571) onRecord('|' 2 196575)]))
lbl(196571)	unify(x(1) x(2))
		return
lbl(196575)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1264> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1264> 7)
lbl(196600)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isRedundant y(0) 1 cache)
		testBool(y(3) 196627 196635)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(196627)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(196635)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196562)
lbl(196648)	definition(x(7) 196698 pid('GetFirst' 2 pos('./compiler/Core.oz' 190 6) nil 2) <Q: 1265> nil)
		match(x(0) ht(196692 [onScalar(nil 196657) onRecord('|' 2 196661)]))
lbl(196657)	getLiteral(nil x(1))
		return
lbl(196661)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196687)
lbl(196678)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1265> 5)
lbl(196687)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(196692)	unify(x(1) x(0))
		return
		endDefinition(196648)
lbl(196698)	definition(x(7) 196729 pid('SetPointers' 3 pos('./compiler/Core.oz' 201 6) nil 4) <Q: 1266> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		move(y(0) x(0))
		sendMsg(setNext x(3) 1 cache)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(196698)
lbl(196729)	definition(x(8) 196786 pid('LinkList' 1 pos('./compiler/Core.oz' 206 6) nil 4) <Q: 1267> [x(7)])
		shallowGuard(196773)
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(196743)	shallowThen
		allocateL1
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setNext x(1) 1 cache)
lbl(196773)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196729)
lbl(196786)	createVariable(y(55))
lbl(196788)	definition(x(0) 196875 pid('FlattenSequence' 2 pos('./compiler/Core.oz' 211 6) nil 3) <Q: 1268> [y(55)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1264> 6)
		testLiteral(y(2) nil 196863)
lbl(196813)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196855)
lbl(196826)	getList(y(1))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(g(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		move(x(1) y(2))
		putConstant(unit x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		branch(196866)
lbl(196855)	getList(y(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		branch(196866)
lbl(196863)	unify(y(1) y(2))
lbl(196866)	move(y(1) x(0))
		deAllocateL3
		genFastCall(<Q: 1267> 3)
		endDefinition(196788)
lbl(196875)	move(y(1) x(1))
		inlineDot(x(1) imAConstruction x(2) cache)
		inlineDot(x(1) imAValueNode x(3) cache)
		inlineDot(x(1) imAVariableOccurrence x(4) cache)
		inlineDot(x(1) imAToken x(5) cache)
		inlineDot(x(1) statement x(7) cache)
		move(y(2) x(6))
		inlineDot(x(6) statement x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(4))
		setValue(x(8))
		putRecord('attr' [coord next] x(8))
		setConstant(unit)
		setConstant(unit)
lbl(196943)	definition(x(9) 196952 pid('Statement,setPrintName/fast' 1 pos('./compiler/Core.oz' 232 6) nil 1) <Q: 1269> nil)
		return
		endDefinition(196943)
lbl(196952)	definition(x(10) 196978 pid('Statement,setPrintName/slow' 1 pos('./compiler/Core.oz' 232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1269> 3)
		endDefinition(196952)
lbl(196978)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(10))
		setValue(x(9))
lbl(196988)	definition(x(9) 197000 pid('Statement,isRedundant/fast' 1 pos('./compiler/Core.oz' 235 6) nil 1) <Q: 1270> nil)
		getLiteral(false x(0))
		return
		endDefinition(196988)
lbl(197000)	definition(x(10) 197026 pid('Statement,isRedundant/slow' 1 pos('./compiler/Core.oz' 235 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1270> 3)
		endDefinition(197000)
lbl(197026)	putRecord('#' [1 2 fast] x(12))
		setConstant(isRedundant)
		setValue(x(10))
		setValue(x(9))
lbl(197036)	definition(x(9) 197050 pid('Statement,setNext/fast' 1 pos('./compiler/Core.oz' 238 6) nil 1) <Q: 1271> nil)
		inlineAssign(next x(0) cache)
		return
		endDefinition(197036)
lbl(197050)	definition(x(10) 197076 pid('Statement,setNext/slow' 1 pos('./compiler/Core.oz' 238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1271> 3)
		endDefinition(197050)
lbl(197076)	putRecord('#' [1 2 fast] x(13))
		setConstant(setNext)
		setValue(x(10))
		setValue(x(9))
lbl(197086)	definition(x(9) 197103 pid('Statement,getCoord/fast' 1 pos('./compiler/Core.oz' 241 6) nil 2) <Q: 1272> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(197086)
lbl(197103)	definition(x(10) 197129 pid('Statement,getCoord/slow' 1 pos('./compiler/Core.oz' 241 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1272> 3)
		endDefinition(197103)
lbl(197129)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 4 x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		moveMoveXYXY(x(0) y(4) x(2) y(56))
		moveMoveXYXY(x(3) y(57) x(4) y(58))
		move(x(5) y(59))
		move(x(7) x(0))
		move(x(9) x(1))
		move(x(8) x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Statement' x(5))
		createVariableMove(y(60) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) typeOf x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) typeOf x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(5))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [arg res value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(197240)	definition(x(7) 197276 pid('TypeOf,init/fast' 2 pos('./compiler/Core.oz' 249 6) nil 2) <Q: 1273> nil)
		inlineAssign(arg x(0) cache)
		inlineAssign(res x(1) cache)
		putList(x(1))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(0))
		setValue(x(1))
		inlineAssign(value x(0) cache)
		return
		endDefinition(197240)
lbl(197276)	definition(x(9) 197311 pid('TypeOf,init/slow' 1 pos('./compiler/Core.oz' 249 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1273> 5)
		endDefinition(197276)
lbl(197311)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197321)	definition(x(7) 197406 pid('TypeOf,output/fast' 2 pos('./compiler/Core.oz' 254 6) nil 6) <Q: 1274> [y(0)])
		allocateL3
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyLiteral('   % typeof ')
		unifyVariable(y(1))
		unifyVariable(x(2))
		inlineAt(res x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		call(x(4) 4)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(197321)
lbl(197406)	definition(x(9) 197441 pid('TypeOf,output/slow' 1 pos('./compiler/Core.oz' 254 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1274> 5)
		endDefinition(197406)
lbl(197441)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('TypeOf' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) stepPoint x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) stepPoint x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(6))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [kind statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197536)	definition(x(7) 197582 pid('StepPoint,init/fast' 3 pos('./compiler/Core.oz' 266 6) nil 3) <Q: 1275> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL3
		return
		endDefinition(197536)
lbl(197582)	definition(x(9) 197623 pid('StepPoint,init/slow' 1 pos('./compiler/Core.oz' 266 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1275> 7)
		endDefinition(197582)
lbl(197623)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197633)	definition(x(7) 197661 pid('StepPoint,output/fast' 2 pos('./compiler/Core.oz' 271 6) nil 5) <Q: 1276> [y(54)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(197633)
lbl(197661)	definition(x(9) 197696 pid('StepPoint,output/slow' 1 pos('./compiler/Core.oz' 271 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1276> 5)
		endDefinition(197661)
lbl(197696)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('StepPoint' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) declaration x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) declaration x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197788)	definition(x(7) 197832 pid('Declaration,init/fast' 3 pos('./compiler/Core.oz' 281 6) nil 3) <Q: 1277> nil)
		allocateL2
		inlineAssign(localVars x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(197788)
lbl(197832)	definition(x(9) 197873 pid('Declaration,init/slow' 1 pos('./compiler/Core.oz' 281 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1277> 7)
		endDefinition(197832)
lbl(197873)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197883)	definition(x(7) 197957 pid('Declaration,output/fast' 2 pos('./compiler/Core.oz' 286 6) nil 5) <Q: 1278> [y(53) y(49) y(50) y(54)])
		allocateL2
		getRecord('#' 13 x(1))
		unifyLiteral('local')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(0))
		unifyLiteral('in')
		unifyValue(g(1))
		unifyValVar(g(3) y(0))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(localVars x(4) cache)
		move(x(0) y(1))
		move(x(4) x(0))
		move(g(0) x(1))
		putConstant(true x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(197883)
lbl(197957)	definition(x(9) 197992 pid('Declaration,output/slow' 1 pos('./compiler/Core.oz' 286 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1278> 5)
		endDefinition(197957)
lbl(197992)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Declaration' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) skipNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(8))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(198061)	definition(x(7) 198075 pid('SkipNode,init/fast' 1 pos('./compiler/Core.oz' 295 6) nil 1) <Q: 1279> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(198061)
lbl(198075)	definition(x(9) 198101 pid('SkipNode,init/slow' 1 pos('./compiler/Core.oz' 295 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1279> 3)
		endDefinition(198075)
lbl(198101)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198111)	definition(x(7) 198123 pid('SkipNode,isRedundant/fast' 1 pos('./compiler/Core.oz' 298 6) nil 1) <Q: 1280> nil)
		getLiteral(true x(0))
		return
		endDefinition(198111)
lbl(198123)	definition(x(9) 198149 pid('SkipNode,isRedundant/slow' 1 pos('./compiler/Core.oz' 298 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1280> 3)
		endDefinition(198123)
lbl(198149)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRedundant)
		setValue(x(9))
		setValue(x(7))
lbl(198159)	definition(x(7) 198171 pid('SkipNode,output/fast' 2 pos('./compiler/Core.oz' 301 6) nil 2) <Q: 1281> nil)
		getLiteral('skip skip' x(1))
		return
		endDefinition(198159)
lbl(198171)	definition(x(9) 198206 pid('SkipNode,output/slow' 1 pos('./compiler/Core.oz' 301 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1281> 5)
		endDefinition(198171)
lbl(198206)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(y(55) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('SkipNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equation x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equation x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(9))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [left right] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(198300)	definition(x(7) 198324 pid('Equation,init/fast' 3 pos('./compiler/Core.oz' 310 6) nil 3) <Q: 1282> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(198300)
lbl(198324)	definition(x(9) 198365 pid('Equation,init/slow' 1 pos('./compiler/Core.oz' 310 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1282> 7)
		endDefinition(198324)
lbl(198365)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198375)	definition(x(7) 198432 pid('Equation,output/fast' 2 pos('./compiler/Core.oz' 315 6) nil 4) <Q: 1283> nil)
		allocateL3
		getRecord('#' 5 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(198375)
lbl(198432)	definition(x(9) 198467 pid('Equation,output/slow' 1 pos('./compiler/Core.oz' 315 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1283> 5)
		endDefinition(198432)
lbl(198467)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Equation' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) construction x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) construction x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(10))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(56))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI('Record.record' [x(8) x(3)]#[x(9)])
lbl(198575)	definition(x(8) 198610 pid('Construction,init/fast' 3 pos('./compiler/Core.oz' 326 6) nil 3) <Q: 1284> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) construction x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(198575)
lbl(198610)	definition(x(10) 198651 pid('Construction,init/slow' 1 pos('./compiler/Core.oz' 326 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1284> 7)
		endDefinition(198610)
lbl(198651)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(198661)	definition(x(8) 198680 pid('Construction,getCoord/fast' 1 pos('./compiler/Core.oz' 332 6) nil 2) <Q: 1285> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(198661)
lbl(198680)	definition(x(10) 198706 pid('Construction,getCoord/slow' 1 pos('./compiler/Core.oz' 332 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1285> 3)
		endDefinition(198680)
lbl(198706)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(198716)	definition(x(8) 198728 pid('Construction,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 335 6) nil 1) <Q: 1286> nil)
		getLiteral(false x(0))
		return
		endDefinition(198716)
lbl(198728)	definition(x(10) 198754 pid('Construction,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 335 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1286> 3)
		endDefinition(198728)
lbl(198754)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(198764)	definition(x(8) 198776 pid('Construction,isConstruction/fast' 1 pos('./compiler/Core.oz' 338 6) nil 1) <Q: 1287> nil)
		getLiteral(true x(0))
		return
		endDefinition(198764)
lbl(198776)	definition(x(10) 198802 pid('Construction,isConstruction/slow' 1 pos('./compiler/Core.oz' 338 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1287> 3)
		endDefinition(198776)
lbl(198802)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(198812)	definition(x(8) 199229 pid('Construction,output2/fast' 3 pos('./compiler/Core.oz' 341 6) nil 4) <Q: 1288> [y(51) y(52) y(53)])
		allocateL(11)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 7 x(1))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(1))
		unifyVariable(y(2))
		unifyLiteral(')')
		unifyValue(g(1))
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(args x(0) cache)
		testList(x(0) 199172)
lbl(198867)	getVarVar(x(0) y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 198944)
lbl(198877)	getVarVar(x(3) y(6))
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 y(6) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(7))
		unifyLiteral(': ')
		unifyValue(y(9))
		getRecord('#' 2 x(1))
		unifyValue(y(8))
		unifyValue(y(10))
		branch(198976)
lbl(198944)	move(x(0) x(3))
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyValue(y(6))
		unifyLiteral(nil)
lbl(198976)	putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(0))
lbl(198984)	definition(x(1) 199148 pid('' 3 pos('./compiler/Core.oz' 354 9) nil 6) unit [y(3)])
		shallowGuard(199135)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(199000)	shallowThen
		testRecord(x(1) '#' 2 199084)
lbl(199006)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(199084)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(199135)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(354)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(198984)
lbl(199148)	moveMoveYXYX(y(4) x(0) y(5) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(1))
		unifyVariable(x(1))
		unifyValue(g(2))
		move(y(6) x(0))
		genFastCall(<P: 28> 4)
		branch(199178)
lbl(199172)	getLiteral(nil y(0))
		getLiteral(nil y(1))
lbl(199178)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 199211 199216)
		inlineAt(args x(0) cache)
		testLiteral(x(0) nil 199201)
lbl(199196)	getLiteral('...' y(2))
		deAllocateL
		return
lbl(199201)	getRecord('#' 2 y(2))
		unifyValue(g(2))
		unifyLiteral('...')
		deAllocateL
		return
lbl(199211)	getLiteral(nil y(2))
		deAllocateL
		return
lbl(199216)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(198812)
lbl(199229)	definition(x(10) 199270 pid('Construction,output2/slow' 1 pos('./compiler/Core.oz' 341 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1288> 7)
		endDefinition(199229)
lbl(199270)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('Construction' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'definition' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'definition' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(11))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [allVariables designator formalArgs isStateUsing predicateRef printName procFlags statements toCopy] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(199376)	definition(x(7) 199446 pid('Definition,init/fast' 6 pos('./compiler/Core.oz' 383 6) nil 6) <Q: 1289> nil)
		allocateL4
		inlineAssign(designator x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(isStateUsing x(0) cache)
		move(y(1) x(0))
		inlineAssign(procFlags x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(199376)
lbl(199446)	definition(x(9) 199505 pid('Definition,init/slow' 1 pos('./compiler/Core.oz' 383 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1289> 13)
		endDefinition(199446)
lbl(199505)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(199515)	definition(x(7) 199529 pid('Definition,setAllVariables/fast' 1 pos('./compiler/Core.oz' 392 6) nil 1) <Q: 1290> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(199515)
lbl(199529)	definition(x(9) 199555 pid('Definition,setAllVariables/slow' 1 pos('./compiler/Core.oz' 392 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1290> 3)
		endDefinition(199529)
lbl(199555)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(7))
lbl(199565)	definition(x(7) 199579 pid('Definition,setPrintName/fast' 1 pos('./compiler/Core.oz' 395 6) nil 1) <Q: 1291> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(199565)
lbl(199579)	definition(x(9) 199605 pid('Definition,setPrintName/slow' 1 pos('./compiler/Core.oz' 395 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1291> 3)
		endDefinition(199579)
lbl(199605)	putRecord('#' [1 2 fast] x(12))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(199615)	definition(x(7) 199831 pid('Definition,output/fast' 2 pos('./compiler/Core.oz' 398 6) nil 5) <Q: 1292> [y(51) y(52) y(49) y(54) y(50) y(0) y(53)])
		allocateL6
		getRecord('#' 15 x(1))
		unifyVariable(x(3))
		unifyLiteral('{')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral('}')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(procFlags x(4) cache)
lbl(199658)	definition(x(1) 199696 pid('' 3 pos('./compiler/Core.oz' 400 3) nil 5) unit [g(5)])
		getRecord('#' 3 x(2))
		unifyValVar(x(0) x(3))
		unifyLiteral(' ')
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(199658)
lbl(199696)	move(x(0) y(5))
		move(x(4) x(0))
		putConstant('proc ' x(2))
		genFastCall(<P: 30> 8)
		inlineAt(designator x(3) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(3) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		match(x(0) ht(199763 [onScalar(nil 199735) onRecord('|' 2 199740)]))
lbl(199735)	getLiteral(nil y(1))
		branch(199776)
lbl(199740)	getRecord('#' 2 y(1))
		unifyValVar(g(6) x(3))
		inlineAt(formalArgs x(0) cache)
		move(g(6) x(1))
		move(y(5) x(2))
		genFastCall(<Q: 1259> 8)
		branch(199776)
lbl(199763)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(405)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(199776)	getSelf(x(2))
		createVariableMove(y(0) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		testBool(y(0) 199796 199801)
		getLiteral('   % clause body' y(2))
		branch(199812)
lbl(199796)	getLiteral(nil y(2))
		branch(199812)
lbl(199801)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(406)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(199812)	inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(199615)
lbl(199831)	definition(x(9) 199866 pid('Definition,output/slow' 1 pos('./compiler/Core.oz' 398 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1292> 5)
		endDefinition(199831)
lbl(199866)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(199876)	definition(x(7) 199888 pid('Definition,isClauseBody/fast' 1 pos('./compiler/Core.oz' 410 6) nil 1) <Q: 1293> nil)
		getLiteral(false x(0))
		return
		endDefinition(199876)
lbl(199888)	definition(x(9) 199914 pid('Definition,isClauseBody/slow' 1 pos('./compiler/Core.oz' 410 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1293> 3)
		endDefinition(199888)
lbl(199914)	putRecord('#' [1 2 fast] x(14))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Definition' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) functionDefinition x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(12))
		setValue(x(8))
		putList(x(8))
		setValue(y(10))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FunctionDefinition' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBody x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(13))
		setValue(x(8))
		putList(x(8))
		setValue(y(10))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(200046)	definition(x(7) 200058 pid('ClauseBody,isClauseBody/fast' 1 pos('./compiler/Core.oz' 421 6) nil 1) <Q: 1294> nil)
		getLiteral(true x(0))
		return
		endDefinition(200046)
lbl(200058)	definition(x(9) 200084 pid('ClauseBody,isClauseBody/slow' 1 pos('./compiler/Core.oz' 421 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1294> 3)
		endDefinition(200058)
lbl(200084)	putRecord('#' [1 2 fast] x(10))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ClauseBody' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) application x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) application x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(14))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [actualArgs designator] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [codeGenMakeEquateLiteral] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(200180)	definition(x(7) 200204 pid('Application,init/fast' 3 pos('./compiler/Core.oz' 432 6) nil 3) <Q: 1295> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(actualArgs x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(200180)
lbl(200204)	definition(x(9) 200245 pid('Application,init/slow' 1 pos('./compiler/Core.oz' 432 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1295> 7)
		endDefinition(200204)
lbl(200245)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		createVariable(y(13))
lbl(200257)	definition(x(7) 200726 pid('Application,output/fast' 2 pos('./compiler/Core.oz' 437 6) nil 5) <Q: 1296> [y(13)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 200291 200713)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200291)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		match(y(3) ht(200704 [onScalar('`ooExch`' 200317) onScalar('`@`' 200404) onScalar('`~`' 200416) onScalar('`<-`' 200428) onScalar('`,`' 200440) onScalar('`==`' 200452) onScalar('`<`' 200464) onScalar('`>`' 200476) onScalar('`=<`' 200488) onScalar('`>=`' 200500) onScalar('`\\=`' 200512) onScalar('`div`' 200524) onScalar('`mod`' 200536) onScalar('`+`' 200548) onScalar('`-`' 200560) onScalar('`*`' 200572) onScalar('`/`' 200584) onScalar('`.`' 200596) onScalar('`^`' 200608) onScalar('`::`' 200620) onScalar('`:::`' 200632) onScalar('`::R`' 200644) onScalar('`:::R`' 200656) onScalar('`Raise`' 200668)]))
lbl(200317)	putList(x(1))
		setVariable(x(4))
		setConstant(nil)
		putList(x(0))
		setVariable(y(3))
		setValue(x(1))
		putList(x(3))
		setVariable(y(2))
		setValue(x(0))
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 8 y(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(1))
		unifyLiteral(' <- ')
		unifyVariable(y(4))
		unifyVariable(x(2))
		unifyVariable(y(5))
		unifyVariable(y(6))
		move(y(0) x(0))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(5) x(2))
		sendMsg(output2 y(2) 3 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
lbl(200404)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('@' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200416)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('~' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200428)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' <- ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200440)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(', ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200452)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' == ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200464)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' < ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200476)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' > ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200488)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' =< ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200500)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' >= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200512)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' \\= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200524)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' div ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200536)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' mod ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200548)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' + ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200560)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' - ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200572)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' * ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200584)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' / ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200596)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('.' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200608)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('^' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200620)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200632)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200644)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200656)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200668)	putList(x(3))
		setVariable(x(4))
		setConstant(nil)
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 4 y(1))
		unifyLiteral('raise ')
		unifyVariable(x(1))
		unifyLiteral(' end')
		unifyVariable(x(2))
		move(y(0) x(0))
		deAllocateL7
		tailSendMsg(output2 x(4) 3 cache)
lbl(200704)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200713)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(438)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(200257)
lbl(200726)	definition(x(9) 200761 pid('Application,output/slow' 1 pos('./compiler/Core.oz' 437 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1296> 5)
		endDefinition(200726)
lbl(200761)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(200771)	definition(x(7) 200865 pid('Application,OutputApplication/fast' 2 pos('./compiler/Core.oz' 476 6) nil 5) <Q: 1297> [y(51) y(52) y(53)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('{')
		unifyValVar(g(0) x(1))
		unifyVariable(y(0))
		unifyLiteral('}')
		unifyValVar(g(1) x(2))
		unifyVariable(y(1))
		inlineAt(designator x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		match(x(0) ht(200850 [onScalar(nil 200818) onRecord('|' 2 200826)]))
lbl(200818)	getLiteral(nil y(1))
		getLiteral(nil y(0))
		deAllocateL3
		return
lbl(200826)	getRecord('#' 2 y(0))
		unifyValVar(g(2) x(4))
		inlineAt(actualArgs x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1260> 11)
lbl(200850)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(480)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(200771)
lbl(200865)	definition(x(9) 200900 pid('Application,OutputApplication/slow' 1 pos('./compiler/Core.oz' 476 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1297> 5)
		endDefinition(200865)
lbl(200900)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: OutputApplication>)
		setValue(x(9))
		setValue(x(7))
lbl(200910)	definition(x(7) 200986 pid('Application,OutputPrefixExpression/fast' 3 pos('./compiler/Core.oz' 482 6) nil 6) <Q: 1298> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 6 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(200910)
lbl(200986)	definition(x(9) 201027 pid('Application,OutputPrefixExpression/slow' 1 pos('./compiler/Core.oz' 482 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1298> 7)
		endDefinition(200986)
lbl(201027)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201037)	definition(x(7) 201111 pid('Application,OutputInfixStatement/fast' 3 pos('./compiler/Core.oz' 486 6) nil 6) <Q: 1299> nil)
		allocateL4
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		putList(x(3))
		setVariable(x(4))
		setValue(x(5))
		inlineAt(actualArgs x(5) cache)
		unify(x(5) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201037)
lbl(201111)	definition(x(9) 201152 pid('Application,OutputInfixStatement/slow' 1 pos('./compiler/Core.oz' 486 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1299> 7)
		endDefinition(201111)
lbl(201152)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201162)	definition(x(7) 201262 pid('Application,OutputInfixExpression/fast' 3 pos('./compiler/Core.oz' 490 6) nil 7) <Q: 1300> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(0) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(1) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201162)
lbl(201262)	definition(x(9) 201303 pid('Application,OutputInfixExpression/slow' 1 pos('./compiler/Core.oz' 490 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1300> 7)
		endDefinition(201262)
lbl(201303)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201313)	definition(x(7) 201387 pid('Application,OutputFdInStatement/fast' 3 pos('./compiler/Core.oz' 495 6) nil 6) <Q: 1301> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201313)
lbl(201387)	definition(x(9) 201428 pid('Application,OutputFdInStatement/slow' 1 pos('./compiler/Core.oz' 495 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1301> 7)
		endDefinition(201387)
lbl(201428)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201438)	definition(x(7) 201538 pid('Application,OutputFdInExpression/fast' 3 pos('./compiler/Core.oz' 499 6) nil 7) <Q: 1302> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(1) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201438)
lbl(201538)	definition(x(9) 201579 pid('Application,OutputFdInExpression/slow' 1 pos('./compiler/Core.oz' 499 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1302> 7)
		endDefinition(201538)
lbl(201579)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 8 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(x(8) x(0))
		move(x(7) x(1))
		move(y(13) x(6))
		putConstant('Application' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(15))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter consequent] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [noBoolShared] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(201688)	definition(x(7) 201717 pid('BoolCase,init/fast' 4 pos('./compiler/Core.oz' 511 6) nil 4) <Q: 1303> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(consequent x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(201688)
lbl(201717)	definition(x(9) 201764 pid('BoolCase,init/slow' 1 pos('./compiler/Core.oz' 511 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1303> 9)
		endDefinition(201717)
lbl(201764)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(201774)	definition(x(7) 201854 pid('BoolCase,output/fast' 2 pos('./compiler/Core.oz' 517 6) nil 4) <Q: 1304> [y(49) y(54) y(50)])
		allocateL3
		getRecord('#' 11 x(1))
		unifyLiteral('if ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValVar(g(1) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(consequent x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(201774)
lbl(201854)	definition(x(9) 201889 pid('BoolCase,output/slow' 1 pos('./compiler/Core.oz' 517 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1304> 5)
		endDefinition(201854)
lbl(201889)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('BoolCase' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(16))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(201970)	definition(x(8) 201995 pid('BoolClause,init/fast' 1 pos('./compiler/Core.oz' 527 6) nil 2) <Q: 1305> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(201970)
lbl(201995)	definition(x(9) 202021 pid('BoolClause,init/slow' 1 pos('./compiler/Core.oz' 527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1305> 3)
		endDefinition(201995)
lbl(202021)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202031)	definition(x(8) 202059 pid('BoolClause,output/fast' 2 pos('./compiler/Core.oz' 530 6) nil 5) <Q: 1306> [y(54)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(202031)
lbl(202059)	definition(x(9) 202094 pid('BoolClause,output/slow' 1 pos('./compiler/Core.oz' 530 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1306> 5)
		endDefinition(202059)
lbl(202094)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('BoolClause' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(17))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter clauses] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202188)	definition(x(7) 202217 pid('PatternCase,init/fast' 4 pos('./compiler/Core.oz' 540 6) nil 4) <Q: 1307> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(clauses x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(202188)
lbl(202217)	definition(x(9) 202264 pid('PatternCase,init/slow' 1 pos('./compiler/Core.oz' 540 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1307> 9)
		endDefinition(202217)
lbl(202264)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202274)	definition(x(7) 202354 pid('PatternCase,output/fast' 2 pos('./compiler/Core.oz' 546 6) nil 4) <Q: 1308> [y(54)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('case ')
		unifyVariable(x(1))
		unifyLiteral(' of ')
		unifyVariable(y(0))
		unifyValVar(g(0) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(clauses x(0) cache)
		putRecord('#' 2 x(1))
		setValue(g(0))
		setConstant('[] ')
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(202274)
lbl(202354)	definition(x(9) 202389 pid('PatternCase,output/slow' 1 pos('./compiler/Core.oz' 546 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1308> 5)
		endDefinition(202354)
lbl(202389)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('PatternCase' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(18))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars pattern statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202477)	definition(x(8) 202515 pid('PatternClause,init/fast' 3 pos('./compiler/Core.oz' 558 6) nil 3) <Q: 1309> nil)
		allocateL1
		inlineAssign(localVars x(0) cache)
		inlineAssign(pattern x(1) cache)
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(202477)
lbl(202515)	definition(x(9) 202556 pid('PatternClause,init/slow' 1 pos('./compiler/Core.oz' 558 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1309> 7)
		endDefinition(202515)
lbl(202556)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202566)	definition(x(8) 202632 pid('PatternClause,output/fast' 2 pos('./compiler/Core.oz' 563 6) nil 5) <Q: 1310> [y(51) y(52) y(53) y(49) y(54) y(50)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyValVar(g(0) x(2))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('then')
		unifyValVar(g(3) x(3))
		unifyValVar(g(4) y(0))
		unifyValue(g(5))
		inlineAt(pattern x(4) cache)
		inlineAt(localVars x(1) cache)
		move(x(0) y(1))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(statements x(0) cache)
		move(g(4) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(202566)
lbl(202632)	definition(x(9) 202667 pid('PatternClause,output/slow' 1 pos('./compiler/Core.oz' 563 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1310> 5)
		endDefinition(202632)
lbl(202667)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('PatternClause' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) recordPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) recordPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(19))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(56))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI('Record.record' [x(8) x(3)]#[x(9)])
lbl(202775)	definition(x(8) 202810 pid('RecordPattern,init/fast' 3 pos('./compiler/Core.oz' 575 6) nil 3) <Q: 1311> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) recordPattern x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(202775)
lbl(202810)	definition(x(10) 202851 pid('RecordPattern,init/slow' 1 pos('./compiler/Core.oz' 575 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1311> 7)
		endDefinition(202810)
lbl(202851)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(202861)	definition(x(8) 202880 pid('RecordPattern,getCoord/fast' 1 pos('./compiler/Core.oz' 581 6) nil 2) <Q: 1312> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(202861)
lbl(202880)	definition(x(10) 202906 pid('RecordPattern,getCoord/slow' 1 pos('./compiler/Core.oz' 581 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1312> 3)
		endDefinition(202880)
lbl(202906)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(202916)	definition(x(8) 202928 pid('RecordPattern,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 584 6) nil 1) <Q: 1313> nil)
		getLiteral(false x(0))
		return
		endDefinition(202916)
lbl(202928)	definition(x(10) 202954 pid('RecordPattern,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 584 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1313> 3)
		endDefinition(202928)
lbl(202954)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(202964)	definition(x(8) 202976 pid('RecordPattern,isConstruction/fast' 1 pos('./compiler/Core.oz' 587 6) nil 1) <Q: 1314> nil)
		getLiteral(true x(0))
		return
		endDefinition(202964)
lbl(202976)	definition(x(10) 203002 pid('RecordPattern,isConstruction/slow' 1 pos('./compiler/Core.oz' 587 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1314> 3)
		endDefinition(202976)
lbl(203002)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(203012)	definition(x(8) 203427 pid('RecordPattern,output2/fast' 3 pos('./compiler/Core.oz' 590 6) nil 4) <Q: 1315> [y(53) y(51) y(52)])
		allocateL(12)
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(2) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariable(y(4))
		testList(x(2) 203342)
lbl(203043)	getVarVar(x(2) y(5))
		createVariable(y(6))
		testRecord(x(2) '#' 2 203117)
lbl(203053)	getVarVar(x(3) y(7))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(2) x(0))
		createVariableMove(y(10) x(1))
		createVariableMove(y(11) x(2))
		sendMsg(output2 y(7) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(8))
		unifyLiteral(': ')
		unifyValue(y(10))
		getRecord('#' 2 x(1))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(203146)
lbl(203117)	move(x(2) x(3))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyValue(y(7))
		unifyLiteral(nil)
lbl(203146)	putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(1))
lbl(203154)	definition(x(1) 203318 pid('' 3 pos('./compiler/Core.oz' 602 9) nil 6) unit [y(2)])
		shallowGuard(203305)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203170)	shallowThen
		testRecord(x(1) '#' 2 203254)
lbl(203176)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203254)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203305)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(602)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203154)
lbl(203318)	moveMoveYXYX(y(5) x(0) y(6) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		branch(203348)
lbl(203342)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203348)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203409 203414)
		testLiteral(y(4) nil 203399)
lbl(203394)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203399)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203409)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203414)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(618)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203012)
lbl(203427)	definition(x(10) 203468 pid('RecordPattern,output2/slow' 1 pos('./compiler/Core.oz' 590 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1315> 7)
		endDefinition(203427)
lbl(203468)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(203478)	definition(x(8) 203904 pid('RecordPattern,outputPattern2/fast' 4 pos('./compiler/Core.oz' 623 6) nil 5) <Q: 1316> [y(53) y(51) y(52)])
		allocateL(13)
		getRecord('#' 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(3) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariable(y(4))
		testList(x(3) 203819)
lbl(203509)	getVarVar(x(3) y(5))
		move(x(1) y(6))
		createVariable(y(7))
		testRecord(x(3) '#' 2 203588)
lbl(203522)	getVarVar(x(3) y(8))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 x(3) 3 cache)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		createVariableMove(y(11) x(2))
		createVariableMove(y(12) x(3))
		sendMsg(outputPattern2 y(8) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(9))
		unifyLiteral(': ')
		unifyValue(y(11))
		getRecord('#' 2 x(1))
		unifyValue(y(10))
		unifyValue(y(12))
		branch(203617)
lbl(203588)	move(x(3) x(4))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(9))
		getList(x(0))
		unifyValue(y(8))
		unifyLiteral(nil)
lbl(203617)	putRecord('#' 2 x(3))
		setVariable(y(8))
		setValue(y(1))
lbl(203625)	definition(x(1) 203795 pid('' 3 pos('./compiler/Core.oz' 635 9) nil 6) unit [y(2) y(6)])
		shallowGuard(203782)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203641)	shallowThen
		testRecord(x(1) '#' 2 203728)
lbl(203647)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(outputPattern2 y(0) 4 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203728)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(outputPattern2 x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203782)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(635)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203625)
lbl(203795)	moveMoveYXYX(y(5) x(0) y(7) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(8) x(0))
		genFastCall(<P: 28> 4)
		branch(203825)
lbl(203819)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203825)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203886 203891)
		testLiteral(y(4) nil 203876)
lbl(203871)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203876)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203886)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203891)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(651)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203478)
lbl(203904)	definition(x(10) 203951 pid('RecordPattern,outputPattern2/slow' 1 pos('./compiler/Core.oz' 623 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1316> 9)
		endDefinition(203904)
lbl(203951)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('RecordPattern' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equationPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equationPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(20))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord left right] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(204047)	definition(x(8) 204071 pid('EquationPattern,init/fast' 3 pos('./compiler/Core.oz' 663 6) nil 3) <Q: 1317> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(204047)
lbl(204071)	definition(x(9) 204112 pid('EquationPattern,init/slow' 1 pos('./compiler/Core.oz' 663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1317> 7)
		endDefinition(204071)
lbl(204112)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(204122)	definition(x(8) 204139 pid('EquationPattern,getCoord/fast' 1 pos('./compiler/Core.oz' 668 6) nil 2) <Q: 1318> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(204122)
lbl(204139)	definition(x(9) 204165 pid('EquationPattern,getCoord/slow' 1 pos('./compiler/Core.oz' 668 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1318> 3)
		endDefinition(204139)
lbl(204165)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(204175)	definition(x(8) 204194 pid('EquationPattern,isConstruction/fast' 1 pos('./compiler/Core.oz' 671 6) nil 2) <Q: 1319> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isConstruction x(1) 1 cache)
		endDefinition(204175)
lbl(204194)	definition(x(9) 204220 pid('EquationPattern,isConstruction/slow' 1 pos('./compiler/Core.oz' 671 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1319> 3)
		endDefinition(204194)
lbl(204220)	putRecord('#' [1 2 fast] x(12))
		setConstant(isConstruction)
		setValue(x(9))
		setValue(x(8))
lbl(204230)	definition(x(8) 204249 pid('EquationPattern,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 674 6) nil 2) <Q: 1320> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isVariableOccurrence x(1) 1 cache)
		endDefinition(204230)
lbl(204249)	definition(x(9) 204275 pid('EquationPattern,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 674 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1320> 3)
		endDefinition(204249)
lbl(204275)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(9))
		setValue(x(8))
lbl(204285)	definition(x(8) 204346 pid('EquationPattern,output2/fast' 3 pos('./compiler/Core.oz' 677 6) nil 4) <Q: 1321> nil)
		allocateL3
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(204285)
lbl(204346)	definition(x(9) 204387 pid('EquationPattern,output2/slow' 1 pos('./compiler/Core.oz' 677 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1321> 7)
		endDefinition(204346)
lbl(204387)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
lbl(204397)	definition(x(8) 204462 pid('EquationPattern,outputPattern2/fast' 4 pos('./compiler/Core.oz' 681 6) nil 5) <Q: 1322> nil)
		allocateL4
		getRecord('#' 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(4) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL4
		tailSendMsg(outputPattern2 x(4) 4 cache)
		endDefinition(204397)
lbl(204462)	definition(x(9) 204509 pid('EquationPattern,outputPattern2/slow' 1 pos('./compiler/Core.oz' 681 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1322> 9)
		endDefinition(204462)
lbl(204509)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('EquationPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) abstractElse x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(21))
		setValue(x(8))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AbstractElse' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) elseNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) elseNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(22))
		setValue(x(8))
		putList(x(8))
		setValue(y(20))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(204652)	definition(x(7) 204677 pid('ElseNode,init/fast' 1 pos('./compiler/Core.oz' 696 6) nil 2) <Q: 1323> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(204652)
lbl(204677)	definition(x(9) 204703 pid('ElseNode,init/slow' 1 pos('./compiler/Core.oz' 696 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1323> 3)
		endDefinition(204677)
lbl(204703)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204713)	definition(x(7) 204753 pid('ElseNode,output/fast' 2 pos('./compiler/Core.oz' 699 6) nil 5) <Q: 1324> [y(49) y(54) y(50)])
		getRecord('#' 6 x(1))
		unifyLiteral('else')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(204713)
lbl(204753)	definition(x(9) 204788 pid('ElseNode,output/slow' 1 pos('./compiler/Core.oz' 699 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1324> 5)
		endDefinition(204753)
lbl(204788)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ElseNode' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) noElse x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) noElse x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(23))
		setValue(x(8))
		putList(x(8))
		setValue(y(20))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord] x(2))
		setConstant(unit)
lbl(204878)	definition(x(7) 204892 pid('NoElse,init/fast' 1 pos('./compiler/Core.oz' 708 6) nil 1) <Q: 1325> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(204878)
lbl(204892)	definition(x(9) 204918 pid('NoElse,init/slow' 1 pos('./compiler/Core.oz' 708 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1325> 3)
		endDefinition(204892)
lbl(204918)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204928)	definition(x(7) 204945 pid('NoElse,getCoord/fast' 1 pos('./compiler/Core.oz' 711 6) nil 2) <Q: 1326> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(204928)
lbl(204945)	definition(x(9) 204971 pid('NoElse,getCoord/slow' 1 pos('./compiler/Core.oz' 711 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1326> 3)
		endDefinition(204945)
lbl(204971)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(7))
lbl(204981)	definition(x(7) 204993 pid('NoElse,output/fast' 2 pos('./compiler/Core.oz' 714 6) nil 2) <Q: 1327> nil)
		getLiteral(nil x(1))
		return
		endDefinition(204981)
lbl(204993)	definition(x(9) 205028 pid('NoElse,output/slow' 1 pos('./compiler/Core.oz' 714 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1327> 5)
		endDefinition(204993)
lbl(205028)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('NoElse' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) threadNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) threadNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(24))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(205120)	definition(x(7) 205156 pid('ThreadNode,init/fast' 2 pos('./compiler/Core.oz' 724 6) nil 2) <Q: 1328> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205120)
lbl(205156)	definition(x(9) 205191 pid('ThreadNode,init/slow' 1 pos('./compiler/Core.oz' 724 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1328> 5)
		endDefinition(205156)
lbl(205191)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205201)	definition(x(7) 205243 pid('ThreadNode,output/fast' 2 pos('./compiler/Core.oz' 728 6) nil 5) <Q: 1329> [y(49) y(54) y(50)])
		getRecord('#' 7 x(1))
		unifyLiteral('thread')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(205201)
lbl(205243)	definition(x(9) 205278 pid('ThreadNode,output/slow' 1 pos('./compiler/Core.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1329> 5)
		endDefinition(205243)
lbl(205278)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ThreadNode' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) tryNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) tryNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(25))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [catchStatements exception tryStatements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(205372)	definition(x(7) 205438 pid('TryNode,init/fast' 4 pos('./compiler/Core.oz' 738 6) nil 4) <Q: 1330> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(tryStatements x(0) cache)
		move(y(0) x(0))
		inlineAssign(exception x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(catchStatements x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(205372)
lbl(205438)	definition(x(9) 205485 pid('TryNode,init/slow' 1 pos('./compiler/Core.oz' 738 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1330> 9)
		endDefinition(205438)
lbl(205485)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205495)	definition(x(7) 205589 pid('TryNode,output/fast' 2 pos('./compiler/Core.oz' 744 6) nil 5) <Q: 1331> [y(49) y(54) y(50)])
		allocateL3
		getRecord('#' 15 x(1))
		unifyLiteral('try')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('catch ')
		unifyVariable(y(0))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(1))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(tryStatements x(4) cache)
		move(x(0) y(2))
		move(x(4) x(0))
		move(g(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(exception x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(catchStatements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(205495)
lbl(205589)	definition(x(9) 205624 pid('TryNode,output/slow' 1 pos('./compiler/Core.oz' 744 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1331> 5)
		endDefinition(205589)
lbl(205624)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('TryNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) lockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) lockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(26))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [lockVar statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(205716)	definition(x(7) 205760 pid('LockNode,init/fast' 3 pos('./compiler/Core.oz' 756 6) nil 3) <Q: 1332> nil)
		allocateL2
		inlineAssign(lockVar x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205716)
lbl(205760)	definition(x(9) 205801 pid('LockNode,init/slow' 1 pos('./compiler/Core.oz' 756 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1332> 7)
		endDefinition(205760)
lbl(205801)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205811)	definition(x(7) 205874 pid('LockNode,output/fast' 2 pos('./compiler/Core.oz' 761 6) nil 4) <Q: 1333> [y(49) y(54) y(50)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyLiteral('lock ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(lockVar x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(205811)
lbl(205874)	definition(x(9) 205909 pid('LockNode,output/slow' 1 pos('./compiler/Core.oz' 761 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1333> 5)
		endDefinition(205874)
lbl(205909)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('LockNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) classNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(27))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attributes designator features isToplevel methods parents printName properties] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
lbl(206013)	definition(x(7) 206057 pid('ClassNode,init/fast' 7 pos('./compiler/Core.oz' 775 6) nil 7) <Q: 1334> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(parents x(1) cache)
		inlineAssign(properties x(2) cache)
		inlineAssign(attributes x(3) cache)
		inlineAssign(features x(4) cache)
		inlineAssign(methods x(5) cache)
		inlineAssign(coord x(6) cache)
		return
		endDefinition(206013)
lbl(206057)	definition(x(9) 206122 pid('ClassNode,init/slow' 1 pos('./compiler/Core.oz' 775 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1334> 15)
		endDefinition(206057)
lbl(206122)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(206132)	definition(x(7) 206146 pid('ClassNode,setPrintName/fast' 1 pos('./compiler/Core.oz' 784 6) nil 1) <Q: 1335> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(206132)
lbl(206146)	definition(x(9) 206172 pid('ClassNode,setPrintName/slow' 1 pos('./compiler/Core.oz' 784 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1335> 3)
		endDefinition(206146)
lbl(206172)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(206182)	definition(x(7) 206816 pid('ClassNode,output/fast' 2 pos('./compiler/Core.oz' 787 6) nil 5) <Q: 1336> [y(49) y(50) y(54) y(51) y(53) y(52)])
		allocateL9
		getRecord('#' 13 x(1))
		unifyLiteral('class ')
		unifyVariable(x(1))
		unifyValVar(g(0) x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(designator x(3) cache)
		move(x(0) y(6))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(parents x(0) cache)
		testLiteral(x(0) nil 206282)
lbl(206241)	inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206282)
lbl(206250)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206282)
lbl(206259)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206282)
lbl(206268)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206282)
lbl(206277)	getLiteral(nil y(0))
		branch(206285)
lbl(206282)	unify(y(0) g(2))
lbl(206285)	inlineAt(parents x(0) cache)
		testList(x(0) 206369)
lbl(206293)	getRecord('#' 7 y(1))
		unifyValue(g(3))
		unifyLiteral('from')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(parents x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206364)
lbl(206332)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206364)
lbl(206341)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206364)
lbl(206350)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206364)
lbl(206359)	getLiteral(nil y(0))
		branch(206372)
lbl(206364)	unify(y(0) g(2))
		branch(206372)
lbl(206369)	getLiteral(nil y(1))
lbl(206372)	inlineAt(properties x(0) cache)
		testList(x(0) 206447)
lbl(206380)	getRecord('#' 7 y(2))
		unifyValue(g(3))
		unifyLiteral('prop')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(properties x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206442)
lbl(206419)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206442)
lbl(206428)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206442)
lbl(206437)	getLiteral(nil y(0))
		branch(206450)
lbl(206442)	unify(y(0) g(2))
		branch(206450)
lbl(206447)	getLiteral(nil y(2))
lbl(206450)	inlineAt(attributes x(0) cache)
		testList(x(0) 206625)
lbl(206458)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setVariable(y(8))
lbl(206481)	definition(x(1) 206547 pid('' 3 pos('./compiler/Core.oz' 821 9) nil 7) unit [y(6)])
		shallowGuard(206534)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206497)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206534)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(821)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206481)
lbl(206547)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(3))
		unifyValue(g(3))
		unifyLiteral('attr')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(8) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206620)
lbl(206606)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206620)
lbl(206615)	getLiteral(nil y(0))
		branch(206628)
lbl(206620)	unify(y(0) g(2))
		branch(206628)
lbl(206625)	getLiteral(nil y(3))
lbl(206628)	inlineAt(features x(0) cache)
		testList(x(0) 206794)
lbl(206636)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(3))
		setVariable(y(7))
lbl(206659)	definition(x(1) 206725 pid('' 3 pos('./compiler/Core.oz' 831 9) nil 7) unit [y(6)])
		shallowGuard(206712)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206675)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206712)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(831)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206659)
lbl(206725)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(4))
		unifyValue(g(3))
		unifyLiteral('feat')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(7) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(3) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206789)
lbl(206784)	getLiteral(nil y(0))
		branch(206797)
lbl(206789)	unify(y(0) g(2))
		branch(206797)
lbl(206794)	getLiteral(nil y(4))
lbl(206797)	inlineAt(methods x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(6) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1259> 9)
		endDefinition(206182)
lbl(206816)	definition(x(9) 206851 pid('ClassNode,output/slow' 1 pos('./compiler/Core.oz' 787 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1336> 5)
		endDefinition(206816)
lbl(206851)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ClassNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) method x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) method x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(28))
		setValue(x(8))
		putRecord('attr' [allVariables coord formalArgs label predicateRef statements] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(206941)	definition(x(8) 206990 pid('Method,init/fast' 4 pos('./compiler/Core.oz' 846 6) nil 4) <Q: 1337> nil)
		allocateL2
		inlineAssign(label x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		move(x(3) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(206941)
lbl(206990)	definition(x(9) 207037 pid('Method,init/slow' 1 pos('./compiler/Core.oz' 846 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1337> 9)
		endDefinition(206990)
lbl(207037)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207047)	definition(x(8) 207061 pid('Method,setAllVariables/fast' 1 pos('./compiler/Core.oz' 852 6) nil 1) <Q: 1338> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(207047)
lbl(207061)	definition(x(9) 207087 pid('Method,setAllVariables/slow' 1 pos('./compiler/Core.oz' 852 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1338> 3)
		endDefinition(207061)
lbl(207087)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(8))
lbl(207097)	definition(x(8) 207114 pid('Method,getCoord/fast' 1 pos('./compiler/Core.oz' 855 6) nil 2) <Q: 1339> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207097)
lbl(207114)	definition(x(9) 207140 pid('Method,getCoord/slow' 1 pos('./compiler/Core.oz' 855 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1339> 3)
		endDefinition(207114)
lbl(207140)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(207150)	definition(x(8) 207240 pid('Method,output/fast' 2 pos('./compiler/Core.oz' 858 6) nil 5) <Q: 1340> [y(51) y(52) y(49) y(54) y(50) y(53)])
		allocateL4
		getRecord('#' 15 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyLiteral(')')
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(1))
		unifyValVar(g(3) y(2))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1259> 9)
		endDefinition(207150)
lbl(207240)	definition(x(9) 207275 pid('Method,output/slow' 1 pos('./compiler/Core.oz' 858 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1340> 5)
		endDefinition(207240)
lbl(207275)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 4 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Method' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methodWithDesignator x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methodWithDesignator x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(29))
		setValue(x(8))
		putList(x(8))
		setValue(y(27))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isOpen messageDesignator] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207374)	definition(x(7) 207415 pid('MethodWithDesignator,init/fast' 6 pos('./compiler/Core.oz' 869 6) nil 6) <Q: 1341> [y(27)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true init false 4) 0)
		move(y(0) x(0))
		inlineAssign(isOpen x(0) cache)
		move(y(1) x(0))
		inlineAssign(messageDesignator x(0) cache)
		deAllocateL2
		return
		endDefinition(207374)
lbl(207415)	definition(x(9) 207474 pid('MethodWithDesignator,init/slow' 1 pos('./compiler/Core.oz' 869 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1341> 13)
		endDefinition(207415)
lbl(207474)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(207484)	definition(x(7) 207643 pid('MethodWithDesignator,output/fast' 2 pos('./compiler/Core.oz' 874 6) nil 5) <Q: 1342> [y(51) y(52) y(49) y(54) y(50) y(53)])
		allocateL6
		getRecord('#' 17 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral(') = ')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(5))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 207592 207597)
		inlineAt(formalArgs x(0) cache)
		testLiteral(x(0) nil 207582)
lbl(207577)	getLiteral('...' y(1))
		branch(207608)
lbl(207582)	getRecord('#' 2 y(1))
		unifyValue(g(5))
		unifyLiteral('...')
		branch(207608)
lbl(207592)	getLiteral(nil y(1))
		branch(207608)
lbl(207597)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(877)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(207608)	inlineAt(messageDesignator x(2) cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(207484)
lbl(207643)	definition(x(9) 207678 pid('MethodWithDesignator,output/slow' 1 pos('./compiler/Core.oz' 874 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1342> 5)
		endDefinition(207643)
lbl(207678)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethodWithDesignator' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormal x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormal x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(30))
		setValue(x(8))
		putRecord('attr' [arg feature] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207758)	definition(x(8) 207777 pid('MethFormal,init/fast' 2 pos('./compiler/Core.oz' 888 6) nil 2) <Q: 1343> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		return
		endDefinition(207758)
lbl(207777)	definition(x(9) 207812 pid('MethFormal,init/slow' 1 pos('./compiler/Core.oz' 888 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1343> 5)
		endDefinition(207777)
lbl(207812)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207822)	definition(x(8) 207839 pid('MethFormal,getFeature/fast' 1 pos('./compiler/Core.oz' 892 6) nil 2) <Q: 1344> nil)
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207822)
lbl(207839)	definition(x(9) 207865 pid('MethFormal,getFeature/slow' 1 pos('./compiler/Core.oz' 892 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1344> 3)
		endDefinition(207839)
lbl(207865)	putRecord('#' [1 2 fast] x(11))
		setConstant(getFeature)
		setValue(x(9))
		setValue(x(8))
lbl(207875)	definition(x(8) 207892 pid('MethFormal,getVariable/fast' 1 pos('./compiler/Core.oz' 895 6) nil 2) <Q: 1345> nil)
		inlineAt(arg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207875)
lbl(207892)	definition(x(9) 207918 pid('MethFormal,getVariable/slow' 1 pos('./compiler/Core.oz' 895 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1345> 3)
		endDefinition(207892)
lbl(207918)	putRecord('#' [1 2 fast] x(12))
		setConstant('getVariable')
		setValue(x(9))
		setValue(x(8))
lbl(207928)	definition(x(8) 207940 pid('MethFormal,hasDefault/fast' 1 pos('./compiler/Core.oz' 898 6) nil 1) <Q: 1346> nil)
		getLiteral(false x(0))
		return
		endDefinition(207928)
lbl(207940)	definition(x(9) 207966 pid('MethFormal,hasDefault/slow' 1 pos('./compiler/Core.oz' 898 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1346> 3)
		endDefinition(207940)
lbl(207966)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(8))
lbl(207976)	definition(x(8) 208026 pid('MethFormal,output2/fast' 3 pos('./compiler/Core.oz' 901 6) nil 4) <Q: 1347> nil)
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(': ')
		unifyVariable(y(0))
		inlineAt(feature x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(207976)
lbl(208026)	definition(x(9) 208067 pid('MethFormal,output2/slow' 1 pos('./compiler/Core.oz' 901 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1347> 7)
		endDefinition(208026)
lbl(208067)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MethFormal' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalOptional x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalOptional x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(31))
		setValue(x(8))
		putList(x(8))
		setValue(y(29))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isInitialized] x(2))
		setConstant(unit)
lbl(208166)	definition(x(7) 208190 pid('MethFormalOptional,init/fast' 3 pos('./compiler/Core.oz' 910 6) nil 3) <Q: 1348> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		inlineAssign(isInitialized x(2) cache)
		return
		endDefinition(208166)
lbl(208190)	definition(x(9) 208231 pid('MethFormalOptional,init/slow' 1 pos('./compiler/Core.oz' 910 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1348> 7)
		endDefinition(208190)
lbl(208231)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208241)	definition(x(7) 208253 pid('MethFormalOptional,hasDefault/fast' 1 pos('./compiler/Core.oz' 915 6) nil 1) <Q: 1349> nil)
		getLiteral(true x(0))
		return
		endDefinition(208241)
lbl(208253)	definition(x(9) 208279 pid('MethFormalOptional,hasDefault/slow' 1 pos('./compiler/Core.oz' 915 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1349> 3)
		endDefinition(208253)
lbl(208279)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208289)	definition(x(7) 208308 pid('MethFormalOptional,output2/fast' 3 pos('./compiler/Core.oz' 918 6) nil 3) <Q: 1350> [y(29)])
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= _')
		genCall(gci(g(0) true output2 true 3) 0)
		endDefinition(208289)
lbl(208308)	definition(x(9) 208349 pid('MethFormalOptional,output2/slow' 1 pos('./compiler/Core.oz' 918 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1350> 7)
		endDefinition(208308)
lbl(208349)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalOptional' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalWithDefault x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(32))
		setValue(x(8))
		putList(x(8))
		setValue(y(29))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [default] x(2))
		setConstant(unit)
lbl(208441)	definition(x(7) 208466 pid('MethFormalWithDefault,init/fast' 3 pos('./compiler/Core.oz' 927 6) nil 3) <Q: 1351> [y(29)])
		allocateL1
		move(x(2) y(0))
		genCall(gci(g(0) true init false 2) 0)
		move(y(0) x(0))
		inlineAssign(default x(0) cache)
		deAllocateL1
		return
		endDefinition(208441)
lbl(208466)	definition(x(9) 208507 pid('MethFormalWithDefault,init/slow' 1 pos('./compiler/Core.oz' 927 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1351> 7)
		endDefinition(208466)
lbl(208507)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208517)	definition(x(7) 208529 pid('MethFormalWithDefault,hasDefault/fast' 1 pos('./compiler/Core.oz' 931 6) nil 1) <Q: 1352> nil)
		getLiteral(true x(0))
		return
		endDefinition(208517)
lbl(208529)	definition(x(9) 208555 pid('MethFormalWithDefault,hasDefault/slow' 1 pos('./compiler/Core.oz' 931 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1352> 3)
		endDefinition(208529)
lbl(208555)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208565)	definition(x(7) 208617 pid('MethFormalWithDefault,output2/fast' 3 pos('./compiler/Core.oz' 934 6) nil 6) <Q: 1353> [y(29) y(0)])
		allocateL1
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= ')
		unifyVariable(y(0))
		genCall(gci(g(0) true output2 false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(default x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		deAllocateL1
		tailCall(x(4) 4)
		endDefinition(208565)
lbl(208617)	definition(x(9) 208658 pid('MethFormalWithDefault,output2/slow' 1 pos('./compiler/Core.oz' 934 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1353> 7)
		endDefinition(208617)
lbl(208658)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalWithDefault' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) objectLockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) objectLockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(33))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(208750)	definition(x(7) 208786 pid('ObjectLockNode,init/fast' 2 pos('./compiler/Core.oz' 945 6) nil 2) <Q: 1354> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(208750)
lbl(208786)	definition(x(9) 208821 pid('ObjectLockNode,init/slow' 1 pos('./compiler/Core.oz' 945 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1354> 5)
		endDefinition(208786)
lbl(208821)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208831)	definition(x(7) 208873 pid('ObjectLockNode,output/fast' 2 pos('./compiler/Core.oz' 949 6) nil 5) <Q: 1355> [y(49) y(54) y(50)])
		getRecord('#' 7 x(1))
		unifyLiteral('lock')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(208831)
lbl(208873)	definition(x(9) 208908 pid('ObjectLockNode,output/slow' 1 pos('./compiler/Core.oz' 949 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1355> 5)
		endDefinition(208873)
lbl(208908)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'getSelf' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'getSelf' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(34))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [destination] x(2))
		setConstant(unit)
lbl(208998)	definition(x(7) 209017 pid('GetSelf,init/fast' 2 pos('./compiler/Core.oz' 958 6) nil 2) <Q: 1356> nil)
		inlineAssign(destination x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(208998)
lbl(209017)	definition(x(9) 209052 pid('GetSelf,init/slow' 1 pos('./compiler/Core.oz' 958 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1356> 5)
		endDefinition(209017)
lbl(209052)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209062)	definition(x(7) 209091 pid('GetSelf,output/fast' 2 pos('./compiler/Core.oz' 962 6) nil 4) <Q: 1357> nil)
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = self')
		unifyVariable(x(2))
		inlineAt(destination x(3) cache)
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(209062)
lbl(209091)	definition(x(9) 209126 pid('GetSelf,output/slow' 1 pos('./compiler/Core.oz' 962 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1357> 5)
		endDefinition(209091)
lbl(209126)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('GetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) failNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(35))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209195)	definition(x(7) 209209 pid('FailNode,init/fast' 1 pos('./compiler/Core.oz' 970 6) nil 1) <Q: 1358> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(209195)
lbl(209209)	definition(x(9) 209235 pid('FailNode,init/slow' 1 pos('./compiler/Core.oz' 970 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1358> 3)
		endDefinition(209209)
lbl(209235)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209245)	definition(x(7) 209257 pid('FailNode,output/fast' 2 pos('./compiler/Core.oz' 973 6) nil 2) <Q: 1359> nil)
		getLiteral('fail' x(1))
		return
		endDefinition(209245)
lbl(209257)	definition(x(9) 209292 pid('FailNode,output/slow' 1 pos('./compiler/Core.oz' 973 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1359> 5)
		endDefinition(209257)
lbl(209292)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) ifNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) ifNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(36))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative clauses] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(209384)	definition(x(7) 209408 pid('IfNode,init/fast' 3 pos('./compiler/Core.oz' 982 6) nil 3) <Q: 1360> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(alternative x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(209384)
lbl(209408)	definition(x(9) 209449 pid('IfNode,init/slow' 1 pos('./compiler/Core.oz' 982 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1360> 7)
		endDefinition(209408)
lbl(209449)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209459)	definition(x(7) 209530 pid('IfNode,output/fast' 2 pos('./compiler/Core.oz' 987 6) nil 5) <Q: 1361> [y(49) y(50) y(54)])
		allocateL2
		getRecord('#' 7 x(1))
		unifyLiteral('cond ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValVar(g(2) y(0))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(209459)
lbl(209530)	definition(x(9) 209565 pid('IfNode,output/slow' 1 pos('./compiler/Core.oz' 987 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1361> 5)
		endDefinition(209530)
lbl(209565)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('IfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) choicesAndDisjunctions x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) choicesAndDisjunctions x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(37))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [clauses] x(2))
		setConstant(unit)
lbl(209649)	definition(x(7) 209668 pid('ChoicesAndDisjunctions,init/fast' 2 pos('./compiler/Core.oz' 997 6) nil 2) <Q: 1362> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(209649)
lbl(209668)	definition(x(9) 209703 pid('ChoicesAndDisjunctions,init/slow' 1 pos('./compiler/Core.oz' 997 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1362> 5)
		endDefinition(209668)
lbl(209703)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('ChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) orNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(38))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209773)	definition(x(7) 209822 pid('OrNode,output/fast' 2 pos('./compiler/Core.oz' 1005 6) nil 5) <Q: 1363> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('or ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(209773)
lbl(209822)	definition(x(9) 209857 pid('OrNode,output/slow' 1 pos('./compiler/Core.oz' 1005 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1363> 5)
		endDefinition(209822)
lbl(209857)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('OrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) disNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(39))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209924)	definition(x(7) 209973 pid('DisNode,output/fast' 2 pos('./compiler/Core.oz' 1012 6) nil 5) <Q: 1364> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('dis ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(209924)
lbl(209973)	definition(x(9) 210008 pid('DisNode,output/slow' 1 pos('./compiler/Core.oz' 1012 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1364> 5)
		endDefinition(209973)
lbl(210008)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('DisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) choiceNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(40))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(210075)	definition(x(7) 210124 pid('ChoiceNode,output/fast' 2 pos('./compiler/Core.oz' 1019 6) nil 5) <Q: 1365> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('choice ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(210075)
lbl(210124)	definition(x(9) 210159 pid('ChoiceNode,output/slow' 1 pos('./compiler/Core.oz' 1019 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1365> 5)
		endDefinition(210124)
lbl(210159)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'clause' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'clause' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(41))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [guard kind localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(210247)	definition(x(8) 210310 pid('Clause,init/fast' 4 pos('./compiler/Core.oz' 1028 6) nil 4) <Q: 1366> nil)
		allocateL3
		inlineAssign(localVars x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(guard x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL3
		return
		endDefinition(210247)
lbl(210310)	definition(x(9) 210357 pid('Clause,init/slow' 1 pos('./compiler/Core.oz' 1028 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1366> 9)
		endDefinition(210310)
lbl(210357)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(210367)	definition(x(8) 210514 pid('Clause,output/fast' 2 pos('./compiler/Core.oz' 1034 6) nil 6) <Q: 1367> [y(50) y(54) y(49) y(53)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(g(0))
		unifyValue(g(1))
		unifyLiteral('then')
		unifyValue(g(2))
		unifyValVar(g(1) x(3))
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		match(x(4) ht(210452 [onScalar(nil 210409) onRecord('|' 2 210414)]))
lbl(210409)	getLiteral(nil x(1))
		branch(210465)
lbl(210414)	getRecord('#' 6 x(1))
		unifyVariable(x(4))
		unifyValue(g(0))
		unifyValue(g(3))
		unifyLiteral('in')
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(localVars x(5) cache)
		move(x(5) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1259> 8)
		branch(210465)
lbl(210452)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1038)
		setValue(x(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(210465)	inlineAt(guard x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(kind x(0) cache)
		testLiteral(x(0) 'waitTop' 210495)
lbl(210490)	getLiteral('skip   % top commit' y(2))
		deAllocateL3
		return
lbl(210495)	inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(210367)
lbl(210514)	definition(x(9) 210549 pid('Clause,output/slow' 1 pos('./compiler/Core.oz' 1034 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1367> 5)
		endDefinition(210514)
lbl(210549)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('Clause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) valueNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) valueNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(42))
		setValue(x(8))
		putRecord('attr' [coord value] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(57))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI('Record.record' [x(8) x(3)]#[x(9)])
lbl(210649)	definition(x(8) 210679 pid('ValueNode,init/fast' 2 pos('./compiler/Core.oz' 1049 6) nil 2) <Q: 1368> [y(1)])
		inlineAssign(value x(0) cache)
		inlineAssign(coord x(1) cache)
		move(g(0) x(0))
		inlineDot(x(0) valueNode x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(210649)
lbl(210679)	definition(x(10) 210714 pid('ValueNode,init/slow' 1 pos('./compiler/Core.oz' 1049 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1368> 5)
		endDefinition(210679)
lbl(210714)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(210724)	definition(x(8) 210736 pid('ValueNode,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1054 6) nil 1) <Q: 1369> nil)
		getLiteral(false x(0))
		return
		endDefinition(210724)
lbl(210736)	definition(x(10) 210762 pid('ValueNode,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1054 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1369> 3)
		endDefinition(210736)
lbl(210762)	putRecord('#' [1 2 fast] x(12))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(210772)	definition(x(8) 210784 pid('ValueNode,isConstruction/fast' 1 pos('./compiler/Core.oz' 1057 6) nil 1) <Q: 1370> nil)
		getLiteral(false x(0))
		return
		endDefinition(210772)
lbl(210784)	definition(x(10) 210810 pid('ValueNode,isConstruction/slow' 1 pos('./compiler/Core.oz' 1057 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1370> 3)
		endDefinition(210784)
lbl(210810)	putRecord('#' [1 2 fast] x(13))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(210820)	definition(x(8) 210837 pid('ValueNode,getCoord/fast' 1 pos('./compiler/Core.oz' 1060 6) nil 2) <Q: 1371> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210820)
lbl(210837)	definition(x(10) 210863 pid('ValueNode,getCoord/slow' 1 pos('./compiler/Core.oz' 1060 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1371> 3)
		endDefinition(210837)
lbl(210863)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(210873)	definition(x(8) 210890 pid('ValueNode,getValue/fast' 1 pos('./compiler/Core.oz' 1063 6) nil 2) <Q: 1372> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210873)
lbl(210890)	definition(x(10) 210916 pid('ValueNode,getValue/slow' 1 pos('./compiler/Core.oz' 1063 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1372> 3)
		endDefinition(210890)
lbl(210916)	putRecord('#' [1 2 fast] x(15))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(210926)	definition(x(8) 210942 pid('ValueNode,outputEscaped2/fast' 3 pos('./compiler/Core.oz' 1066 6) nil 5) <Q: 1373> nil)
		getSelf(x(4))
		tailSendMsg(output2 x(4) 3 cache)
		endDefinition(210926)
lbl(210942)	definition(x(10) 210983 pid('ValueNode,outputEscaped2/slow' 1 pos('./compiler/Core.oz' 1066 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1373> 7)
		endDefinition(210942)
lbl(210983)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('ValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) atomNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(43))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211063)	definition(x(7) 211103 pid('AtomNode,output2/fast' 3 pos('./compiler/Core.oz' 1074 6) nil 6) <Q: 1374> [y(0)])
		getLiteral(nil x(2))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211063)
lbl(211103)	definition(x(9) 211144 pid('AtomNode,output2/slow' 1 pos('./compiler/Core.oz' 1074 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1374> 7)
		endDefinition(211103)
lbl(211144)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211154)	definition(x(7) 211194 pid('AtomNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1078 6) nil 6) <Q: 1375> [y(0)])
		getLiteral(nil x(3))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211154)
lbl(211194)	definition(x(9) 211241 pid('AtomNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1078 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1375> 9)
		endDefinition(211194)
lbl(211241)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('AtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) intNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(44))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211310)	definition(x(7) 211363 pid('IntNode,output2/fast' 3 pos('./compiler/Core.oz' 1087 6) nil 4) <Q: 1376> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 211352)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211352)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211310)
lbl(211363)	definition(x(9) 211404 pid('IntNode,output2/slow' 1 pos('./compiler/Core.oz' 1087 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1376> 7)
		endDefinition(211363)
lbl(211404)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211414)	definition(x(7) 211467 pid('IntNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1091 6) nil 4) <Q: 1377> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0 x(1))
		testLT(x(0) x(1) x(3) 211456)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211456)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211414)
lbl(211467)	definition(x(9) 211514 pid('IntNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1091 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1377> 9)
		endDefinition(211467)
lbl(211514)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('IntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) floatNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(3))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211583)	definition(x(7) 211636 pid('FloatNode,output2/fast' 3 pos('./compiler/Core.oz' 1100 6) nil 4) <Q: 1378> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(2))
		testLT(x(0) x(2) x(3) 211625)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211625)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211583)
lbl(211636)	definition(x(9) 211677 pid('FloatNode,output2/slow' 1 pos('./compiler/Core.oz' 1100 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1378> 7)
		endDefinition(211636)
lbl(211677)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211687)	definition(x(7) 211740 pid('FloatNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1104 6) nil 4) <Q: 1379> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(1))
		testLT(x(0) x(1) x(3) 211729)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211729)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211687)
lbl(211740)	definition(x(9) 211787 pid('FloatNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1104 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1379> 9)
		endDefinition(211740)
lbl(211787)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FloatNode' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variable x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variable x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(45))
		setValue(x(8))
		putRecord('attr' [coord isToplevel origin printName] x(2))
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
lbl(211871)	definition(x(8) 211906 pid('Variable,init/fast' 3 pos('./compiler/Core.oz' 1113 6) nil 3) <Q: 1380> [y(1)])
		inlineAssign(printName x(0) cache)
		inlineAssign(origin x(1) cache)
		inlineAssign(coord x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) variable x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(211871)
lbl(211906)	definition(x(9) 211947 pid('Variable,init/slow' 1 pos('./compiler/Core.oz' 1113 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1380> 7)
		endDefinition(211906)
lbl(211947)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(211957)	definition(x(8) 211969 pid('Variable,isRestricted/fast' 1 pos('./compiler/Core.oz' 1119 6) nil 1) <Q: 1381> nil)
		getLiteral(false x(0))
		return
		endDefinition(211957)
lbl(211969)	definition(x(9) 211995 pid('Variable,isRestricted/slow' 1 pos('./compiler/Core.oz' 1119 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1381> 3)
		endDefinition(211969)
lbl(211995)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRestricted)
		setValue(x(9))
		setValue(x(8))
lbl(212005)	definition(x(8) 212020 pid('Variable,isDenied/fast' 3 pos('./compiler/Core.oz' 1122 6) nil 3) <Q: 1382> nil)
		getLiteral(unit x(1))
		getLiteral(false x(2))
		return
		endDefinition(212005)
lbl(212020)	definition(x(9) 212061 pid('Variable,isDenied/slow' 1 pos('./compiler/Core.oz' 1122 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1382> 7)
		endDefinition(212020)
lbl(212061)	putRecord('#' [1 2 fast] x(12))
		setConstant(isDenied)
		setValue(x(9))
		setValue(x(8))
lbl(212071)	definition(x(8) 212088 pid('Variable,getPrintName/fast' 1 pos('./compiler/Core.oz' 1126 6) nil 2) <Q: 1383> nil)
		inlineAt(printName x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212071)
lbl(212088)	definition(x(9) 212114 pid('Variable,getPrintName/slow' 1 pos('./compiler/Core.oz' 1126 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1383> 3)
		endDefinition(212088)
lbl(212114)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPrintName)
		setValue(x(9))
		setValue(x(8))
lbl(212124)	definition(x(8) 212141 pid('Variable,getOrigin/fast' 1 pos('./compiler/Core.oz' 1129 6) nil 2) <Q: 1384> nil)
		inlineAt(origin x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212124)
lbl(212141)	definition(x(9) 212167 pid('Variable,getOrigin/slow' 1 pos('./compiler/Core.oz' 1129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1384> 3)
		endDefinition(212141)
lbl(212167)	putRecord('#' [1 2 fast] x(14))
		setConstant(getOrigin)
		setValue(x(9))
		setValue(x(8))
lbl(212177)	definition(x(8) 212194 pid('Variable,getCoord/fast' 1 pos('./compiler/Core.oz' 1132 6) nil 2) <Q: 1385> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212177)
lbl(212194)	definition(x(9) 212220 pid('Variable,getCoord/slow' 1 pos('./compiler/Core.oz' 1132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1385> 3)
		endDefinition(212194)
lbl(212220)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(212230)	definition(x(8) 212244 pid('Variable,setToplevel/fast' 1 pos('./compiler/Core.oz' 1135 6) nil 1) <Q: 1386> nil)
		inlineAssign(isToplevel x(0) cache)
		return
		endDefinition(212230)
lbl(212244)	definition(x(9) 212270 pid('Variable,setToplevel/slow' 1 pos('./compiler/Core.oz' 1135 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1386> 3)
		endDefinition(212244)
lbl(212270)	putRecord('#' [1 2 fast] x(16))
		setConstant(setToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(212280)	definition(x(8) 212297 pid('Variable,isToplevel/fast' 1 pos('./compiler/Core.oz' 1138 6) nil 2) <Q: 1387> nil)
		inlineAt(isToplevel x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212280)
lbl(212297)	definition(x(9) 212323 pid('Variable,isToplevel/slow' 1 pos('./compiler/Core.oz' 1138 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1387> 3)
		endDefinition(212297)
lbl(212323)	putRecord('#' [1 2 fast] x(17))
		setConstant(isToplevel)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(44))
lbl(212335)	definition(x(8) 212371 pid('Variable,occ/fast' 2 pos('./compiler/Core.oz' 1141 6) nil 4) <Q: 1388> [y(44)])
		allocateL2
		move(g(0) x(2))
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(212335)
lbl(212371)	definition(x(9) 212406 pid('Variable,occ/slow' 1 pos('./compiler/Core.oz' 1141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1388> 5)
		endDefinition(212371)
lbl(212406)	putRecord('#' [1 2 fast] x(18))
		setConstant(occ)
		setValue(x(9))
		setValue(x(8))
lbl(212416)	definition(x(8) 212493 pid('Variable,output/fast' 2 pos('./compiler/Core.oz' 1144 6) nil 3) <Q: 1389> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212454 212480)
		getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212454)	match(y(1) ht(212472 [onScalar('`unit`' 212457) onScalar('`true`' 212462) onScalar('`false`' 212467)]))
lbl(212457)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212462)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212467)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212472)	getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212480)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212416)
lbl(212493)	definition(x(9) 212528 pid('Variable,output/slow' 1 pos('./compiler/Core.oz' 1144 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1389> 5)
		endDefinition(212493)
lbl(212528)	putRecord('#' [1 2 fast] x(19))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
lbl(212538)	definition(x(8) 212631 pid('Variable,outputEscaped/fast' 2 pos('./compiler/Core.oz' 1154 6) nil 3) <Q: 1390> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212584 212618)
		getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212584)	match(y(1) ht(212602 [onScalar('`unit`' 212587) onScalar('`true`' 212592) onScalar('`false`' 212597)]))
lbl(212587)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212592)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212597)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212602)	getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212618)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1155)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212538)
lbl(212631)	definition(x(9) 212666 pid('Variable,outputEscaped/slow' 1 pos('./compiler/Core.oz' 1154 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1390> 5)
		endDefinition(212631)
lbl(212666)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(45))
lbl(212678)	definition(x(8) 212780 pid('Variable,outputPattern/fast' 3 pos('./compiler/Core.oz' 1164 6) nil 5) <Q: 1391> [y(45)])
		allocateL3
		inlineAt(printName x(3) cache)
lbl(212690)	definition(x(4) 212728 pid('' 2 pos('./compiler/Core.oz' 1165 14) nil 3) unit [x(3)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(2) 1 cache)
		move(y(1) x(0))
		move(g(0) x(1))
		callBI('Value.\'==\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(212690)
lbl(212728)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(2) 212758 212767)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true output true 2) 0)
lbl(212758)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true outputEscaped true 2) 0)
lbl(212767)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1165)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212678)
lbl(212780)	definition(x(9) 212821 pid('Variable,outputPattern/slow' 1 pos('./compiler/Core.oz' 1164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1391> 7)
		endDefinition(212780)
lbl(212821)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(x(7) x(0))
		move(x(8) x(1))
		move(y(45) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Variable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(7))
		setValue(y(46))
		setConstant(nil)
		putList(x(0))
		setValue(y(45))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [features] x(2))
		setConstant(unit)
lbl(212904)	definition(x(7) 212932 pid('RestrictedVariable,init/fast' 3 pos('./compiler/Core.oz' 1177 6) nil 3) <Q: 1392> [y(45)])
		allocateL1
		move(x(1) y(0))
		putConstant(user x(1))
		genCall(gci(g(0) true init false 3) 0)
		move(y(0) x(0))
		inlineAssign(features x(0) cache)
		deAllocateL1
		return
		endDefinition(212904)
lbl(212932)	definition(x(8) 212973 pid('RestrictedVariable,init/slow' 1 pos('./compiler/Core.oz' 1177 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1392> 7)
		endDefinition(212932)
lbl(212973)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(212983)	definition(x(7) 213006 pid('RestrictedVariable,isRestricted/fast' 1 pos('./compiler/Core.oz' 1181 6) nil 4) <Q: 1393> nil)
		inlineAt(features x(1) cache)
		putConstant(nil x(2))
		callBI('Value.\'\\=\'' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(212983)
lbl(213006)	definition(x(8) 213032 pid('RestrictedVariable,isRestricted/slow' 1 pos('./compiler/Core.oz' 1181 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1393> 3)
		endDefinition(213006)
lbl(213032)	putRecord('#' [1 2 fast] x(10))
		setConstant(isRestricted)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(213044)	definition(x(7) 213086 pid('RestrictedVariable,isDenied/fast' 3 pos('./compiler/Core.oz' 1184 6) nil 4) <Q: 1394> [y(46)])
		inlineAt(features x(3) cache)
		testLiteral(x(3) nil 213066)
lbl(213059)	getLiteral(unit x(1))
		getLiteral(false x(2))
		return
lbl(213066)	move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
		endDefinition(213044)
lbl(213086)	definition(x(8) 213127 pid('RestrictedVariable,isDenied/slow' 1 pos('./compiler/Core.oz' 1184 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1394> 7)
		endDefinition(213086)
lbl(213127)	putRecord('#' [1 2 fast] x(11))
		setConstant(isDenied)
		setValue(x(8))
		setValue(x(7))
lbl(213137)	definition(x(7) 213225 pid('RestrictedVariable,IsDenied/fast' 4 pos('./compiler/Core.oz' 1192 6) nil 7) <Q: 1395> [y(46)])
		match(x(0) ht(213210 [onScalar(nil 213146) onRecord('|' 2 213153)]))
lbl(213146)	getLiteral(unit x(2))
		getLiteral(true x(3))
		return
lbl(213153)	getVarVar(x(0) x(4))
		inlineDot(x(0) 1 x(5) cache)
		testBI('Value.\'==\'' [x(1) x(5)]#[x(6)] 213204)
		allocateL1
		putConstant(true x(1))
		inlineDot(x(0) 3 x(4) cache)
		unify(x(4) x(1))
		move(x(3) y(0))
		testRecord(x(0) '#' 4 213196)
lbl(213187)	getVoid(3)
		getVariable(x(0))
		unify(x(2) x(0))
		branch(213199)
lbl(213196)	getLiteral(unit x(2))
lbl(213199)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(213204)	move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
lbl(213210)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1206)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(213137)
lbl(213225)	definition(x(8) 213272 pid('RestrictedVariable,IsDenied/slow' 1 pos('./compiler/Core.oz' 1192 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1395> 9)
		endDefinition(213225)
lbl(213272)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: IsDenied>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(46) x(6))
		putConstant('feat' x(3))
		putConstant('RestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variableOccurrence x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variableOccurrence x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(47))
		setValue(x(8))
		putRecord('attr' [coord value variable] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(58))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI('Record.record' [x(8) x(3)]#[x(9)])
lbl(213372)	definition(x(8) 213398 pid('VariableOccurrence,init/fast' 2 pos('./compiler/Core.oz' 1215 6) nil 2) <Q: 1396> nil)
		inlineAssign(variable x(0) cache)
		inlineAssign(coord x(1) cache)
		getSelf(x(0))
		inlineAssign(value x(0) cache)
		return
		endDefinition(213372)
lbl(213398)	definition(x(10) 213433 pid('VariableOccurrence,init/slow' 1 pos('./compiler/Core.oz' 1215 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1396> 5)
		endDefinition(213398)
lbl(213433)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(213443)	definition(x(8) 213460 pid('VariableOccurrence,getCoord/fast' 1 pos('./compiler/Core.oz' 1220 6) nil 2) <Q: 1397> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213443)
lbl(213460)	definition(x(10) 213486 pid('VariableOccurrence,getCoord/slow' 1 pos('./compiler/Core.oz' 1220 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1397> 3)
		endDefinition(213460)
lbl(213486)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(213496)	definition(x(8) 213513 pid('VariableOccurrence,getValue/fast' 1 pos('./compiler/Core.oz' 1223 6) nil 2) <Q: 1398> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213496)
lbl(213513)	definition(x(10) 213539 pid('VariableOccurrence,getValue/slow' 1 pos('./compiler/Core.oz' 1223 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1398> 3)
		endDefinition(213513)
lbl(213539)	putRecord('#' [1 2 fast] x(13))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(213549)	definition(x(8) 213563 pid('VariableOccurrence,setValue/fast' 1 pos('./compiler/Core.oz' 1226 6) nil 1) <Q: 1399> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(213549)
lbl(213563)	definition(x(10) 213589 pid('VariableOccurrence,setValue/slow' 1 pos('./compiler/Core.oz' 1226 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1399> 3)
		endDefinition(213563)
lbl(213589)	putRecord('#' [1 2 fast] x(14))
		setConstant('setValue')
		setValue(x(10))
		setValue(x(8))
lbl(213599)	definition(x(8) 213611 pid('VariableOccurrence,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1229 6) nil 1) <Q: 1400> nil)
		getLiteral(true x(0))
		return
		endDefinition(213599)
lbl(213611)	definition(x(10) 213637 pid('VariableOccurrence,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1229 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1400> 3)
		endDefinition(213611)
lbl(213637)	putRecord('#' [1 2 fast] x(15))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213647)	definition(x(8) 213659 pid('VariableOccurrence,isConstruction/fast' 1 pos('./compiler/Core.oz' 1232 6) nil 1) <Q: 1401> nil)
		getLiteral(false x(0))
		return
		endDefinition(213647)
lbl(213659)	definition(x(10) 213685 pid('VariableOccurrence,isConstruction/slow' 1 pos('./compiler/Core.oz' 1232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1401> 3)
		endDefinition(213659)
lbl(213685)	putRecord('#' [1 2 fast] x(16))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(47))
lbl(213697)	definition(x(8) 213741 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1235 6) nil 5) <Q: 1402> [y(47)])
		allocateL2
		inlineAt(variable x(2) cache)
		inlineAt(coord x(1) cache)
		move(g(0) x(3))
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(213697)
lbl(213741)	definition(x(10) 213767 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1235 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1402> 3)
		endDefinition(213741)
lbl(213767)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeIntoPatternVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213777)	definition(x(8) 213794 pid('VariableOccurrence,getVariable/fast' 1 pos('./compiler/Core.oz' 1238 6) nil 2) <Q: 1403> nil)
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213777)
lbl(213794)	definition(x(10) 213820 pid('VariableOccurrence,getVariable/slow' 1 pos('./compiler/Core.oz' 1238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1403> 3)
		endDefinition(213794)
lbl(213820)	putRecord('#' [1 2 fast] x(18))
		setConstant('getVariable')
		setValue(x(10))
		setValue(x(8))
lbl(213830)	definition(x(8) 213867 pid('VariableOccurrence,output2/fast' 3 pos('./compiler/Core.oz' 1241 6) nil 3) <Q: 1404> [y(44)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(213830)
lbl(213867)	definition(x(10) 213908 pid('VariableOccurrence,output2/slow' 1 pos('./compiler/Core.oz' 1241 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1404> 7)
		endDefinition(213867)
lbl(213908)	putRecord('#' [1 2 fast] x(19))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(213918)	definition(x(8) 213955 pid('VariableOccurrence,outputEscaped2/fast' 3 pos('./compiler/Core.oz' 1245 6) nil 3) <Q: 1405> [y(44)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(outputEscaped x(2) 2 cache)
		endDefinition(213918)
lbl(213955)	definition(x(10) 213996 pid('VariableOccurrence,outputEscaped2/slow' 1 pos('./compiler/Core.oz' 1245 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1405> 7)
		endDefinition(213955)
lbl(213996)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
lbl(214006)	definition(x(8) 214049 pid('VariableOccurrence,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1249 6) nil 4) <Q: 1406> [y(44)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(outputPattern x(3) 3 cache)
		endDefinition(214006)
lbl(214049)	definition(x(10) 214096 pid('VariableOccurrence,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1249 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1406> 9)
		endDefinition(214049)
lbl(214096)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
lbl(214106)	definition(x(8) 214534 pid('VariableOccurrence,OutputValue/fast' 2 pos('./compiler/Core.oz' 1253 6) nil 6) <Q: 1407> [y(54) y(1) y(0)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(debugValue x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(3))
		testBool(y(2) 214157 214162)
		getRecord('#' 3 y(3))
		unifyValue(g(0))
		unifyLiteral('%    value: ')
		unifyVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) variableOccurrence x(2) cache)
		applMeth(ami(outputDebugValue 1) x(2))
		branch(214173)
lbl(214157)	getLiteral(unit y(3))
		branch(214173)
lbl(214162)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1256)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214173)	move(y(0) x(0))
		putConstant(debugType x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(0))
		testBool(y(2) 214463 214468)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(g(0))
		unifyLiteral('%    type: ')
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(y(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(4))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(5))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(6))
		unifyLiteral(nil)
		inlineAt(variable x(1) cache)
		move(x(2) x(0))
		sendMsg(outputDebugType x(1) 1 cache)
		inlineAt(variable x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(outputDebugProps x(1) 1 cache)
		testLiteral(y(7) unit 214268)
lbl(214263)	getLiteral(unit y(2))
		branch(214299)
lbl(214268)	getRecord('#' 3 y(2))
		unifyValue(g(0))
		unifyLiteral('%    prop: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(7) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214299)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugAttrs x(1) 1 cache)
		testLiteral(y(2) unit 214322)
lbl(214317)	getLiteral(unit y(4))
		branch(214353)
lbl(214322)	getRecord('#' 3 y(4))
		unifyValue(g(0))
		unifyLiteral('%    attr: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214353)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugFeats x(1) 1 cache)
		testLiteral(y(2) unit 214376)
lbl(214371)	getLiteral(unit y(5))
		branch(214407)
lbl(214376)	getRecord('#' 3 y(5))
		unifyValue(g(0))
		unifyLiteral('%    feat: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214407)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugMeths x(1) 1 cache)
		testLiteral(y(2) unit 214430)
lbl(214425)	getLiteral(unit y(6))
		branch(214479)
lbl(214430)	getRecord('#' 3 y(6))
		unifyValue(g(0))
		unifyLiteral('%    meth: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
		branch(214479)
lbl(214463)	getLiteral(nil y(0))
		branch(214479)
lbl(214468)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1261)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214479)	putList(x(0))
		setValue(y(3))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1263> 4)
		testLiteral(y(0) nil 214500)
lbl(214495)	getLiteral(nil y(1))
		deAllocateL8
		return
lbl(214500)	getRecord('#' 5 y(1))
		unifyValue(g(0))
		unifyLiteral('% ')
		unifyVariable(x(1))
		unifyLiteral(':')
		unifyValue(y(0))
		inlineAt(variable x(2) cache)
		putRecord(debug [realcore] x(0))
		setConstant(true)
		deAllocateL8
		tailSendMsg(output x(2) 2 cache)
		endDefinition(214106)
lbl(214534)	definition(x(10) 214569 pid('VariableOccurrence,OutputValue/slow' 1 pos('./compiler/Core.oz' 1253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1407> 5)
		endDefinition(214534)
lbl(214569)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: OutputValue>)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		move(y(44) x(6))
		putConstant(nil x(4))
		putConstant('VariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) patternVariableOccurrence x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(48))
		setValue(x(8))
		putList(x(8))
		setValue(y(44))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		move(y(47) x(6))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('PatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) token x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) token x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putRecord('attr' [value] x(2))
		setConstant(unit)
		putRecord('#' 2 x(7))
		setValue(y(59))
		setConstant(unit)
		putList(x(3))
		setValue(x(7))
		setConstant(nil)
		putConstant('feat' x(7))
		callBI('Record.record' [x(7) x(3)]#[x(9)])
lbl(214738)	definition(x(7) 214763 pid('Token,init/fast' 1 pos('./compiler/Core.oz' 1299 6) nil 2) <Q: 1408> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(214738)
lbl(214763)	definition(x(10) 214789 pid('Token,init/slow' 1 pos('./compiler/Core.oz' 1299 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1408> 3)
		endDefinition(214763)
lbl(214789)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(7))
lbl(214799)	definition(x(7) 214816 pid('Token,getValue/fast' 1 pos('./compiler/Core.oz' 1303 6) nil 2) <Q: 1409> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(214799)
lbl(214816)	definition(x(10) 214842 pid('Token,getValue/slow' 1 pos('./compiler/Core.oz' 1303 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1409> 3)
		endDefinition(214816)
lbl(214842)	putRecord('#' [1 2 fast] x(12))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(7))
lbl(214852)	definition(x(7) 214864 pid('Token,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1306 6) nil 1) <Q: 1410> nil)
		getLiteral(false x(0))
		return
		endDefinition(214852)
lbl(214864)	definition(x(10) 214890 pid('Token,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1306 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1410> 3)
		endDefinition(214864)
lbl(214890)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(7))
lbl(214900)	definition(x(7) 214912 pid('Token,isConstruction/fast' 1 pos('./compiler/Core.oz' 1309 6) nil 1) <Q: 1411> nil)
		getLiteral(false x(0))
		return
		endDefinition(214900)
lbl(214912)	definition(x(10) 214938 pid('Token,isConstruction/slow' 1 pos('./compiler/Core.oz' 1309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1411> 3)
		endDefinition(214912)
lbl(214938)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(7))
lbl(214948)	definition(x(7) 214960 pid('Token,isChunk/fast' 1 pos('./compiler/Core.oz' 1312 6) nil 1) <Q: 1412> nil)
		getLiteral(false x(0))
		return
		endDefinition(214948)
lbl(214960)	definition(x(10) 214986 pid('Token,isChunk/slow' 1 pos('./compiler/Core.oz' 1312 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1412> 3)
		endDefinition(214960)
lbl(214986)	putRecord('#' [1 2 fast] x(15))
		setConstant(isChunk)
		setValue(x(10))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(8) x(0))
		move(x(7) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('Token' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) nameToken x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) nameToken x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isToplevel] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(name)
lbl(215085)	definition(x(8) 215101 pid('NameToken,init/fast' 2 pos('./compiler/Core.oz' 1321 6) nil 2) <Q: 1413> [y(0)])
		inlineAssign(isToplevel x(1) cache)
		genCall(gci(g(0) true init true 1) 0)
		endDefinition(215085)
lbl(215101)	definition(x(9) 215136 pid('NameToken,init/slow' 1 pos('./compiler/Core.oz' 1321 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1413> 5)
		endDefinition(215101)
lbl(215136)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 1 x(8))
		setValue(x(10))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('NameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) procedureToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind predicateRef] x(3))
		setConstant(procedure)
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [clauseBodyStatements] x(3))
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) builtinToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(builtin)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BuiltinToken' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(cell)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('CellToken' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(chunk)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('ChunkToken' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(array)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ArrayToken' x(5))
		createVariableMove(y(53) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(dictionary)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('DictionaryToken' x(5))
		createVariableMove(y(54) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(bitArray)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BitArrayToken' x(5))
		createVariableMove(y(61) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attrs feats meths props] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant('class')
lbl(215511)	definition(x(7) 215525 pid('ClassToken,setProperties/fast' 1 pos('./compiler/Core.oz' 1370 6) nil 1) <Q: 1414> nil)
		inlineAssign(props x(0) cache)
		return
		endDefinition(215511)
lbl(215525)	definition(x(8) 215551 pid('ClassToken,setProperties/slow' 1 pos('./compiler/Core.oz' 1370 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1414> 3)
		endDefinition(215525)
lbl(215551)	putRecord('#' [1 2 fast] x(9))
		setConstant(setProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215561)	definition(x(7) 215578 pid('ClassToken,getProperties/fast' 1 pos('./compiler/Core.oz' 1373 6) nil 2) <Q: 1415> nil)
		inlineAt(props x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215561)
lbl(215578)	definition(x(8) 215604 pid('ClassToken,getProperties/slow' 1 pos('./compiler/Core.oz' 1373 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1415> 3)
		endDefinition(215578)
lbl(215604)	putRecord('#' [1 2 fast] x(10))
		setConstant(getProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215614)	definition(x(7) 215628 pid('ClassToken,setAttributes/fast' 1 pos('./compiler/Core.oz' 1376 6) nil 1) <Q: 1416> nil)
		inlineAssign(attrs x(0) cache)
		return
		endDefinition(215614)
lbl(215628)	definition(x(8) 215654 pid('ClassToken,setAttributes/slow' 1 pos('./compiler/Core.oz' 1376 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1416> 3)
		endDefinition(215628)
lbl(215654)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215664)	definition(x(7) 215681 pid('ClassToken,getAttributes/fast' 1 pos('./compiler/Core.oz' 1379 6) nil 2) <Q: 1417> nil)
		inlineAt(attrs x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215664)
lbl(215681)	definition(x(8) 215707 pid('ClassToken,getAttributes/slow' 1 pos('./compiler/Core.oz' 1379 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1417> 3)
		endDefinition(215681)
lbl(215707)	putRecord('#' [1 2 fast] x(12))
		setConstant(getAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215717)	definition(x(7) 215731 pid('ClassToken,setFeatures/fast' 1 pos('./compiler/Core.oz' 1382 6) nil 1) <Q: 1418> nil)
		inlineAssign(feats x(0) cache)
		return
		endDefinition(215717)
lbl(215731)	definition(x(8) 215757 pid('ClassToken,setFeatures/slow' 1 pos('./compiler/Core.oz' 1382 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1418> 3)
		endDefinition(215731)
lbl(215757)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215767)	definition(x(7) 215784 pid('ClassToken,getFeatures/fast' 1 pos('./compiler/Core.oz' 1385 6) nil 2) <Q: 1419> nil)
		inlineAt(feats x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215767)
lbl(215784)	definition(x(8) 215810 pid('ClassToken,getFeatures/slow' 1 pos('./compiler/Core.oz' 1385 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1419> 3)
		endDefinition(215784)
lbl(215810)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215820)	definition(x(7) 215834 pid('ClassToken,setMethods/fast' 1 pos('./compiler/Core.oz' 1388 6) nil 1) <Q: 1420> nil)
		inlineAssign(meths x(0) cache)
		return
		endDefinition(215820)
lbl(215834)	definition(x(8) 215860 pid('ClassToken,setMethods/slow' 1 pos('./compiler/Core.oz' 1388 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1420> 3)
		endDefinition(215834)
lbl(215860)	putRecord('#' [1 2 fast] x(15))
		setConstant(setMethods)
		setValue(x(8))
		setValue(x(7))
lbl(215870)	definition(x(7) 215887 pid('ClassToken,getMethods/fast' 1 pos('./compiler/Core.oz' 1391 6) nil 2) <Q: 1421> nil)
		inlineAt(meths x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215870)
lbl(215887)	definition(x(8) 215913 pid('ClassToken,getMethods/slow' 1 pos('./compiler/Core.oz' 1391 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1421> 3)
		endDefinition(215887)
lbl(215913)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMethods)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		putConstant('ClassToken' x(5))
		createVariableMove(y(62) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [classNode] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(object)
lbl(215976)	definition(x(7) 216015 pid('ObjectToken,init/fast' 2 pos('./compiler/Core.oz' 1400 6) nil 3) <Q: 1422> [y(1)])
		allocateL1
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(2) cache)
		move(x(1) y(0))
		applMeth(ami(init 0) x(2))
		move(y(0) x(0))
		inlineAssign(classNode x(0) cache)
		deAllocateL1
		return
		endDefinition(215976)
lbl(216015)	definition(x(8) 216050 pid('ObjectToken,init/slow' 1 pos('./compiler/Core.oz' 1400 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1422> 5)
		endDefinition(216015)
lbl(216050)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(216060)	definition(x(7) 216077 pid('ObjectToken,getClassNode/fast' 1 pos('./compiler/Core.oz' 1405 6) nil 2) <Q: 1423> nil)
		inlineAt(classNode x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(216060)
lbl(216077)	definition(x(8) 216103 pid('ObjectToken,getClassNode/slow' 1 pos('./compiler/Core.oz' 1405 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1423> 3)
		endDefinition(216077)
lbl(216103)	putRecord('#' [1 2 fast] x(10))
		setConstant(getClassNode)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('ObjectToken' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('lock')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('LockToken' x(5))
		createVariableMove(y(63) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(port)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('PortToken' x(5))
		createVariableMove(y(64) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('thread')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ThreadToken' x(5))
		createVariableMove(y(65) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(space)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('SpaceToken' x(5))
		createVariableMove(y(66) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] g(2))
		unifyValue(y(20))
		unifyValue(y(13))
		unifyValue(y(53))
		unifyValue(y(42))
		unifyValue(y(61))
		unifyValue(y(14))
		unifyValue(y(15))
		unifyValue(y(2))
		unifyValue(y(51))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(26))
		unifyValue(y(62))
		unifyValue(y(40))
		unifyValue(y(12))
		unifyValue(y(50))
		unifyValue(y(9))
		unifyValue(y(7))
		unifyValue(y(10))
		unifyValue(y(54))
		unifyValue(y(38))
		unifyValue(y(21))
		unifyValue(y(8))
		unifyValue(y(19))
		unifyValue(y(34))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(56))
		unifyValue(y(59))
		unifyValue(y(57))
		unifyValue(y(58))
		unifyValue(y(43))
		unifyValue(y(25))
		unifyValue(y(63))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(48))
		unifyValue(y(22))
		unifyValue(y(32))
		unifyValue(y(1))
		unifyValue(y(37))
		unifyValue(y(16))
		unifyValue(y(17))
		unifyValue(y(47))
		unifyValue(y(64))
		unifyValue(y(49))
		unifyValue(y(18))
		unifyValue(y(46))
		unifyValue(y(55))
		unifyValue(y(66))
		unifyValue(y(60))
		unifyValue(y(6))
		unifyValue(y(23))
		unifyValue(y(65))
		unifyValue(y(0))
		unifyValue(y(24))
		unifyValue(y(5))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(44))
		deAllocateL
		return
		endDefinition(185323)
lbl(216404)	tailCall(x(3) 0)
		endDefinition(183805)
lbl(216409)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(5))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putRecord(info [type] x(4))
		setValue(x(5))
		putRecord('import' ['CodeGen' 'StaticAnalysis' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('procedure/2' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant(value x(35))
		putConstant(value x(36))
		putConstant(value x(37))
		putConstant(value x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putConstant('class' x(54))
		putConstant('class' x(55))
		putConstant('class' x(56))
		putConstant('class' x(57))
		putConstant('class' x(58))
		putConstant('class' x(59))
		putConstant('class' x(60))
		putConstant('class' x(61))
		putConstant('class' x(62))
		putConstant('class' x(63))
		putConstant('class' x(64))
		putConstant('class' x(65))
		putConstant('class' x(66))
		putConstant('class' x(67))
		putConstant('class' x(68))
		putConstant('class' x(69))
		putConstant('class' x(70))
		putRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		createVariableMove(y(96) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant('Name.newUnique' x(4))
		putConstant(2 x(5))
		callBI('Boot.builtin' [x(4) x(5)]#[x(6)])
		putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(false)
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setConstant(true)
		setConstant(unit)
		getLiteral(<U: ooDefaultVar> x(5))
		getLiteral(<U: ooFreeFlag> x(6))
		getLiteral(<U: ooRequiredArg> x(7))
		putRecord(env ['false' 'true'] x(5))
		setConstant(false)
		setConstant(true)
lbl(216830)	definition(x(2) 217136 pid('' 2 pos('./compiler/RunTime.oz' 40 3) nil 4) <P: 1424> [x(4) y(164) x(5) y(169)])
		putList(x(2))
		setPredicateRef(<Q: 1425>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1427>)
		setValue(x(3))
lbl(216854)	definitionCopy(x(2) 217131 pid('/body' 0 pos('./compiler/RunTime.oz' 40 3) [once] 5) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL4
		move(g(0) x(0))
		inlineDot(x(0) 'Module' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(1) cache)
		inlineDot(x(0) 'Core' x(2) cache)
lbl(216882)	definition(x(4) 216937 pid('ApplyFunctor' 3 pos('./compiler/RunTime.oz' 50 6) nil 6) <Q: 1425> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) manager x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		sendMsg(init y(3) 0 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		move(y(3) x(3))
		deAllocateL4
		tailSendMsg(apply x(3) [1 2 url] cache)
		endDefinition(216882)
lbl(216937)	definition(x(3) 216980 pid('' 3 pos('./compiler/RunTime.oz' 58 2) nil 5) <Q: 1426> [x(2)])
		allocateL2
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(216937)
lbl(216980)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 172> 6)
		move(y(0) x(0))
		putConstant('ApplyFunctor' x(3))
		move(y(2) x(1))
		callBI('Record.adjoinAt' [x(0) x(3) x(1)]#[x(4)])
lbl(217012)	definition(x(1) 217108 pid('' 3 pos('./compiler/RunTime.oz' 63 8) nil 4) <Q: 1427> [g(4) y(1)])
		allocateL4
		putRecord('#' 3 x(3))
		setConstant('`')
		setValue(x(0))
		setConstant('`')
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		putConstant(runTimeLibrary x(1))
		putConstant(unit x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(1))
		move(y(0) x(0))
		sendMsg(valToSubst y(1) 1 cache)
		putConstant(multiple x(0))
		sendMsg(setUse y(1) 1 cache)
		putConstant(~1 x(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(217012)
lbl(217108)	move(x(4) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		getRecord('export' [literals procs tokens] g(5))
		unifyValue(g(1))
		unifyValue(y(0))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(216854)
lbl(217131)	tailCall(x(2) 0)
		endDefinition(216830)
lbl(217136)	putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(bool)
		setConstant(name)
		setConstant(name)
		setConstant(name)
		setConstant(bool)
		setConstant('unit')
		putRecord(record 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant(variable)
		setConstant(nil)
		putList(x(3))
		setConstant(nameToken)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(manager)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord('import' ['Core' 'Module' 'RunTimeLibrary'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		putConstant(value x(4))
		putConstant(value x(6))
		putRecord('export' [literals procs tokens] x(1))
		setValue(x(5))
		setValue(x(4))
		setValue(x(6))
		createVariableMove(y(97) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(217226)	definition(x(2) 258899 pid('' 2 pos('./compiler/Unnester.oz' 47 0) nil 4) <P: 1428> [y(156) y(148) y(155) y(160) y(104) y(150) y(152) y(149) y(2) y(142) y(186) y(187) y(114) y(169) y(143)])
		putList(x(2))
		setPredicateRef(<Q: 1429>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1438>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MyTopLevel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MyReporter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Refer>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1439>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1440>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1441>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1442>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1443>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1444>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1445>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1446>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1447>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1448>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1449>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1450>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1451>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1452>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1453>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1454>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1455>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1456>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1457>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1458>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1459>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1460>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1461>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1462>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1463>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1464>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1465>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1466>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1467>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1468>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1469>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1470>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1471>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1472>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1473>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1474>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1475>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1476>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1477>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1478>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1479>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1480>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1481>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1482>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1483>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1484>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1485>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1486>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1487>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1488>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1489>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1490>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1491>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1492>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1493>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1494>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1495>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1496>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1497>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: BA>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stateful>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StateUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ArgCounter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestToTerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestToVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GenerateNewVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestStatement>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestConstraint>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProc>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseImports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseExports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFromProp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMeth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethHead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeClauseBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestCase>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TranslatePattern>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestTry>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestFDList>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1498>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1499>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1500>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1501>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1502>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1503>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1504>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1505>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1506>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1507>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1508>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1509>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1510>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1511>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1512>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1513>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1514>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1515>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1516>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1517>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1518>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1519>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1520>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1521>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1522>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1523>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1524>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1525>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1526>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1527>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1528>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1529>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1530>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1531>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1532>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1533>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1534>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1535>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1536>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1537>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1538>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1539>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1540>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1541>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1542>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1543>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1544>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1545>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1546>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1547>)
		setValue(x(3))
lbl(218198)	definitionCopy(x(2) 258894 pid('/body' 0 pos('./compiler/Unnester.oz' 47 0) [once] 46) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) x(1)])
		allocateL7
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(7) cache)
		inlineDot(x(0) 'FD' x(1) cache)
		inlineDot(x(0) 'PrintName' x(2) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(218238)	definition(x(8) 218399 pid('CoordinatesOf' 2 pos('./compiler/TupleSyntax.oz' 27 0) nil 4) <Q: 1429> nil)
		match(x(0) ht(218387 [onRecord(fAnd 2 218247) onRecord(fEq 3 218252) onRecord(fAssign 3 218257) onRecord(fOrElse 3 218262) onRecord(fAndThen 3 218267) onRecord(fOpApplyStatement 3 218272) onRecord(fOpApply 3 218313) onRecord(fUnoptimizedDot 2 218354) onRecord(fFdCompare 4 218358) onRecord(fFdIn 4 218365) onRecord(fObjApply 3 218372) onRecord(fRecord 2 218377) onRecord(fOpenRecord 2 218382)]))
lbl(218247)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218252)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218257)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218262)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218267)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218272)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218297)
lbl(218284)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218297)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218297)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218313)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218338)
lbl(218325)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218338)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218338)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218354)	getLiteral(unit x(1))
		return
lbl(218358)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218365)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218372)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218377)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218382)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218387)	callBI('Record.width' [x(0)]#[x(2)])
		callBI('Record.\'.\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(218238)
lbl(218399)	definition(x(8) 218537 pid('VarListSub' 4 pos('./compiler/TupleSyntax.oz' 54 0) nil 5) <Q: 1430> nil)
		match(x(1) ht(218522 [onScalar(nil 218408) onRecord('|' 2 218412)]))
lbl(218408)	unify(x(2) x(3))
		return
lbl(218412)	allocateL7
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(4))
		unifyVoid(1)
lbl(218424)	definition(x(1) 218464 pid('' 2 pos('./compiler/TupleSyntax.oz' 58 19) nil 4) unit [x(4)])
		shallowGuard(218451)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(218440)	shallowThen
		move(g(0) x(0))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(218451)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218424)
lbl(218464)	moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(6))
		testBool(y(5) 218489 218497)
		unify(y(3) y(6))
		branch(218508)
lbl(218489)	getList(y(3))
		unifyValue(y(0))
		unifyValue(y(6))
		branch(218508)
lbl(218497)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(218508)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 1430> 9)
lbl(218522)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218399)
lbl(218537)	definition(x(8) 218742 pid('GetPatternVariablesStatement' 3 pos('./compiler/TupleSyntax.oz' 80 0) nil 5) <Q: 1431> nil)
		match(x(0) ht(218736 [onRecord(fVar 2 218546) onRecord(fEq 3 218553) onRecord(fProc 5 218558) onRecord(fFun 5 218563) onRecord(fFunctor 3 218568) onRecord(fClass 4 218573) onRecord(fScanner 6 218578) onRecord(fParser 7 218583) onRecord(fLocal 3 218588) onRecord(fAnd 2 218632) onRecord(fRecord 2 218657) onRecord(fOpenRecord 2 218693) onRecord(fColon 2 218729)]))
lbl(218546)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		return
lbl(218553)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218558)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218563)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218568)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218573)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218578)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218583)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218588)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1430> 9)
lbl(218632)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1431> 7)
lbl(218657)	getVoid(1)
		getVariable(x(0))
lbl(218661)	definition(x(4) 218681 pid('' 3 pos('./compiler/TupleSyntax.oz' 107 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218661)
lbl(218681)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218693)	getVoid(1)
		getVariable(x(0))
lbl(218697)	definition(x(4) 218717 pid('' 3 pos('./compiler/TupleSyntax.oz' 111 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218697)
lbl(218717)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218729)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218736)	unify(x(1) x(2))
		return
		endDefinition(218537)
lbl(218742)	definition(x(8) 218789 pid('GetPatternVariablesExpression' 3 pos('./compiler/TupleSyntax.oz' 121 0) nil 3) <Q: 1432> nil)
		match(x(0) ht(218784 [onRecord(fEq 3 218751) onRecord(fLocal 3 218776) onRecord(fAnd 2 218780)]))
lbl(218751)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1432> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1432> 7)
lbl(218776)	unify(x(1) x(2))
		return
lbl(218780)	unify(x(1) x(2))
		return
lbl(218784)	genFastCall(<Q: 1431> 7)
		endDefinition(218742)
lbl(218789)	definition(x(8) 218827 pid('Contains' 3 pos('./compiler/TupleSyntax.oz' 135 3) nil 5) <Q: 1433> nil)
		testList(x(0) 218821)
lbl(218798)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('Value.\'==\'' [x(1) x(0)]#[x(4)] 218815)
		getLiteral(true x(2))
		return
lbl(218815)	move(x(3) x(0))
		genFastCall(<Q: 1433> 7)
lbl(218821)	getLiteral(false x(2))
		return
		endDefinition(218789)
lbl(218827)	definition(x(8) 218917 pid('UniqueVariables' 2 pos('./compiler/TupleSyntax.oz' 142 3) nil 4) <Q: 1434> nil)
		match(x(0) ht(218902 [onScalar(nil 218836) onRecord('|' 2 218840)]))
lbl(218836)	getLiteral(nil x(1))
		return
lbl(218840)	allocateL4
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(3))
		unifyVoid(1)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1433> 6)
		testBool(y(3) 218879 218891)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218879)	getList(y(2))
		unifyValVar(y(0) x(1))
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218891)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(144)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(218902)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(148)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(218827)
lbl(218917)	definition(x(5) 218966 pid('PrivateAttrFeat' 3 pos('./compiler/TupleSyntax.oz' 152 0) nil 3) <Q: 1435> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(0) '#' 2 218943)
lbl(218936)	getVariable(x(0))
		unify(y(2) x(0))
		branch(218946)
lbl(218943)	unify(y(2) x(0))
lbl(218946)	testRecord(y(2) fVar 2 218959)
lbl(218951)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(218959)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(218917)
lbl(218966)	definition(x(6) 219077 pid('PrivateMeth' 3 pos('./compiler/TupleSyntax.oz' 161 0) nil 6) <Q: 1436> nil)
		shallowGuard(219064)
		getRecord(fMeth 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(218984)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(3) fEq 3 219005)
lbl(218998)	getVariable(x(0))
		unify(y(2) x(0))
		branch(219008)
lbl(219005)	unify(y(2) x(3))
lbl(219008)	match(y(2) ht(219059 [onRecord(fVar 2 219011) onRecord(fRecord 2 219019) onRecord(fOpenRecord 2 219039)]))
lbl(219011)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219019)	getVariable(x(0))
		testRecord(x(0) fVar 2 219034)
lbl(219026)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219034)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219039)	getVariable(x(0))
		testRecord(x(0) fVar 2 219054)
lbl(219046)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219054)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219059)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219064)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(161)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218966)
lbl(219077)	definition(x(8) 219128 pid('IsDeclared' 3 pos('./compiler/BindingAnalysis.oz' 25 3) nil 5) <Q: 1437> [g(1)])
		match(x(0) ht(219113 [onScalar(nil 219086) onRecord('|' 2 219090)]))
lbl(219086)	getLiteral(false x(2))
		return
lbl(219090)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(4)] 219107)
		getLiteral(true x(2))
		return
lbl(219107)	move(x(3) x(0))
		genFastCall(<Q: 1437> 7)
lbl(219113)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(29)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(219077)
lbl(219128)	inlineDot(x(7) concatenateAtomAndInt x(7) cache)
lbl(219134)	definition(x(8) 219261 pid('Generate' 5 pos('./compiler/BindingAnalysis.oz' 34 3) nil 5) <Q: 1438> [x(7) g(2)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1437> 6)
		testBool(y(6) 219200 219248)
lbl(219180)	move(y(3) x(0))
		inlinePlus1(x(0) x(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1438> 11)
lbl(219200)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(lookupVariableInEnv y(1) 2 cache)
		testLiteral(y(6) undeclared 219180)
lbl(219216)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(y(3) x(1))
		inlinePlus1(x(1) x(2))
		move(y(2) x(1))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(5) y(4))
		deAllocateL7
		return
lbl(219248)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(36)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219134)
lbl(219261)	putList(x(7))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [env freeVariablesOfQuery] x(8))
		setConstant(nil)
		setConstant(unit)
		putRecord('feat' [<M: MyReporter> <M: MyTopLevel>] x(9))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(219283)	definition(x(10) 219330 pid('BindingAnalysis,init/fast' 2 pos('./compiler/BindingAnalysis.oz' 50 6) nil 4) <Q: 1439> nil)
		putConstant(nil x(2))
		inlineAssign(env x(2) cache)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(freeVariablesOfQuery x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: MyReporter> x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(219283)
lbl(219330)	definition(x(11) 219365 pid('BindingAnalysis,init/slow' 1 pos('./compiler/BindingAnalysis.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1439> 5)
		endDefinition(219330)
lbl(219365)	putRecord('#' [1 2 fast] x(12))
		setConstant(init)
		setValue(x(11))
		setValue(x(10))
lbl(219375)	definition(x(10) 219463 pid('BindingAnalysis,openScope/fast' 0 pos('./compiler/BindingAnalysis.oz' 56 6) nil 6) <Q: 1440> [g(3)])
		inlineAt(env x(0) cache)
		testList(x(0) 219429)
lbl(219389)	getVariable(x(1))
		callBI('Dictionary.new' nil#[x(2)])
		inlineDot(x(1) 2 x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(3)])
		createVariable(x(1))
		putRecord('#' 4 x(5))
		setValue(x(2))
		setValue(x(3))
		setValue(x(1))
		setValue(x(1))
		putList(x(4))
		setValue(x(5))
		setValue(x(0))
		inlineAssign(env x(4) cache)
		return
lbl(219429)	callBI('Dictionary.new' nil#[x(0)])
		callBI('Dictionary.new' nil#[x(1)])
		createVariable(x(2))
		putRecord('#' 4 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		setValue(x(2))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		inlineAssign(env x(3) cache)
		return
		endDefinition(219375)
lbl(219463)	definition(x(11) 219477 pid('BindingAnalysis,openScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 56 6) nil 1) unit nil)
		getLiteral(openScope x(0))
		genFastCall(<Q: 1440> 1)
		endDefinition(219463)
lbl(219477)	putRecord('#' [1 2 fast] x(13))
		setConstant(openScope)
		setValue(x(11))
		setValue(x(10))
lbl(219487)	definition(x(10) 219517 pid('BindingAnalysis,getVars/fast' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 2) <Q: 1441> nil)
		inlineAt(env x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		return
		endDefinition(219487)
lbl(219517)	definition(x(11) 219543 pid('BindingAnalysis,getVars/slow' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1441> 3)
		endDefinition(219517)
lbl(219543)	putRecord('#' [1 2 fast] x(14))
		setConstant(getVars)
		setValue(x(11))
		setValue(x(10))
lbl(219553)	definition(x(10) 219674 pid('BindingAnalysis,getAllVariables/fast' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 5) <Q: 1442> [g(4) g(5)])
		allocateL2
		inlineAt(env x(4) cache)
lbl(219565)	definition(x(1) 219630 pid('' 3 pos('./compiler/BindingAnalysis.oz' 69 4) nil 7) unit [g(1)])
		shallowGuard(219617)
		getRecord('#' 4 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(219585)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		putConstant(x x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(219617)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(69)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219565)
lbl(219630)	move(x(0) y(0))
		move(x(4) x(0))
		putConstant(x x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
lbl(219645)	definition(x(1) 219660 pid('' 3 pos('./compiler/BindingAnalysis.oz' 72 3) nil 3) unit nil)
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(219645)
lbl(219660)	moveMoveYXYX(y(1) x(0) y(0) x(3))
		putConstant(nil x(2))
		deAllocateL2
		genFastCall(<P: 163> 9)
		endDefinition(219553)
lbl(219674)	definition(x(11) 219700 pid('BindingAnalysis,getAllVariables/slow' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1442> 3)
		endDefinition(219674)
lbl(219700)	putRecord('#' [1 2 fast] x(15))
		setConstant(getAllVariables)
		setValue(x(11))
		setValue(x(10))
lbl(219710)	definition(x(10) 219745 pid('BindingAnalysis,closeScope/fast' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) <Q: 1443> nil)
		inlineAt(env x(1) cache)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		inlineAssign(env x(2) cache)
		return
		endDefinition(219710)
lbl(219745)	definition(x(11) 219771 pid('BindingAnalysis,closeScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1443> 3)
		endDefinition(219745)
lbl(219771)	putRecord('#' [1 2 fast] x(16))
		setConstant(closeScope)
		setValue(x(11))
		setValue(x(10))
lbl(219781)	definition(x(10) 219906 pid('BindingAnalysis,bind/fast' 3 pos('./compiler/BindingAnalysis.oz' 80 6) nil 7) <Q: 1444> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 219899)
lbl(219821)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI('Object.newObject' [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(219899)	unify(x(2) x(5))
		deAllocateL8
		return
		endDefinition(219781)
lbl(219906)	definition(x(11) 219947 pid('BindingAnalysis,bind/slow' 1 pos('./compiler/BindingAnalysis.oz' 80 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1444> 7)
		endDefinition(219906)
lbl(219947)	putRecord('#' [1 2 fast] x(17))
		setConstant(bind)
		setValue(x(11))
		setValue(x(10))
lbl(219957)	definition(x(10) 220126 pid('BindingAnalysis,bindImport/fast' 4 pos('./compiler/BindingAnalysis.oz' 91 6) nil 8) <Q: 1445> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(4) cache)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		getRecord('#' 4 x(4))
		unifyVariable(x(5))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(4))
		callBI('Dictionary.condGet' [x(5) x(0) x(4)]#[x(6)])
		testLiteral(x(6) undeclared 220078)
lbl(219997)	move(g(1) x(4))
		inlineDot(x(4) restrictedVariable x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(7)])
		moveMoveXYXY(x(0) y(4) x(3) y(5))
		moveMoveXYXY(x(5) y(6) x(7) y(7))
		move(x(2) x(8))
		move(x(1) x(2))
		move(x(8) x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220078)	getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(5))
		setConstant(' imported more than once')
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		move(x(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(4) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(219957)
lbl(220126)	definition(x(11) 220173 pid('BindingAnalysis,bindImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 91 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1445> 9)
		endDefinition(220126)
lbl(220173)	putRecord('#' [1 2 fast] x(18))
		setConstant(bindImport)
		setValue(x(11))
		setValue(x(10))
lbl(220183)	definition(x(10) 220352 pid('BindingAnalysis,bindExport/fast' 3 pos('./compiler/BindingAnalysis.oz' 107 6) nil 7) <Q: 1446> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 220301)
lbl(220223)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI('Object.newObject' [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220301)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(6))
		setValue(x(0))
		putRecord('#' 3 x(4))
		setConstant('variable ')
		setValue(x(6))
		setConstant(' declared more than once')
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(0))
		move(x(4) x(2))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(220183)
lbl(220352)	definition(x(11) 220393 pid('BindingAnalysis,bindExport/slow' 1 pos('./compiler/BindingAnalysis.oz' 107 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1446> 7)
		endDefinition(220352)
lbl(220393)	putRecord('#' [1 2 fast] x(19))
		setConstant(bindExport)
		setValue(x(11))
		setValue(x(10))
		createVariable(y(0))
lbl(220405)	definition(x(10) 220577 pid('BindingAnalysis,refer/fast' 3 pos('./compiler/BindingAnalysis.oz' 123 6) nil 5) <Q: 1447> [y(0)])
		allocateL5
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(3) undeclared 220500)
lbl(220438)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
lbl(220500)	createVariableMove(y(4) x(0))
		sendMsg(isRestricted y(3) 1 cache)
		testBool(y(4) 220560 220549)
		getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 2 x(2))
		setConstant('illegal use of imported variable ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(220560)
lbl(220549)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220560)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220405)
lbl(220577)	definition(x(11) 220618 pid('BindingAnalysis,refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 123 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1447> 7)
		endDefinition(220577)
lbl(220618)	putRecord('#' [1 2 fast] x(20))
		setConstant(refer)
		setValue(x(11))
		setValue(x(10))
lbl(220628)	definition(x(10) 220862 pid('BindingAnalysis,referImport/fast' 5 pos('./compiler/BindingAnalysis.oz' 139 6) nil 8) <Q: 1448> [y(0)])
		allocateL7
		inlineAt(env x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(5) undeclared 220731)
lbl(220666)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		getLiteral(false y(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(2) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220731)	move(y(3) x(0))
		sendMsg(isRestricted y(5) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(isDenied y(5) 3 cache)
		testBool(y(6) 220826 220815)
		getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(y(0))
		putRecord('#' 2 x(3))
		setConstant('illegal use of imported variable ')
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(y(2))
		putRecord(hint [l m] x(6))
		setConstant('Unknown feature')
		setValue(x(7))
		putList(x(1))
		setValue(x(6))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('binding analysis error' x(2))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(220826)
lbl(220815)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(149)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220826)	testLiteral(y(3) unit 220845)
lbl(220830)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220845)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220628)
lbl(220862)	definition(x(11) 220915 pid('BindingAnalysis,referImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 139 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1448> 11)
		endDefinition(220862)
lbl(220915)	putRecord('#' [1 2 fast] x(21))
		setConstant(referImport)
		setValue(x(11))
		setValue(x(10))
lbl(220925)	definition(x(10) 220968 pid('BindingAnalysis,referUnchecked/fast' 3 pos('./compiler/BindingAnalysis.oz' 162 6) nil 5) <Q: 1449> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220925)
lbl(220968)	definition(x(11) 221009 pid('BindingAnalysis,referUnchecked/slow' 1 pos('./compiler/BindingAnalysis.oz' 162 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1449> 7)
		endDefinition(220968)
lbl(221009)	putRecord('#' [1 2 fast] x(22))
		setConstant(referUnchecked)
		setValue(x(11))
		setValue(x(10))
lbl(221019)	definition(x(10) 221071 pid('BindingAnalysis,referExpansionOcc/fast' 3 pos('./compiler/BindingAnalysis.oz' 166 6) nil 5) <Q: 1450> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(2) undeclared 221054)
lbl(221049)	getLiteral(undeclared y(1))
		deAllocateL3
		return
lbl(221054)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(221019)
lbl(221071)	definition(x(11) 221112 pid('BindingAnalysis,referExpansionOcc/slow' 1 pos('./compiler/BindingAnalysis.oz' 166 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1450> 7)
		endDefinition(221071)
lbl(221112)	putRecord('#' [1 2 fast] x(23))
		setConstant(referExpansionOcc)
		setValue(x(11))
		setValue(x(10))
lbl(221122)	definition(x(10) 221221 pid('BindingAnalysis,Refer/fast' 4 pos('./compiler/BindingAnalysis.oz' 174 6) nil 7) <Q: 1451> [g(2) g(6) y(0)])
		match(x(2) ht(221206 [onScalar(nil 221131) onRecord('|' 2 221175)]))
lbl(221131)	allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(y(1) x(1))
		sendMsg(lookupVariableInEnv x(2) 2 cache)
		testLiteral(y(1) undeclared 221160)
lbl(221158)	deAllocateL2
		return
lbl(221160)	inlineAt(freeVariablesOfQuery x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(221175)	getVarVar(x(2) x(4))
		getRecord('#' 4 x(2))
		unifyVariable(x(2))
		unifyVoid(3)
		putConstant(undeclared x(5))
		callBI('Dictionary.condGet' [x(2) x(0) x(5)]#[x(6)])
		testLiteral(x(6) undeclared 221202)
lbl(221196)	move(x(4) x(2))
		genCall(gci(g(2) true <M: Refer> true 4) 0)
lbl(221202)	unify(x(3) x(6))
		return
lbl(221206)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(187)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(221122)
lbl(221221)	definition(x(11) 221268 pid('BindingAnalysis,Refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 174 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1451> 9)
		endDefinition(221221)
lbl(221268)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: Refer>)
		setValue(x(11))
		setValue(x(10))
lbl(221278)	definition(x(10) 221420 pid('BindingAnalysis,generate/fast' 3 pos('./compiler/BindingAnalysis.oz' 189 6) nil 7) <Q: 1452> [g(6) x(3) g(2)])
		allocateL9
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(y(1))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(1 x(6))
		callBI('Dictionary.condGet' [x(4) x(0) x(6)]#[x(3)])
		getSelf(x(6))
		inlineDot(x(6) <M: MyTopLevel> x(6) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(x(4) y(6))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		move(y(4) x(2))
		putConstant(generated x(1))
		sendMsg(init y(8) 3 cache)
		unify(y(8) y(5))
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(1))
		setValue(y(6))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL9
		return
		endDefinition(221278)
lbl(221420)	definition(x(11) 221461 pid('BindingAnalysis,generate/slow' 1 pos('./compiler/BindingAnalysis.oz' 189 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1452> 7)
		endDefinition(221420)
lbl(221461)	putRecord('#' [1 2 fast] x(25))
		setConstant(generate)
		setValue(x(11))
		setValue(x(10))
lbl(221471)	definition(x(10) 221625 pid('BindingAnalysis,generateForOuterScope/fast' 3 pos('./compiler/BindingAnalysis.oz' 198 6) nil 8) <Q: 1453> [g(6) x(3) g(2)])
		allocateL10
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(y(0))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 4 x(4))
		unifyVariable(y(2))
		unifyVariable(x(6))
		unifyVariable(y(3))
		unifyVariable(y(4))
		putConstant(1 x(7))
		callBI('Dictionary.condGet' [x(6) x(0) x(7)]#[x(3)])
		getSelf(x(7))
		inlineDot(x(7) <M: MyTopLevel> x(7) cache)
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(x(6) y(7))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(7) x(1))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(2))
		putConstant(generated x(1))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(4))
		unifyValVar(y(6) x(1))
		putRecord('#' 4 x(4))
		setValue(y(2))
		setValue(y(7))
		setValue(y(3))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(y(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(3))
		inlineAssign(env x(2) cache)
		deAllocateL10
		return
		endDefinition(221471)
lbl(221625)	definition(x(11) 221666 pid('BindingAnalysis,generateForOuterScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 198 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1453> 7)
		endDefinition(221625)
lbl(221666)	putRecord('#' [1 2 fast] x(26))
		setConstant(generateForOuterScope)
		setValue(x(11))
		setValue(x(10))
lbl(221676)	definition(x(10) 221704 pid('BindingAnalysis,getFreeVariablesOfQuery/fast' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) <Q: 1454> [g(7)])
		inlineAt(freeVariablesOfQuery x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		callBI('Dictionary.new' nil#[x(0)])
		inlineAssign(freeVariablesOfQuery x(0) cache)
		return
		endDefinition(221676)
lbl(221704)	definition(x(11) 221730 pid('BindingAnalysis,getFreeVariablesOfQuery/slow' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1454> 3)
		endDefinition(221704)
lbl(221730)	putRecord('#' [1 2 fast] x(27))
		setConstant(getFreeVariablesOfQuery)
		setValue(x(11))
		setValue(x(10))
		putRecord('#' 16 x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(10) x(1))
		move(x(8) x(2))
		move(x(9) x(3))
		move(x(7) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('BindingAnalysis' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(221815)	definition(x(7) 221968 pid('NormalizeFdCompare' 6 pos('./compiler/UnnestFD.oz' 33 3) nil 9) <Q: 1455> nil)
		putList(x(8))
		setValue(x(2))
		setConstant(nil)
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		putRecord(fOpApply 3 x(6))
		setConstant('-')
		setValue(x(7))
		setValue(x(3))
		match(x(0) ht(221953 [onScalar('=:' 221846) onScalar('<:' 221853) onScalar('>:' 221885) onScalar('=<:' 221919) onScalar('>=:' 221926) onScalar('\\=:' 221946)]))
lbl(221846)	getLiteral('=:' x(4))
		unify(x(5) x(6))
		return
lbl(221853)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(3))
		getListValVar(x(0) x(6) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(3))
		return
lbl(221885)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('-')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(1)
		unifyValue(x(3))
		getList(x(2))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(221919)	getLiteral('=<:' x(4))
		unify(x(5) x(6))
		return
lbl(221926)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(221946)	getLiteral('\\=:' x(4))
		unify(x(5) x(6))
		return
lbl(221953)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(55)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(221815)
lbl(221968)	definition(x(7) 222103 pid('AreLinearConstraints' 2 pos('./compiler/UnnestFD.oz' 58 3) nil 5) <Q: 1456> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 222047)
lbl(221985)	getVarVar(x(2) x(3))
		shallowGuard(222047)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(222005)	shallowThen
		move(x(4) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(2) 222031 222036)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1456> 5)
lbl(222031)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222036)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(62)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222047)	testRecord(y(0) fOpApply 3 222088)
lbl(222052)	getVarVar(x(0) x(1))
		shallowGuard(222088)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(222072)	shallowThen
		testRecord(x(1) fVar 2 222083)
lbl(222078)	getLiteral(true y(1))
		deAllocateL3
		return
lbl(222083)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222088)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(69)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(221968)
lbl(222103)	definition(x(7) 222236 pid('MakeTuples' 5 pos('./compiler/UnnestFD.oz' 72 3) nil 8) <Q: 1457> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222181)
lbl(222128)	getVarVar(x(5) x(6))
		shallowGuard(222181)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222148)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1457> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1457> 11)
lbl(222181)	testRecord(y(0) fOpApply 3 222221)
lbl(222186)	getVarVar(x(0) x(1))
		shallowGuard(222221)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222206)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyValue(x(2))
		unifyValue(y(4))
		deAllocateL7
		return
lbl(222221)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222103)
lbl(222236)	definition(x(7) 222304 pid('ProductToVariableList' 2 pos('./compiler/UnnestFD.oz' 89 6) nil 5) <Q: 1458> nil)
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(222281 [onRecord(fOpApply 3 222249) onRecord(fVar 2 222294)]))
lbl(222249)	getVarVar(x(2) x(3))
		shallowGuard(222281)
		getLiteral('*' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(222269)	shallowThen
		getListValVar(x(1) x(2) x(1))
		move(x(4) x(0))
		deAllocateL1
		genFastCall(<Q: 1458> 5)
lbl(222281)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(98)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222294)	getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL1
		return
		endDefinition(222236)
lbl(222304)	definition(x(7) 222470 pid('MakeTupleTuples' 5 pos('./compiler/UnnestFD.oz' 101 6) nil 8) <Q: 1459> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222382)
lbl(222329)	getVarVar(x(5) x(6))
		shallowGuard(222382)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222349)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1459> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1459> 11)
lbl(222382)	testRecord(y(0) fOpApply 3 222455)
lbl(222387)	getVarVar(x(0) x(1))
		shallowGuard(222455)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222407)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyVariable(x(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(5))
		move(x(2) x(0))
		move(x(4) x(1))
		deAllocateL7
		genFastCall(<Q: 1458> 5)
lbl(222455)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(113)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222304)
lbl(222470)	definition(x(7) 222680 pid('NegDNF' 3 pos('./compiler/UnnestFD.oz' 121 6) nil 7) <Q: 1460> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 222556)
lbl(222490)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(222556)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(222512)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1460> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222556)	match(y(0) ht(222614 [onRecord(fOpApply 3 222559) onRecord(fInt 2 222627) onRecord(fVar 2 222646)]))
lbl(222559)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222614)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222581)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyValue(x(3))
		unifyLiteral(nil)
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222614)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(135)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222627)	getVarVar(x(0) x(1))
		getRecord(fInt 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL3
		return
lbl(222646)	getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(~1)
		unifyValue(y(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL3
		return
		endDefinition(222470)
lbl(222680)	definition(x(7) 222875 pid('MulDNF' 4 pos('./compiler/UnnestFD.oz' 138 6) nil 8) <Q: 1461> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 222770)
lbl(222702)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(222770)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222724)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(6))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(7) y(3))
		move(x(4) x(0))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222770)	testRecord(y(1) fOpApply 3 222851)
lbl(222775)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222851)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222797)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(1))
		unifyLiteral(nil)
		move(x(3) y(3))
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222851)	getRecord(fOpApply 3 y(3))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
		endDefinition(222680)
lbl(222875)	definition(x(7) 223167 pid('MakeDNF' 2 pos('./compiler/UnnestFD.oz' 153 6) nil 6) <Q: 1462> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 222955)
lbl(222892)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(222955)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(222914)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(5) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(222955)	testRecord(y(0) fOpApply 3 223039)
lbl(222960)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223039)
		getLiteral('-' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222982)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYXY(x(3) y(1) x(2) y(2))
		move(x(4) x(1))
		genFastCall(<Q: 1462> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApply 3 x(0))
		setConstant('~')
		setValue(x(1))
		setValue(y(2))
		move(y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(223039)	testRecord(y(0) fOpApply 3 223082)
lbl(223044)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223082)
		getLiteral('~' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyLiteral(nil)
lbl(223060)	shallowThen
		move(x(2) y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1460> 7)
lbl(223082)	match(y(0) ht(223142 [onRecord(fOpApply 3 223085) onRecord(fInt 2 223155) onRecord(fVar 2 223160)]))
lbl(223085)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223142)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223107)	shallowThen
		moveMoveXYXY(x(3) y(0) x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL5
		genFastCall(<Q: 1461> 9)
lbl(223142)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(169)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223155)	unify(y(1) y(0))
		deAllocateL5
		return
lbl(223160)	unify(y(1) y(0))
		deAllocateL5
		return
		endDefinition(222875)
lbl(223167)	definition(x(7) 223401 pid('NormalizeProduct' 3 pos('./compiler/UnnestFD.oz' 174 6) nil 13) <Q: 1463> nil)
		allocateL4
		move(x(0) y(0))
		match(y(0) ht(223368 [onRecord(fOpApply 3 223180) onRecord(fInt 2 223381) onRecord(fVar 2 223391)]))
lbl(223180)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223368)
		getLiteral('*' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223202)	shallowThen
		move(x(3) y(0))
		match(y(0) ht(223283 [onRecord(fOpApply 3 223209) onRecord(fInt 2 223296) onRecord(fVar 2 223323)]))
lbl(223209)	getVarVar(x(0) x(4))
		getVariable(x(7))
		shallowGuard(223283)
		getLiteral('*' x(0))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(223231)	shallowThen
		putList(x(12))
		setValue(x(6))
		setConstant(nil)
		putList(x(11))
		setValue(x(8))
		setValue(x(12))
		putRecord(fOpApply 3 x(10))
		setConstant('*')
		setValue(x(11))
		setValue(x(5))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(4))
		setValue(x(0))
		setValue(x(9))
		putRecord(fOpApply 3 x(3))
		setConstant('*')
		setValue(x(4))
		setValue(x(7))
		move(x(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1463> 7)
lbl(223283)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(197)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223296)	getVariable(y(0))
		move(x(1) y(1))
		move(x(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1463> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Number.\'*\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
lbl(223323)	moveMoveXYXY(x(2) y(1) x(5) y(2))
		move(x(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(3) fOne 223346)
lbl(223341)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(223346)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(3))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(223368)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(204)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223381)	getVariable(x(0))
		unify(x(1) x(0))
		getLiteral(fOne x(2))
		deAllocateL4
		return
lbl(223391)	getNumber(1 x(1))
		unify(x(2) y(0))
		deAllocateL4
		return
		endDefinition(223167)
lbl(223401)	definition(x(7) 223735 pid('Normalize' 3 pos('./compiler/UnnestFD.oz' 207 6) nil 8) <Q: 1464> nil)
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 223590)
lbl(223421)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223590)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223443)	shallowThen
		moveMoveXYXY(x(6) y(0) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1464> 6)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(1))
		testRecord(y(7) fZero 1 223495)
lbl(223490)	unify(y(2) y(5))
		deAllocateL8
		return
lbl(223495)	match(y(5) ht(223568 [onRecord(fZero 1 223498) onRecord(fOpApply 3 223503)]))
lbl(223498)	unify(y(2) y(7))
		deAllocateL8
		return
lbl(223503)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223568)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223525)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(y(3))
		getListValVar(x(1) x(0) x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(6))
		unifyValue(x(2))
		getListValVar(x(6) x(3) x(7))
		getList(x(7))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223568)	getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223590)	match(y(0) ht(223667 [onRecord(fOpApply 3 223593) onRecord(fInt 2 223680) onRecord(fVar 2 223694)]))
lbl(223593)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) '*' 223667)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(5) fOne 223632)
lbl(223621)	unify(y(1) y(4))
		getRecord(fZero 1 y(2))
		unifyValue(y(3))
		deAllocateL8
		return
lbl(223632)	getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223667)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(245)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223680)	getVarVar(x(0) x(1))
		unify(y(1) x(0))
		getRecord(fZero 1 y(2))
		unifyValue(x(1))
		deAllocateL8
		return
lbl(223694)	getVoid(1)
		getVariable(x(0))
		getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(0))
		getList(x(3))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(223401)
lbl(223735)	definition(x(7) 223964 pid('SimplifyRest' 4 pos('./compiler/UnnestFD.oz' 250 6) nil 9) <Q: 1465> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 223900)
lbl(223757)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(223900)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(223779)	shallowThen
		moveMoveXYXY(x(4) y(0) x(7) y(4))
		move(x(6) y(5))
		testRecord(y(0) fOpApply 3 223854)
lbl(223793)	getVarVar(x(0) x(5))
		shallowGuard(223854)
		getLiteral('*' x(0))
		getList(x(5))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fVar 2 x(5))
		unifyValVar(y(1) x(8))
lbl(223828)	shallowThen
		moveMoveXYYX(x(0) y(0) y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1465> 8)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL7
		return
lbl(223854)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(6) fZero 1 223878)
lbl(223873)	unify(y(3) y(0))
		deAllocateL7
		return
lbl(223878)	getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(5))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyLiteral(nil)
		deAllocateL7
		return
lbl(223900)	testRecord(y(0) fOpApply 3 223954)
lbl(223905)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223954)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fVar 2 x(1))
		unifyValVar(y(1) x(3))
lbl(223942)	shallowThen
		unify(y(2) x(0))
		getRecord(fZero 1 y(3))
		unifyValue(x(2))
		deAllocateL7
		return
lbl(223954)	getNumber(0 y(2))
		unify(y(3) y(0))
		deAllocateL7
		return
		endDefinition(223735)
lbl(223964)	definition(x(7) 224259 pid('Simplify' 2 pos('./compiler/UnnestFD.oz' 274 6) nil 10) <Q: 1466> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 224252)
lbl(223981)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(224252)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(224003)	shallowThen
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		move(x(4) y(3))
		testRecord(y(0) fOpApply 3 224222)
lbl(224017)	getVarVar(x(0) x(3))
		getVariable(x(6))
		shallowGuard(224222)
		getLiteral('*' x(0))
		getList(x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(7))
		getList(x(3))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fVar 2 x(3))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(224055)	shallowThen
		moveMoveXYXY(x(0) y(0) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYYX(x(6) y(7) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(9) fZero 1 224140)
lbl(224088)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(fVar 2 x(4))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(3))
		deAllocateL10
		return
lbl(224140)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('*')
		unifyVariable(x(3))
		unifyValue(y(7))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fVar 2 x(7))
		unifyValue(y(5))
		unifyValue(y(6))
		getList(x(2))
		unifyVariable(x(8))
		unifyLiteral(nil)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(6))
		move(y(9) x(0))
		move(x(8) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224222)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		move(y(2) x(0))
		move(x(2) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224252)	unify(y(1) y(0))
		deAllocateL10
		return
		endDefinition(223964)
lbl(224259)	definition(x(7) 225266 pid('MakeFdCompareStatement' 5 pos('./compiler/UnnestFD.oz' 301 3) nil 13) <Q: 1467> [y(1)])
		allocateL(11)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(4) fZero 1 224494)
lbl(224316)	getVariable(x(0))
		match(y(2) ht(224481 [onScalar('=:' 224321) onScalar('=<:' 224349) onScalar('\\=:' 224415)]))
lbl(224321)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fInt 2 x(1))
		unifyValue(y(3))
		unifyValue(x(0))
		getRecord(fInt 2 x(2))
		unifyNumber(0)
		unifyValue(y(0))
		deAllocateL
		return
lbl(224349)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`true`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224415)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`false`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224481)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(319)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224494)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(5) 224961 225253)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 224806 224950)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setValue(y(6))
		putRecord(fAtom 2 y(6))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 y(2))
		setVariable(x(0))
		setValue(y(0))
		move(y(3) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(224594)	definition(x(1) 224634 pid('' 2 pos('./compiler/UnnestFD.oz' 327 19) nil 4) unit nil)
		shallowGuard(224621)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(224610)	shallowThen
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(224621)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224594)
lbl(224634)	move(y(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 224711 224795)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(4) x(6))
		getListValVar(x(6) y(6) x(7))
		getList(x(7))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224711)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(5))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fVar 2 x(4))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(6))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(7))
		getListValVar(x(7) y(4) x(8))
		getListValVar(x(8) y(6) x(9))
		getList(x(9))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224795)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224806)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(3))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(5))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(6))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(10))
		getListValVar(x(10) x(1) x(11))
		getListValVar(x(11) x(2) x(12))
		getList(x(12))
		unifyValue(x(3))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224950)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224961)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		testBool(y(4) 225074 225174)
		getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(3) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(225185)
lbl(225074)	getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(5))
		getRecord(fInt 2 x(2))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyNumber(0)
		unifyValue(y(0))
		branch(225185)
lbl(225174)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(345)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225185)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(7) x(6))
		getListValVar(x(6) y(8) x(7))
		getListValVar(x(7) y(9) x(8))
		getList(x(8))
		unifyValue(y(10))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225253)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224259)
lbl(225266)	definition(x(7) 226380 pid('MakeFdCompareExpression' 6 pos('./compiler/UnnestFD.oz' 362 3) nil 18) <Q: 1468> [y(1)])
		allocateL(12)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariableMove(y(3) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(5) fZero 1 225472)
lbl(225326)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(x(0))
		putRecord(fInt 2 x(4))
		setValue(y(4))
		setValue(x(0))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fOpApply 3 x(6))
		unifyLiteral('.')
		unifyVariable(x(8))
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(fVar 2 x(9))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(4) x(1) x(13))
		getListValVar(x(13) x(2) x(14))
		getListValVar(x(14) x(3) x(15))
		getList(x(15))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225472)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 226041 226367)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 225852 226030)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 y(3))
		setVariable(x(0))
		setValue(y(0))
		move(y(4) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(225572)	definition(x(1) 225612 pid('' 2 pos('./compiler/UnnestFD.oz' 385 19) nil 4) unit nil)
		shallowGuard(225599)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(225588)	shallowThen
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(225599)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225572)
lbl(225612)	move(y(6) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(4) 225723 225841)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(3) x(12))
		getList(x(12))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225723)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(3) x(14))
		getList(x(14))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225841)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225852)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(4))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(0))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226041)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 226154 226254)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(4) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(226265)
lbl(226154)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyValue(y(4))
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(0))
		branch(226265)
lbl(226254)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226265)	getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225266)
lbl(226380)	definition(x(7) 226525 pid('GetVarsFromFdCompare' 3 pos('./compiler/UnnestFD.oz' 433 2) nil 6) <Q: 1469> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 226445)
lbl(226400)	getVarVar(x(3) x(4))
		shallowGuard(226445)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(226420)	shallowThen
		move(x(5) y(0))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226445)	match(y(0) ht(226492 [onRecord(fOpApply 3 226448) onRecord(fInt 2 226505) onRecord(fVar 2 226510) onRecord(fZero 1 226518)]))
lbl(226448)	getVarVar(x(0) x(1))
		shallowGuard(226492)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(226468)	shallowThen
		moveMoveXYYX(x(2) y(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226492)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(446)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226505)	unify(y(1) y(2))
		deAllocateL4
		return
lbl(226510)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(226518)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(226380)
lbl(226525)	definition(x(7) 226589 pid('GetVarsFromFdIn' 4 pos('./compiler/UnnestFD.oz' 449 2) nil 6) <Q: 1470> nil)
		testRecord(x(0) fRecord 2 226580)
lbl(226536)	allocateL2
		getVoid(1)
		getVariable(x(4))
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getListValVar(x(1) x(4) x(1))
		move(x(3) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1470> 8)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(226580)	unify(x(1) x(2))
		getNumber(0 x(3))
		return
		endDefinition(226525)
lbl(226589)	definition(x(7) 226771 pid('NormalizeCondisExpression' 5 pos('./compiler/UnnestFD.oz' 460 2) nil 8) <Q: 1471> nil)
		match(x(0) ht(226756 [onRecord(fFdCompare 4 226598) onRecord(fFdIn 4 226707)]))
lbl(226598)	allocateL9
		getVarVar(x(0) x(6))
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1466> 4)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1469> 6)
		getNumber(1 y(3))
		getRecord(fFdCompare 4 y(4))
		unifyValue(y(5))
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getRecord(fInt 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(y(6) x(0))
		callBI('Number.\'~\'' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL9
		return
lbl(226707)	allocateL2
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		match(x(5) ht(226738 [onScalar('::' 226719) onScalar(':::' 226730)]))
lbl(226719)	getList(x(1))
		unifyValue(x(6))
		unifyValue(x(2))
		getNumber(1 x(3))
		branch(226751)
lbl(226730)	move(x(6) x(0))
		genFastCall(<Q: 1470> 8)
		branch(226751)
lbl(226738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(473)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(226751)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(226756)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226589)
lbl(226771)	definition(x(7) 226866 pid('NormalizeCondisClause' 5 pos('./compiler/UnnestFD.oz' 478 2) nil 5) <Q: 1472> nil)
		match(x(0) ht(226851 [onScalar(nil 226780) onRecord('|' 2 226790)]))
lbl(226780)	unify(x(1) x(2))
		getNumber(0 x(3))
		getLiteral(nil x(4))
		return
lbl(226790)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1471> 10)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1472> 10)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		getList(y(3))
		unifyValue(y(6))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(226851)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226771)
lbl(226866)	definition(x(7) 227070 pid('RenameFdCompare' 3 pos('./compiler/UnnestFD.oz' 498 2) nil 7) <Q: 1473> [g(8)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 226952)
lbl(226886)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(226952)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(226908)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(226952)	match(y(0) ht(227023 [onRecord(fOpApply 3 226955) onRecord(fInt 2 227036) onRecord(fVar 2 227041) onRecord(fZero 1 227063)]))
lbl(226955)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(227023)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(226977)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYYX(x(3) y(2) y(1) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(227023)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(514)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227036)	unify(y(2) y(0))
		deAllocateL3
		return
lbl(227041)	getVarVar(x(0) x(1))
		getRecord(fVar 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		move(y(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL3
		return
lbl(227063)	unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(226866)
lbl(227070)	definition(x(7) 227152 pid('RenameFdIn' 3 pos('./compiler/UnnestFD.oz' 517 2) nil 10) <Q: 1474> [g(8)])
		testRecord(x(0) fRecord 2 227146)
lbl(227081)	getVarVar(x(3) x(4))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord(fVar 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(0))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord(fVar 2 x(2))
		unifyVariable(x(8))
		unifyValue(x(6))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		callBI('Dictionary.get' [x(1) x(5)]#[x(0)])
		unify(x(0) x(8))
		move(x(7) x(0))
		move(x(9) x(2))
		genFastCall(<Q: 1474> 7)
lbl(227146)	unify(x(2) x(0))
		return
		endDefinition(227070)
lbl(227152)	definition(x(7) 228557 pid('GenerateCondisExpression' 4 pos('./compiler/UnnestFD.oz' 528 2) nil 18) <Q: 1475> [y(1) g(8)])
		allocateL(12)
		move(x(0) y(0))
		match(y(0) ht(228293 [onRecord(fFdCompare 4 227166) onRecord(fFdIn 4 228306)]))
lbl(227166)	getVarVar(x(4) x(5))
		getVarVar(x(6) x(7))
		shallowGuard(228293)
		getRecord(fInt 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(227182)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(8) y(3))
		move(x(7) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1473> 6)
		testRecord(y(5) fZero 1 227399)
lbl(227210)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setVariable(x(5))
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		move(y(3) x(2))
		callBI('Number.\'~\'' [x(2)]#[x(3)])
		unify(x(3) x(5))
		putRecord(fAtom 2 x(3))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(5))
		setConstant(1)
		setValue(y(4))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fAtom 2 x(3))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(1) x(14))
		getListValVar(x(14) x(2) x(15))
		getListValVar(x(15) x(3) x(16))
		getListValVar(x(16) x(4) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227399)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 227962 228282)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 227764 227951)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 y(2))
		setValue(y(3))
		setValue(y(4))
lbl(227484)	definition(x(1) 227524 pid('' 2 pos('./compiler/UnnestFD.oz' 550 14) nil 4) unit nil)
		shallowGuard(227511)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(227500)	shallowThen
		putConstant(1 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(227511)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(227484)
lbl(227524)	move(y(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 227635 227753)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(4))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(2) x(12))
		getList(x(12))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227635)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(2) x(14))
		getList(x(14))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227764)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setVariable(x(4))
		setValue(y(4))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		move(y(3) x(1))
		callBI('Number.\'~\'' [x(1)]#[x(2)])
		unify(x(2) x(4))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(4))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227951)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227962)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 228060 228169)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyValue(y(3))
		unifyValue(y(4))
		branch(228180)
lbl(228060)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyVariable(x(3))
		unifyValue(y(4))
		move(y(3) x(0))
		callBI('Number.\'~\'' [x(0)]#[x(1)])
		unify(x(1) x(3))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(4))
		branch(228180)
lbl(228169)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(574)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228180)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(4))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228282)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228293)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(606)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228306)	getVarVar(x(0) x(4))
		getVarVar(x(5) y(0))
		match(x(0) ht(228542 [onScalar('::' 228315) onScalar(':::' 228431)]))
lbl(228315)	getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		putRecord(fVar 2 x(6))
		setVariable(x(7))
		setValue(x(4))
		callBI('Dictionary.get' [x(1) x(0)]#[x(8)])
		unify(x(8) x(7))
		getRecord(fApply 3 x(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(x(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(x(4))
		getList(x(3))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(x(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(x(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(x(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(int)
		unifyValue(x(4))
		getListValVar(x(1) x(5) x(14))
		getListValVar(x(14) x(6) x(15))
		getList(x(15))
		unifyValue(x(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228431)	moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1474> 6)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(dom)
		unifyValue(y(0))
		getListValVar(x(1) y(3) x(10))
		getListValVar(x(10) y(4) x(11))
		getList(x(11))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228542)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(605)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(227152)
lbl(228557)	definition(x(7) 228615 pid('OccursVar' 3 pos('./compiler/UnnestFD.oz' 609 2) nil 5) <Q: 1476> nil)
		match(x(0) ht(228600 [onScalar(nil 228566) onRecord('|' 2 228570)]))
lbl(228566)	getLiteral(false x(2))
		return
lbl(228570)	getVarVar(x(0) x(3))
		testRecord(x(0) fVar 2 228594)
lbl(228578)	getVariable(x(0))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 228588)
		getLiteral(true x(2))
		return
lbl(228588)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228594)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228600)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(617)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228557)
lbl(228615)	definition(x(7) 228780 pid('GenerateCondisClause' 7 pos('./compiler/UnnestFD.oz' 620 2) nil 9) <Q: 1477> [g(2)])
		allocateL4
		callBI('Dictionary.new' nil#[x(7)])
lbl(228625)	definition(x(8) 228727 pid('' 2 pos('./compiler/UnnestFD.oz' 632 3) nil 4) unit [x(3) x(1) g(0) x(7)])
		allocateL5
		getRecord(fVar 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1476> 6)
		testBool(y(3) 228704 228714)
		move(y(1) x(1))
		putConstant('CDVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(1) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(fVar 2 y(2))
		unifyValue(y(4))
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228704)	getRecord(fAtom 2 y(2))
		unifyLiteral(void)
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228714)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(633)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228625)
lbl(228727)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(2) x(0))
		move(x(8) x(1))
		move(x(5) x(2))
		genFastCall(<P: 29> 6)
lbl(228749)	definition(x(1) 228769 pid('' 2 pos('./compiler/UnnestFD.oz' 642 21) nil 4) unit [y(3) y(1)])
		move(x(1) x(3))
		move(g(0) x(1))
		move(g(1) x(2))
		genFastCall(<Q: 1475> 9)
		endDefinition(228749)
lbl(228769)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
		endDefinition(228615)
lbl(228780)	definition(x(7) 228818 pid('OccursIn' 3 pos('./compiler/UnnestFD.oz' 647 2) nil 5) <Q: 1478> nil)
		testList(x(1) 228812)
lbl(228789)	getVarVar(x(1) x(3))
		inlineDot(x(1) 1 x(1) cache)
		testBI('Value.\'==\'' [x(0) x(1)]#[x(4)] 228806)
		getLiteral(true x(2))
		return
lbl(228806)	move(x(3) x(1))
		genFastCall(<Q: 1478> 7)
lbl(228812)	getLiteral(false x(2))
		return
		endDefinition(228780)
lbl(228818)	definition(x(7) 228911 pid('VariableUnion' 3 pos('./compiler/UnnestFD.oz' 654 2) nil 3) <Q: 1479> nil)
		match(x(0) ht(228896 [onScalar(nil 228827) onRecord('|' 2 228831)]))
lbl(228827)	unify(x(2) x(1))
		return
lbl(228831)	allocateL5
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVoid(1)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1478> 6)
		testBool(y(4) 228870 228885)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228870)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228885)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228896)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(663)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228818)
lbl(228911)	definition(x(7) 229641 pid('MakeCondis' 4 pos('./compiler/UnnestFD.oz' 667 6) nil 28) <Q: 1480> nil)
		allocateL8
lbl(228918)	definition(x(4) 228957 pid('' 2 pos('./compiler/UnnestFD.oz' 684 9) nil 5) unit nil)
		allocateL4
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 1472> 10)
		getRecord('#' 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(228918)
lbl(228957)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(228974)	definition(x(1) 229015 pid('' 3 pos('./compiler/UnnestFD.oz' 689 6) nil 6) unit nil)
		shallowGuard(229002)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(228992)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1479> 7)
lbl(229002)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228974)
lbl(229015)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 28> 4)
lbl(229036)	definition(x(1) 229141 pid('' 2 pos('./compiler/UnnestFD.oz' 691 2) nil 7) unit [y(0) y(1) y(5)])
		shallowGuard(229128)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229054)	shallowThen
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(1) x(1))
		putConstant('CDControlVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(0) 3 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(g(1))
		sendMsg(getPrintName y(3) 1 cache)
		move(y(2) x(0))
		move(g(0) x(1))
		move(g(2) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		createVariableMove(y(3) x(5))
		createVariableMove(y(5) x(6))
		genFastCall(<Q: 1477> 14)
		getRecord('#' 3 y(0))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		deAllocateL6
		return
lbl(229128)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229036)
lbl(229141)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setVariable(x(2))
lbl(229166)	definition(x(1) 229207 pid('' 2 pos('./compiler/UnnestFD.oz' 698 19) nil 5) unit [y(1)])
		shallowGuard(229194)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229184)	shallowThen
		getRecord(fInt 2 x(1))
		unifyValue(x(3))
		unifyValue(g(0))
		return
lbl(229194)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(698)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229166)
lbl(229207)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(3))
		setValue(x(0))
		setVariable(x(2))
lbl(229229)	definition(x(1) 229265 pid('' 2 pos('./compiler/UnnestFD.oz' 699 39) nil 5) unit nil)
		shallowGuard(229252)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229247)	shallowThen
		unify(x(1) x(2))
		return
lbl(229252)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229229)
lbl(229265)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(6))
		setValue(x(0))
		setValue(y(5))
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setVariable(x(2))
lbl(229303)	definition(x(1) 229352 pid('' 2 pos('./compiler/UnnestFD.oz' 703 5) nil 5) unit [y(1)])
		shallowGuard(229339)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229321)	shallowThen
		getRecord(fRecord 2 x(1))
		unifyVariable(x(0))
		unifyValue(x(3))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(g(0))
		return
lbl(229339)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(703)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229303)
lbl(229352)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
lbl(229358)	definition(x(1) 229419 pid('' 3 pos('./compiler/UnnestFD.oz' 705 8) nil 6) unit nil)
		shallowGuard(229406)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(229376)	shallowThen
lbl(229377)	definition(x(1) 229394 pid('' 3 pos('./compiler/UnnestFD.oz' 706 14) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(229377)
lbl(229394)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(5) x(0))
		genFastCall(<P: 30> 9)
lbl(229406)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(705)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229358)
lbl(229419)	putRecord(fSkip 1 x(2))
		setValue(y(1))
		move(y(0) x(0))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fApply 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(2))
		unifyLiteral('.')
		unifyVariable(x(4))
		unifyValue(y(1))
		getList(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('.')
		unifyVariable(x(7))
		unifyValue(y(1))
		getList(x(7))
		unifyVariable(x(8))
		unifyVariable(x(9))
		getRecord(fVar 2 x(8))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(9))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(6))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(header)
		unifyValue(y(1))
		getListValVar(x(3) y(4) x(12))
		getListValVar(x(12) y(3) x(13))
		getListValVar(x(13) y(6) x(14))
		getList(x(14))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(fAnd 2 x(1))
		unifyValVar(y(7) x(15))
		getRecord(fApply 3 x(15))
		unifyVariable(x(16))
		unifyVariable(x(17))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(16))
		unifyLiteral('.')
		unifyVariable(x(18))
		unifyValue(y(1))
		getList(x(18))
		unifyVariable(x(19))
		unifyVariable(x(20))
		getRecord(fOpApply 3 x(19))
		unifyLiteral('.')
		unifyVariable(x(21))
		unifyValue(y(1))
		getList(x(21))
		unifyVariable(x(22))
		unifyVariable(x(23))
		getRecord(fVar 2 x(22))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(23))
		unifyVariable(x(24))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(24))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(20))
		unifyVariable(x(25))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(25))
		unifyLiteral('body')
		unifyValue(y(1))
		getListValVar(x(17) y(3) x(26))
		getListValVar(x(26) y(6) x(27))
		getList(x(27))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(228911)
lbl(229641)	definition(x(7) 229667 pid('IsStep' 2 pos('./compiler/Unnester.oz' 71 3) nil 3) <Q: 1481> nil)
		callBI('Record.label' [x(0)]#[x(2)])
		match(x(2) ht(229661 [onScalar('pos' 229653) onScalar(unit 229657)]))
lbl(229653)	getLiteral(false x(1))
		return
lbl(229657)	getLiteral(false x(1))
		return
lbl(229661)	getLiteral(true x(1))
		return
		endDefinition(229641)
lbl(229667)	definition(x(7) 229696 pid('CoordNoDebug' 2 pos('./compiler/Unnester.oz' 78 3) nil 4) <Q: 1482> nil)
		callBI('Record.label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 229684)
lbl(229680)	unify(x(1) x(0))
		return
lbl(229684)	putConstant('pos' x(2))
		callBI('Record.adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(229667)
lbl(229696)	definition(x(7) 229793 pid('LastCoordinatesOf' 2 pos('./compiler/Unnester.oz' 84 3) nil 2) <Q: 1483> nil)
		match(x(0) ht(229787 [onRecord(fAnd 2 229705) onRecord(fAtom 2 229712) onRecord(fVar 2 229720) onRecord(fWildcard 1 229728) onRecord(fEscape 2 229734) onRecord(fSelf 1 229742) onRecord(fDollar 1 229748) onRecord(fInt 2 229754) onRecord(fFloat 2 229762) onRecord(fRecord 2 229770) onRecord(fOpenRecord 2 229775) onRecord(fLocal 3 229780)]))
lbl(229705)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229712)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229720)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229728)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229734)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229742)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229748)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229754)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229762)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229770)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229775)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229780)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229787)	getLiteral(unit x(1))
		return
		endDefinition(229696)
lbl(229793)	definition(x(7) 229843 pid('GetLast' 2 pos('./compiler/Unnester.oz' 101 3) nil 2) <Q: 1484> nil)
		match(x(0) ht(229837 [onScalar(nil 229802) onRecord('|' 2 229806)]))
lbl(229802)	getLiteral(nil x(1))
		return
lbl(229806)	allocateL3
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		testLiteral(y(2) nil 229832)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1484> 5)
lbl(229832)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(229837)	unify(x(1) x(0))
		return
		endDefinition(229793)
lbl(229843)	definition(x(7) 229948 pid('DollarsInScope' 3 pos('./compiler/Unnester.oz' 131 3) nil 3) <Q: 1485> nil)
		match(x(0) ht(229942 [onRecord(fEq 3 229852) onRecord(fDollar 1 229877) onRecord(fRecord 2 229884) onRecord(fOpenRecord 2 229891) onRecord(fColon 2 229898) onRecord(fMethArg 2 229905) onRecord(fMethColonArg 3 229910) onRecord('|' 2 229917)]))
lbl(229852)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(229877)	inlinePlus1(x(1) x(0))
		unify(x(0) x(2))
		return
lbl(229884)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229891)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229898)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229905)	getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229910)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229917)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(229942)	unify(x(2) x(1))
		return
		endDefinition(229843)
lbl(229948)	definition(x(7) 230138 pid('DollarCoord' 2 pos('./compiler/Unnester.oz' 154 3) nil 5) <Q: 1486> nil)
		match(x(0) ht(230132 [onRecord(fEq 3 229957) onRecord(fDollar 1 229988) onRecord(fRecord 2 229994) onRecord(fOpenRecord 2 230035) onRecord(fColon 2 230076) onRecord(fMethArg 2 230083) onRecord(fMethColonArg 3 230088) onRecord('|' 2 230095)]))
lbl(229957)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1486> 4)
		testLiteral(y(2) unit 229983)
lbl(229974)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1486> 5)
lbl(229983)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(229988)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229994)	getVoid(1)
		getVariable(x(0))
lbl(229998)	definition(x(4) 230023 pid('' 3 pos('./compiler/Unnester.oz' 165 12) nil 3) unit nil)
		testLiteral(x(0) unit 230017)
lbl(230008)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230017)	unify(x(2) x(0))
		return
		endDefinition(229998)
lbl(230023)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230035)	getVoid(1)
		getVariable(x(0))
lbl(230039)	definition(x(4) 230064 pid('' 3 pos('./compiler/Unnester.oz' 171 12) nil 3) unit nil)
		testLiteral(x(0) unit 230058)
lbl(230049)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230058)	unify(x(2) x(0))
		return
		endDefinition(230039)
lbl(230064)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230076)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230083)	getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230088)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230095)	definition(x(4) 230120 pid('' 3 pos('./compiler/Unnester.oz' 183 12) nil 3) unit nil)
		testLiteral(x(0) unit 230114)
lbl(230105)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230114)	unify(x(2) x(0))
		return
		endDefinition(230095)
lbl(230120)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230132)	getLiteral(unit x(1))
		return
		endDefinition(229948)
lbl(230138)	definition(x(7) 230324 pid('ReplaceDollar' 3 pos('./compiler/Unnester.oz' 192 3) nil 5) <Q: 1487> nil)
		match(x(0) ht(230318 [onRecord(fEq 3 230147) onRecord(fDollar 1 230181) onRecord(fRecord 2 230185) onRecord(fOpenRecord 2 230218) onRecord(fColon 2 230251) onRecord(fMethArg 2 230264) onRecord(fMethColonArg 3 230278) onRecord('|' 2 230295)]))
lbl(230147)	allocateL3
		getVarVar(x(0) y(0))
		getVariable(x(3))
		getRecord(fEq 3 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		unifyValue(x(3))
		move(x(1) y(2))
		genFastCall(<Q: 1487> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1487> 7)
lbl(230181)	unify(x(2) x(1))
		return
lbl(230185)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230195)	definition(x(3) 230212 pid('' 2 pos('./compiler/Unnester.oz' 201 20) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230195)
lbl(230212)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230218)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230228)	definition(x(3) 230245 pid('' 2 pos('./compiler/Unnester.oz' 203 24) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230228)
lbl(230245)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230251)	getVarVar(x(3) x(0))
		getRecord(fColon 2 x(2))
		unifyValVar(x(3) x(2))
		genFastCall(<Q: 1487> 7)
lbl(230264)	getVarVar(x(0) x(3))
		getRecord(fMethArg 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(3))
		genFastCall(<Q: 1487> 7)
lbl(230278)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fMethColonArg 3 x(2))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		genFastCall(<Q: 1487> 7)
lbl(230295)	definition(x(3) 230312 pid('' 2 pos('./compiler/Unnester.oz' 211 10) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230295)
lbl(230312)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230318)	unify(x(2) x(0))
		return
		endDefinition(230138)
lbl(230324)	definition(x(7) 230417 pid('MakeTrivialLocalPrefix' 4 pos('./compiler/Unnester.oz' 217 3) nil 4) <Q: 1488> nil)
		match(x(0) ht(230401 [onRecord(fAnd 2 230333) onRecord(fVar 2 230368) onRecord(fWildcard 1 230381) onRecord(fDoImport 3 230391)]))
lbl(230333)	allocateL4
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1488> 9)
lbl(230368)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230381)	unify(x(1) x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230391)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unify(x(0) x(3))
		return
lbl(230401)	allocateL2
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<Q: 1431> 6)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(230324)
lbl(230417)	definition(x(7) 230461 pid('MakeDeclaration' 4 pos('./compiler/Unnester.oz' 240 3) nil 7) <Q: 1489> [y(3)])
		testList(x(0) 230455)
lbl(230426)	allocateL2
		move(g(0) x(4))
		inlineDot(x(4) declaration x(5) cache)
		callBI('Object.newObject' [x(5)]#[x(6)])
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(230455)	unify(x(3) x(1))
		return
		endDefinition(230417)
lbl(230461)	definition(x(7) 230615 pid('MakeBoolCase' 7 pos('./compiler/Unnester.oz' 248 3) nil 9) <Q: 1490> [y(3)])
		allocateL8
		move(g(0) x(5))
		inlineDot(x(5) boolClause x(7) cache)
		callBI('Object.newObject' [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		sendMsg(init y(5) 1 cache)
		createVariable(y(6))
		testRecord(y(1) noElse 1 230539)
lbl(230511)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(6))
		branch(230565)
lbl(230539)	move(g(0) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(1) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
lbl(230565)	move(g(0) x(0))
		inlineDot(x(0) boolCase x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(4))
		move(y(4) x(0))
		inlineDot(x(0) noBoolShared x(1) cache)
		unify(x(1) y(3))
		deAllocateL8
		return
		endDefinition(230461)
lbl(230615)	definition(x(7) 230704 pid('SortNoColonsToFront' 5 pos('./compiler/Unnester.oz' 260 3) nil 6) <Q: 1491> nil)
		match(x(0) ht(230689 [onScalar(nil 230624) onRecord('|' 2 230631)]))
lbl(230624)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(230631)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariable(y(3))
		createVariable(y(4))
		testRecord(x(0) '#' 2 230663)
lbl(230652)	unify(x(1) y(3))
		getList(x(3))
		unifyValue(x(0))
		unifyValue(y(4))
		branch(230672)
lbl(230663)	getList(x(1))
		unifyValue(x(0))
		unifyValue(y(3))
		unify(x(3) y(4))
lbl(230672)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<Q: 1491> 11)
lbl(230689)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(273)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230615)
lbl(230704)	createVariable(x(7))
lbl(230706)	definition(x(0) 230779 pid('IsGround' 2 pos('./compiler/Unnester.oz' 276 3) nil 4) <Q: 1492> [x(7)])
		match(x(0) ht(230773 [onRecord(fAtom 2 230715) onRecord(fInt 2 230719) onRecord(fFloat 2 230723) onRecord(fRecord 2 230727) onRecord(fColon 2 230751)]))
lbl(230715)	getLiteral(true x(1))
		return
lbl(230719)	getLiteral(true x(1))
		return
lbl(230723)	getLiteral(true x(1))
		return
lbl(230727)	getVarVar(x(0) x(3))
		testRecord(x(0) fAtom 2 230747)
lbl(230735)	move(x(3) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(230747)	getLiteral(false x(1))
		return
lbl(230751)	getVarVar(x(0) x(2))
		match(x(0) ht(230769 [onRecord(fAtom 2 230757) onRecord(fInt 2 230763)]))
lbl(230757)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230763)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230769)	getLiteral(false x(1))
		return
lbl(230773)	getLiteral(false x(1))
		return
		endDefinition(230706)
lbl(230779)	unify(x(0) x(7))
lbl(230782)	definition(x(7) 231015 pid('GroundToOzValue' 3 pos('./compiler/Unnester.oz' 294 3) nil 5) <Q: 1493> [g(9)])
		match(x(0) ht(231000 [onRecord(fAtom 2 230791) onRecord(fInt 2 230797) onRecord(fFloat 2 230803) onRecord(fRecord 2 230809)]))
lbl(230791)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230797)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230803)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230809)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		exHandler(230881)
		move(x(0) y(3))
		createCond(230875)
lbl(230828)	lastClause
		clause
		thread(230846)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(3) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(230846)	ask
lbl(230847)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(3))
		setConstant('expansion error')
		setConstant('duplicate feature in record')
		moveMoveYXYX(y(1) x(2) y(2) x(1))
		deAllocateL6
		tailCall(x(2) 2)
lbl(230875)	move(y(3) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(230881)	putConstant(1 x(3))
		callBI('Cell.new' [x(3)]#[x(4)])
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(230896)	definition(x(3) 230972 pid('' 2 pos('./compiler/Unnester.oz' 303 7) nil 6) unit [y(1) x(4)])
		testRecord(x(0) fColon 2 230938)
lbl(230907)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<Q: 1493> 6)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1493> 7)
lbl(230938)	move(g(1) x(2))
		createVariable(x(3))
		createVariable(x(4))
		callBI('Cell.exchange' [x(2) x(3) x(4)]#nil)
		inlinePlus1(x(3) x(5))
		unify(x(5) x(4))
		getRecord('#' 2 x(1))
		unifyValVar(x(3) x(4))
		move(g(0) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1493> 7)
		endDefinition(230896)
lbl(230972)	moveMoveXYYX(x(1) y(4) y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('Record.record' [x(0) x(1)]#[x(2)])
		unify(y(2) x(2))
		popEx
		deAllocateL6
		return
lbl(231000)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(316)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230782)
lbl(231015)	createVariable(x(7))
lbl(231017)	definition(x(0) 231120 pid('IsPattern' 2 pos('./compiler/Unnester.oz' 319 3) nil 3) <Q: 1494> [x(7)])
		match(x(0) ht(231114 [onRecord(fEq 3 231026) onRecord(fAtom 2 231057) onRecord(fVar 2 231061) onRecord(fWildcard 1 231065) onRecord(fEscape 2 231069) onRecord(fInt 2 231073) onRecord(fFloat 2 231077) onRecord(fRecord 2 231081) onRecord(fOpenRecord 2 231094) onRecord(fColon 2 231107)]))
lbl(231026)	getVarVar(x(0) x(2))
		match(x(0) ht(231044 [onRecord(fVar 2 231032) onRecord(fWildcard 1 231038)]))
lbl(231032)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231038)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231044)	match(x(2) ht(231053 [onRecord(fVar 2 231047) onRecord(fWildcard 1 231050)]))
lbl(231047)	genFastCall(<Q: 1494> 5)
lbl(231050)	genFastCall(<Q: 1494> 5)
lbl(231053)	getLiteral(false x(1))
		return
lbl(231057)	getLiteral(true x(1))
		return
lbl(231061)	getLiteral(true x(1))
		return
lbl(231065)	getLiteral(true x(1))
		return
lbl(231069)	getLiteral(true x(1))
		return
lbl(231073)	getLiteral(true x(1))
		return
lbl(231077)	getLiteral(true x(1))
		return
lbl(231081)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231094)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231107)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1494> 5)
lbl(231114)	getLiteral(false x(1))
		return
		endDefinition(231017)
lbl(231120)	unify(x(0) x(7))
lbl(231123)	definition(x(7) 231174 pid('IsConstraint' 2 pos('./compiler/Unnester.oz' 346 3) nil 2) <Q: 1495> nil)
		match(x(0) ht(231168 [onRecord(fEq 3 231132) onRecord(fAtom 2 231136) onRecord(fVar 2 231140) onRecord(fWildcard 1 231144) onRecord(fEscape 2 231148) onRecord(fInt 2 231152) onRecord(fFloat 2 231156) onRecord(fRecord 2 231160) onRecord(fOpenRecord 2 231164)]))
lbl(231132)	getLiteral(true x(1))
		return
lbl(231136)	getLiteral(true x(1))
		return
lbl(231140)	getLiteral(true x(1))
		return
lbl(231144)	getLiteral(true x(1))
		return
lbl(231148)	getLiteral(true x(1))
		return
lbl(231152)	getLiteral(true x(1))
		return
lbl(231156)	getLiteral(true x(1))
		return
lbl(231160)	getLiteral(true x(1))
		return
lbl(231164)	getLiteral(true x(1))
		return
lbl(231168)	getLiteral(false x(1))
		return
		endDefinition(231123)
lbl(231174)	definition(x(7) 231658 pid('SortFunctorDescriptors' 9 pos('./compiler/Unnester.oz' 360 3) nil 13) <Q: 1496> nil)
		match(x(0) ht(231643 [onScalar(nil 231183) onRecord('|' 2 231345)]))
lbl(231183)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		testBI('Value.isFree' [x(2)]#[x(0)] 231206)
		getLiteral(unit x(2))
lbl(231206)	move(y(0) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231232 231221)
		getLiteral(unit y(0))
		branch(231232)
lbl(231221)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(410)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231232)	move(y(1) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231258 231247)
		getLiteral(nil y(1))
		branch(231258)
lbl(231247)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(411)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231258)	move(y(2) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231284 231273)
		getLiteral(nil y(2))
		branch(231284)
lbl(231273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(412)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231284)	move(y(3) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231310 231299)
		getLiteral(nil y(3))
		branch(231310)
lbl(231299)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(413)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231310)	move(y(4) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231332 231334)
		getRecord(fSkip 1 y(4))
		unifyLiteral(unit)
		getRecord(fSkip 1 y(5))
		unifyLiteral(unit)
lbl(231332)	deAllocateL6
		return
lbl(231334)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231345)	allocateL9
		getVarVar(x(0) x(9))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(9) y(8))
		match(x(0) ht(231603 [onRecord(fRequire 2 231375) onRecord(fPrepare 3 231412) onRecord(fImport 2 231450) onRecord(fExport 2 231487) onRecord(fProp 2 231524) onRecord(fDefine 3 231561)]))
lbl(231375)	getVarVar(x(0) x(10))
		testBI('Value.isFree' [x(2)]#[x(11)] 231387)
		unify(y(1) x(0))
		branch(231616)
lbl(231387)	putRecord('#' 2 x(11))
		setConstant('more than one `require\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231412)	getVoid(2)
		getVariable(x(10))
		testBI('Value.isFree' [x(3)]#[x(11)] 231425)
		unify(y(2) x(0))
		branch(231616)
lbl(231425)	putRecord('#' 2 x(11))
		setConstant('more than one `prepare\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231450)	getVarVar(x(0) x(10))
		testBI('Value.isFree' [x(4)]#[x(11)] 231462)
		unify(y(3) x(0))
		branch(231616)
lbl(231462)	putRecord('#' 2 x(11))
		setConstant('more than one `import\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231487)	getVarVar(x(0) x(10))
		testBI('Value.isFree' [x(5)]#[x(11)] 231499)
		unify(y(4) x(0))
		branch(231616)
lbl(231499)	putRecord('#' 2 x(11))
		setConstant('more than one `export\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231524)	getVarVar(x(0) x(10))
		testBI('Value.isFree' [x(6)]#[x(11)] 231536)
		unify(y(5) x(0))
		branch(231616)
lbl(231536)	putRecord('#' 2 x(11))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231561)	getVarVar(x(0) x(10))
		getVariable(x(11))
		testBI('Value.isFree' [x(7)]#[x(12)] 231578)
		unify(y(6) x(0))
		unify(y(7) x(10))
		branch(231616)
lbl(231578)	putRecord('#' 2 x(10))
		setConstant('more than one `define\' descriptor ')
		setConstant('in functor definition')
		move(x(11) x(0))
		move(x(10) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231616)
lbl(231603)	putRecord(kernel 3 x(10))
		setConstant(noElse)
		setConstant(405)
		setValue(x(0))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(231616)	moveMoveYXYX(y(8) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		move(y(7) x(8))
		deAllocateL9
		genFastCall(<Q: 1496> 19)
lbl(231643)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(418)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231174)
lbl(231658)	definition(x(7) 231978 pid('SortClassDescriptors' 6 pos('./compiler/Unnester.oz' 421 3) nil 9) <Q: 1497> nil)
		match(x(0) ht(231963 [onScalar(nil 231667) onRecord('|' 2 231761)]))
lbl(231667)	allocateL3
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		testBI('Value.isFree' [x(2)]#[x(0)] 231683)
		getLiteral(nil x(2))
lbl(231683)	move(y(0) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231709 231698)
		getLiteral(nil y(0))
		branch(231709)
lbl(231698)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(455)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231709)	move(y(1) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231735 231724)
		getLiteral(nil y(1))
		branch(231735)
lbl(231724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231735)	move(y(2) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 231748 231750)
		getLiteral(nil y(2))
lbl(231748)	deAllocateL3
		return
lbl(231750)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(457)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231761)	allocateL6
		getVarVar(x(0) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		match(x(0) ht(231931 [onRecord(fFrom 2 231783) onRecord(fProp 2 231820) onRecord(fAttr 2 231857) onRecord(fFeat 2 231894)]))
lbl(231783)	getVarVar(x(0) x(7))
		testBI('Value.isFree' [x(2)]#[x(8)] 231795)
		unify(y(1) x(0))
		branch(231944)
lbl(231795)	putRecord('#' 2 x(8))
		setConstant('more than one `from\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231944)
lbl(231820)	getVarVar(x(0) x(7))
		testBI('Value.isFree' [x(3)]#[x(8)] 231832)
		unify(y(2) x(0))
		branch(231944)
lbl(231832)	putRecord('#' 2 x(8))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231944)
lbl(231857)	getVarVar(x(0) x(7))
		testBI('Value.isFree' [x(4)]#[x(8)] 231869)
		unify(y(3) x(0))
		branch(231944)
lbl(231869)	putRecord('#' 2 x(8))
		setConstant('more than one `attr\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231944)
lbl(231894)	getVarVar(x(0) x(7))
		testBI('Value.isFree' [x(5)]#[x(8)] 231906)
		unify(y(4) x(0))
		branch(231944)
lbl(231906)	putRecord('#' 2 x(8))
		setConstant('more than one `feat\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231944)
lbl(231931)	putRecord(kernel 3 x(7))
		setConstant(noElse)
		setConstant(451)
		setValue(x(0))
		callBI('Exception.raiseError' [x(7)]#nil)
lbl(231944)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 1497> 13)
lbl(231963)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(458)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231658)
lbl(231978)	putRecord('attr' [<M: ArgCounter> <M: BA> <M: StateUsed> <M: Stateful> reporter switches] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(231994)	definition(x(7) 232049 pid('Unnester,init/fast' 3 pos('./compiler/Unnester.oz' 470 6) nil 5) <Q: 1498> [y(0)])
		allocateL3
		move(g(0) x(3))
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		sendMsg(init y(2) 2 cache)
		move(y(2) x(0))
		inlineAssign(<M: BA> x(0) cache)
		move(y(0) x(0))
		inlineAssign(reporter x(0) cache)
		move(y(1) x(0))
		inlineAssign(switches x(0) cache)
		deAllocateL3
		return
		endDefinition(231994)
lbl(232049)	definition(x(8) 232090 pid('Unnester,init/slow' 1 pos('./compiler/Unnester.oz' 470 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1498> 7)
		endDefinition(232049)
lbl(232090)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(232102)	definition(x(7) 232456 pid('Unnester,unnestQuery/fast' 4 pos('./compiler/Unnester.oz' 476 6) nil 5) <Q: 1499> [y(0) y(3)])
		allocateL8
		putConstant(false x(4))
		inlineAssign(<M: Stateful> x(4) cache)
		move(x(3) y(0))
		testRecord(x(0) fDeclare 3 232354)
lbl(232125)	getVarVar(x(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1488> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		getSelf(x(2))
lbl(232160)	definition(x(1) 232214 pid('' 1 pos('./compiler/Unnester.oz' 482 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(232201)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(232181)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(232201)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(482)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(232160)
lbl(232214)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		putList(y(5))
		setVariable(x(1))
		setVariable(y(7))
		move(y(6) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		moveMoveXYYX(x(1) y(6) y(1) x(0))
		moveMoveYXYX(y(5) x(1) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		call(y(6) 2)
		inlineAt(<M: BA> x(1) cache)
		move(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
lbl(232312)	definition(x(1) 232346 pid('' 1 pos('./compiler/Unnester.oz' 490 6) nil 2) unit nil)
		allocateL1
		move(x(0) y(0))
		putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(232312)
lbl(232346)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(232439)
lbl(232354)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(2))
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(1))
		createVariableMove(y(5) x(0))
		sendMsg(closeScope x(2) 1 cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		call(y(1) 2)
lbl(232439)	inlineAt(<M: BA> x(1) cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(getFreeVariablesOfQuery x(1) 1 cache)
		endDefinition(232102)
lbl(232456)	definition(x(8) 232503 pid('Unnester,unnestQuery/slow' 1 pos('./compiler/Unnester.oz' 476 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1499> 9)
		endDefinition(232456)
lbl(232503)	putRecord('#' [1 2 fast] x(10))
		setConstant(unnestQuery)
		setValue(x(8))
		setValue(x(7))
lbl(232513)	definition(x(7) 232632 pid('Unnester,UnnestToTerm/fast' 4 pos('./compiler/Unnester.oz' 504 6) nil 6) <Q: 1500> [y(3) y(0)])
		match(x(0) ht(232627 [onRecord(fAtom 2 232522) onRecord(fInt 2 232557) onRecord(fFloat 2 232592)]))
lbl(232522)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) atomNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232557)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) intNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232592)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) floatNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232627)	genCall(gci(g(1) true <M: UnnestToVar> true 4) 0)
		endDefinition(232513)
lbl(232632)	definition(x(8) 232679 pid('Unnester,UnnestToTerm/slow' 1 pos('./compiler/Unnester.oz' 504 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1500> 9)
		endDefinition(232632)
lbl(232679)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: UnnestToTerm>)
		setValue(x(8))
		setValue(x(7))
lbl(232689)	definition(x(7) 232953 pid('Unnester,UnnestToVar/fast' 4 pos('./compiler/Unnester.oz' 518 6) nil 5) <Q: 1501> [y(0)])
		match(x(0) ht(232832 [onRecord(fVar 2 232698) onRecord(fWildcard 1 232718) onRecord(fEscape 2 232761) onRecord(fGetBinder 2 232788)]))
lbl(232698)	getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232718)	allocateL3
		getVariable(y(0))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
lbl(232761)	getVariable(x(4))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232788)	allocateL2
		getVarVar(x(4) y(0))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(1) x(2))
		sendMsg(refer x(4) 3 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg('getVariable' x(1) 1 cache)
lbl(232832)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		createVariable(y(5))
		match(y(0) ht(232889 [onRecord(fSelf 1 232854) onRecord(fProc 5 232859) onRecord(fFun 5 232864) onRecord(fFunctor 3 232869) onRecord(fClass 4 232874) onRecord(fScanner 6 232879) onRecord(fParser 7 232884)]))
lbl(232854)	getLiteral('Self' y(5))
		branch(232892)
lbl(232859)	getLiteral('Proc' y(5))
		branch(232892)
lbl(232864)	getLiteral('Fun' y(5))
		branch(232892)
lbl(232869)	getLiteral('Functor' y(5))
		branch(232892)
lbl(232874)	getLiteral('Class' y(5))
		branch(232892)
lbl(232879)	getLiteral('Scanner' y(5))
		branch(232892)
lbl(232884)	getLiteral('Parser' y(5))
		branch(232892)
lbl(232889)	unify(y(5) y(1))
lbl(232892)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(232689)
lbl(232953)	definition(x(8) 233000 pid('Unnester,UnnestToVar/slow' 1 pos('./compiler/Unnester.oz' 518 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1501> 9)
		endDefinition(232953)
lbl(233000)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: UnnestToVar>)
		setValue(x(8))
		setValue(x(7))
lbl(233010)	definition(x(7) 233129 pid('Unnester,MakeLabelOrFeature/fast' 2 pos('./compiler/Unnester.oz' 549 6) nil 6) <Q: 1502> [y(3) y(0)])
		match(x(0) ht(233114 [onRecord(fAtom 2 233019) onRecord(fVar 2 233054) onRecord(fInt 2 233074) onRecord(fEscape 2 233109)]))
lbl(233019)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233054)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(1) x(2))
		move(x(3) x(1))
		tailSendMsg(refer x(4) 3 cache)
lbl(233074)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233109)	getVariable(x(0))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> true 2) 0)
lbl(233114)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(558)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(233010)
lbl(233129)	definition(x(8) 233164 pid('Unnester,MakeLabelOrFeature/slow' 1 pos('./compiler/Unnester.oz' 549 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1502> 5)
		endDefinition(233129)
lbl(233164)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(233174)	definition(x(7) 233299 pid('Unnester,GenerateNewVar/fast' 4 pos('./compiler/Unnester.oz' 560 6) nil 5) <Q: 1503> nil)
		allocateL4
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		sendMsg(openScope x(4) 0 cache)
		getSelf(x(2))
lbl(233204)	definition(x(1) 233258 pid('' 1 pos('./compiler/Unnester.oz' 562 14) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(233245)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(233225)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(233245)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(233204)
lbl(233258)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		deAllocateL4
		tailSendMsg(closeScope x(1) 1 cache)
		endDefinition(233174)
lbl(233299)	definition(x(8) 233346 pid('Unnester,GenerateNewVar/slow' 1 pos('./compiler/Unnester.oz' 560 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1503> 9)
		endDefinition(233299)
lbl(233346)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: GenerateNewVar>)
		setValue(x(8))
		setValue(x(7))
lbl(233356)	definition(x(7) 238835 pid('Unnester,UnnestStatement/fast' 2 pos('./compiler/Unnester.oz' 567 6) nil 20) <Q: 1504> [y(0) y(3) y(4) g(10) y(6) y(5)])
		match(x(0) ht(238755 [onRecord(fStepPoint 3 233365) onRecord(fAnd 2 233463) onRecord(fEq 3 233485) onRecord(fAssign 3 233860) onRecord(fOpApplyStatement 3 233955) onRecord(fFdCompare 4 234043) onRecord(fFdIn 4 234106) onRecord(fObjApply 3 234227) onRecord(fDollar 1 234368) onRecord(fApply 3 234421) onRecord(fProc 5 234502) onRecord(fFun 5 234902) onRecord(fFunctor 3 235277) onRecord(fDoImport 3 236069) onRecord(fClass 4 236229) onRecord(fScanner 6 236669) onRecord(fParser 7 236729) onRecord(fLocal 3 236789) onRecord(fBoolCase 4 237028) onRecord(fCase 4 237549) onRecord(fLockThen 3 237602) onRecord(fLock 2 237670) onRecord(fThread 2 237771) onRecord(fTry 4 237857) onRecord(fRaise 2 237860) onRecord(fRaiseWith 3 237882) onRecord(fSkip 1 238013) onRecord(fFail 1 238044) onRecord(fNot 2 238075) onRecord(fCond 3 238133) onRecord(fOr 3 238254) onRecord(fCondis 2 238380)]))
lbl(233365)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(4) 233447 233452)
lbl(233401)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(4) 233447 233452)
lbl(233414)	move(g(1) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(2))
		deAllocateL5
		return
lbl(233447)	unify(y(2) y(3))
		deAllocateL5
		return
lbl(233452)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(570)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233463)	allocateL2
		getVarVar(x(0) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(233485)	allocateL9
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(5) 233680 233849)
lbl(233509)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233680 233849)
lbl(233522)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233680 233849)
lbl(233535)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('=')
		setValue(x(1))
		setValue(y(2))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(4))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(0) x(1))
		getListValVar(x(1) y(1) x(2))
		getList(x(2))
		unifyValue(y(7))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(233680)	createVariable(y(5))
		createVariable(y(6))
		testRecord(y(1) fVar 2 233704)
lbl(233689)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233841)
lbl(233704)	testRecord(y(1) fEscape 2 233738)
lbl(233709)	getVariable(x(0))
		shallowGuard(233738)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233721)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233841)
lbl(233738)	testRecord(y(0) fVar 2 233758)
lbl(233743)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233841)
lbl(233758)	testRecord(y(0) fEscape 2 233794)
lbl(233763)	getVariable(x(0))
		createVariable(y(0))
		shallowGuard(233794)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233777)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233841)
lbl(233794)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
lbl(233841)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(6))
		deAllocateL9
		return
lbl(233849)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233860)	allocateL4
		getVarVar(x(0) x(2))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(3) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(x(2) y(3))
		testBool(x(3) 233893 233915)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(233926)
lbl(233893)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute assignment used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(233926)
lbl(233915)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(607)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(233926)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(2))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('<-')
		setValue(x(1))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(233955)	allocateL7
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(2) x(2))
		inlineDot(x(2) procs x(3) cache)
		callBI('Record.\'.\'' [x(3) x(0)]#[x(4)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(4) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(6) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		deAllocateL7
		return
lbl(234043)	allocateL8
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 1467> 10)
		getList(y(3))
		unifyValVar(y(4) x(0))
		getListValVar(x(0) y(6) x(1))
		move(y(1) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234106)	allocateL6
		getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		match(x(0) ht(234138 [onScalar('::' 234128) onScalar(':::' 234133)]))
lbl(234128)	getLiteral(int y(4))
		branch(234151)
lbl(234133)	getLiteral(dom y(4))
		branch(234151)
lbl(234138)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(632)
		setValue(x(0))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(234151)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(3))
		setConstant('FD')
		setValue(y(3))
		putRecord(fAtom 2 x(5))
		setValue(y(4))
		setValue(y(3))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(5))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(y(2))
		setValue(x(7))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234227)	allocateL4
		getVarVar(y(0) x(4))
		getVariable(y(1))
		inlineAt(<M: Stateful> x(0) cache)
		moveMoveXYXY(x(1) y(2) x(4) y(3))
		testBool(x(0) 234306 234328)
		putConstant(true x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		testRecord(y(0) fSelf 1 234339)
lbl(234260)	getVariable(x(0))
		inlineAt(reporter x(5) cache)
		putRecord('#' 2 x(8))
		setConstant('use a class in front of "," ')
		setConstant('or use "{self message}"')
		putRecord(hint [l m] x(7))
		setConstant('Hint')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(5) [coord items kind msg] cache)
		branch(234339)
lbl(234306)	inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(234339)
lbl(234328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(638)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234339)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(1))
		move(y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234368)	allocateL3
		getVariable(y(0))
		inlineAt(reporter x(3) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(234421)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('UnnestApply' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyValue(y(0))
		deAllocateL8
		return
lbl(234502)	allocateL(12)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYYX(x(1) y(5) y(0) x(0))
		putConstant('Proc' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI('Object.ooExch' [x(3) x(4)]#[x(0)])
lbl(234538)	definition(x(1) 234572 pid('' 2 pos('./compiler/Unnester.oz' 670 36) nil 4) unit nil)
		shallowGuard(234559)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234554)	shallowThen
		unify(x(1) x(2))
		return
lbl(234559)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234538)
lbl(234572)	moveMoveXYYX(x(0) y(8) y(3) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(234583)	definition(x(1) 234601 pid('' 2 pos('./compiler/Unnester.oz' 671 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(234583)
lbl(234601)	move(y(9) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		putConstant(0 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(9) 1 234684)
lbl(234640)	move(y(9) x(0))
		putConstant(1 x(5))
		testLT(x(5) x(0) x(1) 234721)
lbl(234651)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(0) y(1) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(9) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in procedure head allowed' x(2))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(234721)
lbl(234684)	testLiteral(y(3) nil 234690)
lbl(234688)	branch(234640)
lbl(234690)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(9) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('exactly one $ in head of lazy procedure required' x(2))
		sendMsg(error y(9) [coord kind msg] cache)
lbl(234721)	move(y(3) x(0))
		putConstant(nil x(5))
		callBI('Value.\'\\=\'' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(3))
		testBool(y(2) 234777 234782)
		getLiteral(true y(3))
		branch(234793)
lbl(234777)	unify(y(3) y(8))
		branch(234793)
lbl(234782)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(688)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(234793)	move(y(3) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) 'definition' x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(10) x(4))
		move(y(4) x(5))
		sendMsg(init y(3) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 234894 234883)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(3) 1 cache)
		branch(234894)
lbl(234883)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234894)	getList(y(5))
		unifyValue(y(6))
		unifyValue(y(3))
		deAllocateL
		return
lbl(234902)	allocateL(12)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		move(x(1) y(4))
		putConstant('Fun' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI('Object.ooExch' [x(3) x(4)]#[x(0)])
lbl(234936)	definition(x(1) 234970 pid('' 2 pos('./compiler/Unnester.oz' 701 36) nil 4) unit nil)
		shallowGuard(234957)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234952)	shallowThen
		unify(x(1) x(2))
		return
lbl(234957)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(701)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234936)
lbl(234970)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
lbl(234981)	definition(x(1) 234999 pid('' 2 pos('./compiler/Unnester.oz' 702 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(234981)
lbl(234999)	move(y(8) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1485> 6)
		createVariable(y(10))
		testNumber(y(8) 0 235062)
		putRecord(fDollar 1 x(0))
		setValue(y(3))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(10) x(2))
		genFastCall(<P: 21> 6)
		branch(235096)
lbl(235062)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(8) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('no $ in function head allowed' x(2))
		sendMsg(error y(8) [coord kind msg] cache)
		unify(y(10) y(0))
lbl(235096)	move(y(2) x(0))
		putConstant(nil x(5))
		callBI('Value.\'\\=\'' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(10) x(0) y(1) x(1))
		move(y(3) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(8))
		testBool(y(2) 235152 235157)
		getLiteral(true y(8))
		branch(235168)
lbl(235152)	unify(y(8) y(7))
		branch(235168)
lbl(235157)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(715)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(235168)	move(y(8) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) functionDefinition x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(9) x(4))
		move(y(3) x(5))
		sendMsg(init y(7) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 235269 235258)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(7) 1 cache)
		branch(235269)
lbl(235258)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(718)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235269)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL
		return
lbl(235277)	allocateL(14)
		getVarVar(y(0) x(0))
		getVariable(y(1))
		inlineAt(reporter x(9) cache)
		move(x(1) y(2))
		move(x(9) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		createVariableMove(y(7) x(6))
		createVariableMove(y(8) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<Q: 1496> 18)
		testLiteral(y(3) unit 235678)
lbl(235323)	testLiteral(y(4) unit 235678)
lbl(235327)	move(y(0) x(0))
		putConstant('Functor' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(10))
		setVariable(y(11))
		setVariable(y(12))
		createVariableMove(y(13) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(11) x(0))
		sendMsg(getPrintName y(13) 1 cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(5) x(0))
		createVariableMove(y(0) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImports> false 4) 0)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(12) x(2))
		genCall(gci(g(0) true <M: AnalyseExports> false 3) 0)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('IMPORT' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(1))
		sendMsg(getPrintName y(6) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(11))
		setValue(y(8))
		putRecord(fAtom 2 x(3))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(y(12))
		putRecord(fAnd 2 x(1))
		setValue(y(9))
		setValue(x(2))
		putRecord(fLocal 3 y(13))
		setValue(x(0))
		setValue(x(1))
		setValue(y(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Body' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(8) 1 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(fAtom 2 x(3))
		setConstant(instantiate)
		setValue(y(1))
		putList(x(1))
		setValue(x(3))
		setValue(y(7))
		putRecord(fFun 5 x(2))
		setValue(y(9))
		setValue(x(0))
		setValue(y(13))
		setValue(x(1))
		setValue(y(6))
		putRecord(fAtom 2 x(0))
		setConstant('import')
		setValue(y(6))
		putRecord(fRecord 2 x(3))
		setValue(x(0))
		setValue(y(4))
		putRecord(fAtom 2 x(0))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(4))
		setValue(x(0))
		setValue(y(5))
		putList(x(7))
		setValue(y(10))
		setConstant(nil)
		putList(x(6))
		setValue(y(9))
		setValue(x(7))
		putList(x(1))
		setValue(x(4))
		setValue(x(6))
		putList(x(0))
		setValue(x(3))
		setValue(x(1))
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('NewFunctor')
		setValue(x(0))
		setValue(y(6))
		putRecord(fAnd 2 x(1))
		setValue(x(2))
		setValue(x(5))
		putRecord(fStepPoint 3 x(0))
		setValue(x(1))
		setConstant('definition')
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL
		return
lbl(235678)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('OuterFunctor' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('InnerFunctor' x(0))
		createVariableMove(y(10) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		putRecord(fVar 2 y(11))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(10) 1 cache)
		putRecord(fImport 2 x(1))
		setValue(y(3))
		setConstant(unit)
		putRecord(fAtom 2 x(7))
		setConstant(inner)
		setConstant(unit)
		putRecord(fColon 2 x(6))
		setValue(x(7))
		setValue(y(7))
		putRecord(fExportItem 1 x(5))
		setValue(x(6))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fExport 2 x(3))
		setValue(x(4))
		setConstant(unit)
		putRecord(fImport 2 x(14))
		setValue(y(5))
		setConstant(unit)
		putRecord(fExport 2 x(16))
		setValue(y(6))
		setConstant(unit)
		putRecord(fDefine 3 x(18))
		setValue(y(8))
		setValue(y(9))
		setConstant(unit)
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putRecord(fFunctor 3 x(12))
		setValue(y(7))
		setValue(x(13))
		setValue(y(1))
		putRecord(fAnd 2 x(10))
		setVariable(x(11))
		setValue(x(12))
		putRecord(fDefine 3 x(9))
		setValue(x(10))
		setVariable(x(19))
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fFunctor 3 y(10))
		setValue(y(11))
		setValue(x(0))
		setValue(y(1))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		move(y(4) x(1))
		putConstant(1 x(2))
		callBI('Value.condSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(11))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		putConstant(2 x(2))
		callBI('Value.condSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(19))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAtom 2 x(5))
		setVariable(x(6))
		setConstant(unit)
		putList(x(7))
		setValue(y(11))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putRecord(fOpApply 3 x(3))
		setConstant('ApplyFunctor')
		setValue(x(4))
		setValue(y(3))
		putRecord(fAtom 2 x(9))
		setConstant(inner)
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(0))
		setConstant('.')
		setValue(x(1))
		setValue(y(3))
		putRecord(fEq 3 x(2))
		setValue(y(0))
		setValue(x(0))
		setValue(y(3))
		move(y(1) x(0))
		putConstant(1 x(3))
		putConstant('' x(4))
		callBI('Value.condSelect' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(6))
		putRecord(fAnd 2 x(1))
		setValue(y(10))
		setValue(x(2))
		putRecord(fLocal 3 x(3))
		setValue(y(11))
		setValue(x(1))
		setValue(y(1))
		move(x(3) x(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(236069)	allocateL8
		getVoid(1)
		getVarVar(y(0) x(2))
		getRecord(fVar 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		putRecord(fAtom 2 x(0))
		setValue(y(1))
		setValue(y(2))
		putConstant('Feature' x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(0) 2 cache)
		getList(y(3))
		unifyValVar(y(1) y(0))
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putList(x(5))
		setValue(y(6))
		setValue(x(6))
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(4) x(1))
		move(y(2) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL8
		return
lbl(236229)	allocateL(17)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Class' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1497> 12)
		move(y(1) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(9) x(0))
		move(g(5) x(1))
		move(y(0) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 32> 8)
		move(y(8) x(0))
		move(g(5) x(1))
		move(y(10) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1434> 4)
		getSelf(x(3))
lbl(236342)	definition(x(1) 236411 pid('' 2 pos('./compiler/Unnester.oz' 815 6) nil 5) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooPrivate)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(236342)
lbl(236411)	move(y(10) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		putConstant('Parent' x(1))
		createVariableMove(y(10) x(2))
		putConstant(nil x(3))
		createVariableMove(y(11) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(7) x(0))
		putConstant('Property' x(1))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		createVariableMove(y(12) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(8) x(0))
		putConstant('Attribute' x(1))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		createVariableMove(y(13) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		move(y(9) x(0))
		putConstant('Feature' x(1))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		createVariableMove(y(14) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		putConstant(<M: Stateful> x(3))
		putConstant(true x(4))
		callBI('Object.ooExch' [x(3) x(4)]#[x(0)])
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI('Object.ooExch' [x(3) x(4)]#[x(1)])
		getSelf(x(3))
lbl(236524)	definition(x(4) 236540 pid('' 2 pos('./compiler/Unnester.oz' 829 8) nil 3) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: UnnestMeth> true 2) 0)
		endDefinition(236524)
lbl(236540)	moveMoveXYXY(x(0) y(9) x(1) y(15))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		move(y(9) x(0))
		inlineAssign(<M: Stateful> x(0) cache)
		move(y(15) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		callBI('Object.newObject' [x(7)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		moveMoveYXYX(y(11) x(1) y(12) x(2))
		moveMoveYXYX(y(13) x(3) y(14) x(4))
		moveMoveYXYX(y(16) x(5) y(2) x(6))
		sendMsg(init y(9) 7 cache)
		getList(y(3))
		unifyValVar(y(4) x(3))
		putList(x(5))
		setValue(y(8))
		setValue(y(9))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(2))
		setValue(y(6))
		setValue(x(4))
		putList(x(0))
		setValue(y(10))
		setValue(x(2))
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(236669)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236729)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236789)	allocateL6
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(236826)	definition(x(1) 236974 pid('' 1 pos('./compiler/Unnester.oz' 888 6) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		testRecord(x(0) fVar 2 236861)
lbl(236842)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(236861)	testRecord(x(0) fDoImport 3 236917)
lbl(236866)	allocateL2
		getVarVar(x(4) x(3))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: UnnestImportFeatures> true 2) 0)
lbl(236917)	allocateL1
		move(x(0) y(0))
		testRecord(y(0) fExportItem 1 236959)
lbl(236926)	getVariable(x(2))
		shallowGuard(236959)
		getRecord(fVar 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236938)	shallowThen
		inlineAt(<M: BA> x(5) cache)
		move(x(3) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bindExport x(5) 3 cache)
lbl(236959)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(898)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236826)
lbl(236974)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putList(y(0))
		setVariable(x(1))
		setVariable(y(4))
		move(y(5) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genFastCall(<Q: 1489> 9)
lbl(237028)	allocateL(11)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		callBI('Record.label' [x(0)]#[x(2)])
		inlineAt(switches x(3) cache)
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(x(2) y(5))
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(3) 2 cache)
		move(y(6) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 237359)
lbl(237071)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 237359)
lbl(237095)	inlineAt(switches x(2) cache)
		putConstant(staticanalysis x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(6) 237512 237538)
lbl(237116)	testLiteral(y(5) fOrElse 237353)
lbl(237120)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(0) x(3))
		createVariableMove(y(6) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		createVariable(y(5))
		createVariable(y(7))
		testRecord(y(1) fNoElse 1 237251)
lbl(237203)	getVariable(y(1))
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(5))
lbl(237231)	definition(x(0) 237246 pid('ApplyFalseProc' 1 pos('./compiler/Unnester.oz' 925 4) nil 1) unit [y(1)])
		getRecord(noElse 1 x(0))
		unifyValue(g(0))
		return
		endDefinition(237231)
lbl(237246)	unify(x(0) y(7))
		branch(237324)
lbl(237251)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(2) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(10) x(1) y(2) x(2))
		moveMoveYXYX(y(5) x(3) y(7) x(4))
		putConstant('FalseCase' x(0))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
lbl(237324)	getList(y(3))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariable(x(3))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(237353)	testLiteral(y(5) fAndThen 237359)
		branch(237120)
lbl(237359)	move(y(4) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		createVariable(y(0))
		testRecord(y(1) fNoElse 1 237439)
lbl(237429)	getVariable(x(0))
		getRecord(noElse 1 y(0))
		unifyValue(x(0))
		branch(237486)
lbl(237439)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1489> 8)
lbl(237486)	getList(y(3))
		unifyValVar(y(5) x(6))
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		createVariable(x(4))
		deAllocateL
		genFastCall(<Q: 1490> 15)
lbl(237512)	inlineAt(switches x(2) cache)
		putConstant(codegen x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 237359)
		branch(237116)
lbl(237538)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(904)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(237549)	allocateL7
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Arbiter' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(3))
		unifyValVar(y(4) y(6))
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		genCall(gci(g(0) true <M: UnnestCase> true 5) 0)
lbl(237602)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Lock' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValVar(y(3) y(0))
		move(g(1) x(0))
		inlineDot(x(0) lockNode x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(4) x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL6
		return
lbl(237670)	allocateL4
		getVarVar(x(0) y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		testBool(x(2) 237698 237720)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(237731)
lbl(237698)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(237731)
lbl(237720)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(959)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(237731)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) objectLockNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		move(y(0) x(1))
		sendMsg(init y(2) 2 cache)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(237771)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) threadNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(237857)	genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(237860)	getVarVar(x(2) x(3))
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('Raise')
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(237882)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Exception' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(5))
		setVariable(y(6))
		setValue(y(1))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(6) x(0))
		sendMsg(getPrintName y(7) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		putList(x(2))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApply 3 x(1))
		setConstant('RaiseDebugCheck')
		setValue(x(2))
		setValue(y(4))
		putList(x(5))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		putRecord(fOpApplyStatement 3 x(3))
		setConstant('RaiseDebugExtend')
		setValue(x(4))
		setValue(y(1))
		putList(x(7))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(6))
		setConstant('Raise')
		setValue(x(7))
		setValue(y(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(6))
		setValue(y(4))
		getList(y(2))
		unifyValVar(y(3) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(238013)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) skipNode x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238044)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) failNode x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238075)	getVarVar(x(2) x(3))
		putRecord(fSkip 1 x(7))
		setValue(x(3))
		putRecord(fFail 1 x(8))
		setValue(x(3))
		putRecord(fClause 3 x(6))
		setValue(x(7))
		setValue(x(2))
		setValue(x(8))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putRecord(fSkip 1 x(9))
		setValue(x(3))
		putRecord(fCond 3 x(4))
		setValue(x(5))
		setValue(x(9))
		setValue(x(3))
		putRecord(fThread 2 x(0))
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(238133)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant(fif x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		createVariable(y(4))
		testRecord(y(0) fNoElse 1 238186)
lbl(238158)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
		branch(238221)
lbl(238186)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(5) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
lbl(238221)	move(g(1) x(0))
		inlineDot(x(0) ifNode x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL6
		return
lbl(238254)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		match(y(0) ht(238367 [onScalar(for 238274) onScalar(fdis 238305) onScalar(fchoice 238336)]))
lbl(238274)	move(g(1) x(0))
		inlineDot(x(0) orNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238305)	move(g(1) x(0))
		inlineDot(x(0) disNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238336)	move(g(1) x(0))
		inlineDot(x(0) choiceNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238367)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1009)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238380)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		putConstant(nil x(3))
		callBI('Cell.new' [x(3)]#[x(0)])
		getSelf(x(3))
lbl(238406)	definition(x(1) 238681 pid('' 2 pos('./compiler/Unnester.oz' 1014 6) nil 5) unit [x(3) g(0) x(0)])
		move(g(0) x(2))
		setSelf(x(2))
		getSelf(x(3))
lbl(238419)	definition(x(4) 238670 pid('' 2 pos('./compiler/Unnester.oz' 1016 3) nil 4) unit [x(3) g(1) g(2)])
		allocateL(11)
		move(g(0) x(2))
		setSelf(x(2))
		move(x(1) y(0))
		createVariable(y(1))
		createVariable(y(2))
		match(x(0) ht(238638 [onRecord(fFdCompare 4 238442) onRecord(fFdIn 4 238489)]))
lbl(238442)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdCompare 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238651)
lbl(238489)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariable(y(6))
		createVariable(y(7))
		match(y(3) ht(238558 [onScalar('::' 238502) onScalar(':::' 238548)]))
lbl(238502)	move(y(6) x(2))
		putConstant('UnnestFDIn' x(1))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		getRecord(fVar 2 y(7))
		unifyVariable(x(0))
		unifyVariable(y(8))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(8) x(0))
		sendMsg(getCoord y(9) 1 cache)
		branch(238571)
lbl(238548)	moveMoveYXYX(y(6) x(1) y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDList> false 3) 0)
		branch(238571)
lbl(238558)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1032)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238571)	move(y(4) x(0))
		putConstant('UnnestDomain' x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(9) 1 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(4) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(4) 1 cache)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdIn 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238651)
lbl(238638)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(1038)
		setValue(x(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(238651)	putList(x(0))
		setVariable(x(1))
		setValue(y(1))
		move(g(2) x(2))
		callBI('Cell.exchange' [x(2) x(1) x(0)]#nil)
		unify(y(2) y(0))
		deAllocateL
		return
		endDefinition(238419)
lbl(238670)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(238406)
lbl(238681)	moveMoveXYYX(x(0) y(3) y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: BA> x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<Q: 1480> 8)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(3) x(0))
		callBI('Cell.access' [x(0)]#[x(4)])
		putList(x(1))
		setValue(x(4))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1489> 9)
lbl(238755)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		putConstant('expression at statement position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Error' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fVar 2 x(1))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(233356)
lbl(238835)	definition(x(8) 238870 pid('Unnester,UnnestStatement/slow' 1 pos('./compiler/Unnester.oz' 567 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1504> 5)
		endDefinition(238835)
lbl(238870)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: UnnestStatement>)
		setValue(x(8))
		setValue(x(7))
lbl(238880)	definition(x(7) 244019 pid('Unnester,UnnestExpression/fast' 3 pos('./compiler/Unnester.oz' 1053 6) nil 13) <Q: 1505> [y(3) y(0) y(4) g(11) g(12)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		match(y(0) ht(243988 [onRecord(fTypeOf 1 238905) onRecord(fStepPoint 3 238960) onRecord(fAnd 2 239057) onRecord(fEq 3 239081) onRecord(fAssign 3 239103) onRecord(fOrElse 3 239200) onRecord(fAndThen 3 239252) onRecord(fOpApply 3 239304) onRecord(fUnoptimizedDot 2 239616) onRecord(fFdCompare 4 239745) onRecord(fFdIn 4 239807) onRecord(fObjApply 3 239961) onRecord(fAt 2 240147) onRecord(fAtom 2 240234) onRecord(fVar 2 240320) onRecord(fWildcard 1 240397) onRecord(fEscape 2 240425) onRecord(fSelf 1 240436) onRecord(fDollar 1 240559) onRecord(fInt 2 240609) onRecord(fFloat 2 240695) onRecord(fRecord 2 240781) onRecord(fOpenRecord 2 240902) onRecord(fApply 3 241023) onRecord(fProc 5 241231) onRecord(fFun 5 241308) onRecord(fFunctor 3 241385) onRecord(fClass 4 241452) onRecord(fScanner 6 241520) onRecord(fParser 7 241590) onRecord(fLocal 3 241664) onRecord(fBoolCase 4 242166) onRecord(fCase 4 242237) onRecord(fLockThen 3 242727) onRecord(fLock 2 242759) onRecord(fThread 2 242842) onRecord(fTry 4 242879) onRecord(fRaise 2 243278) onRecord(fRaiseWith 3 243311) onRecord(fNot 2 243344) onRecord(fCond 3 243372) onRecord(fOr 3 243659)]))
lbl(238905)	getVariable(y(0))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(1) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) typeOf x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		move(y(1) x(1))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(238960)	getVarVar(x(0) y(0))
		getVariable(y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 239041 239046)
lbl(238995)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(1) 239041 239046)
lbl(239008)	move(g(0) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(3) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL
		return
lbl(239041)	unify(y(2) y(4))
		deAllocateL
		return
lbl(239046)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1059)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(239057)	getVarVar(x(0) y(0))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(239081)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(4))
		deAllocateL
		return
lbl(239103)	getVarVar(x(0) x(1))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		testBool(x(2) 239132 239154)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(239165)
lbl(239132)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute exchange used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(239165)
lbl(239154)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1070)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(239165)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(y(4))
		setValue(x(3))
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooExch)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239200)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fVar 2 x(5))
		setConstant('`true`')
		setValue(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(5))
		setValue(x(4))
		putRecord(fEq 3 x(6))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(6))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239252)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fVar 2 x(6))
		setConstant('`false`')
		setValue(x(4))
		putRecord(fEq 3 x(5))
		setValue(y(1))
		setValue(x(6))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(5))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239304)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 239327)
		branch(239384)
lbl(239327)	createVariable(y(6))
		testList(y(4) 239345)
lbl(239332)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 239345)
		getLiteral(prefix y(6))
		branch(239348)
lbl(239345)	getLiteral(infix y(6))
lbl(239348)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(7) y(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setValue(y(6))
		setConstant(' operator cannot take $ as argument')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
lbl(239384)	testRecord(y(0) fOpApply 3 239450)
lbl(239389)	getVarVar(x(0) x(1))
		shallowGuard(239450)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239425)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239450)	testRecord(y(0) fOpApply 3 239518)
lbl(239455)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(239518)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239493)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239518)	move(g(2) x(0))
		inlineDot(x(0) procs x(1) cache)
		move(y(3) x(2))
		callBI('Record.\'.\'' [x(1) x(2)]#[x(3)])
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(3) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 21> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(3) x(0))
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		sendMsg(init y(1) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(6))
		unifyValue(y(1))
		deAllocateL
		return
lbl(239616)	getVarVar(x(3) y(3))
		getRecord(fVar 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(4))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(referUnchecked x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(3))
		setValue(x(1))
		createVariableMove(y(3) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValVar(y(7) y(9))
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(8))
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		move(x(4) x(1))
		move(y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(9))
		deAllocateL
		return
lbl(239745)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(9) x(2) y(5) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1468> 12)
		getList(y(2))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239807)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		match(x(0) ht(239836 [onScalar('::' 239826) onScalar(':::' 239831)]))
lbl(239826)	getLiteral(int y(6))
		branch(239849)
lbl(239831)	getLiteral(dom y(6))
		branch(239849)
lbl(239836)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1123)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(239849)	move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(5))
		setConstant('FD')
		setValue(y(5))
		putRecord(fAtom 2 x(7))
		setConstant(reified)
		setValue(y(5))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putRecord(fOpApply 3 x(3))
		setConstant('.')
		setValue(x(4))
		setValue(y(5))
		putRecord(fAtom 2 x(9))
		setValue(y(6))
		setValue(y(5))
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(7))
		putList(x(12))
		setValue(y(1))
		setConstant(nil)
		putList(x(11))
		setValue(y(3))
		setValue(x(12))
		putList(x(10))
		setValue(y(4))
		setValue(x(11))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(10))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239961)	getVarVar(y(3) y(4))
		getVariable(y(5))
		inlineAt(<M: Stateful> x(0) cache)
		testBool(x(0) 240074 240096)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 1 240047)
		testRecord(y(3) fSelf 1 240107)
lbl(240004)	getVariable(x(0))
		inlineAt(reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('use a class in front of "," ')
		setConstant('or use {self message}')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(240107)
lbl(240047)	inlineAt(reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('message of nested object application ')
		setConstant('must contain exactly one nesting marker')
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240107)
lbl(240074)	inlineAt(reporter x(3) cache)
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240107)
lbl(240096)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(240107)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240147)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 240172 240194)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(240205)
lbl(240172)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute access used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240205)
lbl(240194)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1157)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(240205)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(4))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('@')
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240234)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) atomNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240320)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(6) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240397)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240425)	getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(240436)	getVariable(y(3))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(4) x(1) y(5))
		testBool(x(2) 240470 240492)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(240503)
lbl(240470)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('self used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240503)
lbl(240492)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1177)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(240503)	move(g(0) x(0))
		inlineDot(x(0) 'getSelf' x(1) cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(6) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240559)	getVariable(y(3))
		inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(0) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240609)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) intNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240695)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) floatNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240781)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 240840)
lbl(240835)	getLiteral('' y(8))
		branch(240843)
lbl(240840)	unify(y(8) y(5))
lbl(240843)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(3) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(240902)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 240961)
lbl(240956)	getLiteral('' y(8))
		branch(240964)
lbl(240961)	unify(y(8) y(5))
lbl(240964)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(241023)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(3) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 241092)
lbl(241056)	testNumber(y(7) 0 241092)
lbl(241060)	putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241092)	testNumber(y(6) 0 241128)
lbl(241096)	testNumber(y(7) 1 241128)
lbl(241100)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241128)	testNumber(y(6) 1 241179)
lbl(241132)	testNumber(y(7) 0 241179)
lbl(241136)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(6))
		setValue(y(3))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241179)	inlineAt(reporter x(0) cache)
		putList(x(2))
		setValue(y(3))
		setValue(y(4))
		move(x(0) y(3))
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setConstant('at most one nesting marker allowed ')
		setConstant('in nested application')
		move(y(4) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241231)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241265)
lbl(241244)	putRecord(fProc 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241265)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested procedure')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241308)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241342)
lbl(241321)	putRecord(fFun 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241342)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested function')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241385)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testRecord(x(0) fDollar 1 241412)
lbl(241395)	putRecord(fFunctor 3 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241412)	inlineAt(reporter x(1) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(5) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested functor' x(2))
		sendMsg(error y(4) [coord kind msg] cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241452)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		testRecord(x(0) fDollar 1 241482)
lbl(241463)	putRecord(fClass 4 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241482)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested class' x(2))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241520)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		testRecord(x(0) fDollar 1 241557)
lbl(241534)	putRecord(fScanner 6 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241557)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested scanner class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241590)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		testRecord(x(0) fDollar 1 241631)
lbl(241606)	putRecord(fParser 7 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241631)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested parser class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241664)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(0))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(4))
lbl(241722)	definition(x(1) 241949 pid('' 3 pos('./compiler/Unnester.oz' 1295 19) nil 7) unit [x(4) y(6) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		testRecord(x(1) fVar 2 241783)
lbl(241738)	allocateL3
		getVarVar(y(0) x(1))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(y(0) x(0))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		move(y(0) x(0))
		move(g(1) x(1))
		callBI('Value.\'==\'' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		callBI('Bool.or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL3
		return
lbl(241783)	testRecord(x(1) fDoImport 3 241866)
lbl(241788)	allocateL5
		getVarVar(x(4) x(5))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(1))
		unifyVariable(y(1))
		unifyVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		move(x(5) x(3))
		createVariableMove(y(4) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: UnnestImportFeatures> false 2) 0)
		move(y(1) x(0))
		move(g(1) x(1))
		callBI('Value.\'==\'' [x(0) x(1)]#[x(2)])
		move(y(2) x(0))
		callBI('Bool.or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(3))
		deAllocateL5
		return
lbl(241866)	allocateL3
		move(x(1) y(0))
		testRecord(y(0) fExportItem 1 241934)
lbl(241875)	getVariable(x(4))
		shallowGuard(241934)
		getRecord(fVar 2 x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(241887)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYYX(x(5) y(2) y(2) x(0))
		move(x(6) x(1))
		createVariable(x(2))
		sendMsg(bindExport x(4) 3 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		callBI('Value.\'==\'' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		callBI('Bool.or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
		deAllocateL3
		return
lbl(241934)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1308)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(241722)
lbl(241949)	move(y(8) x(0))
		putConstant(false x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 242104 242155)
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('AntiNameClash' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putList(y(8))
		setVariable(x(1))
		setVariable(y(10))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(10) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		getList(y(2))
		unifyVariable(y(4))
		unifyVariable(y(6))
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		createVariableMove(y(10) x(1))
		sendMsg(occ y(3) 2 cache)
		move(y(9) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(10) x(1) y(5) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(4))
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242104)	putList(y(3))
		setVariable(x(1))
		setVariable(y(6))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242155)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1294)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(242166)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testRecord(y(5) fNoElse 1 242193)
lbl(242188)	unify(y(8) y(5))
		branch(242208)
lbl(242193)	getRecord(fEq 3 y(8))
		unifyValue(y(1))
		unifyValVar(y(5) x(1))
		move(y(5) x(0))
		genFastCall(<Q: 1483> 4)
lbl(242208)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(y(3))
		setValue(x(1))
		setValue(y(8))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242237)	getVarVar(x(0) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(1))
		inlineDot(x(1) 1 x(2) cache)
		move(x(2) y(6))
		putConstant('Arbiter' x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(9) 1 cache)
		getSelf(x(0))
lbl(242301)	definition(x(1) 242668 pid('' 3 pos('./compiler/Unnester.oz' 1334 4) nil 5) unit [x(0) y(6) y(5) g(1) y(1) y(8)])
		allocateL5
		move(g(0) x(3))
		setSelf(x(3))
lbl(242313)	definition(x(4) 242352 pid('' 3 pos('./compiler/Unnester.oz' 1336 8) nil 5) unit nil)
		shallowGuard(242339)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(242329)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(242339)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1336)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242313)
lbl(242352)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
lbl(242372)	definition(x(1) 242412 pid('' 2 pos('./compiler/Unnester.oz' 1339 20) nil 4) unit [g(1)])
		shallowGuard(242399)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242388)	shallowThen
		move(g(0) x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(242399)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1339)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242372)
lbl(242412)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(4) 242565 242655)
		move(g(1) x(0))
		move(y(3) x(1))
		move(g(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setValue(g(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(3))
		unifyValue(g(4))
		unifyValue(g(2))
		getRecord(fCase 4 x(1))
		unifyValVar(g(5) x(2))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(242489)	definition(x(1) 242555 pid('' 2 pos('./compiler/Unnester.oz' 1346 6) nil 4) unit [y(3)])
		shallowGuard(242542)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242505)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242542)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1346)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242489)
lbl(242555)	move(y(0) x(0))
		move(x(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242565)	getRecord(fCase 4 y(2))
		unifyValVar(g(5) x(0))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(242582)	definition(x(1) 242648 pid('' 2 pos('./compiler/Unnester.oz' 1352 8) nil 4) unit [g(4)])
		shallowGuard(242635)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242598)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242635)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1352)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242582)
lbl(242648)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242655)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1339)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242301)
lbl(242668)	move(x(1) y(5))
		createVariable(y(6))
		testRecord(y(4) fNoElse 1 242683)
lbl(242678)	unify(y(6) y(4))
		branch(242701)
lbl(242683)	getRecord(fEq 3 y(6))
		unifyValue(y(1))
		unifyValVar(y(4) x(2))
		move(y(4) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1483> 4)
lbl(242701)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 32> 8)
		getList(y(2))
		unifyValVar(y(7) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242727)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fLockThen 3 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242759)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 242784 242806)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(242817)
lbl(242784)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(242817)
lbl(242806)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1365)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(242817)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(3))
		putRecord(fLock 2 x(0))
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242842)	getVarVar(y(3) y(4))
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1483> 4)
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(3))
		setValue(y(5))
		putRecord(fThread 2 x(0))
		setValue(x(1))
		setValue(y(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242879)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('TryResult' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setValue(y(6))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fEq 3 x(0))
		setValue(y(8))
		setValue(y(3))
		setValue(y(6))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(8))
		setValue(y(6))
		putRecord(fAnd 2 x(2))
		setValue(x(0))
		setValue(x(1))
		match(y(4) ht(243265 [onScalar(fNoCatch 242950) onRecord(fCatch 2 242969)]))
lbl(242950)	putRecord(fTry 4 x(0))
		setValue(x(2))
		setConstant(fNoCatch)
		setValue(y(5))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242969)	getVarVar(y(3) y(4))
lbl(242972)	definition(x(1) 243011 pid('' 3 pos('./compiler/Unnester.oz' 1383 2) nil 5) unit nil)
		shallowGuard(242998)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(242988)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(242998)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1383)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242972)
lbl(243011)	moveMoveXYYX(x(2) y(7) y(3) x(0))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(243034)	definition(x(3) 243074 pid('' 2 pos('./compiler/Unnester.oz' 1387 21) nil 4) unit [x(1)])
		shallowGuard(243061)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243050)	shallowThen
		move(g(0) x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243061)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1387)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243034)
lbl(243074)	moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(x(3) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(11))
		createVariable(y(12))
		createVariable(y(13))
		testBool(y(10) 243165 243189)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(6) x(2))
		createVariableMove(y(10) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		getRecord(fVar 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(6))
		sendMsg(getPrintName y(10) 1 cache)
		getRecord(fAnd 2 y(12))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(1))
		unifyValue(y(11))
		unifyValue(y(6))
		getRecord(fTry 4 x(1))
		unifyValVar(y(7) x(2))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(2))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243200)
lbl(243165)	unify(y(11) y(1))
		getRecord(fTry 4 y(12))
		unifyValVar(y(7) x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(0))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243200)
lbl(243189)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1387)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243200)	definition(x(1) 243248 pid('' 2 pos('./compiler/Unnester.oz' 1398 7) nil 4) unit [y(11) y(6)])
		shallowGuard(243235)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243216)	shallowThen
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(3))
		unifyValue(g(1))
		return
lbl(243235)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1398)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243200)
lbl(243248)	moveMoveYXYX(y(3) x(0) y(13) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(12) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243265)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1402)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243278)	getVoid(1)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243311)	getVoid(2)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243344)	getVarVar(x(2) x(3))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fNot 2 x(0))
		setValue(x(1))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243372)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243385)	definition(x(1) 243426 pid('' 3 pos('./compiler/Unnester.oz' 1413 6) nil 6) unit nil)
		shallowGuard(243413)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243403)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243413)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1413)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243385)
lbl(243426)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fCond 3 y(8))
		setVariable(x(2))
		setVariable(y(9))
		setValue(y(5))
		createVariable(y(10))
lbl(243450)	definition(x(1) 243502 pid('' 2 pos('./compiler/Unnester.oz' 1417 3) nil 5) unit [y(10) y(5)])
		shallowGuard(243489)
		getRecord(fClause 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(243468)	shallowThen
		getRecord(fClause 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(4))
		unifyValue(g(1))
		return
lbl(243489)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1417)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243450)
lbl(243502)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		testRecord(y(4) fNoElse 1 243518)
lbl(243513)	unify(y(9) y(4))
		branch(243528)
lbl(243518)	getRecord(fEq 3 y(9))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(5))
lbl(243528)	definition(x(1) 243568 pid('' 2 pos('./compiler/Unnester.oz' 1423 18) nil 4) unit [y(6)])
		shallowGuard(243555)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243544)	shallowThen
		move(g(0) x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243555)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1423)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243528)
lbl(243568)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 243636 243648)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243636)	unify(y(10) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243648)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1423)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243659)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243672)	definition(x(1) 243713 pid('' 3 pos('./compiler/Unnester.oz' 1435 6) nil 6) unit nil)
		shallowGuard(243700)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243690)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243700)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1435)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243672)
lbl(243713)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fOr 3 y(8))
		setVariable(x(2))
		setValue(y(4))
		setValue(y(5))
		getSelf(x(3))
		createVariable(y(4))
lbl(243739)	definition(x(1) 243851 pid('' 2 pos('./compiler/Unnester.oz' 1439 8) nil 8) unit [x(3) y(4) y(5)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(243838)
		getRecord(fClause 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243762)	shallowThen
		testRecord(x(5) fNoThen 1 243818)
lbl(243768)	allocateL4
		getVariable(x(0))
		inlineAt(reporter x(6) cache)
		putRecord('#' 2 x(7))
		setConstant('`then\' part in nested `or\' ')
		setConstant('not optional')
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error x(6) [coord kind msg] cache)
		getRecord(fClause 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(243818)	getRecord(fClause 3 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(1))
		unifyValue(x(5))
		unifyValue(g(2))
		return
lbl(243838)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1439)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243739)
lbl(243851)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
lbl(243857)	definition(x(1) 243897 pid('' 2 pos('./compiler/Unnester.oz' 1450 18) nil 4) unit [y(6)])
		shallowGuard(243884)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243873)	shallowThen
		move(g(0) x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243884)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1450)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243857)
lbl(243897)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 243965 243977)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243965)	unify(y(4) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243977)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1450)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243988)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('syntax error' x(1))
		putConstant('statement at expression position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(238880)
lbl(244019)	definition(x(8) 244060 pid('Unnester,UnnestExpression/slow' 1 pos('./compiler/Unnester.oz' 1053 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1505> 7)
		endDefinition(244019)
lbl(244060)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: UnnestExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(244070)	definition(x(7) 244294 pid('Unnester,UnnestApplyArgs/fast' 4 pos('./compiler/Unnester.oz' 1467 6) nil 6) <Q: 1506> [y(0) g(11) y(3)])
		match(x(0) ht(244279 [onScalar(nil 244079) onRecord('|' 2 244089)]))
lbl(244079)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244089)	allocateL10
		getVarVar(x(0) y(0))
		testRecord(x(0) fRecord 2 244241)
lbl(244098)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(3) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('UnnestApply' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(g(1) x(3))
		putConstant('' x(0))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		getList(y(3))
		unifyValVar(y(9) y(1))
		move(g(2) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(2) y(6) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(7) 2 cache)
		move(y(2) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(3) x(0))
		moveMoveYXYX(y(8) x(1) y(6) x(2))
		sendMsg(init y(9) 3 cache)
		getList(y(4))
		unifyValVar(y(9) y(2))
		getList(y(5))
		unifyVariable(x(1))
		unifyVariable(y(3))
		move(y(6) x(0))
		sendMsg(occ y(7) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244241)	getList(x(1))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(4) x(2))
		putConstant('UnnestApply' x(1))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244279)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(244070)
lbl(244294)	definition(x(8) 244341 pid('Unnester,UnnestApplyArgs/slow' 1 pos('./compiler/Unnester.oz' 1467 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1506> 9)
		endDefinition(244294)
lbl(244341)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(244351)	definition(x(7) 244633 pid('Unnester,UnnestConstraint/fast' 4 pos('./compiler/Unnester.oz' 1495 6) nil 8) <Q: 1507> [y(0) g(11) y(3) g(12)])
		match(x(0) ht(244622 [onRecord(fEq 3 244360) onRecord(fRecord 2 244409) onRecord(fOpenRecord 2 244496) onRecord(fVar 2 244583) onRecord(fWildcard 1 244589) onRecord(fEscape 2 244596) onRecord(fAtom 2 244604) onRecord(fInt 2 244610) onRecord(fFloat 2 244616)]))
lbl(244360)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(4))
		unifyValue(y(6))
		getList(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(244409)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(1) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244496)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(3) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244583)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244589)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244596)	getVariable(x(0))
		getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244604)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244610)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244616)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244622)	getLiteral(nil x(2))
		move(x(3) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(244351)
lbl(244633)	definition(x(8) 244680 pid('Unnester,UnnestConstraint/slow' 1 pos('./compiler/Unnester.oz' 1495 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1507> 9)
		endDefinition(244633)
lbl(244680)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: UnnestConstraint>)
		setValue(x(8))
		setValue(x(7))
lbl(244690)	definition(x(7) 245241 pid('Unnester,UnnestRecord/fast' 6 pos('./compiler/Unnester.oz' 1536 6) nil 6) <Q: 1508> [y(0) g(13) g(11) g(12) g(14) y(3)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		putConstant(1 x(4))
		callBI('Cell.new' [x(4)]#[x(5)])
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(4))
		getSelf(x(4))
lbl(244735)	definition(x(1) 245166 pid('' 3 pos('./compiler/Unnester.oz' 1543 3) nil 7) unit [x(4) g(0) x(5) y(0) g(2) g(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(245153)
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(244756)	shallowThen
		allocateL10
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(1) fColon 2 244844)
lbl(244776)	getVarVar(y(6) y(7))
		moveMoveXYYX(x(4) y(8) y(6) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(2) y(7))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(8))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(4))
		match(y(6) ht(244831 [onRecord(fAtom 2 244810) onRecord(fVar 2 244817) onRecord(fInt 2 244824)]))
lbl(244810)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244871)
lbl(244817)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244871)
lbl(244824)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244871)
lbl(244831)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1551)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(244844)	unify(y(2) x(1))
		getList(y(3))
		unifyValue(y(4))
		unifyValue(x(4))
		move(g(2) x(0))
		callBI('Cell.access' [x(0)]#[x(4)])
		unify(x(4) y(5))
		callBI('Cell.access' [x(0)]#[x(4)])
		inlinePlus1(x(4) x(6))
		callBI('Cell.assign' [x(0) x(6)]#nil)
lbl(244871)	match(y(2) ht(245084 [onRecord(fEq 3 244874) onRecord(fRecord 2 244956) onRecord(fOpenRecord 2 245020)]))
lbl(244874)	getVoid(2)
		getVariable(y(5))
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(occ y(6) 2 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(6) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(244956)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 244975)
lbl(244970)	getLiteral('' y(7))
		branch(244985)
lbl(244975)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(244985)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(4) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245020)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 245039)
lbl(245034)	getLiteral('' y(7))
		branch(245049)
lbl(245039)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(245049)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(5) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245084)	moveMoveYXYX(y(2) x(0) y(4) x(3))
		putConstant('RecordArg' x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestToTerm> false 4) 0)
		match(g(3) ht(245101 [onScalar('' 245138)]))
lbl(245101)	move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		match(y(2) ht(245113 [onScalar(nil 245138)]))
lbl(245113)	putRecord('#' 3 x(0))
		setValue(g(3))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 195> 4)
		move(y(4) x(0))
		sendMsg(setPrintName y(2) 1 cache)
lbl(245138)	getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(245153)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(244735)
lbl(245166)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 30> 8)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		createVariable(x(2))
		move(y(0) x(0))
		move(x(2) x(3))
		createVariableMove(y(1) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(5) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
		endDefinition(244690)
lbl(245241)	definition(x(8) 245300 pid('Unnester,UnnestRecord/slow' 1 pos('./compiler/Unnester.oz' 1536 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1508> 13)
		endDefinition(245241)
lbl(245300)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: UnnestRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(245310)	definition(x(7) 245754 pid('Unnester,UnnestProc/fast' 5 pos('./compiler/Unnester.oz' 1597 6) nil 6) <Q: 1509> [y(0)])
		allocateL(11)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(nil x(1))
		createVariableMove(y(5) x(2))
		putConstant(nil x(3))
		createVariableMove(y(6) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestProcFormals> false 6) 0)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testList(y(5) 245602)
lbl(245363)	getVarVar(x(2) x(0))
lbl(245366)	definition(x(1) 245383 pid('' 3 pos('./compiler/Unnester.oz' 1605 25) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245366)
lbl(245383)	createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getVars x(1) 1 cache)
lbl(245403)	definition(x(1) 245431 pid('' 2 pos('./compiler/Unnester.oz' 1610 7) nil 3) unit nil)
		getRecord(fVar 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(unit)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(245403)
lbl(245431)	move(y(9) x(0))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 29> 6)
lbl(245440)	definition(x(1) 245460 pid('' 3 pos('./compiler/Unnester.oz' 1611 17) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(245440)
lbl(245460)	move(y(0) x(0))
		createVariableMove(y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(10) x(0) y(9) x(1))
		createVariableMove(y(0) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1430> 8)
		match(y(0) ht(245589 [onScalar(nil 245489) onRecord('|' 2 245529)]))
lbl(245489)	getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyVariable(x(3))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fSkip 1 x(3))
		unifyValue(y(3))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245605)
lbl(245529)	getVarVar(x(2) x(0))
lbl(245532)	definition(x(1) 245549 pid('' 3 pos('./compiler/Unnester.oz' 1616 29) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245532)
lbl(245549)	createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyValue(y(0))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245605)
lbl(245589)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1620)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245602)	unify(y(8) y(1))
lbl(245605)	createVariable(y(0))
		testBool(y(2) 245658 245663)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1482> 4)
		getRecord(fOpApply 3 y(0))
		unifyLiteral(byNeed)
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fFun 5 x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		unifyValue(y(8))
		unifyLiteral(nil)
		unifyValue(y(1))
		getRecord(fDollar 1 x(2))
		unifyValue(y(3))
		branch(245674)
lbl(245658)	unify(y(0) y(8))
		branch(245674)
lbl(245663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1624)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245674)	definition(x(1) 245693 pid('' 3 pos('./compiler/Unnester.oz' 1630 29) nil 3) unit [y(7)])
		getRecord(fEq 3 x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(g(0))
		return
		endDefinition(245674)
lbl(245693)	moveMoveYXYX(y(6) x(0) y(0) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
		endDefinition(245310)
lbl(245754)	definition(x(8) 245807 pid('Unnester,UnnestProc/slow' 1 pos('./compiler/Unnester.oz' 1597 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1509> 11)
		endDefinition(245754)
lbl(245807)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: UnnestProc>)
		setValue(x(8))
		setValue(x(7))
lbl(245817)	definition(x(7) 245894 pid('Unnester,UnnestProcFormals/fast' 6 pos('./compiler/Unnester.oz' 1635 6) nil 7) <Q: 1510> [y(0)])
		match(x(0) ht(245879 [onScalar(nil 245826) onRecord('|' 2 245833)]))
lbl(245826)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(245833)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(5) y(2))
		move(x(2) x(3))
		move(x(4) x(5))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(6))
		genCall(gci(g(0) true <M: UnnestProcFormal> false 7) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(2) x(5))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestProcFormals> true 6) 0)
lbl(245879)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1642)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(245817)
lbl(245894)	definition(x(8) 245953 pid('Unnester,UnnestProcFormals/slow' 1 pos('./compiler/Unnester.oz' 1635 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1510> 13)
		endDefinition(245894)
lbl(245953)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(8))
		setValue(x(7))
lbl(245963)	definition(x(7) 246365 pid('Unnester,UnnestProcFormal/fast' 7 pos('./compiler/Unnester.oz' 1644 6) nil 9) <Q: 1511> nil)
		match(x(0) ht(246229 [onRecord(fVar 2 245972) onRecord(fWildcard 1 246110) onRecord(fDollar 1 246158)]))
lbl(245972)	allocateL10
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		moveMoveXYYX(x(6) y(8) y(0) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 246067 246099)
		unify(y(4) y(3))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(1))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		move(x(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246067)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariable(x(2))
		sendMsg(bind x(3) 3 cache)
		getList(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unify(y(5) y(6))
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1646)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246110)	allocateL6
		getVariable(x(7))
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(1))
		putConstant('Wildcard' x(0))
		createVariable(x(2))
		sendMsg(generate x(8) 3 cache)
		unify(y(1) y(0))
		unify(y(2) y(3))
		unify(y(4) y(5))
		deAllocateL6
		return
lbl(246158)	allocateL8
		getVariable(y(0))
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(y(0) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(7) 3 cache)
		unify(y(2) y(1))
		unify(y(3) y(4))
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(x(1) x(0))
		move(y(7) x(1))
		deAllocateL8
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(246229)	allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1494> 4)
		testBool(y(8) 246269 246291)
		branch(246302)
lbl(246269)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('syntax error' x(1))
		putConstant('only patterns in proc/fun head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(246302)
lbl(246291)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1669)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246302)	inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		unify(y(2) y(1))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyValue(y(7))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		move(x(2) x(0))
		sendMsg(getPrintName y(8) 1 cache)
		unify(y(5) y(6))
		deAllocateL9
		return
		endDefinition(245963)
lbl(246365)	definition(x(8) 246430 pid('Unnester,UnnestProcFormal/slow' 1 pos('./compiler/Unnester.oz' 1644 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1511> 15)
		endDefinition(246365)
lbl(246430)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(246440)	definition(x(7) 246689 pid('Unnester,AnalyseImports/fast' 4 pos('./compiler/Unnester.oz' 1681 6) nil 7) <Q: 1512> [y(0)])
		match(x(0) ht(246674 [onScalar(nil 246449) onRecord('|' 2 246459)]))
lbl(246449)	getLiteral(nil x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246459)	allocateL(12)
		getVarVar(y(0) y(1))
		getRecord(fImportItem 3 y(0))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		getRecord(fVar 2 x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		moveMoveXYXY(x(3) y(8) x(4) y(9))
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		moveMoveYXYX(y(2) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImportFeatures> false 4) 0)
		getRecord(fAnd 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAnd 2 x(0))
		unifyVariable(x(2))
		unifyValue(y(11))
		getRecord(fDoImport 3 x(2))
		unifyValue(y(0))
		unifyVoid(1)
		unifyValue(y(6))
		putRecord(fAtom 2 x(2))
		setConstant(info)
		setValue(y(5))
		putRecord(fAtom 2 x(5))
		setConstant(type)
		setValue(y(5))
		putRecord(fColon 2 x(4))
		setValue(x(5))
		setValue(y(10))
		putList(x(3))
		setValue(x(4))
		setVariable(x(6))
		putRecord(fRecord 2 x(0))
		setValue(x(2))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(0) y(2))
		match(y(3) ht(246627 [onScalar(fNoImportAt 246596) onRecord(fImportAt 1 246601)]))
lbl(246596)	getLiteral(nil x(6))
		branch(246640)
lbl(246601)	getVariable(x(2))
		getList(x(6))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fColon 2 x(3))
		unifyVariable(x(4))
		unifyValue(x(2))
		getRecord(fAtom 2 x(4))
		unifyLiteral('from')
		unifyValue(y(5))
		branch(246640)
lbl(246627)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1696)
		setValue(y(3))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(246640)	getList(y(7))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord(fAtom 2 x(1))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(0) x(3))
		deAllocateL
		genCall(gci(g(0) true <M: AnalyseImports> true 4) 0)
lbl(246674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1702)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246440)
lbl(246689)	definition(x(8) 246736 pid('Unnester,AnalyseImports/slow' 1 pos('./compiler/Unnester.oz' 1681 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1512> 9)
		endDefinition(246689)
lbl(246736)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AnalyseImports>)
		setValue(x(8))
		setValue(x(7))
lbl(246746)	definition(x(7) 246924 pid('Unnester,AnalyseImportFeatures/fast' 4 pos('./compiler/Unnester.oz' 1704 6) nil 9) <Q: 1513> [y(0)])
		match(x(0) ht(246909 [onScalar(nil 246755) onRecord('|' 2 246770)]))
lbl(246755)	getRecord(fAtom 2 x(2))
		unifyLiteral(nil)
		unifyLiteral(unit)
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246770)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		createVariable(y(4))
		createVariable(y(5))
		move(x(3) y(6))
		testRecord(y(0) '#' 2 246862)
lbl(246794)	getVarVar(x(4) x(5))
		shallowGuard(246862)
		getRecord(fVar 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(246807)	shallowThen
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(4) y(0) x(5) y(7))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariable(x(2))
		sendMsg(bind x(8) 3 cache)
		unify(y(4) y(7))
		getRecord(fAnd 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fEq 3 x(0))
		unifyValVar(y(0) x(1))
		unifyLiteral(unit)
		getRecord(fUnoptimizedDot 2 x(1))
		unifyValue(y(1))
		unifyValue(y(7))
		branch(246868)
lbl(246862)	unify(y(4) y(0))
		unify(y(6) y(5))
lbl(246868)	getRecord(fRecord 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('|')
		unifyLiteral(unit)
		getListValVar(x(1) y(4) x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(x(4) x(2))
		move(y(5) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AnalyseImportFeatures> true 4) 0)
lbl(246909)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1719)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246746)
lbl(246924)	definition(x(8) 246971 pid('Unnester,AnalyseImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1704 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1513> 9)
		endDefinition(246924)
lbl(246971)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(246981)	definition(x(7) 247174 pid('Unnester,UnnestImportFeatures/fast' 2 pos('./compiler/Unnester.oz' 1721 6) nil 7) <Q: 1514> [y(0)])
		match(x(0) ht(247159 [onScalar(nil 246990) onRecord('|' 2 246994)]))
lbl(246990)	getLiteral(nil x(1))
		return
lbl(246994)	allocateL5
		getVarVar(y(0) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) '#' 2 247104)
lbl(247017)	getVarVar(x(3) x(4))
		shallowGuard(247104)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(247030)	shallowThen
		inlineAt(<M: BA> x(3) cache)
		move(x(4) y(0))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		match(y(0) ht(247091 [onRecord(fAtom 2 247057) onRecord(fInt 2 247074)]))
lbl(247057)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247150)
lbl(247074)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247150)
lbl(247091)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1727)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247104)	match(y(0) ht(247137 [onRecord(fAtom 2 247107) onRecord(fInt 2 247122)]))
lbl(247107)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247150)
lbl(247122)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247150)
lbl(247137)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1730)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247150)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestImportFeatures> true 2) 0)
lbl(247159)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1732)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246981)
lbl(247174)	definition(x(8) 247209 pid('Unnester,UnnestImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1721 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1514> 5)
		endDefinition(247174)
lbl(247209)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(247219)	definition(x(7) 247462 pid('Unnester,OptimizeImportFeature/fast' 7 pos('./compiler/Unnester.oz' 1734 6) nil 8) <Q: 1515> [y(4) y(0) y(3)])
		allocateL7
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(referImport x(7) 5 cache)
		move(y(4) x(0))
		testBI('Bool.not' [x(0)]#[x(1)] 247370)
lbl(247269)	move(g(0) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putList(x(0))
		setValue(y(2))
		setValue(x(1))
		createVariableMove(y(0) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(3))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValVar(y(2) y(3))
		move(g(2) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(6))
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(x(4) x(1))
		move(y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
lbl(247370)	createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(isRestricted y(4) 1 cache)
		testBool(y(6) 247394 247449)
		branch(247269)
lbl(247394)	getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(0) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL7
		return
lbl(247449)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1736)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(247219)
lbl(247462)	definition(x(8) 247527 pid('Unnester,OptimizeImportFeature/slow' 1 pos('./compiler/Unnester.oz' 1734 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1515> 15)
		endDefinition(247462)
lbl(247527)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(247537)	definition(x(7) 247695 pid('Unnester,AnalyseExports/fast' 3 pos('./compiler/Unnester.oz' 1748 6) nil 7) <Q: 1516> [y(2) y(0)])
		match(x(0) ht(247680 [onScalar(nil 247546) onRecord('|' 2 247553)]))
lbl(247546)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(247553)	allocateL6
		getVarVar(x(0) x(3))
		getRecord(fExportItem 1 x(0))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(247620 [onRecord(fColon 2 247578) onRecord(fVar 2 247589)]))
lbl(247578)	getVarVar(x(0) x(4))
		unify(y(4) x(0))
		unify(y(5) x(4))
		branch(247633)
lbl(247589)	getVarVar(x(0) x(4))
		getRecord(fAtom 2 y(4))
		unifyVariable(x(5))
		unifyValue(x(4))
		move(g(0) x(4))
		inlineDot(x(4) downcase x(6) cache)
		move(x(5) x(1))
		call(x(6) 2)
		unify(y(5) y(0))
		branch(247633)
lbl(247620)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1758)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247633)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(2))
		getRecord(fTypeOf 1 x(2))
		unifyVariable(x(3))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(4))
		getRecord(fGetBinder 2 x(4))
		unifyValue(y(5))
		unifyValue(x(3))
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: AnalyseExports> true 3) 0)
lbl(247680)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1765)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247537)
lbl(247695)	definition(x(8) 247736 pid('Unnester,AnalyseExports/slow' 1 pos('./compiler/Unnester.oz' 1748 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1516> 7)
		endDefinition(247695)
lbl(247736)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: AnalyseExports>)
		setValue(x(8))
		setValue(x(7))
lbl(247746)	definition(x(7) 247827 pid('Unnester,UnnestFromProp/fast' 6 pos('./compiler/Unnester.oz' 1768 6) nil 6) <Q: 1517> [y(0)])
		match(x(0) ht(247812 [onScalar(nil 247755) onRecord('|' 2 247762)]))
lbl(247755)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(247762)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(5) y(5))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(2))
		unifyValVar(y(6) x(2))
		getList(y(4))
		unifyValVar(y(7) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestFromProp> true 6) 0)
lbl(247812)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1777)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247746)
lbl(247827)	definition(x(8) 247886 pid('Unnester,UnnestFromProp/slow' 1 pos('./compiler/Unnester.oz' 1768 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1517> 13)
		endDefinition(247827)
lbl(247886)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: UnnestFromProp>)
		setValue(x(8))
		setValue(x(7))
lbl(247896)	definition(x(7) 248038 pid('Unnester,UnnestAttrFeat/fast' 6 pos('./compiler/Unnester.oz' 1779 6) nil 6) <Q: 1518> [y(0)])
		match(x(0) ht(248023 [onScalar(nil 247905) onRecord('|' 2 247912)]))
lbl(247905)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(247912)	allocateL(12)
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(5) y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 247984)
lbl(247934)	getVarVar(x(0) y(6))
		moveMoveXYXY(x(2) y(7) x(4) y(8))
		createVariableMove(y(9) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(7))
		unifyValue(y(10))
		unifyValue(y(4))
		getList(y(8))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(248004)
lbl(247984)	moveMoveXYXY(x(2) y(6) x(4) y(7))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(6) y(4))
		getList(y(7))
		unifyValue(y(8))
		unifyValue(y(5))
lbl(248004)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestAttrFeat> true 6) 0)
lbl(248023)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1795)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247896)
lbl(248038)	definition(x(8) 248097 pid('Unnester,UnnestAttrFeat/slow' 1 pos('./compiler/Unnester.oz' 1779 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1518> 13)
		endDefinition(248038)
lbl(248097)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(248107)	definition(x(7) 248706 pid('Unnester,UnnestMeth/fast' 2 pos('./compiler/Unnester.oz' 1798 6) nil 7) <Q: 1519> [y(0) y(3)])
		allocateL(11)
		getRecord(fMeth 3 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		createVariable(y(4))
		createVariable(y(5))
		testRecord(y(0) fEq 3 248187)
lbl(248148)	getVarVar(x(0) x(1))
		shallowGuard(248187)
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(248161)	shallowThen
		unify(y(4) x(0))
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		move(y(5) x(2))
		sendMsg(bind x(4) 3 cache)
		branch(248190)
lbl(248187)	unify(y(4) y(0))
lbl(248190)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genCall(gci(g(0) true <M: UnnestMethHead> false 5) 0)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: UnnestMethFormals1> false 2) 0)
		move(y(6) x(0))
		putConstant(0 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1485> 6)
		putConstant(1 x(0))
		inlineAssign(<M: ArgCounter> x(0) cache)
		createVariable(y(8))
		createVariable(y(9))
		testNumber(y(4) 0 248320)
		move(y(6) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		moveMoveYXYX(y(6) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
		branch(248482)
lbl(248320)	move(y(6) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(4) x(0))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(1) 248360)
		inlineAt(reporter x(3) cache)
		move(y(10) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in method head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(248360)	inlineAt(<M: BA> x(3) cache)
		move(y(10) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(10))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(6) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1487> 6)
		move(y(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(4) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
lbl(248482)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 248548 248537)
lbl(248503)	move(y(5) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		move(x(1) y(1))
		testBool(y(1) 248548 248537)
lbl(248516)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(2) x(1) y(5) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(248548)
lbl(248537)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1834)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(248548)	inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(5) x(0))
		testBI('Value.isFree' [x(0)]#[x(1)] 248604)
		move(g(1) x(0))
		inlineDot(x(0) method x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(9) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(3))
		branch(248643)
lbl(248604)	move(g(1) x(1))
		inlineDot(x(1) methodWithDesignator x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(7) x(2))
		moveMoveYXYX(y(5) x(3) y(9) x(4))
		move(y(2) x(5))
		sendMsg(init y(1) 6 cache)
		unify(y(1) y(3))
lbl(248643)	inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 248691 248693)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(setAllVariables x(1) 1 cache)
lbl(248691)	deAllocateL
		return
lbl(248693)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1845)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(248107)
lbl(248706)	definition(x(8) 248741 pid('Unnester,UnnestMeth/slow' 1 pos('./compiler/Unnester.oz' 1798 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1519> 5)
		endDefinition(248706)
lbl(248741)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: UnnestMeth>)
		setValue(x(8))
		setValue(x(7))
lbl(248751)	definition(x(7) 248977 pid('Unnester,UnnestMethHead/fast' 5 pos('./compiler/Unnester.oz' 1849 6) nil 8) <Q: 1520> [y(3) y(0)])
		match(x(0) ht(248962 [onRecord(fAtom 2 248760) onRecord(fVar 2 248803) onRecord(fEscape 2 248831) onRecord(fRecord 2 248866) onRecord(fOpenRecord 2 248890)]))
lbl(248760)	allocateL4
		getVarVar(x(0) x(1))
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI('Object.newObject' [x(6)]#[x(7)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(7) y(3))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(0))
		getLiteral(nil y(1))
		getLiteral(false y(2))
		deAllocateL4
		return
lbl(248803)	allocateL2
		getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248831)	allocateL2
		getVariable(x(5))
		getRecord(fVar 2 x(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248866)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(4) y(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(1) y(0))
		getLiteral(false y(2))
		deAllocateL3
		return
lbl(248890)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(2) x(0))
		testBI('Value.isFree' [x(0)]#[x(1)] 248939)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(6) x(1) y(2) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
lbl(248939)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(4) y(1))
		getLiteral(true y(5))
		deAllocateL7
		return
lbl(248962)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1874)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(248751)
lbl(248977)	definition(x(8) 249030 pid('Unnester,UnnestMethHead/slow' 1 pos('./compiler/Unnester.oz' 1849 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1520> 11)
		endDefinition(248977)
lbl(249030)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: UnnestMethHead>)
		setValue(x(8))
		setValue(x(7))
lbl(249040)	definition(x(7) 249204 pid('Unnester,UnnestMethFormals1/fast' 2 pos('./compiler/Unnester.oz' 1876 6) nil 4) <Q: 1521> nil)
		getSelf(x(2))
lbl(249048)	definition(x(3) 249196 pid('' 1 pos('./compiler/Unnester.oz' 1880 3) nil 6) unit [x(2) x(1)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(249181 [onRecord(fMethArg 2 249062) onRecord(fMethColonArg 3 249101)]))
lbl(249062)	getVariable(x(0))
		match(x(0) ht(249088 [onRecord(fVar 2 249067) onRecord(fWildcard 1 249086) onRecord(fDollar 1 249087)]))
lbl(249067)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(249086)	return
lbl(249087)	return
lbl(249088)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1886)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(249101)	allocateL1
		getVarVar(x(0) x(3))
		move(x(3) y(0))
		testRecord(x(0) fVar 2 249144)
lbl(249113)	getVoid(1)
		getVariable(x(4))
		move(g(1) x(0))
		testBI('Value.isFree' [x(0)]#[x(2)] 249144)
		inlineAt(<M: BA> x(5) cache)
		move(x(4) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(5) 3 cache)
lbl(249144)	match(y(0) ht(249168 [onRecord(fVar 2 249147) onRecord(fWildcard 1 249164) onRecord(fDollar 1 249166)]))
lbl(249147)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bind x(3) 3 cache)
lbl(249164)	deAllocateL1
		return
lbl(249166)	deAllocateL1
		return
lbl(249168)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1898)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249181)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1899)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(249048)
lbl(249196)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(249040)
lbl(249204)	definition(x(8) 249239 pid('Unnester,UnnestMethFormals1/slow' 1 pos('./compiler/Unnester.oz' 1876 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1521> 5)
		endDefinition(249204)
lbl(249239)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(8))
		setValue(x(7))
lbl(249249)	definition(x(7) 249307 pid('Unnester,UnnestMethFormals2/fast' 3 pos('./compiler/Unnester.oz' 1902 6) nil 4) <Q: 1522> [y(0)])
		match(x(0) ht(249292 [onScalar(nil 249258) onRecord('|' 2 249262)]))
lbl(249258)	getLiteral(nil x(2))
		return
lbl(249262)	allocateL4
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: UnnestMethFormal> false 4) 0)
		getList(y(1))
		unifyValVar(y(2) x(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestMethFormals2> true 3) 0)
lbl(249292)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(249249)
lbl(249307)	definition(x(8) 249348 pid('Unnester,UnnestMethFormals2/slow' 1 pos('./compiler/Unnester.oz' 1902 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1522> 7)
		endDefinition(249307)
lbl(249348)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(8))
		setValue(x(7))
lbl(249358)	definition(x(7) 249898 pid('Unnester,UnnestMethFormal/fast' 4 pos('./compiler/Unnester.oz' 1911 6) nil 8) <Q: 1523> [y(0) y(3)])
		allocateL9
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(x(0) ht(249561 [onRecord(fMethArg 2 249382) onRecord(fMethColonArg 3 249480)]))
lbl(249382)	getVarVar(y(6) y(7))
		inlineAt(<M: ArgCounter> x(0) cache)
		getRecord(fInt 2 y(3))
		unifyValVar(x(0) x(4))
		moveMoveXYYX(x(0) y(8) y(6) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(8) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ArgCounter> x(1) cache)
		match(y(6) ht(249462 [onRecord(fVar 2 249422) onRecord(fWildcard 1 249441)]))
lbl(249422)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		branch(249475)
lbl(249441)	getVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(249475)
lbl(249462)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1920)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249475)	unify(y(5) y(7))
		branch(249574)
lbl(249480)	getVarVar(x(0) x(4))
		getVariable(x(5))
		unify(y(3) x(0))
		move(x(5) y(6))
		match(x(4) ht(249543 [onRecord(fVar 2 249494) onRecord(fWildcard 1 249519)]))
lbl(249494)	getVarVar(x(4) x(6))
		inlineAt(<M: BA> x(7) cache)
		move(x(4) x(0))
		move(x(6) x(1))
		move(y(4) x(2))
		sendMsg(bind x(7) 3 cache)
		branch(249556)
lbl(249519)	getVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(1))
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(6) 3 cache)
		branch(249556)
lbl(249543)	putRecord(kernel 3 x(6))
		setConstant(noElse)
		setConstant(1928)
		setValue(x(4))
		callBI('Exception.raiseError' [x(6)]#nil)
lbl(249556)	unify(y(5) y(6))
		branch(249574)
lbl(249561)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1930)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(249574)	move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		createVariableMove(y(7) x(0))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(8) 249649 249657)
		inlineAt(reporter x(0) cache)
		move(x(0) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getCoord y(4) 1 cache)
		putRecord('#' 2 x(2))
		setConstant('argument variables in method head ')
		setConstant('must be distinct')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
		unify(y(2) y(0))
		branch(249668)
lbl(249649)	getList(y(2))
		unifyValue(y(7))
		unifyValue(y(0))
		branch(249668)
lbl(249657)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1933)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249668)	match(y(5) ht(249883 [onScalar(fNoDefault 249671) onRecord(fDefault 2 249702)]))
lbl(249671)	move(g(1) x(0))
		inlineDot(x(0) methFormal x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249702)	getVarVar(x(0) x(1))
		testRecord(x(0) fWildcard 1 249744)
lbl(249710)	move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249744)	moveMoveXYXY(x(0) y(0) x(1) y(2))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1492> 4)
		testBool(y(5) 249803 249872)
		move(y(0) x(0))
		getSelf(x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1493> 6)
		move(g(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249803)	putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord('#' 4 y(1))
		unifyVariable(y(1))
		unifyValue(y(3))
		unifyValVar(y(5) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		unifyValue(y(2))
		move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(true x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249872)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1947)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249883)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1956)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249358)
lbl(249898)	definition(x(8) 249945 pid('Unnester,UnnestMethFormal/slow' 1 pos('./compiler/Unnester.oz' 1911 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1523> 9)
		endDefinition(249898)
lbl(249945)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(249955)	definition(x(7) 250247 pid('Unnester,UnnestMethBody/fast' 5 pos('./compiler/Unnester.oz' 1958 6) nil 6) <Q: 1524> [y(0)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariable(y(5))
		testBI('Value.isDet' [x(0)]#[x(5)] 250007)
		getRecord(fVar 2 y(5))
		unifyVariable(x(5))
		unifyVariable(y(6))
		move(x(5) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(6) x(0))
		sendMsg(getCoord y(0) 1 cache)
lbl(250007)	putRecord('#' 2 x(3))
		setValue(y(3))
		setValue(y(4))
		getSelf(x(4))
lbl(250017)	definition(x(1) 250230 pid('' 3 pos('./compiler/Unnester.oz' 1964 3) nil 8) unit [x(4) y(0) y(5) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(250217)
		getRecord('#' 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250038)	shallowThen
		testRecord(x(0) '#' 4 250202)
lbl(250044)	allocateL8
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(2) y(4) x(4) y(5))
		moveMoveXYYX(x(5) y(6) y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(g(1) x(0))
		testBI('Value.isFree' [x(0)]#[x(1)] 250108)
		inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generateForOuterScope x(3) 3 cache)
		getRecord(fVar 2 g(2))
		unifyVariable(x(0))
		unifyValue(y(7))
		sendMsg(getPrintName g(1) 1 cache)
lbl(250108)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(g(2))
		setValue(x(3))
		putRecord(fOpApply 3 x(1))
		setConstant(hasFeature)
		setValue(x(2))
		setValue(y(7))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(g(2))
		setValue(x(7))
		putRecord(fOpApply 3 x(5))
		setConstant('.')
		setValue(x(6))
		setValue(y(7))
		putRecord(fEq 3 x(4))
		setValue(y(2))
		setValue(x(5))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(y(3))
		setValue(y(7))
		createVariableMove(y(1) x(1))
		genCall(gci(g(3) true <M: UnnestStatement> false 2) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(0))
		unifyValue(y(5))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(250202)	getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(5))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(250217)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1964)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250017)
lbl(250230)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 32> 9)
		endDefinition(249955)
lbl(250247)	definition(x(8) 250300 pid('Unnester,UnnestMethBody/slow' 1 pos('./compiler/Unnester.oz' 1958 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1524> 11)
		endDefinition(250247)
lbl(250300)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: UnnestMethBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250310)	definition(x(7) 250580 pid('Unnester,UnnestBoolGuard/fast' 6 pos('./compiler/Unnester.oz' 1981 6) nil 7) <Q: 1525> [y(0)])
		match(x(0) ht(250455 [onRecord(fOrElse 3 250319) onRecord(fAndThen 3 250387)]))
lbl(250319)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('FalseCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(9) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250387)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250455)	allocateL9
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		sendMsg(openScope x(6) 0 cache)
		move(y(0) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(4))
		putList(y(0))
		setValue(y(6))
		setVariable(y(4))
		createVariableMove(y(6) x(0))
		call(y(1) 1)
		createVariableMove(y(1) x(0))
		call(y(2) 1)
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(7) x(0) y(6) x(1))
		moveMoveYXYX(y(1) x(2) y(8) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(6))
		genFastCall(<Q: 1490> 14)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1489> 9)
		endDefinition(250310)
lbl(250580)	definition(x(8) 250639 pid('Unnester,UnnestBoolGuard/slow' 1 pos('./compiler/Unnester.oz' 1981 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1525> 13)
		endDefinition(250580)
lbl(250639)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(8))
		setValue(x(7))
lbl(250649)	definition(x(7) 250810 pid('Unnester,MakeClauseBody/fast' 5 pos('./compiler/Unnester.oz' 2015 6) nil 7) <Q: 1526> [y(3)])
		allocateL8
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(5) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) clauseBody x(1) cache)
		moveMoveXYYX(x(1) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ y(4) 2 cache)
		move(y(5) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(5))
		putConstant(nil x(1))
		putConstant(unit x(3))
		putConstant(nil x(4))
		sendMsg(init y(7) 6 cache)
		unify(y(7) y(2))
lbl(250740)	definition(x(0) 250803 pid('ApplyProc' 1 pos('./compiler/Unnester.oz' 2018 2) nil 4) unit [g(0) y(4) y(1)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) application x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(g(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(occ g(1) 2 cache)
		move(y(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		move(g(2) x(2))
		putConstant(nil x(1))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(250740)
lbl(250803)	unify(x(0) y(3))
		deAllocateL8
		return
		endDefinition(250649)
lbl(250810)	definition(x(8) 250863 pid('Unnester,MakeClauseBody/slow' 1 pos('./compiler/Unnester.oz' 2015 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1526> 11)
		endDefinition(250810)
lbl(250863)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: MakeClauseBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250873)	definition(x(7) 251308 pid('Unnester,UnnestCase/fast' 5 pos('./compiler/Unnester.oz' 2023 6) nil 9) <Q: 1527> [y(0) y(3)])
		allocateL10
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(1))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(1) y(5))
		testList(y(0) 251059)
lbl(250902)	getVarVar(x(5) x(6))
		shallowGuard(251059)
		getRecord(fCaseClause 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord(fVar 2 x(5))
		unifyVoid(1)
		unifyVariable(x(8))
		getLiteral(nil x(6))
lbl(250926)	shallowThen
		moveMoveXYXY(x(5) y(6) x(8) y(7))
		move(x(7) y(8))
		testLiteral(y(5) nil 250970)
lbl(250939)	callBI('Record.label' [x(2)]#[x(1)])
		testLiteral(x(1) fNoElse 250948)
		branch(250990)
lbl(250948)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring else clause following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(250990)
lbl(250970)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring clauses following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
lbl(250990)	putRecord(fVar 2 y(0))
		setVariable(x(0))
		setVariable(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(getCoord y(1) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(6))
		setValue(y(0))
		setVariable(x(2))
		putRecord(fAnd 2 x(0))
		setValue(x(1))
		setValue(y(8))
		putRecord(fLocal 3 y(1))
		setValue(y(6))
		setValue(x(0))
		setValue(y(7))
		move(y(7) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(251059)	move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestCaseClauses> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) patternCase x(1) cache)
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(1) 2 cache)
		move(y(0) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		moveMoveYXYX(y(6) x(1) y(3) x(3))
		createVariableMove(y(9) x(2))
		sendMsg(init y(8) 4 cache)
		unify(y(8) y(4))
		match(y(5) ht(251293 [onScalar(nil 251122) onRecord('|' 2 251240)]))
lbl(251122)	testRecord(y(2) fNoElse 1 251155)
lbl(251127)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251155)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(2) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251240)	move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestCase> false 5) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(3) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251293)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2057)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250873)
lbl(251308)	definition(x(8) 251361 pid('Unnester,UnnestCase/slow' 1 pos('./compiler/Unnester.oz' 2023 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1527> 11)
		endDefinition(251308)
lbl(251361)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: UnnestCase>)
		setValue(x(8))
		setValue(x(7))
lbl(251371)	definition(x(7) 251731 pid('Unnester,UnnestCaseClauses/fast' 2 pos('./compiler/Unnester.oz' 2060 6) nil 7) <Q: 1528> [y(0) y(3)])
		match(x(0) ht(251716 [onScalar(nil 251380) onRecord('|' 2 251384)]))
lbl(251380)	getLiteral(nil x(1))
		return
lbl(251384)	allocateL8
		getVarVar(x(2) y(0))
		getRecord(fCaseClause 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1494> 4)
		createVariable(y(5))
		testBool(y(4) 251633 251696)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1432> 6)
		getSelf(x(3))
lbl(251438)	definition(x(1) 251503 pid('' 2 pos('./compiler/Unnester.oz' 2065 8) nil 6) unit [x(3)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(251490)
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(251459)	shallowThen
		allocateL2
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(251490)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2065)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(251438)
lbl(251503)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		getList(y(3))
		unifyVariable(y(3))
		unifyValue(y(5))
		move(g(1) x(0))
		inlineDot(x(0) patternClause x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(6) 3 cache)
		unify(y(6) y(3))
		branch(251707)
lbl(251633)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(3))
		setConstant('only simple patterns in `case\' conditional ')
		setConstant(allowed)
		putRecord('#' 2 x(6))
		setConstant('to create a deep guard, use the ')
		setConstant('`cond\' conditional)')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('syntax error' x(2))
		sendMsg(error y(2) [coord items kind msg] cache)
		unify(y(3) y(5))
		branch(251707)
lbl(251696)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2062)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251707)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestCaseClauses> true 2) 0)
lbl(251716)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2089)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251371)
lbl(251731)	definition(x(8) 251766 pid('Unnester,UnnestCaseClauses/slow' 1 pos('./compiler/Unnester.oz' 2060 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1528> 5)
		endDefinition(251731)
lbl(251766)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(251776)	definition(x(7) 252349 pid('Unnester,TranslatePattern/fast' 3 pos('./compiler/Unnester.oz' 2091 6) nil 6) <Q: 1529> [y(0) y(3) g(11) g(12)])
		match(x(0) ht(252334 [onRecord(fEq 3 251785) onRecord(fAtom 2 251981) onRecord(fVar 2 252013) onRecord(fWildcard 1 252095) onRecord(fEscape 2 252145) onRecord(fInt 2 252234) onRecord(fFloat 2 252266) onRecord(fRecord 2 252298) onRecord(fOpenRecord 2 252316)]))
lbl(251785)	allocateL6
		getVarVar(x(0) y(0))
		match(x(0) ht(251877 [onRecord(fVar 2 251792) onRecord(fWildcard 1 251870)]))
lbl(251792)	getVarVar(x(0) y(1))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL6
		return
lbl(251870)	move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(251877)	match(y(0) ht(251968 [onRecord(fVar 2 251880) onRecord(fWildcard 1 251964)]))
lbl(251880)	getVarVar(x(3) y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(4) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL6
		return
lbl(251964)	deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(251968)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2108)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251981)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252013)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252064 252084)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252064)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252084)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2112)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252095)	allocateL4
		getVariable(y(0))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(2) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(3) 3 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(2) 2 cache)
		move(y(1) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252145)	allocateL4
		getVariable(x(3))
		getRecord(fVar 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252203 252223)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252203)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252223)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2122)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252234)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252266)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) floatNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252298)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(2) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252316)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(3) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252334)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2136)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251776)
lbl(252349)	definition(x(8) 252390 pid('Unnester,TranslatePattern/slow' 1 pos('./compiler/Unnester.oz' 2091 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1529> 7)
		endDefinition(252349)
lbl(252390)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: TranslatePattern>)
		setValue(x(8))
		setValue(x(7))
lbl(252400)	definition(x(7) 252550 pid('Unnester,TranslateRecord/fast' 5 pos('./compiler/Unnester.oz' 2138 6) nil 5) <Q: 1530> [y(0) y(3)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		getSelf(x(3))
lbl(252428)	definition(x(1) 252489 pid('' 2 pos('./compiler/Unnester.oz' 2143 4) nil 4) unit [x(3) y(2) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		testRecord(x(0) fColon 2 252478)
lbl(252444)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(g(1) x(1))
		move(x(3) x(2))
		genCall(gci(g(2) true <M: TranslatePattern> false 3) 0)
		move(y(0) x(0))
		move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
lbl(252478)	move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
		endDefinition(252428)
lbl(252489)	move(y(0) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		createVariable(x(2))
		move(y(2) x(0))
		move(x(2) x(3))
		createVariableMove(y(0) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(1) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL5
		return
		endDefinition(252400)
lbl(252550)	definition(x(8) 252603 pid('Unnester,TranslateRecord/slow' 1 pos('./compiler/Unnester.oz' 2138 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1530> 11)
		endDefinition(252550)
lbl(252603)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: TranslateRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(252613)	definition(x(7) 253357 pid('Unnester,UnnestTry/fast' 2 pos('./compiler/Unnester.oz' 2155 6) nil 9) <Q: 1531> [y(0) y(3)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fTry 4 252698)
lbl(252630)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		shallowGuard(252698)
		getLiteral(fNoCatch x(3))
		getLiteral(fNoFinally x(4))
lbl(252644)	shallowThen
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL10
		genFastCall(<Q: 1489> 9)
lbl(252698)	testRecord(y(0) fTry 4 252975)
lbl(252703)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(1) fNoCatch 252975)
		moveMoveXYXY(x(0) y(0) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('ReRaise' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		putRecord(fAtom 2 x(0))
		setConstant(ex)
		setValue(y(3))
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(0))
		setValue(x(1))
		putRecord(fVar 2 x(4))
		setConstant('`unit`')
		setValue(y(3))
		putRecord(fEq 3 x(3))
		setValue(y(6))
		setValue(x(4))
		setValue(y(4))
		putRecord(fAnd 2 x(1))
		setValue(y(0))
		setValue(x(3))
		putRecord(fEq 3 x(8))
		setValue(y(6))
		setValue(x(2))
		setValue(y(4))
		putRecord(fCaseClause 2 x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putRecord(fCatch 2 x(5))
		setValue(x(6))
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setValue(x(5))
		setConstant(fNoFinally)
		setValue(y(3))
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('Raise')
		setValue(x(6))
		setValue(y(4))
		putRecord(fCaseClause 2 x(4))
		setValue(x(2))
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setConstant(nil)
		putRecord(fSkip 1 x(7))
		setValue(y(4))
		putRecord(fCase 4 y(0))
		setValue(y(6))
		setValue(x(1))
		setValue(x(7))
		setValue(y(4))
		getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(1))
		unifyVariable(y(3))
		genCall(gci(g(0) true <M: UnnestTry> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(252975)	testRecord(y(0) fTry 4 253291)
lbl(252980)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(253291)
		getRecord(fCatch 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getLiteral(fNoFinally x(2))
lbl(252999)	shallowThen
		inlineAt(<M: BA> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		moveMoveXYXY(x(4) y(3) x(3) y(4))
		sendMsg(openScope x(2) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		createVariable(y(7))
		testList(y(2) 253136)
lbl(253108)	getVarVar(x(0) x(1))
		shallowGuard(253136)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVoid(2)
		getLiteral(nil x(1))
lbl(253130)	shallowThen
		getLiteral(fNoElse y(7))
		branch(253152)
lbl(253136)	getRecord(fOpApplyStatement 3 y(7))
		unifyLiteral('Raise')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyValue(y(5))
		unifyLiteral(nil)
lbl(253152)	putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(3))
		createVariable(y(8))
		testRecord(x(0) '#' 2 253215)
lbl(253167)	getVarVar(x(0) x(1))
		createVariable(y(9))
		shallowGuard(253215)
		getRecord('pos' 6 x(0))
		unifyVoid(3)
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(253196)	shallowThen
		getRecord('pos' 6 y(8))
		unifyValue(x(4))
		unifyValue(x(5))
		unifyValue(x(6))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		branch(253218)
lbl(253215)	unify(y(8) y(3))
lbl(253218)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putRecord(fCase 4 x(0))
		setValue(y(5))
		setValue(x(1))
		setValue(y(7))
		setValue(y(8))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) tryNode x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(4) x(3))
		sendMsg(init y(3) 4 cache)
		unify(y(3) y(1))
		deAllocateL10
		return
lbl(253291)	testRecord(y(0) fTry 4 253342)
lbl(253296)	getVarVar(y(0) y(2))
		getVarVar(y(3) y(4))
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fTry 4 x(1))
		setValue(y(0))
		setValue(y(2))
		setConstant(fNoFinally)
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setConstant(fNoCatch)
		setValue(y(3))
		setValue(y(5))
		move(y(1) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(253342)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2206)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(252613)
lbl(253357)	definition(x(8) 253392 pid('Unnester,UnnestTry/slow' 1 pos('./compiler/Unnester.oz' 2155 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1531> 5)
		endDefinition(253357)
lbl(253392)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: UnnestTry>)
		setValue(x(8))
		setValue(x(7))
lbl(253402)	definition(x(7) 253804 pid('Unnester,UnnestClauses/fast' 3 pos('./compiler/Unnester.oz' 2209 6) nil 5) <Q: 1532> [y(0) y(3)])
		match(x(0) ht(253789 [onScalar(nil 253411) onRecord('|' 2 253415)]))
lbl(253411)	getLiteral(nil x(2))
		return
lbl(253415)	allocateL10
		getVarVar(x(0) y(0))
		getRecord(fClause 3 x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(253462)	definition(x(1) 253516 pid('' 1 pos('./compiler/Unnester.oz' 2216 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(253503)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(253483)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(253503)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2216)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(253462)
lbl(253516)	move(y(6) x(0))
		genFastCall(<P: 34> 4)
		putList(y(1))
		setVariable(x(1))
		setVariable(y(6))
		move(y(7) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		createVariable(y(2))
		createVariable(y(6))
		match(y(3) ht(253649 [onRecord(fSkip 1 253549) onRecord(fNoThen 1 253618)]))
lbl(253549)	getVariable(x(0))
		move(x(0) y(3))
		match(y(4) ht(253577 [onScalar(fif 253557) onScalar(for 253562) onScalar(fdis 253567) onScalar(fchoice 253572)]))
lbl(253557)	getLiteral('ask' y(2))
		branch(253590)
lbl(253562)	getLiteral('waitTop' y(2))
		branch(253590)
lbl(253567)	getLiteral('waitTop' y(2))
		branch(253590)
lbl(253572)	getLiteral('wait' y(2))
		branch(253590)
lbl(253577)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2224)
		setValue(y(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(253590)	move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(3) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
		branch(253717)
lbl(253618)	getVariable(x(0))
		getLiteral('waitTop' y(2))
		move(g(1) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(6))
		branch(253717)
lbl(253649)	move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		testLiteral(y(4) fif 253667)
lbl(253662)	getLiteral('ask' y(2))
		branch(253670)
lbl(253667)	getLiteral('wait' y(2))
lbl(253670)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<Q: 1489> 8)
lbl(253717)	getList(y(5))
		unifyVariable(y(3))
		unifyVariable(y(5))
		move(g(1) x(0))
		inlineDot(x(0) 'clause' x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(closeScope x(2) 1 cache)
		move(y(7) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(6) x(3))
		sendMsg(init y(9) 4 cache)
		unify(y(9) y(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestClauses> true 3) 0)
lbl(253789)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2240)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(253402)
lbl(253804)	definition(x(8) 253845 pid('Unnester,UnnestClauses/slow' 1 pos('./compiler/Unnester.oz' 2209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1532> 7)
		endDefinition(253804)
lbl(253845)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: UnnestClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(253855)	definition(x(7) 254118 pid('Unnester,UnnestFDExpression/fast' 3 pos('./compiler/Unnester.oz' 2243 6) nil 6) <Q: 1533> [y(0)])
		match(x(0) ht(254055 [onRecord(fOpApply 3 253864) onRecord(fVar 2 254041) onRecord(fInt 2 254048)]))
lbl(253864)	allocateL9
		getVarVar(x(3) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(y(2) '+' 253947)
lbl(253887)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(3))
		unifyLiteral(nil)
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getList(y(0))
		unifyValue(y(5))
		unifyValue(y(7))
		getRecord(fOpApply 3 y(1))
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(8))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(253947)	testLiteral(y(2) '-' 253953)
		branch(253887)
lbl(253953)	testLiteral(y(2) '*' 253959)
		branch(253887)
lbl(253959)	testLiteral(y(2) '~' 253993)
		getList(y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getRecord(fOpApply 3 y(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(253993)	inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(0) y(2) y(4) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(4))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL9
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(254041)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254048)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254055)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(253855)
lbl(254118)	definition(x(8) 254159 pid('Unnester,UnnestFDExpression/slow' 1 pos('./compiler/Unnester.oz' 2243 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1533> 7)
		endDefinition(254118)
lbl(254159)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(254169)	definition(x(7) 254358 pid('Unnester,UnnestFDList/fast' 3 pos('./compiler/Unnester.oz' 2274 6) nil 7) <Q: 1534> [y(0)])
		allocateL8
		move(x(0) y(0))
		match(y(0) ht(254302 [onRecord(fRecord 2 254182) onRecord(fAtom 2 254342)]))
lbl(254182)	getVarVar(x(3) x(4))
		shallowGuard(254302)
		getRecord(fAtom 2 x(3))
		unifyLiteral('|')
		unifyVoid(1)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(254207)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		move(x(4) x(0))
		putConstant('UnnestFDList' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDList> false 3) 0)
		getList(y(0))
		unifyValue(y(4))
		unifyValue(y(6))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setVariable(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(getCoord y(0) 1 cache)
		getRecord(fRecord 2 y(1))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(254302)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('explicitly given list of variables expected')
		setConstant('as first argument to `:::\' in a condis clause')
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		move(y(1) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(254342)	getVariable(x(3))
		testLiteral(x(3) nil 254302)
		getLiteral(nil x(1))
		unify(x(2) y(0))
		deAllocateL8
		return
		endDefinition(254169)
lbl(254358)	definition(x(8) 254399 pid('Unnester,UnnestFDList/slow' 1 pos('./compiler/Unnester.oz' 2274 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1534> 7)
		endDefinition(254358)
lbl(254399)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: UnnestFDList>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 37 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Unnester' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(254505)	definition(x(0) 254536 pid('IsDirective' 2 pos('./compiler/Unnester.oz' 2296 3) nil 2) <Q: 1535> nil)
		match(x(0) ht(254530 [onScalar(dirLocalSwitches 254514) onScalar(dirPushSwitches 254518) onScalar(dirPopSwitches 254522) onRecord(dirSwitch 1 254526)]))
lbl(254514)	getLiteral(true x(1))
		return
lbl(254518)	getLiteral(true x(1))
		return
lbl(254522)	getLiteral(true x(1))
		return
lbl(254526)	getLiteral(true x(1))
		return
lbl(254530)	getLiteral(false x(1))
		return
		endDefinition(254505)
lbl(254536)	definition(x(1) 254599 pid('VariableMember' 3 pos('./compiler/Unnester.oz' 2306 6) nil 7) <Q: 1536> nil)
		allocateL1
		move(x(1) y(0))
		match(y(0) ht(254584 [onScalar(nil 254549) onRecord('|' 2 254554)]))
lbl(254549)	getLiteral(false x(2))
		deAllocateL1
		return
lbl(254554)	getVarVar(x(3) x(4))
		shallowGuard(254584)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254567)	shallowThen
		testBI('Value.\'==\'' [x(0) x(5)]#[x(1)] 254577)
		getLiteral(true x(2))
		deAllocateL1
		return
lbl(254577)	move(x(4) x(1))
		deAllocateL1
		genFastCall(<Q: 1536> 7)
lbl(254584)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2310)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254536)
lbl(254599)	definition(x(1) 254698 pid('AreDisjointVariableLists' 3 pos('./compiler/Unnester.oz' 2313 6) nil 7) <Q: 1537> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testList(y(0) 254674)
lbl(254614)	getVarVar(x(3) x(4))
		shallowGuard(254674)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254627)	shallowThen
		moveMoveXYXY(x(1) y(0) x(4) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1536> 6)
		testBool(y(3) 254651 254663)
		getLiteral(false y(1))
		deAllocateL4
		return
lbl(254651)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 1537> 7)
lbl(254663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2315)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254674)	testLiteral(y(0) nil 254683)
lbl(254678)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(254683)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2319)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254599)
lbl(254698)	definition(x(1) 254997 pid('JoinQueriesSub' 2 pos('./compiler/Unnester.oz' 2322 6) nil 6) <Q: 1538> nil)
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 254990)
lbl(254714)	getVarVar(x(2) x(3))
		shallowGuard(254990)
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(254725)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(2))
		moveMoveXYXY(x(4) y(3) x(5) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 254761 254979)
		getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254761)	testRecord(y(0) fDeclare 3 254967)
lbl(254766)	getVarVar(x(0) y(5))
		getVariable(y(6))
		testRecord(y(3) fDeclare 3 254933)
lbl(254776)	getVarVar(y(3) y(7))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		move(y(3) x(0))
		createVariableMove(y(10) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1537> 6)
		testBool(y(3) 254910 254922)
		putRecord(fAnd 2 x(2))
		setValue(y(11))
		setValue(y(7))
		putRecord(fAnd 2 x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fAnd 2 x(0))
		setValue(y(9))
		setValue(x(1))
		putRecord(fDeclare 3 y(0))
		setVariable(y(2))
		setValue(x(0))
		setValue(y(6))
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(254866)	definition(x(1) 254883 pid('' 3 pos('./compiler/Unnester.oz' 2333 6) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(254866)
lbl(254883)	putRecord(fSkip 1 x(2))
		setValue(y(6))
		moveMoveYXYX(y(3) x(0) y(2) x(3))
		genFastCall(<P: 32> 8)
		putList(x(0))
		setValue(y(0))
		setValue(y(4))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254910)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254922)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2331)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254933)	putRecord(fAnd 2 x(3))
		setValue(y(5))
		setValue(y(3))
		putRecord(fDeclare 3 x(1))
		setValue(x(0))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(1))
		setValue(y(4))
		move(x(2) x(0))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254967)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254979)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2324)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254990)	unify(y(1) y(0))
		deAllocateL
		return
		endDefinition(254698)
lbl(254997)	definition(x(1) 255129 pid('JoinQueries' 3 pos('./compiler/Unnester.oz' 2353 6) nil 5) <Q: 1539> [g(15) x(0)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1538> 4)
		testList(y(4) 255077)
lbl(255033)	getVarVar(x(0) x(1))
		shallowGuard(255077)
		getRecord(fDeclare 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(255051)	shallowThen
		putRecord(fLocal 3 x(4))
		setValue(x(0))
		setValue(x(2))
		setValue(x(3))
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255077)	match(y(4) ht(255105 [onScalar(nil 255080) onRecord('|' 2 255085)]))
lbl(255080)	unify(y(1) y(2))
		deAllocateL5
		return
lbl(255085)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 255105)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255105)	putRecord('#' 2 x(1))
		setConstant('Ozma only supports at most one query ')
		setConstant('per input')
		putConstant('expansion error' x(0))
		sendMsg(error y(0) [kind msg] cache)
		unify(y(2) y(1))
		deAllocateL5
		return
		endDefinition(254997)
lbl(255129)	definition(x(0) 255318 pid('MakeExpressionQuerySub' 3 pos('./compiler/Unnester.oz' 2372 6) nil 6) <Q: 1540> nil)
		match(x(0) ht(255303 [onScalar(nil 255138) onRecord('|' 2 255145)]))
lbl(255138)	getLiteral(nil x(1))
		getLiteral(false x(2))
		return
lbl(255145)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYYX(x(2) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1540> 6)
		testBool(y(6) 255183 255292)
		getList(y(3))
		unifyValue(y(0))
		unifyValue(y(5))
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255183)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 255204 255281)
		unify(y(3) y(2))
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(255204)	testRecord(y(0) fDeclare 3 255252)
lbl(255209)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getList(y(3))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fDeclare 3 x(3))
		unifyValVar(x(0) x(4))
		unifyValue(x(2))
		getRecord(fEq 3 x(4))
		unifyVariable(x(5))
		unifyValue(x(1))
		unifyLiteral(unit)
		getRecord(fVar 2 x(5))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255252)	getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(1))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyLiteral(unit)
		getRecord(fVar 2 x(1))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255281)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255292)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2375)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255303)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255129)
lbl(255318)	definition(x(0) 255331 pid('MakeExpressionQuery' 2 pos('./compiler/Unnester.oz' 2398 6) nil 3) <Q: 1541> nil)
		createVariable(x(2))
		genFastCall(<Q: 1540> 7)
		endDefinition(255318)
lbl(255331)	definition(x(2) 255386 pid('VsToFAnd' 2 pos('./compiler/Unnester.oz' 2404 6) nil 3) <Q: 1542> nil)
		match(x(0) ht(255371 [onScalar(nil 255340) onRecord('|' 2 255347)]))
lbl(255340)	getRecord(fSkip 1 x(1))
		unifyLiteral(unit)
		return
lbl(255347)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 255358)
lbl(255354)	unify(x(1) x(0))
		return
lbl(255358)	getRecord(fAnd 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1542> 5)
lbl(255371)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2410)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255331)
lbl(255386)	definition(x(2) 255412 pid('FS' 2 pos('./compiler/Unnester.oz' 2413 6) nil 4) <Q: 1543> nil)
		testLiteral(x(0) unit 255400)
lbl(255396)	getLiteral(unit x(1))
		return
lbl(255400)	putConstant(fineStep x(2))
		callBI('Record.adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255386)
lbl(255412)	definition(x(2) 255438 pid('CS' 2 pos('./compiler/Unnester.oz' 2417 6) nil 4) <Q: 1544> nil)
		testLiteral(x(0) unit 255426)
lbl(255422)	getLiteral(unit x(1))
		return
lbl(255426)	putConstant(coarseStep x(2))
		callBI('Record.adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255412)
lbl(255438)	createVariable(x(2))
		createVariable(x(3))
lbl(255442)	definition(x(4) 257004 pid('NP' 2 pos('./compiler/Unnester.oz' 2421 6) nil 4) <Q: 1545> [x(2) x(3)])
		match(x(0) ht(256989 [onScalar(fNoCatch 255451) onRecord(fDeclare 3 255455) onRecord(fAnd 2 255483) onRecord(fEq 3 255507) onRecord(fAssign 3 255535) onRecord(fOrElse 3 255571) onRecord(fAndThen 3 255599) onRecord(fOpApply 3 255627) onRecord(fOpApplyStatement 3 255657) onRecord(fFdCompare 4 255687) onRecord(fFdIn 4 255725) onRecord(fObjApply 3 255763) onRecord(fAt 2 255799) onRecord(fAtom 2 255823) onRecord(fVar 2 255827) onRecord(fEscape 2 255831) onRecord(fWildcard 1 255835) onRecord(fSelf 1 255839) onRecord(fDollar 1 255843) onRecord(fInt 2 255847) onRecord(fFloat 2 255851) onRecord(fRecord 2 255855) onRecord(fOpenRecord 2 255871) onRecord(fColon 2 255887) onRecord(fApply 3 255900) onRecord(fProc 5 255940) onRecord(fFun 5 255981) onRecord(fFunctor 3 256022) onRecord(fRequire 2 256062) onRecord(fPrepare 3 256066) onRecord(fImport 2 256094) onRecord(fExport 2 256098) onRecord(fDefine 3 256102) onRecord(fClass 4 256130) onRecord(fFrom 2 256185) onRecord(fProp 2 256202) onRecord(fAttr 2 256219) onRecord(fFeat 2 256236) onRecord('#' 2 256253) onRecord(fLocal 3 256277) onRecord(fBoolCase 4 256305) onRecord(fNoElse 1 256352) onRecord(fCase 4 256363) onRecord(fCaseClause 2 256427) onRecord(fLockThen 3 256440) onRecord(fLock 2 256476) onRecord(fThread 2 256500) onRecord(fTry 4 256524) onRecord(fCatch 2 256571) onRecord(fRaise 2 256598) onRecord(fRaiseWith 3 256622) onRecord(fSkip 1 256658) onRecord(fFail 1 256662) onRecord(fNot 2 256666) onRecord(fCond 3 256690) onRecord(fClause 3 256729) onRecord(fNoThen 1 256765) onRecord(fOr 3 256769) onRecord(fCondis 2 256799) onRecord(fScanner 6 256840) onRecord(fParser 7 256913)]))
lbl(255451)	getLiteral(fNoCatch x(1))
		return
lbl(255455)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDeclare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255483)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255507)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255535)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255571)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255599)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255627)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255657)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255687)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255725)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255763)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255799)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255823)	unify(x(1) x(0))
		return
lbl(255827)	unify(x(1) x(0))
		return
lbl(255831)	unify(x(1) x(0))
		return
lbl(255835)	unify(x(1) x(0))
		return
lbl(255839)	unify(x(1) x(0))
		return
lbl(255843)	unify(x(1) x(0))
		return
lbl(255847)	unify(x(1) x(0))
		return
lbl(255851)	unify(x(1) x(0))
		return
lbl(255855)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255871)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255887)	getVarVar(x(2) x(0))
		getRecord(fColon 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(255900)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255940)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255981)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256022)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256062)	unify(x(1) x(0))
		return
lbl(256066)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fPrepare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256094)	unify(x(1) x(0))
		return
lbl(256098)	unify(x(1) x(0))
		return
lbl(256102)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDefine 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256130)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256185)	getVarVar(x(0) x(3))
		getRecord(fFrom 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256202)	getVarVar(x(0) x(3))
		getRecord(fProp 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256219)	getVarVar(x(0) x(3))
		getRecord(fAttr 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256236)	getVarVar(x(0) x(3))
		getRecord(fFeat 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256253)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256277)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fLocal 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256305)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256352)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1543> 5)
lbl(256363)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(256385)	definition(x(1) 256402 pid('' 2 pos('./compiler/Unnester.oz' 2468 28) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256385)
lbl(256402)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256427)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(256440)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256476)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256500)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256524)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256571)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256598)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256622)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256658)	unify(x(1) x(0))
		return
lbl(256662)	unify(x(1) x(0))
		return
lbl(256666)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256690)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256729)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fClause 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1545> 5)
lbl(256765)	unify(x(1) x(0))
		return
lbl(256769)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256799)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(256811)	definition(x(1) 256828 pid('' 2 pos('./compiler/Unnester.oz' 2486 22) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256811)
lbl(256828)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256840)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(256913)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(256989)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2491)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255442)
lbl(257004)	unify(x(4) x(2))
lbl(257007)	definition(x(4) 258777 pid('SP' 2 pos('./compiler/Unnester.oz' 2494 6) nil 6) <Q: 1546> [x(2) x(3)])
		match(x(0) ht(258762 [onScalar(fNoCatch 257016) onScalar(fNoFinally 257020) onRecord(fDeclare 3 257024) onRecord(fAnd 2 257076) onRecord(fEq 3 257100) onRecord(fAssign 3 257136) onRecord(fOrElse 3 257172) onRecord(fAndThen 3 257200) onRecord(fOpApply 3 257228) onRecord(fOpApplyStatement 3 257258) onRecord(fFdCompare 4 257288) onRecord(fFdIn 4 257326) onRecord(fObjApply 3 257364) onRecord(fAt 2 257400) onRecord(fAtom 2 257424) onRecord(fVar 2 257437) onRecord(fEscape 2 257450) onRecord(fWildcard 1 257463) onRecord(fSelf 1 257474) onRecord(fDollar 1 257485) onRecord(fInt 2 257496) onRecord(fFloat 2 257509) onRecord(fRecord 2 257522) onRecord(fOpenRecord 2 257550) onRecord(fApply 3 257578) onRecord(fProc 5 257618) onRecord(fFun 5 257659) onRecord(fFunctor 3 257700) onRecord(fClass 4 257740) onRecord(fMeth 3 257795) onRecord(fLocal 3 257812) onRecord(fBoolCase 4 257864) onRecord(fNoElse 1 257911) onRecord(fCase 4 257922) onRecord(fCaseClause 2 257986) onRecord(fLockThen 3 257999) onRecord(fLock 2 258035) onRecord(fThread 2 258059) onRecord(fTry 4 258083) onRecord(fCatch 2 258130) onRecord(fRaise 2 258157) onRecord(fRaiseWith 3 258181) onRecord(fSkip 1 258217) onRecord(fFail 1 258228) onRecord(fNot 2 258239) onRecord(fCond 3 258263) onRecord(fClause 3 258302) onRecord(fNoThen 1 258362) onRecord(fOr 3 258373) onRecord(fCondis 2 258403) onRecord(fScanner 6 258444) onRecord(fMode 2 258517) onRecord(fInheritedModes 1 258533) onRecord(fLexicalAbbreviation 2 258537) onRecord(fLexicalRule 2 258541) onRecord(fParser 7 258554) onRecord(fProductionTemplate 5 258630) onRecord(fSyntaxRule 3 258667) onRecord(fSynApplication 2 258684) onRecord(fSynAction 1 258688) onRecord(fSynSequence 2 258699) onRecord(fSynAlternative 1 258715) onRecord(fSynAssignment 2 258729) onRecord(fSynTemplateInstantiation 3 258742)]))
lbl(257016)	getLiteral(fNoCatch x(1))
		return
lbl(257020)	getLiteral(fNoFinally x(1))
		return
lbl(257024)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fDeclare 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257076)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(257100)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257136)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257172)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257200)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257228)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257258)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257288)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257326)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257364)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257400)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257424)	getVarVar(x(2) x(0))
		getRecord(fAtom 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257437)	getVarVar(x(2) x(0))
		getRecord(fVar 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257450)	getVarVar(x(2) x(0))
		getRecord(fEscape 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257463)	getVariable(x(0))
		getRecord(fWildcard 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257474)	getVariable(x(0))
		getRecord(fSelf 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257485)	getVariable(x(0))
		getRecord(fDollar 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257496)	getVarVar(x(2) x(0))
		getRecord(fInt 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257509)	getVarVar(x(2) x(0))
		getRecord(fFloat 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257522)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257550)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fOpenRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257578)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257618)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257659)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257700)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257740)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257795)	getVarVar(x(2) x(0))
		getVariable(x(3))
		getRecord(fMeth 3 x(1))
		unifyValVar(x(2) x(1))
		unifyValue(x(3))
		genFastCall(<Q: 1546> 5)
lbl(257812)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fLocal 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257864)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257911)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257922)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(257944)	definition(x(1) 257961 pid('' 2 pos('./compiler/Unnester.oz' 2535 28) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(257944)
lbl(257961)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257986)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(257999)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258035)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258059)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258083)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(258130)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258157)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258181)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258217)	getVariable(x(0))
		getRecord(fSkip 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258228)	getVariable(x(0))
		getRecord(fFail 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258239)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258263)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258302)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fClause 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(5))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1546> 5)
lbl(258362)	getVariable(x(0))
		getRecord(fNoThen 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258373)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258403)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(258415)	definition(x(1) 258432 pid('' 2 pos('./compiler/Unnester.oz' 2556 22) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(258415)
lbl(258432)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258444)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258517)	getVarVar(x(3) x(0))
		getRecord(fMode 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258533)	unify(x(1) x(0))
		return
lbl(258537)	unify(x(1) x(0))
		return
lbl(258541)	getVarVar(x(2) x(0))
		getRecord(fLexicalRule 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258554)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258630)	allocateL2
		getVarVar(x(3) x(4))
		getVarVar(x(0) y(0))
		getVariable(x(5))
		getRecord(fProductionTemplate 5 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(2))
		unifyVariable(y(1))
		unifyValue(x(5))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(258667)	getVarVar(x(2) x(3))
		getVariable(x(0))
		getRecord(fSyntaxRule 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258684)	unify(x(1) x(0))
		return
lbl(258688)	getVariable(x(0))
		getRecord(fSynAction 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1546> 5)
lbl(258699)	getVarVar(x(3) x(0))
		getRecord(fSynSequence 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258715)	getVariable(x(0))
		getRecord(fSynAlternative 1 x(1))
		unifyVariable(x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258729)	getVarVar(x(2) x(0))
		getRecord(fSynAssignment 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258742)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fSynTemplateInstantiation 3 x(1))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258762)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2575)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(257007)
lbl(258777)	unify(x(4) x(3))
lbl(258780)	definition(x(2) 258880 pid('UnnestQuery' 7 pos('./compiler/Unnester.oz' 2578 6) nil 9) <Q: 1547> [y(0)])
		allocateL7
		move(g(0) x(7))
		callBI('Object.newObject' [x(7)]#[x(8)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		sendMsg(init y(5) 3 cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch y(0) 2 cache)
		createVariable(y(0))
		testBool(y(6) 258842 258847)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1546> 4)
		branch(258858)
lbl(258842)	unify(y(0) y(1))
		branch(258858)
lbl(258847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2580)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(258858)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL7
		tailSendMsg(unnestQuery x(4) 4 cache)
		endDefinition(258780)
lbl(258880)	getRecord('export' [joinQueries makeExpressionQuery unnestQuery] g(16))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		deAllocateL7
		return
		endDefinition(218198)
lbl(258894)	tailCall(x(2) 0)
		endDefinition(217226)
lbl(258899)	putList(x(3))
		setConstant(concatenateAtomAndInt)
		setConstant(nil)
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putList(x(6))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(8))
		setConstant(downcase)
		setConstant(nil)
		putRecord(info [type] x(7))
		setValue(x(8))
		putList(x(10))
		setConstant(procs)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['CompilerSupport' 'Core' 'FD' 'PrintName' 'RunTime'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(7))
		setValue(x(9))
		putConstant('procedure/3' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/>6' x(6))
		putRecord('export' [joinQueries makeExpressionQuery unnestQuery] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(258994)	definition(x(2) 275763 pid('' 2 pos('./compiler/Assembler.oz' 38 0) nil 4) <P: 1548> [y(149) y(203) y(217) y(150) y(148) y(156) y(147) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 1549>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1550>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1551>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1552>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1553>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1554>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1555>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1556>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1557>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1558>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1559>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1560>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1561>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1562>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1563>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1564>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1565>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InstrsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InstrsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LabelDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Size>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Profile>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MarkEnd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1566>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1567>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1568>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1569>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1570>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1571>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1572>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1573>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1574>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1575>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1576>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1577>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1578>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1579>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1580>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1581>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1582>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1583>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1584>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1585>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1586>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1587>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1588>)
		setValue(x(2))
lbl(259288)	definitionCopy(x(3) 275758 pid('/body' 0 pos('./compiler/Assembler.oz' 38 0) [once] 45) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(228)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'CompilerSupport' x(2) cache)
		inlineDot(x(0) 'Builtins' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(4) cache)
		inlineDot(x(2) getInstructionSize x(5) cache)
		inlineDot(x(2) getOpcode x(6) cache)
		inlineDot(x(2) newCodeBlock x(7) cache)
		inlineDot(x(2) makeProc x(8) cache)
		inlineDot(x(2) addDebugInfo x(9) cache)
		inlineDot(x(2) storeOpcode x(10) cache)
		inlineDot(x(2) storeNumber x(11) cache)
		inlineDot(x(2) storeLiteral x(12) cache)
		inlineDot(x(2) storeFeature x(13) cache)
		inlineDot(x(2) storeConstant x(14) cache)
		inlineDot(x(2) storeInt x(15) cache)
		inlineDot(x(2) storeRegisterIndex x(16) cache)
		inlineDot(x(2) storePredicateRef x(17) cache)
		inlineDot(x(2) storeRecordArity x(18) cache)
		inlineDot(x(2) storeGRegRef x(19) cache)
		inlineDot(x(2) storeLocation x(20) cache)
		inlineDot(x(2) storeCache x(21) cache)
		inlineDot(x(2) storeBuiltinname x(22) cache)
lbl(259431)	definition(x(23) 259451 pid('StoreBuiltinname' 2 pos('./compiler/Assembler.oz' 71 2) nil 4) <Q: 1549> [x(22)])
		putConstant(~1 x(2))
		callBI('Boot.builtin' [x(1) x(2)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259431)
lbl(259451)	definition(x(22) 259468 pid('StoreRegister' 2 pos('./compiler/Assembler.oz' 76 6) nil 2) <Q: 1550> [x(16)])
		inlineDot(x(1) 1 x(1) cache)
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259451)
lbl(259468)	definition(x(22) 259502 pid('StoreXRegisterIndex' 2 pos('./compiler/Assembler.oz' 80 6) nil 3) <Q: 1551> [x(16)])
		shallowGuard(259489)
		getRecord(x 1 x(1))
		unifyVariable(x(2))
lbl(259482)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259489)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(80)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259468)
lbl(259502)	definition(x(22) 259536 pid('StoreYRegisterIndex' 2 pos('./compiler/Assembler.oz' 84 6) nil 3) <Q: 1552> [x(16)])
		shallowGuard(259523)
		getRecord(y 1 x(1))
		unifyVariable(x(2))
lbl(259516)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259523)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(84)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259502)
lbl(259536)	inlineDot(x(2) storeLabel x(16) cache)
lbl(259542)	definition(x(22) 259559 pid('StoreLabel' 3 pos('./compiler/Assembler.oz' 91 2) nil 4) <Q: 1553> [g(1) x(16)])
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(259542)
lbl(259559)	inlineDot(x(2) storePredId x(16) cache)
lbl(259565)	definition(x(22) 259619 pid('StorePredId' 2 pos('./compiler/Assembler.oz' 99 2) nil 7) <Q: 1554> [x(16)])
		shallowGuard(259606)
		getRecord('pid' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(259587)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259606)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259565)
lbl(259619)	inlineDot(x(2) newHashTable x(16) cache)
		inlineDot(x(2) storeHTScalar x(22) cache)
		inlineDot(x(2) storeHTRecord x(23) cache)
lbl(259637)	definition(x(24) 259773 pid('StoreHashTableRef' 3 pos('./compiler/Assembler.oz' 109 2) nil 5) <Q: 1555> [g(1) x(16) x(22) x(23)])
		shallowGuard(259760)
		getRecord('ht' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(259653)	shallowThen
		allocateL6
		callBI('Dictionary.get' [x(2) x(3)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(1) false '' false 4) 0)
lbl(259691)	definition(x(1) 259753 pid('' 1 pos('./compiler/Assembler.oz' 114 6) nil 5) unit [g(0) y(1) g(2) y(0) y(5) g(3)])
		match(x(0) ht(259738 [onRecord('onScalar' 2 259700) onRecord('onRecord' 3 259718)]))
lbl(259700)	getVarVar(x(2) x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) false '' true 4) 0)
lbl(259718)	getVarVar(x(2) x(3))
		getVariable(x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(4)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(5) false '' true 5) 0)
lbl(259738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(121)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(259691)
lbl(259753)	move(y(2) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(259760)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259637)
lbl(259773)	inlineDot(x(2) storeGenCallInfo x(16) cache)
lbl(259779)	definition(x(22) 259839 pid('StoreGenCallInfo' 2 pos('./compiler/Assembler.oz' 129 2) nil 8) <Q: 1556> [x(16)])
		shallowGuard(259826)
		getRecord('gci' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(g 1 x(2))
		unifyVariable(x(7))
lbl(259807)	shallowThen
		move(x(7) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259826)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(129)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259779)
lbl(259839)	inlineDot(x(2) storeApplMethInfo x(16) cache)
lbl(259845)	definition(x(22) 259884 pid('StoreApplMethInfo' 2 pos('./compiler/Assembler.oz' 139 2) nil 4) <Q: 1557> [x(16)])
		shallowGuard(259871)
		getRecord('ami' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(259861)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) false '' true 3) 0)
lbl(259871)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259845)
lbl(259884)	putRecord(instructionSizes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(x(16))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		setVariable(y(59))
		setVariable(y(60))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		setVariable(y(79))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(94))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		moveMoveXYXY(x(1) y(116) x(2) y(117))
		moveMoveXYXY(x(3) y(118) x(4) y(119))
		moveMoveXYXY(x(5) y(120) x(6) y(121))
		moveMoveXYXY(x(7) y(122) x(8) y(123))
		moveMoveXYXY(x(9) y(124) x(10) y(125))
		moveMoveXYXY(x(11) y(126) x(12) y(127))
		moveMoveXYXY(x(13) y(128) x(14) y(129))
		moveMoveXYXY(x(15) y(130) x(17) y(131))
		moveMoveXYXY(x(18) y(132) x(19) y(133))
		moveMoveXYXY(x(20) y(134) x(21) y(135))
		move(x(16) x(1))
		putConstant('endOfFile' x(0))
		call(y(120) 2)
		move(y(94) x(1))
		putConstant('skip' x(0))
		call(y(120) 2)
		move(y(43) x(1))
		putConstant('failure' x(0))
		call(y(120) 2)
		move(y(38) x(1))
		putConstant('definition' x(0))
		call(y(120) 2)
		move(y(39) x(1))
		putConstant('definitionCopy' x(0))
		call(y(120) 2)
		move(y(41) x(1))
		putConstant('endDefinition' x(0))
		call(y(120) 2)
		move(y(73) x(1))
		putConstant(moveXX x(0))
		call(y(120) 2)
		move(y(74) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(120) 2)
		move(y(77) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(120) 2)
		move(y(75) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(120) 2)
		move(y(76) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(120) 2)
		move(y(23) x(1))
		putConstant(createVariableX x(0))
		call(y(120) 2)
		move(y(24) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(120) 2)
		move(y(107) x(1))
		putConstant(unifyXX x(0))
		call(y(120) 2)
		move(y(83) x(1))
		putConstant(putRecordX x(0))
		call(y(120) 2)
		move(y(82) x(1))
		putConstant(putListX x(0))
		call(y(120) 2)
		move(y(81) x(1))
		putConstant(putConstantX x(0))
		call(y(120) 2)
		move(y(90) x(1))
		putConstant(setVariableX x(0))
		call(y(120) 2)
		move(y(89) x(1))
		putConstant(setValueX x(0))
		call(y(120) 2)
		move(y(86) x(1))
		putConstant('setConstant' x(0))
		call(y(120) 2)
		move(y(87) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(120) 2)
		move(y(91) x(1))
		putConstant('setVoid' x(0))
		call(y(120) 2)
		move(y(53) x(1))
		putConstant(getRecordX x(0))
		call(y(120) 2)
		move(y(49) x(1))
		putConstant(getListX x(0))
		call(y(120) 2)
		move(y(50) x(1))
		putConstant(getListValVarX x(0))
		call(y(120) 2)
		move(y(112) x(1))
		putConstant(unifyVariableX x(0))
		call(y(120) 2)
		move(y(111) x(1))
		putConstant(unifyValueX x(0))
		call(y(120) 2)
		move(y(110) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(120) 2)
		move(y(109) x(1))
		putConstant('unifyNumber' x(0))
		call(y(120) 2)
		move(y(108) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(120) 2)
		move(y(113) x(1))
		putConstant('unifyVoid' x(0))
		call(y(120) 2)
		move(y(51) x(1))
		putConstant(getLiteralX x(0))
		call(y(120) 2)
		move(y(52) x(1))
		putConstant(getNumberX x(0))
		call(y(120) 2)
		move(y(1) x(1))
		putConstant('allocateL' x(0))
		call(y(120) 2)
		move(y(2) x(1))
		putConstant('allocateL1' x(0))
		call(y(120) 2)
		move(y(4) x(1))
		putConstant('allocateL2' x(0))
		call(y(120) 2)
		move(y(5) x(1))
		putConstant('allocateL3' x(0))
		call(y(120) 2)
		move(y(6) x(1))
		putConstant('allocateL4' x(0))
		call(y(120) 2)
		move(y(7) x(1))
		putConstant('allocateL5' x(0))
		call(y(120) 2)
		move(y(8) x(1))
		putConstant('allocateL6' x(0))
		call(y(120) 2)
		move(y(9) x(1))
		putConstant('allocateL7' x(0))
		call(y(120) 2)
		move(y(10) x(1))
		putConstant('allocateL8' x(0))
		call(y(120) 2)
		move(y(11) x(1))
		putConstant('allocateL9' x(0))
		call(y(120) 2)
		move(y(3) x(1))
		putConstant('allocateL10' x(0))
		call(y(120) 2)
		move(y(25) x(1))
		putConstant('deAllocateL' x(0))
		call(y(120) 2)
		move(y(26) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(120) 2)
		move(y(28) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(120) 2)
		move(y(29) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(120) 2)
		move(y(30) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(120) 2)
		move(y(31) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(120) 2)
		move(y(32) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(120) 2)
		move(y(33) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(120) 2)
		move(y(34) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(120) 2)
		move(y(35) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(120) 2)
		move(y(27) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(120) 2)
		move(y(47) x(1))
		putConstant('genCall' x(0))
		call(y(120) 2)
		move(y(15) x(1))
		putConstant(callX x(0))
		call(y(120) 2)
		move(y(96) x(1))
		putConstant(tailCallX x(0))
		call(y(120) 2)
		move(y(71) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(120) 2)
		move(y(48) x(1))
		putConstant('genFastCall' x(0))
		call(y(120) 2)
		move(y(44) x(1))
		putConstant('fastCall' x(0))
		call(y(120) 2)
		move(y(45) x(1))
		putConstant('fastTailCall' x(0))
		call(y(120) 2)
		move(y(85) x(1))
		putConstant(sendMsgX x(0))
		call(y(120) 2)
		move(y(97) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(120) 2)
		move(y(12) x(1))
		putConstant(applMethX x(0))
		call(y(120) 2)
		move(y(95) x(1))
		putConstant(tailApplMethX x(0))
		call(y(120) 2)
		move(y(55) x(1))
		putConstant('getSelf' x(0))
		call(y(120) 2)
		move(y(88) x(1))
		putConstant('setSelf' x(0))
		call(y(120) 2)
		move(y(70) x(1))
		putConstant('lockThread' x(0))
		call(y(120) 2)
		move(y(61) x(1))
		putConstant('inlineAt' x(0))
		call(y(120) 2)
		move(y(60) x(1))
		putConstant('inlineAssign' x(0))
		call(y(120) 2)
		move(y(14) x(1))
		putConstant('branch' x(0))
		call(y(120) 2)
		move(y(114) x(1))
		putConstant('wait' x(0))
		call(y(120) 2)
		move(y(115) x(1))
		putConstant('waitTop' x(0))
		call(y(120) 2)
		move(y(13) x(1))
		putConstant('ask' x(0))
		call(y(120) 2)
		move(y(20) x(1))
		putConstant('createCond' x(0))
		call(y(120) 2)
		move(y(22) x(1))
		putConstant('createOr' x(0))
		call(y(120) 2)
		move(y(21) x(1))
		putConstant('createEnumOr' x(0))
		call(y(120) 2)
		move(y(19) x(1))
		putConstant('createChoice' x(0))
		call(y(120) 2)
		move(y(17) x(1))
		putConstant('clause' x(0))
		call(y(120) 2)
		move(y(40) x(1))
		putConstant('emptyClause' x(0))
		call(y(120) 2)
		move(y(106) x(1))
		putConstant('thread' x(0))
		call(y(120) 2)
		move(y(42) x(1))
		putConstant('exHandler' x(0))
		call(y(120) 2)
		move(y(79) x(1))
		putConstant('popEx' x(0))
		call(y(120) 2)
		move(y(84) x(1))
		putConstant('return' x(0))
		call(y(120) 2)
		move(y(54) x(1))
		putConstant(getReturnX x(0))
		call(y(120) 2)
		move(y(46) x(1))
		putConstant(funReturnX x(0))
		call(y(120) 2)
		move(y(78) x(1))
		putConstant('nextClause' x(0))
		call(y(120) 2)
		move(y(68) x(1))
		putConstant('lastClause' x(0))
		call(y(120) 2)
		move(y(92) x(1))
		putConstant('shallowGuard' x(0))
		call(y(120) 2)
		move(y(93) x(1))
		putConstant('shallowThen' x(0))
		call(y(120) 2)
		move(y(103) x(1))
		putConstant(testLiteralX x(0))
		call(y(120) 2)
		move(y(104) x(1))
		putConstant(testNumberX x(0))
		call(y(120) 2)
		move(y(105) x(1))
		putConstant(testRecordX x(0))
		call(y(120) 2)
		move(y(102) x(1))
		putConstant(testListX x(0))
		call(y(120) 2)
		move(y(99) x(1))
		putConstant(testBoolX x(0))
		call(y(120) 2)
		move(y(72) x(1))
		putConstant(matchX x(0))
		call(y(120) 2)
		move(y(57) x(1))
		putConstant(getVariableX x(0))
		call(y(120) 2)
		move(y(56) x(1))
		putConstant(getVarVarXX x(0))
		call(y(120) 2)
		move(y(58) x(1))
		putConstant('getVoid' x(0))
		call(y(120) 2)
		move(y(36) x(1))
		putConstant('debugEntry' x(0))
		call(y(120) 2)
		move(y(37) x(1))
		putConstant('debugExit' x(0))
		call(y(120) 2)
		move(y(59) x(1))
		putConstant('globalVarname' x(0))
		call(y(120) 2)
		move(y(69) x(1))
		putConstant('localVarname' x(0))
		call(y(120) 2)
		move(y(18) x(1))
		putConstant('clearY' x(0))
		call(y(120) 2)
		move(y(80) x(1))
		putConstant('profileProc' x(0))
		call(y(120) 2)
		move(y(16) x(1))
		putConstant('callBI' x(0))
		call(y(120) 2)
		move(y(66) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(120) 2)
		move(y(64) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(120) 2)
		move(y(65) x(1))
		putConstant('inlinePlus' x(0))
		call(y(120) 2)
		move(y(63) x(1))
		putConstant('inlineMinus' x(0))
		call(y(120) 2)
		move(y(62) x(1))
		putConstant('inlineDot' x(0))
		call(y(120) 2)
		move(y(67) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(120) 2)
		move(y(98) x(1))
		putConstant('testBI' x(0))
		call(y(120) 2)
		move(y(101) x(1))
		putConstant('testLT' x(0))
		call(y(120) 2)
		move(y(100) x(1))
		putConstant('testLE' x(0))
		call(y(120) 2)
		putRecord(f [g x y] x(0))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		putRecord(f [g x y] x(1))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		putRecord(f [g x y] x(2))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		putRecord(f [g x y] x(3))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		putRecord(f [g x y] x(4))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		putRecord(f [g x y] x(5))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		putRecord(f [g x y] x(6))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		putRecord(f [g x y] x(7))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		putRecord(f [g x y] x(8))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		putRecord(f [g x y] x(9))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		putRecord(f [g x y] x(10))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		putRecord(f [g x y] x(12))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		putRecord(f [g x y] x(13))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		putRecord(f [g x y] x(14))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		putRecord(f [g x y] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putRecord(f [g x y] x(15))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		putRecord(f [g x y] x(16))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		putRecord(f [g x y] x(18))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		putRecord(f [g x y] x(19))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		putRecord(f [g x y] x(20))
		setVariable(y(120))
		setVariable(y(136))
		setVariable(y(137))
		putRecord(f [g x y] x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord(f [g x y] x(21))
		setVariable(y(145))
		setVariable(y(146))
		setVariable(y(147))
		putRecord(f [g x y] x(22))
		setVariable(y(148))
		setVariable(y(149))
		setVariable(y(150))
		putRecord(f [g x y] x(23))
		setVariable(y(151))
		setVariable(y(152))
		setVariable(y(153))
		putRecord(f [g x y] x(24))
		setVariable(y(155))
		setVariable(y(156))
		setVariable(y(157))
		putRecord(f [g x y] x(25))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(y(163))
		putRecord(f [g x y] x(26))
		setVariable(y(164))
		setVariable(y(165))
		setVariable(y(166))
		putRecord(f [g x y] x(27))
		setVariable(y(171))
		setVariable(y(172))
		setVariable(y(173))
		putRecord(f [g x y] x(28))
		setVariable(y(174))
		setVariable(y(175))
		setVariable(y(176))
		putRecord(f [g x y] x(29))
		setVariable(y(177))
		setVariable(y(178))
		setVariable(y(179))
		putRecord(f [g x y] x(30))
		setVariable(y(181))
		setVariable(y(182))
		setVariable(y(183))
		putRecord(f [g x y] x(31))
		setVariable(y(186))
		setVariable(y(187))
		setVariable(y(188))
		putRecord(f [g x y] x(32))
		setVariable(y(189))
		setVariable(y(190))
		setVariable(y(191))
		putRecord(f [g x y] x(33))
		setVariable(y(192))
		setVariable(y(193))
		setVariable(y(194))
		putRecord(f [g x y] x(34))
		setVariable(y(195))
		setVariable(y(196))
		setVariable(y(197))
		putRecord(f [g x y] x(36))
		setVariable(y(199))
		setVariable(y(200))
		setVariable(y(201))
		putRecord(f [g x y] x(37))
		setVariable(y(202))
		setVariable(y(203))
		setVariable(y(204))
		putRecord(f [g x y] x(38))
		setVariable(y(205))
		setVariable(y(206))
		setVariable(y(207))
		putRecord(f [g x y] x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		putRecord(f [g x y] x(40))
		setVariable(y(210))
		setVariable(y(211))
		setVariable(y(212))
		putRecord(f [g x y] x(41))
		setVariable(y(213))
		setVariable(y(214))
		setVariable(y(215))
		putRecord(f [g x y] x(42))
		setVariable(y(216))
		setVariable(y(217))
		setVariable(y(218))
		putRecord(f [g x y] x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		putRecord(f [g x y] x(43))
		setVariable(y(219))
		setVariable(y(220))
		setVariable(y(221))
		putRecord(f [g x y] x(44))
		setVariable(y(222))
		setVariable(y(223))
		setVariable(y(224))
		putRecord(opcodes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setValue(x(0))
		setVariable(y(16))
		setVariable(y(17))
		setValue(x(1))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setValue(x(2))
		setValue(x(3))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setValue(x(4))
		setVariable(y(59))
		setVariable(y(60))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setVariable(y(79))
		setValue(x(11))
		setValue(x(15))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setValue(x(16))
		setValue(x(17))
		setVariable(y(138))
		setVariable(y(139))
		setVariable(y(140))
		setVariable(y(141))
		setVariable(y(142))
		setVariable(y(143))
		setVariable(y(144))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setVariable(y(154))
		setValue(x(24))
		setVariable(y(158))
		setVariable(y(159))
		setVariable(y(160))
		setValue(x(25))
		setValue(x(26))
		setVariable(y(167))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setVariable(y(180))
		setValue(x(30))
		setVariable(y(184))
		setVariable(y(185))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setVariable(y(198))
		setValue(x(35))
		setVariable(y(208))
		setVariable(y(209))
		setValue(x(39))
		setValue(x(43))
		setValue(x(44))
		setVariable(y(225))
		setVariable(y(226))
		setVariable(y(227))
		move(y(51) x(1))
		putConstant('endOfFile' x(0))
		call(y(121) 2)
		move(y(170) x(1))
		putConstant('skip' x(0))
		call(y(121) 2)
		move(y(53) x(1))
		putConstant('failure' x(0))
		call(y(121) 2)
		move(y(47) x(1))
		putConstant('definition' x(0))
		call(y(121) 2)
		move(y(48) x(1))
		putConstant('definitionCopy' x(0))
		call(y(121) 2)
		move(y(50) x(1))
		putConstant('endDefinition' x(0))
		call(y(121) 2)
		move(y(114) x(1))
		putConstant(moveXX x(0))
		call(y(121) 2)
		move(y(115) x(1))
		putConstant(moveXY x(0))
		call(y(121) 2)
		move(y(113) x(1))
		putConstant(moveXG x(0))
		call(y(121) 2)
		move(y(136) x(1))
		putConstant(moveYX x(0))
		call(y(121) 2)
		move(y(137) x(1))
		putConstant(moveYY x(0))
		call(y(121) 2)
		move(y(120) x(1))
		putConstant(moveYG x(0))
		call(y(121) 2)
		move(y(111) x(1))
		putConstant(moveGX x(0))
		call(y(121) 2)
		move(y(112) x(1))
		putConstant(moveGY x(0))
		call(y(121) 2)
		move(y(110) x(1))
		putConstant(moveGG x(0))
		call(y(121) 2)
		move(y(138) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(121) 2)
		move(y(141) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(121) 2)
		move(y(139) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(121) 2)
		move(y(140) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(121) 2)
		move(y(29) x(1))
		putConstant(createVariableX x(0))
		call(y(121) 2)
		move(y(30) x(1))
		putConstant(createVariableY x(0))
		call(y(121) 2)
		move(y(28) x(1))
		putConstant(createVariableG x(0))
		call(y(121) 2)
		move(y(32) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(121) 2)
		move(y(33) x(1))
		putConstant(createVariableMoveY x(0))
		call(y(121) 2)
		move(y(31) x(1))
		putConstant(createVariableMoveG x(0))
		call(y(121) 2)
		move(y(203) x(1))
		putConstant(unifyXX x(0))
		call(y(121) 2)
		move(y(204) x(1))
		putConstant(unifyXY x(0))
		call(y(121) 2)
		move(y(202) x(1))
		putConstant(unifyXG x(0))
		call(y(121) 2)
		move(y(206) x(1))
		putConstant(unifyYX x(0))
		call(y(121) 2)
		move(y(207) x(1))
		putConstant(unifyYY x(0))
		call(y(121) 2)
		move(y(205) x(1))
		putConstant(unifyYG x(0))
		call(y(121) 2)
		move(y(200) x(1))
		putConstant(unifyGX x(0))
		call(y(121) 2)
		move(y(201) x(1))
		putConstant(unifyGY x(0))
		call(y(121) 2)
		move(y(199) x(1))
		putConstant(unifyGG x(0))
		call(y(121) 2)
		move(y(152) x(1))
		putConstant(putRecordX x(0))
		call(y(121) 2)
		move(y(153) x(1))
		putConstant(putRecordY x(0))
		call(y(121) 2)
		move(y(151) x(1))
		putConstant(putRecordG x(0))
		call(y(121) 2)
		move(y(149) x(1))
		putConstant(putListX x(0))
		call(y(121) 2)
		move(y(150) x(1))
		putConstant(putListY x(0))
		call(y(121) 2)
		move(y(148) x(1))
		putConstant(putListG x(0))
		call(y(121) 2)
		move(y(146) x(1))
		putConstant(putConstantX x(0))
		call(y(121) 2)
		move(y(147) x(1))
		putConstant(putConstantY x(0))
		call(y(121) 2)
		move(y(145) x(1))
		putConstant(putConstantG x(0))
		call(y(121) 2)
		move(y(165) x(1))
		putConstant(setVariableX x(0))
		call(y(121) 2)
		move(y(166) x(1))
		putConstant(setVariableY x(0))
		call(y(121) 2)
		move(y(164) x(1))
		putConstant(setVariableG x(0))
		call(y(121) 2)
		move(y(162) x(1))
		putConstant(setValueX x(0))
		call(y(121) 2)
		move(y(163) x(1))
		putConstant(setValueY x(0))
		call(y(121) 2)
		move(y(161) x(1))
		putConstant(setValueG x(0))
		call(y(121) 2)
		move(y(158) x(1))
		putConstant('setConstant' x(0))
		call(y(121) 2)
		move(y(159) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(121) 2)
		move(y(167) x(1))
		putConstant('setVoid' x(0))
		call(y(121) 2)
		move(y(74) x(1))
		putConstant(getRecordX x(0))
		call(y(121) 2)
		move(y(75) x(1))
		putConstant(getRecordY x(0))
		call(y(121) 2)
		move(y(73) x(1))
		putConstant(getRecordG x(0))
		call(y(121) 2)
		move(y(62) x(1))
		putConstant(getListX x(0))
		call(y(121) 2)
		move(y(63) x(1))
		putConstant(getListY x(0))
		call(y(121) 2)
		move(y(61) x(1))
		putConstant(getListG x(0))
		call(y(121) 2)
		move(y(65) x(1))
		putConstant(getListValVarX x(0))
		call(y(121) 2)
		move(y(66) x(1))
		putConstant(getListValVarY x(0))
		call(y(121) 2)
		move(y(64) x(1))
		putConstant(getListValVarG x(0))
		call(y(121) 2)
		move(y(223) x(1))
		putConstant(unifyVariableX x(0))
		call(y(121) 2)
		move(y(224) x(1))
		putConstant(unifyVariableY x(0))
		call(y(121) 2)
		move(y(222) x(1))
		putConstant(unifyVariableG x(0))
		call(y(121) 2)
		move(y(220) x(1))
		putConstant(unifyValueX x(0))
		call(y(121) 2)
		move(y(221) x(1))
		putConstant(unifyValueY x(0))
		call(y(121) 2)
		move(y(219) x(1))
		putConstant(unifyValueG x(0))
		call(y(121) 2)
		move(y(214) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(121) 2)
		move(y(215) x(1))
		putConstant(unifyValVarXY x(0))
		call(y(121) 2)
		move(y(213) x(1))
		putConstant(unifyValVarXG x(0))
		call(y(121) 2)
		move(y(217) x(1))
		putConstant(unifyValVarYX x(0))
		call(y(121) 2)
		move(y(218) x(1))
		putConstant(unifyValVarYY x(0))
		call(y(121) 2)
		move(y(216) x(1))
		putConstant(unifyValVarYG x(0))
		call(y(121) 2)
		move(y(211) x(1))
		putConstant(unifyValVarGX x(0))
		call(y(121) 2)
		move(y(212) x(1))
		putConstant(unifyValVarGY x(0))
		call(y(121) 2)
		move(y(210) x(1))
		putConstant(unifyValVarGG x(0))
		call(y(121) 2)
		move(y(209) x(1))
		putConstant('unifyNumber' x(0))
		call(y(121) 2)
		move(y(208) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(121) 2)
		move(y(225) x(1))
		putConstant('unifyVoid' x(0))
		call(y(121) 2)
		move(y(68) x(1))
		putConstant(getLiteralX x(0))
		call(y(121) 2)
		move(y(69) x(1))
		putConstant(getLiteralY x(0))
		call(y(121) 2)
		move(y(67) x(1))
		putConstant(getLiteralG x(0))
		call(y(121) 2)
		move(y(71) x(1))
		putConstant(getNumberX x(0))
		call(y(121) 2)
		move(y(72) x(1))
		putConstant(getNumberY x(0))
		call(y(121) 2)
		move(y(70) x(1))
		putConstant(getNumberG x(0))
		call(y(121) 2)
		move(y(2) x(1))
		putConstant('allocateL' x(0))
		call(y(121) 2)
		move(y(3) x(1))
		putConstant('allocateL1' x(0))
		call(y(121) 2)
		move(y(5) x(1))
		putConstant('allocateL2' x(0))
		call(y(121) 2)
		move(y(6) x(1))
		putConstant('allocateL3' x(0))
		call(y(121) 2)
		move(y(7) x(1))
		putConstant('allocateL4' x(0))
		call(y(121) 2)
		move(y(8) x(1))
		putConstant('allocateL5' x(0))
		call(y(121) 2)
		move(y(9) x(1))
		putConstant('allocateL6' x(0))
		call(y(121) 2)
		move(y(10) x(1))
		putConstant('allocateL7' x(0))
		call(y(121) 2)
		move(y(11) x(1))
		putConstant('allocateL8' x(0))
		call(y(121) 2)
		move(y(12) x(1))
		putConstant('allocateL9' x(0))
		call(y(121) 2)
		move(y(4) x(1))
		putConstant('allocateL10' x(0))
		call(y(121) 2)
		move(y(34) x(1))
		putConstant('deAllocateL' x(0))
		call(y(121) 2)
		move(y(35) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(121) 2)
		move(y(37) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(121) 2)
		move(y(38) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(121) 2)
		move(y(39) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(121) 2)
		move(y(40) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(121) 2)
		move(y(41) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(121) 2)
		move(y(42) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(121) 2)
		move(y(43) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(121) 2)
		move(y(44) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(121) 2)
		move(y(36) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(121) 2)
		move(y(59) x(1))
		putConstant('genCall' x(0))
		call(y(121) 2)
		move(y(19) x(1))
		putConstant(callX x(0))
		call(y(121) 2)
		move(y(20) x(1))
		putConstant(callY x(0))
		call(y(121) 2)
		move(y(18) x(1))
		putConstant(callG x(0))
		call(y(121) 2)
		move(y(175) x(1))
		putConstant(tailCallX x(0))
		call(y(121) 2)
		move(y(176) x(1))
		putConstant(tailCallY x(0))
		call(y(121) 2)
		move(y(174) x(1))
		putConstant(tailCallG x(0))
		call(y(121) 2)
		move(y(106) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(121) 2)
		move(y(60) x(1))
		putConstant('genFastCall' x(0))
		call(y(121) 2)
		move(y(54) x(1))
		putConstant('fastCall' x(0))
		call(y(121) 2)
		move(y(55) x(1))
		putConstant('fastTailCall' x(0))
		call(y(121) 2)
		move(y(156) x(1))
		putConstant(sendMsgX x(0))
		call(y(121) 2)
		move(y(157) x(1))
		putConstant(sendMsgY x(0))
		call(y(121) 2)
		move(y(155) x(1))
		putConstant(sendMsgG x(0))
		call(y(121) 2)
		move(y(178) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(121) 2)
		move(y(179) x(1))
		putConstant(tailSendMsgY x(0))
		call(y(121) 2)
		move(y(177) x(1))
		putConstant(tailSendMsgG x(0))
		call(y(121) 2)
		move(y(14) x(1))
		putConstant(applMethX x(0))
		call(y(121) 2)
		move(y(15) x(1))
		putConstant(applMethY x(0))
		call(y(121) 2)
		move(y(13) x(1))
		putConstant(applMethG x(0))
		call(y(121) 2)
		move(y(172) x(1))
		putConstant(tailApplMethX x(0))
		call(y(121) 2)
		move(y(173) x(1))
		putConstant(tailApplMethY x(0))
		call(y(121) 2)
		move(y(171) x(1))
		putConstant(tailApplMethG x(0))
		call(y(121) 2)
		move(y(79) x(1))
		putConstant('getSelf' x(0))
		call(y(121) 2)
		move(y(160) x(1))
		putConstant('setSelf' x(0))
		call(y(121) 2)
		move(y(105) x(1))
		putConstant('lockThread' x(0))
		call(y(121) 2)
		move(y(96) x(1))
		putConstant('inlineAt' x(0))
		call(y(121) 2)
		move(y(95) x(1))
		putConstant('inlineAssign' x(0))
		call(y(121) 2)
		move(y(17) x(1))
		putConstant('branch' x(0))
		call(y(121) 2)
		move(y(226) x(1))
		putConstant('wait' x(0))
		call(y(121) 2)
		move(y(227) x(1))
		putConstant('waitTop' x(0))
		call(y(121) 2)
		move(y(16) x(1))
		putConstant('ask' x(0))
		call(y(121) 2)
		move(y(25) x(1))
		putConstant('createCond' x(0))
		call(y(121) 2)
		move(y(27) x(1))
		putConstant('createOr' x(0))
		call(y(121) 2)
		move(y(26) x(1))
		putConstant('createEnumOr' x(0))
		call(y(121) 2)
		move(y(24) x(1))
		putConstant('createChoice' x(0))
		call(y(121) 2)
		move(y(22) x(1))
		putConstant('clause' x(0))
		call(y(121) 2)
		move(y(49) x(1))
		putConstant('emptyClause' x(0))
		call(y(121) 2)
		move(y(198) x(1))
		putConstant('thread' x(0))
		call(y(121) 2)
		move(y(52) x(1))
		putConstant('exHandler' x(0))
		call(y(121) 2)
		move(y(143) x(1))
		putConstant('popEx' x(0))
		call(y(121) 2)
		move(y(154) x(1))
		putConstant('return' x(0))
		call(y(121) 2)
		move(y(77) x(1))
		putConstant(getReturnX x(0))
		call(y(121) 2)
		move(y(78) x(1))
		putConstant(getReturnY x(0))
		call(y(121) 2)
		move(y(76) x(1))
		putConstant(getReturnG x(0))
		call(y(121) 2)
		move(y(57) x(1))
		putConstant(funReturnX x(0))
		call(y(121) 2)
		move(y(58) x(1))
		putConstant(funReturnY x(0))
		call(y(121) 2)
		move(y(56) x(1))
		putConstant(funReturnG x(0))
		call(y(121) 2)
		move(y(142) x(1))
		putConstant('nextClause' x(0))
		call(y(121) 2)
		move(y(103) x(1))
		putConstant('lastClause' x(0))
		call(y(121) 2)
		move(y(168) x(1))
		putConstant('shallowGuard' x(0))
		call(y(121) 2)
		move(y(169) x(1))
		putConstant('shallowThen' x(0))
		call(y(121) 2)
		move(y(190) x(1))
		putConstant(testLiteralX x(0))
		call(y(121) 2)
		move(y(191) x(1))
		putConstant(testLiteralY x(0))
		call(y(121) 2)
		move(y(189) x(1))
		putConstant(testLiteralG x(0))
		call(y(121) 2)
		move(y(193) x(1))
		putConstant(testNumberX x(0))
		call(y(121) 2)
		move(y(194) x(1))
		putConstant(testNumberY x(0))
		call(y(121) 2)
		move(y(192) x(1))
		putConstant(testNumberG x(0))
		call(y(121) 2)
		move(y(196) x(1))
		putConstant(testRecordX x(0))
		call(y(121) 2)
		move(y(197) x(1))
		putConstant(testRecordY x(0))
		call(y(121) 2)
		move(y(195) x(1))
		putConstant(testRecordG x(0))
		call(y(121) 2)
		move(y(187) x(1))
		putConstant(testListX x(0))
		call(y(121) 2)
		move(y(188) x(1))
		putConstant(testListY x(0))
		call(y(121) 2)
		move(y(186) x(1))
		putConstant(testListG x(0))
		call(y(121) 2)
		move(y(182) x(1))
		putConstant(testBoolX x(0))
		call(y(121) 2)
		move(y(183) x(1))
		putConstant(testBoolY x(0))
		call(y(121) 2)
		move(y(181) x(1))
		putConstant(testBoolG x(0))
		call(y(121) 2)
		move(y(108) x(1))
		putConstant(matchX x(0))
		call(y(121) 2)
		move(y(109) x(1))
		putConstant(matchY x(0))
		call(y(121) 2)
		move(y(107) x(1))
		putConstant(matchG x(0))
		call(y(121) 2)
		move(y(90) x(1))
		putConstant(getVariableX x(0))
		call(y(121) 2)
		move(y(91) x(1))
		putConstant(getVariableY x(0))
		call(y(121) 2)
		move(y(89) x(1))
		putConstant(getVariableG x(0))
		call(y(121) 2)
		move(y(84) x(1))
		putConstant(getVarVarXX x(0))
		call(y(121) 2)
		move(y(85) x(1))
		putConstant(getVarVarXY x(0))
		call(y(121) 2)
		move(y(83) x(1))
		putConstant(getVarVarXG x(0))
		call(y(121) 2)
		move(y(87) x(1))
		putConstant(getVarVarYX x(0))
		call(y(121) 2)
		move(y(88) x(1))
		putConstant(getVarVarYY x(0))
		call(y(121) 2)
		move(y(86) x(1))
		putConstant(getVarVarYG x(0))
		call(y(121) 2)
		move(y(81) x(1))
		putConstant(getVarVarGX x(0))
		call(y(121) 2)
		move(y(82) x(1))
		putConstant(getVarVarGY x(0))
		call(y(121) 2)
		move(y(80) x(1))
		putConstant(getVarVarGG x(0))
		call(y(121) 2)
		move(y(92) x(1))
		putConstant('getVoid' x(0))
		call(y(121) 2)
		move(y(45) x(1))
		putConstant('debugEntry' x(0))
		call(y(121) 2)
		move(y(46) x(1))
		putConstant('debugExit' x(0))
		call(y(121) 2)
		move(y(93) x(1))
		putConstant('globalVarname' x(0))
		call(y(121) 2)
		move(y(104) x(1))
		putConstant('localVarname' x(0))
		call(y(121) 2)
		move(y(23) x(1))
		putConstant('clearY' x(0))
		call(y(121) 2)
		move(y(144) x(1))
		putConstant('profileProc' x(0))
		call(y(121) 2)
		move(y(21) x(1))
		putConstant('callBI' x(0))
		call(y(121) 2)
		move(y(101) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(121) 2)
		move(y(99) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(121) 2)
		move(y(100) x(1))
		putConstant('inlinePlus' x(0))
		call(y(121) 2)
		move(y(98) x(1))
		putConstant('inlineMinus' x(0))
		call(y(121) 2)
		move(y(97) x(1))
		putConstant('inlineDot' x(0))
		call(y(121) 2)
		move(y(102) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(121) 2)
		move(y(180) x(1))
		putConstant('testBI' x(0))
		call(y(121) 2)
		move(y(185) x(1))
		putConstant('testLT' x(0))
		call(y(121) 2)
		move(y(184) x(1))
		putConstant('testLE' x(0))
		call(y(121) 2)
lbl(263754)	definition(x(7) 267523 pid('StoreInstr' 3 pos('./compiler-Opcodes.oz' 537 0) nil 7) <Q: 1558> [y(51) y(125) y(170) y(53) y(3) y(5) y(6) y(7) y(8) y(9) y(10) y(11) y(12) y(4) y(34) y(35) y(37) y(38) y(39) y(40) y(41) y(42) y(43) y(44) y(36) y(226) y(227) y(16) y(27) y(26) y(24) y(22) y(49) y(143) y(154) y(103) y(169) y(144) y(124) y(45) y(127) y(126) y(47) y(131) y(133) y(48) y(50) y(1) y(138) y(141) y(139) y(140) y(132) y(129) y(158) y(159) y(167) y(130) y(209) y(208) y(225) y(2) y(59) y(106) y(60) y(54) y(55) y(135) y(79) y(160) y(105) y(96) y(128) y(95) y(17) y(25) y(198) y(52) y(142) y(168) y(92) y(46) y(93) y(104) y(23) y(21) y(134) y(101) y(99) y(100) y(98) y(97) y(102) y(180) y(185) y(184)])
		match(x(0) ht(267508 [onScalar('endOfFile' 263763) onScalar('skip' 263772) onScalar('failure' 263781) onScalar('allocateL1' 263790) onScalar('allocateL2' 263799) onScalar('allocateL3' 263808) onScalar('allocateL4' 263817) onScalar('allocateL5' 263826) onScalar('allocateL6' 263835) onScalar('allocateL7' 263844) onScalar('allocateL8' 263853) onScalar('allocateL9' 263862) onScalar('allocateL10' 263871) onScalar('deAllocateL' 263880) onScalar('deAllocateL1' 263889) onScalar('deAllocateL2' 263898) onScalar('deAllocateL3' 263907) onScalar('deAllocateL4' 263916) onScalar('deAllocateL5' 263925) onScalar('deAllocateL6' 263934) onScalar('deAllocateL7' 263943) onScalar('deAllocateL8' 263952) onScalar('deAllocateL9' 263961) onScalar('deAllocateL10' 263970) onScalar('wait' 263979) onScalar('waitTop' 263988) onScalar('ask' 263997) onScalar('createOr' 264006) onScalar('createEnumOr' 264015) onScalar('createChoice' 264024) onScalar('clause' 264033) onScalar('emptyClause' 264042) onScalar('popEx' 264051) onScalar('return' 264060) onScalar('lastClause' 264069) onScalar('shallowThen' 264078) onScalar('profileProc' 264087) onRecord('debugEntry' 4 264096) onRecord('definition' 5 264158) onRecord('definitionCopy' 5 264225) onRecord('endDefinition' 1 264292) onRecord('move' 2 264321) onRecord('moveMoveXYXY' 4 264379) onRecord('moveMoveYXYX' 4 264430) onRecord('moveMoveXYYX' 4 264481) onRecord('moveMoveYXXY' 4 264532) onRecord('createVariable' 1 264583) onRecord('createVariableMove' 2 264624) onRecord('unify' 2 264674) onRecord('putRecord' 3 264732) onRecord('putList' 1 264792) onRecord('putConstant' 2 264833) onRecord('setVariable' 1 264883) onRecord('setValue' 1 264924) onRecord('setConstant' 1 264965) onRecord('setPredicateRef' 1 264988) onRecord('setVoid' 1 265011) onRecord('getRecord' 3 265034) onRecord('getList' 1 265094) onRecord('getListValVar' 3 265135) onRecord('unifyVariable' 1 265195) onRecord('unifyValue' 1 265236) onRecord('unifyValVar' 2 265277) onRecord('unifyNumber' 1 265335) onRecord('unifyLiteral' 1 265358) onRecord('unifyVoid' 1 265381) onRecord('getLiteral' 2 265404) onRecord('getNumber' 2 265454) onRecord('allocateL' 1 265504) onRecord('genCall' 2 265527) onRecord('call' 2 265559) onRecord('tailCall' 2 265609) onRecord('marshalledFastCall' 2 265659) onRecord('genFastCall' 2 265691) onRecord('fastCall' 2 265723) onRecord('fastTailCall' 2 265755) onRecord('sendMsg' 4 265787) onRecord('tailSendMsg' 4 265856) onRecord('applMeth' 2 265925) onRecord('tailApplMeth' 2 265975) onRecord('getSelf' 1 266025) onRecord('setSelf' 1 266048) onRecord('lockThread' 2 266071) onRecord('inlineAt' 3 266109) onRecord('inlineAssign' 3 266151) onRecord('branch' 1 266193) onRecord('createCond' 1 266222) onRecord('thread' 1 266251) onRecord('exHandler' 1 266280) onRecord('getReturn' 1 266309) onRecord('funReturn' 1 266350) onRecord('nextClause' 1 266391) onRecord('shallowGuard' 1 266420) onRecord('testLiteral' 3 266449) onRecord('testNumber' 3 266514) onRecord('testRecord' 4 266579) onRecord('testList' 2 266653) onRecord('testBool' 3 266708) onRecord('match' 2 266776) onRecord('getVariable' 1 266831) onRecord('getVarVar' 2 266872) onRecord('getVoid' 1 266930) onRecord('debugExit' 4 266953) onRecord('globalVarname' 1 267004) onRecord('localVarname' 1 267027) onRecord('clearY' 1 267050) onRecord('callBI' 2 267073) onRecord('inlinePlus1' 2 267105) onRecord('inlineMinus1' 2 267137) onRecord('inlinePlus' 3 267169) onRecord('inlineMinus' 3 267211) onRecord('inlineDot' 4 267253) onRecord('inlineUparrow' 3 267304) onRecord('testBI' 3 267346) onRecord('testLT' 4 267394) onRecord('testLE' 4 267451)]))
lbl(263763)	move(x(1) x(0))
		move(g(0) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263772)	move(x(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263781)	move(x(1) x(0))
		move(g(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263790)	move(x(1) x(0))
		move(g(4) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263799)	move(x(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263808)	move(x(1) x(0))
		move(g(6) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263817)	move(x(1) x(0))
		move(g(7) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263826)	move(x(1) x(0))
		move(g(8) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263835)	move(x(1) x(0))
		move(g(9) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263844)	move(x(1) x(0))
		move(g(10) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263853)	move(x(1) x(0))
		move(g(11) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263862)	move(x(1) x(0))
		move(g(12) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263871)	move(x(1) x(0))
		move(g(13) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263880)	move(x(1) x(0))
		move(g(14) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263889)	move(x(1) x(0))
		move(g(15) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263898)	move(x(1) x(0))
		move(g(16) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263907)	move(x(1) x(0))
		move(g(17) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263916)	move(x(1) x(0))
		move(g(18) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263925)	move(x(1) x(0))
		move(g(19) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263934)	move(x(1) x(0))
		move(g(20) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263943)	move(x(1) x(0))
		move(g(21) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263952)	move(x(1) x(0))
		move(g(22) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263961)	move(x(1) x(0))
		move(g(23) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263970)	move(x(1) x(0))
		move(g(24) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263979)	move(x(1) x(0))
		move(g(25) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263988)	move(x(1) x(0))
		move(g(26) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263997)	move(x(1) x(0))
		move(g(27) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264006)	move(x(1) x(0))
		move(g(28) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264015)	move(x(1) x(0))
		move(g(29) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264024)	move(x(1) x(0))
		move(g(30) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264033)	move(x(1) x(0))
		move(g(31) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264042)	move(x(1) x(0))
		move(g(32) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264051)	move(x(1) x(0))
		move(g(33) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264060)	move(x(1) x(0))
		move(g(34) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264069)	move(x(1) x(0))
		move(g(35) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264078)	move(x(1) x(0))
		move(g(36) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264087)	move(x(1) x(0))
		move(g(37) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264096)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genCall(gci(g(38) false '' false 3) 0)
		move(y(4) x(0))
		move(g(39) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(264158)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(42) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264225)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(45) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264292)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(46) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(264321)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'move' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		callBI('Record.label' [x(2)]#[x(4)])
		callBI('Record.\'.\'' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264379)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(48) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264430)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(49) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264481)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(50) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264532)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(51) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264583)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariable' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264624)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariableMove' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(264674)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unify' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		callBI('Record.label' [x(2)]#[x(4)])
		callBI('Record.\'.\'' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264732)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putRecord' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(264792)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putList' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264833)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putConstant' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264883)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setVariable' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264924)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setValue' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264965)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(54) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(264988)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(55) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(43) false '' true 2) 0)
lbl(265011)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(56) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265034)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getRecord' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(265094)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getList' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265135)	allocateL4
		getVarVar(y(0) x(0))
		getVariable(y(1))
		move(g(47) x(2))
		inlineDot(x(2) 'getListValVar' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(265195)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyVariable' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265236)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyValue' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265277)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unifyValVar' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		callBI('Record.label' [x(2)]#[x(4)])
		callBI('Record.\'.\'' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265335)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(58) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(41) false '' true 2) 0)
lbl(265358)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(59) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(40) false '' true 2) 0)
lbl(265381)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(60) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265404)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getLiteral' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265454)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getNumber' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265504)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(61) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265527)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(62) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1556> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265559)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'call' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265609)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailCall' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265659)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(63) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265691)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(64) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265723)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(65) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265755)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(66) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265787)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'sendMsg' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(265856)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'tailSendMsg' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(265925)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'applMeth' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265975)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailApplMeth' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266025)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(68) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266048)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(69) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266071)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(g(70) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(266109)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(71) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266151)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(73) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266193)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(74) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266222)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(75) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266251)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(76) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266280)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(77) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266309)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getReturn' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266350)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'funReturn' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266391)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(78) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266420)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(79) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266449)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testLiteral' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266514)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testNumber' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266579)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(47) x(3))
		inlineDot(x(3) 'testRecord' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(0) y(5) y(3) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(266653)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'testList' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1553> 7)
lbl(266708)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testBool' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266776)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'match' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1555> 7)
lbl(266831)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getVariable' x(3) cache)
		callBI('Record.label' [x(0)]#[x(4)])
		callBI('Record.\'.\'' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266872)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'getVarVar' x(4) cache)
		callBI('Record.label' [x(0)]#[x(5)])
		callBI('Record.\'.\'' [x(4) x(5)]#[x(6)])
		callBI('Record.label' [x(2)]#[x(4)])
		callBI('Record.\'.\'' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266930)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(80) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(266953)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(81) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(267004)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(82) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267027)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(83) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267050)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(84) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1552> 5)
lbl(267073)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(85) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(86) false '' true 2) 0)
lbl(267105)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(87) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267137)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(88) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267169)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(89) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267211)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(90) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267253)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(91) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(267304)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(92) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267346)	allocateL5
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(3) x(0))
		move(g(93) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(86) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(267394)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(94) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267451)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(95) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267508)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1180)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(263754)
lbl(267523)	move(y(117) x(0))
		inlineDot(x(0) isUniqueName x(7) cache)
		inlineDot(x(0) isCopyableName x(8) cache)
		inlineDot(x(0) isCopyablePredicateRef x(9) cache)
lbl(267544)	definition(x(10) 267639 pid('FindProcSub' 3 pos('./compiler/Assembler.oz' 153 5) nil 7) <Q: 1559> [y(116) y(119)])
		match(x(0) ht(267624 [onScalar(nil 267553) onRecord('|' 2 267577)]))
lbl(267553)	move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(267577)	getVarVar(x(0) x(3))
		move(g(1) x(4))
		callBI('Record.\'.\'' [x(4) x(0)]#[x(5)])
		testBI('Value.\'==\'' [x(5) x(1)]#[x(6)] 267618)
		getRecord('#' 3 x(2))
		unifyLiteral('<R: ')
		unifyVariable(x(3))
		unifyLiteral('>')
		move(g(0) x(1))
		inlineDot(x(1) valueToVirtualString x(5) cache)
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(5) 4)
lbl(267618)	move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
lbl(267624)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(162)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267544)
lbl(267639)	definition(x(10) 267665 pid('FindProc' 2 pos('./compiler/Assembler.oz' 165 5) nil 4) <Q: 1560> [y(119)])
		move(g(0) x(2))
		callBI('Record.arity' [x(2)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
		endDefinition(267639)
lbl(267665)	definition(x(10) 267735 pid('ListToVirtualString' 4 pos('./compiler/Assembler.oz' 170 2) nil 4) <Q: 1561> nil)
		match(x(0) ht(267720 [onScalar(nil 267674) onRecord('|' 2 267678)]))
lbl(267674)	unify(x(3) x(1))
		return
lbl(267678)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' ')
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<Q: 1561> 9)
lbl(267720)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(175)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267665)
lbl(267735)	definition(x(10) 267813 pid('TupleSub' 6 pos('./compiler/Assembler.oz' 178 2) nil 8) <Q: 1562> nil)
		testLE(x(0) x(1) x(6) 267807)
		allocateL7
		inlinePlus1(x(0) x(6))
		callBI('Record.\'.\'' [x(3) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(0))
		move(y(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(1))
		setConstant(' ')
		setValue(y(6))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		move(y(4) x(5))
		deAllocateL7
		genFastCall(<Q: 1562> 13)
lbl(267807)	unify(x(5) x(2))
		return
		endDefinition(267735)
lbl(267813)	definition(x(10) 267888 pid('TupleToVirtualString' 3 pos('./compiler/Assembler.oz' 187 2) nil 6) <Q: 1563> nil)
		allocateL6
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyLiteral(')')
		callBI('Record.width' [x(0)]#[x(2)])
		callBI('Record.label' [x(0)]#[x(3)])
		inlineDot(x(0) 1 x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(4))
		setConstant('(')
		setValue(y(5))
		moveMoveYXYX(y(3) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(0) x(5))
		putConstant(2 x(0))
		deAllocateL6
		genFastCall(<Q: 1562> 13)
		endDefinition(267813)
lbl(267888)	definition(x(10) 268339 pid('MyValueToVirtualString' 3 pos('./compiler/Assembler.oz' 193 2) nil 5) <Q: 1564> [x(7) y(116) x(8) y(0) g(2) g(3) x(9) g(4) g(1) g(5)])
		testBI('Name.is' [x(0)]#[x(3)] 268042)
		match(x(0) ht(267913 [onScalar(true 267901) onScalar(false 267905) onScalar(unit 267909)]))
lbl(267901)	getLiteral('true' x(2))
		return
lbl(267905)	getLiteral('false' x(2))
		return
lbl(267909)	getLiteral('unit' x(2))
		return
lbl(267913)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(2) 267955 268031)
		getRecord('#' 3 y(1))
		unifyLiteral('<U: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(267955)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		testBool(y(2) 267994 268020)
		getRecord('#' 3 y(1))
		unifyLiteral('<M: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(267994)	getRecord('#' 3 y(1))
		unifyLiteral('<N: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(268020)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(203)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268031)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(199)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268042)	testBI('Atom.is' [x(0)]#[x(3)] 268120)
		move(g(3) x(1))
		testBI('Value.hasFeature' [x(1) x(0)]#[x(3)] 268064)
		getRecord('#' 3 x(2))
		unifyLiteral('\'')
		unifyValue(x(0))
		unifyLiteral('\'')
		return
lbl(268064)	match(x(0) ht(268099 [onScalar('lbl' 268067) onScalar('pid' 268071) onScalar('ht' 268075) onScalar('onScalar' 268079) onScalar('onRecord' 268083) onScalar('gci' 268087) onScalar('ami' 268091) onScalar('pos' 268095)]))
lbl(268067)	getLiteral('\'lbl\'' x(2))
		return
lbl(268071)	getLiteral('\'pid\'' x(2))
		return
lbl(268075)	getLiteral('\'ht\'' x(2))
		return
lbl(268079)	getLiteral('\'onScalar\'' x(2))
		return
lbl(268083)	getLiteral('\'onRecord\'' x(2))
		return
lbl(268087)	getLiteral('\'gci\'' x(2))
		return
lbl(268091)	getLiteral('\'ami\'' x(2))
		return
lbl(268095)	getLiteral('\'pos\'' x(2))
		return
lbl(268099)	move(g(1) x(3))
		inlineDot(x(3) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(268120)	testBI('Procedure.is' [x(0)]#[x(3)] 268130)
		move(x(2) x(1))
		genFastCall(<Q: 1560> 5)
lbl(268130)	testBI('ForeignPointer.is' [x(0)]#[x(3)] 268227)
		allocateL5
		callBI('ForeignPointer.toInt' [x(0)]#[x(3)])
		getRecord('#' 3 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('>')
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(6) false '' false 2) 0)
		testBool(y(4) 268168 268173)
		getLiteral('<Q: ' y(0))
		branch(268184)
lbl(268168)	getLiteral('<P: ' y(0))
		branch(268184)
lbl(268173)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(231)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268184)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		putConstant(unit x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 268222)
lbl(268199)	putConstant(0 x(2))
		callBI('Dictionary.get' [x(0) x(2)]#[x(3)])
		inlinePlus1(x(3) x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(x(2) y(1))
		deAllocateL5
		return
lbl(268222)	unify(y(1) x(3))
		deAllocateL5
		return
lbl(268227)	match(x(0) ht(268309 [onRecord('|' 2 268230) onRecord('#' 2 268271)]))
lbl(268230)	allocateL4
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(y(1))
		unifyLiteral(']')
		move(x(1) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 2 x(1))
		setConstant('[')
		setValue(y(3))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1561> 9)
lbl(268271)	allocateL3
		getVarVar(x(0) y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getList(x(3))
		unifyNumber(35)
		unifyLiteral(nil)
		move(x(1) y(2))
		genFastCall(<Q: 1564> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1564> 7)
lbl(268309)	testBI('Tuple.is' [x(0)]#[x(3)] 268316)
		genFastCall(<Q: 1563> 7)
lbl(268316)	move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(1000 x(1))
		putConstant(1000 x(2))
		tailCall(x(4) 4)
		endDefinition(267888)
lbl(268339)	definition(x(7) 268358 pid('InstrToVirtualString' 3 pos('./compiler/Assembler.oz' 259 2) nil 4) <Q: 1565> nil)
		testBI('Atom.is' [x(0)]#[x(3)] 268353)
		unify(x(2) x(0))
		return
lbl(268353)	genFastCall(<Q: 1563> 7)
		endDefinition(268339)
lbl(268358)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: InstrsHd> <M: InstrsTl> <M: LabelDict> <M: Size>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Profile> debugInfoControl] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(268384)	definition(x(7) 268447 pid('AssemblerClass,init/fast' 2 pos('./compiler/Assembler.oz' 272 2) nil 5) <Q: 1566> [y(94)])
		inlineAt(<M: InstrsTl> x(2) cache)
		putList(x(3))
		setConstant('skip')
		setValue(x(2))
		inlineAssign(<M: InstrsHd> x(3) cache)
		callBI('Dictionary.new' nil#[x(2)])
		inlineAssign(<M: LabelDict> x(2) cache)
		move(g(0) x(2))
		inlineAssign(<M: Size> x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: Profile> x(4) cache)
		unify(x(4) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoControl x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(268384)
lbl(268447)	definition(x(8) 268482 pid('AssemblerClass,init/slow' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1566> 5)
		endDefinition(268447)
lbl(268482)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(268492)	definition(x(7) 268517 pid('AssemblerClass,newLabel/fast' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) <Q: 1567> [g(5)])
		callBI('Name.new' nil#[x(1)])
		unify(x(1) x(0))
		inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268492)
lbl(268517)	definition(x(8) 268543 pid('AssemblerClass,newLabel/slow' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1567> 3)
		endDefinition(268517)
lbl(268543)	putRecord('#' [1 2 fast] x(10))
		setConstant(newLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268553)	definition(x(7) 268582 pid('AssemblerClass,declareLabel/fast' 1 pos('./compiler/Assembler.oz' 285 2) nil 3) <Q: 1568> [g(6) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268569)
		return
lbl(268569)	inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268553)
lbl(268582)	definition(x(8) 268608 pid('AssemblerClass,declareLabel/slow' 1 pos('./compiler/Assembler.oz' 285 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1568> 3)
		endDefinition(268582)
lbl(268608)	putRecord('#' [1 2 fast] x(11))
		setConstant(declareLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268618)	definition(x(7) 268638 pid('AssemblerClass,isLabelUsed/fast' 2 pos('./compiler/Assembler.oz' 290 2) nil 4) <Q: 1569> [g(6)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(268618)
lbl(268638)	definition(x(8) 268673 pid('AssemblerClass,isLabelUsed/slow' 1 pos('./compiler/Assembler.oz' 290 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1569> 5)
		endDefinition(268638)
lbl(268673)	putRecord('#' [1 2 fast] x(12))
		setConstant(isLabelUsed)
		setValue(x(8))
		setValue(x(7))
lbl(268683)	definition(x(7) 268731 pid('AssemblerClass,setLabel/fast' 1 pos('./compiler/Assembler.oz' 293 2) nil 3) <Q: 1570> [g(6) g(1) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268715)
		inlineAt(<M: LabelDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(2))
		return
lbl(268715)	inlineAt(<M: LabelDict> x(1) cache)
		inlineAt(<M: Size> x(2) cache)
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268683)
lbl(268731)	definition(x(8) 268757 pid('AssemblerClass,setLabel/slow' 1 pos('./compiler/Assembler.oz' 293 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1570> 3)
		endDefinition(268731)
lbl(268757)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268767)	definition(x(7) 268837 pid('AssemblerClass,checkLabels/fast' 0 pos('./compiler/Assembler.oz' 300 2) nil 3) <Q: 1571> [g(7) g(8)])
		inlineAt(<M: LabelDict> x(0) cache)
		callBI('Dictionary.entries' [x(0)]#[x(2)])
lbl(268781)	definition(x(1) 268829 pid('' 1 pos('./compiler/Assembler.oz' 302 6) nil 3) unit [g(1)])
		shallowGuard(268816)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(268797)	shallowThen
		testBI('Value.isFree' [x(2)]#[x(0)] 268815)
		putRecord(compiler 3 x(0))
		setConstant(assembler)
		setConstant(undeclaredLabel)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268815)	return
lbl(268816)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(268781)
lbl(268829)	move(x(2) x(0))
		genFastCall(<P: 34> 5)
		endDefinition(268767)
lbl(268837)	definition(x(8) 268851 pid('AssemblerClass,checkLabels/slow' 1 pos('./compiler/Assembler.oz' 300 2) nil 1) unit nil)
		getLiteral(checkLabels x(0))
		genFastCall(<Q: 1571> 1)
		endDefinition(268837)
lbl(268851)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkLabels)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(268863)	definition(x(7) 269268 pid('AssemblerClass,append/fast' 1 pos('./compiler/Assembler.oz' 308 2) nil 5) <Q: 1572> [y(1) y(0)])
		allocateL2
		move(x(0) y(0))
		match(y(0) ht(269152 [onRecord('definition' 5 268876) onRecord('definitionCopy' 5 268888) onRecord('endDefinition' 1 268900) onRecord('branch' 1 268910) onRecord('thread' 1 268920) onRecord('exHandler' 1 268930) onRecord('createCond' 1 268940) onRecord('nextClause' 1 268950) onRecord('shallowGuard' 1 268960) onRecord('testBI' 3 268970) onRecord('testLT' 4 268982) onRecord('testLE' 4 268994) onRecord('testLiteral' 3 269006) onRecord('testNumber' 3 269018) onRecord('testBool' 3 269030) onRecord('testRecord' 4 269049) onRecord('testList' 2 269061) onRecord('match' 2 269073) onRecord('lockThread' 2 269144)]))
lbl(268876)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268888)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268900)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268910)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268920)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268930)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268940)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268950)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268960)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268970)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268982)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(268994)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269006)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269018)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269030)	getVoid(1)
		getVarVar(x(1) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269049)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269061)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269152)
lbl(269073)	getVoid(1)
		getVariable(x(1))
		getRecord('ht' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		getSelf(x(2))
lbl(269093)	definition(x(1) 269136 pid('' 1 pos('./compiler/Assembler.oz' 338 2) nil 3) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(269121 [onRecord('onScalar' 2 269107) onRecord('onRecord' 3 269114)]))
lbl(269107)	getVoid(1)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269114)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269121)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(342)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(269093)
lbl(269136)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(269152)
lbl(269144)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
lbl(269152)	putList(x(0))
		setValue(y(0))
		setVariable(x(1))
		inlineAt(<M: InstrsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: InstrsTl> x(1) cache)
		inlineAt(<M: Size> x(0) cache)
		move(y(0) x(1))
		callBI('Record.label' [x(1)]#[x(2)])
		move(g(1) x(3))
		callBI('Record.\'.\'' [x(3) x(2)]#[x(4)])
		inlinePlus(x(0) x(4) x(2))
		inlineAssign(<M: Size> x(2) cache)
		match(y(0) ht(269264 [onRecord('definition' 5 269200) onRecord('definitionCopy' 5 269232)]))
lbl(269200)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269219 269221)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269219)	deAllocateL2
		return
lbl(269221)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269232)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269251 269253)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269251)	deAllocateL2
		return
lbl(269253)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(355)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269264)	deAllocateL2
		return
		endDefinition(268863)
lbl(269268)	definition(x(8) 269294 pid('AssemblerClass,append/slow' 1 pos('./compiler/Assembler.oz' 308 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1572> 3)
		endDefinition(269268)
lbl(269294)	putRecord('#' [1 2 fast] x(15))
		setConstant(append)
		setValue(x(8))
		setValue(x(7))
lbl(269304)	definition(x(7) 269434 pid('AssemblerClass,output/fast' 1 pos('./compiler/Assembler.oz' 361 2) nil 6) <Q: 1573> [y(1) g(5) g(7)])
		allocateL3
		move(x(0) y(0))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		callBI('Dictionary.new' nil#[x(0)])
		callBI('Dictionary.new' nil#[x(1)])
		putConstant(0 x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(1) x(2) x(3)]#nil)
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.entries' [x(2)]#[x(3)])
lbl(269340)	definition(x(2) 269381 pid('' 1 pos('./compiler/Assembler.oz' 367 6) nil 3) unit [g(1) x(0)])
		shallowGuard(269368)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(269356)	shallowThen
		testBI('Value.isDet' [x(2)]#[x(0)] 269367)
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
lbl(269367)	return
lbl(269368)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(367)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(269340)
lbl(269381)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
		getRecord('#' 4 y(0))
		unifyLiteral('%% Code Size:\n')
		unifyVariable(x(5))
		unifyLiteral(' % words\n')
		unifyVariable(x(4))
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: InstrsHd> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		putConstant(0 x(3))
		deAllocateL3
		genCall(gci(g(0) true <M: OutputSub> true 5) 0)
		endDefinition(269304)
lbl(269434)	definition(x(8) 269460 pid('AssemblerClass,output/slow' 1 pos('./compiler/Assembler.oz' 361 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1573> 3)
		endDefinition(269434)
lbl(269460)	putRecord('#' [1 2 fast] x(16))
		setConstant(output)
		setValue(x(8))
		setValue(x(7))
lbl(269470)	definition(x(7) 269617 pid('AssemblerClass,OutputSub/fast' 5 pos('./compiler/Assembler.oz' 375 2) nil 9) <Q: 1574> [g(6) y(1) y(0)])
		match(x(0) ht(269602 [onScalar(nil 269479) onRecord('|' 2 269483)]))
lbl(269479)	getLiteral(nil x(4))
		return
lbl(269483)	allocateL8
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(0) y(4) x(5) y(5))
		createVariable(y(6))
		testBI('Dictionary.member' [x(1) x(3)]#[x(6)] 269538)
		getRecord('#' 4 y(6))
		unifyLiteral('lbl(')
		unifyValue(y(2))
		unifyLiteral(')')
		unifyVariable(x(6))
		putConstant(100 x(7))
		testLT(x(3) x(7) x(8) 269533)
		getLiteral('\t\t' x(6))
		branch(269541)
lbl(269533)	getLiteral('\t' x(6))
		branch(269541)
lbl(269538)	getLiteral('\t\t' y(6))
lbl(269541)	move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(1) true <M: TranslateInstrLabels> false 2) 0)
		getRecord('#' 4 y(3))
		unifyValVar(y(6) x(2))
		unifyLiteral('\n')
		unifyVariable(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		genFastCall(<Q: 1565> 6)
		move(y(4) x(0))
		callBI('Record.label' [x(0)]#[x(1)])
		move(g(2) x(0))
		callBI('Record.\'.\'' [x(0) x(1)]#[x(2)])
		move(y(2) x(1))
		inlinePlus(x(1) x(2) x(3))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL8
		genCall(gci(g(1) true <M: OutputSub> true 5) 0)
lbl(269602)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(269470)
lbl(269617)	definition(x(8) 269670 pid('AssemblerClass,OutputSub/slow' 1 pos('./compiler/Assembler.oz' 375 2) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1574> 11)
		endDefinition(269617)
lbl(269670)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputSub>)
		setValue(x(8))
		setValue(x(7))
lbl(269680)	definition(x(7) 269754 pid('AssemblerClass,load/fast' 2 pos('./compiler/Assembler.oz' 393 2) nil 3) <Q: 1575> [y(1) y(122) y(123)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		inlineAt(<M: Size> x(0) cache)
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		inlineAt(<M: InstrsHd> x(0) cache)
		getSelf(x(2))
lbl(269713)	definition(x(1) 269737 pid('' 1 pos('./compiler/Assembler.oz' 397 6) nil 3) unit [x(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: LabelDict> x(2) cache)
		move(g(1) x(1))
		genFastCall(<Q: 1558> 7)
		endDefinition(269713)
lbl(269737)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(2) false '' true 3) 0)
		endDefinition(269680)
lbl(269754)	definition(x(8) 269789 pid('AssemblerClass,load/slow' 1 pos('./compiler/Assembler.oz' 393 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1575> 5)
		endDefinition(269754)
lbl(269789)	putRecord('#' [1 2 fast] x(18))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(269799)	definition(x(7) 269819 pid('AssemblerClass,MarkEnd/fast' 0 pos('./compiler/Assembler.oz' 401 2) nil 2) <Q: 1576> nil)
		putConstant(nil x(0))
		inlineAt(<M: InstrsTl> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(269799)
lbl(269819)	definition(x(8) 269833 pid('AssemblerClass,MarkEnd/slow' 1 pos('./compiler/Assembler.oz' 401 2) nil 1) unit nil)
		getLiteral(<M: MarkEnd> x(0))
		genFastCall(<Q: 1576> 1)
		endDefinition(269819)
lbl(269833)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: MarkEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(269843)	definition(x(7) 270393 pid('AssemblerClass,TranslateInstrLabels/fast' 2 pos('./compiler/Assembler.oz' 405 2) nil 8) <Q: 1577> [g(1)])
		match(x(0) ht(270387 [onRecord('definition' 5 269852) onRecord('definitionCopy' 5 269883) onRecord('endDefinition' 1 269914) onRecord('branch' 1 269931) onRecord('thread' 1 269948) onRecord('exHandler' 1 269965) onRecord('createCond' 1 269982) onRecord('nextClause' 1 269999) onRecord('shallowGuard' 1 270016) onRecord('testBI' 3 270033) onRecord('testLT' 4 270057) onRecord('testLE' 4 270084) onRecord('testLiteral' 3 270111) onRecord('testNumber' 3 270135) onRecord('testRecord' 4 270159) onRecord('testList' 2 270186) onRecord('testBool' 3 270206) onRecord('match' 2 270238) onRecord('lockThread' 2 270367)]))
lbl(269852)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definition' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(269883)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definitionCopy' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(269914)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('endDefinition' 1 x(1))
		unifyValue(x(3))
		return
lbl(269931)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('branch' 1 x(1))
		unifyValue(x(3))
		return
lbl(269948)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('thread' 1 x(1))
		unifyValue(x(3))
		return
lbl(269965)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('exHandler' 1 x(1))
		unifyValue(x(3))
		return
lbl(269982)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('createCond' 1 x(1))
		unifyValue(x(3))
		return
lbl(269999)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('nextClause' 1 x(1))
		unifyValue(x(3))
		return
lbl(270016)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('shallowGuard' 1 x(1))
		unifyValue(x(3))
		return
lbl(270033)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testBI' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270057)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLT' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270084)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLE' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270111)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testLiteral' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270135)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testNumber' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270159)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testRecord' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270186)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(2)]#[x(4)])
		getRecord('testList' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(270206)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(3)]#[x(4)])
		getRecord('testBool' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		unifyValue(x(4))
		return
lbl(270238)	allocateL4
		getVarVar(y(0) x(3))
		getRecord('ht' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(4)])
		getSelf(x(5))
lbl(270260)	definition(x(6) 270333 pid('' 2 pos('./compiler/Assembler.oz' 461 6) nil 7) unit [x(5) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		match(x(0) ht(270318 [onRecord('onScalar' 2 270274) onRecord('onRecord' 3 270294)]))
lbl(270274)	getVarVar(x(0) x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(270294)	getVarVar(x(0) x(3))
		getVariable(x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270318)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(468)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270260)
lbl(270333)	moveMoveXYXY(x(1) y(1) x(4) y(2))
		move(x(3) x(0))
		move(x(6) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		getRecord('match' 2 y(1))
		unifyValVar(y(0) x(0))
		getRecord('ht' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(270367)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getRecord('lockThread' 2 x(1))
		unifyValue(x(4))
		unifyValue(x(2))
		return
lbl(270387)	unify(x(1) x(0))
		return
		endDefinition(269843)
lbl(270393)	definition(x(8) 270428 pid('AssemblerClass,TranslateInstrLabels/slow' 1 pos('./compiler/Assembler.oz' 405 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1577> 5)
		endDefinition(270393)
lbl(270428)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('AssemblerClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(270478)	definition(x(0) 270497 pid('RecordArityWidth' 2 pos('./compiler/Assembler.oz' 481 3) nil 3) <Q: 1578> nil)
		testBI('Int.is' [x(0)]#[x(2)] 270492)
		unify(x(1) x(0))
		return
lbl(270492)	genFastCall(<P: 24> 5)
		endDefinition(270478)
lbl(270497)	definition(x(0) 270553 pid('GetClears' 3 pos('./compiler/Assembler.oz' 487 3) nil 5) <Q: 1579> nil)
		match(x(0) ht(270538 [onScalar(nil 270506) onRecord('|' 2 270513)]))
lbl(270506)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(270513)	getVarVar(x(3) x(4))
		testRecord(x(3) clear 1 270531)
lbl(270521)	getListValVar(x(1) x(3) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1579> 7)
lbl(270531)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(270538)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(499)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270497)
lbl(270553)	definition(x(0) 270614 pid('SetVoids' 4 pos('./compiler/Assembler.oz' 502 3) nil 6) <Q: 1580> nil)
		match(x(0) ht(270599 [onScalar(nil 270562) onRecord('|' 2 270569)]))
lbl(270562)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270569)	getVarVar(x(4) x(5))
		testRecord(x(4) 'setVoid' 1 270592)
lbl(270577)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1580> 9)
lbl(270592)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270599)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(513)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270553)
lbl(270614)	definition(x(0) 270675 pid('UnifyVoids' 4 pos('./compiler/Assembler.oz' 516 3) nil 6) <Q: 1581> nil)
		match(x(0) ht(270660 [onScalar(nil 270623) onRecord('|' 2 270630)]))
lbl(270623)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270630)	getVarVar(x(4) x(5))
		testRecord(x(4) 'unifyVoid' 1 270653)
lbl(270638)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1581> 9)
lbl(270653)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270660)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(527)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270614)
lbl(270675)	definition(x(0) 270736 pid('GetVoids' 4 pos('./compiler/Assembler.oz' 530 3) nil 6) <Q: 1582> nil)
		match(x(0) ht(270721 [onScalar(nil 270684) onRecord('|' 2 270691)]))
lbl(270684)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270691)	getVarVar(x(4) x(5))
		testRecord(x(4) 'getVoid' 1 270714)
lbl(270699)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1582> 9)
lbl(270714)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(541)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270675)
lbl(270736)	definition(x(0) 270847 pid('MakeDeAllocate' 2 pos('./compiler/Assembler.oz' 544 3) nil 2) <Q: 1583> nil)
		match(x(0) ht(270836 [onScalar(0 270745) onScalar(1 270746) onScalar(2 270755) onScalar(3 270764) onScalar(4 270773) onScalar(5 270782) onScalar(6 270791) onScalar(7 270800) onScalar(8 270809) onScalar(9 270818) onScalar(10 270827)]))
lbl(270745)	return
lbl(270746)	putConstant('deAllocateL1' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270755)	putConstant('deAllocateL2' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270764)	putConstant('deAllocateL3' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270773)	putConstant('deAllocateL4' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270782)	putConstant('deAllocateL5' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270791)	putConstant('deAllocateL6' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270800)	putConstant('deAllocateL7' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270809)	putConstant('deAllocateL8' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270818)	putConstant('deAllocateL9' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270827)	putConstant('deAllocateL10' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270836)	putConstant('deAllocateL' x(0))
		tailSendMsg(append x(1) 1 cache)
		endDefinition(270736)
lbl(270847)	definition(x(0) 271007 pid('SkipDeadCode' 3 pos('./compiler/Assembler.oz' 560 3) nil 4) <Q: 1584> nil)
		match(x(0) ht(270992 [onScalar(nil 270856) onRecord('|' 2 270860)]))
lbl(270856)	getLiteral(nil x(2))
		return
lbl(270860)	allocateL5
		getVarVar(x(3) y(0))
		match(x(3) ht(270985 [onRecord('lbl' 1 270867) onRecord('endDefinition' 1 270921) onRecord('globalVarname' 1 270975) onRecord('localVarname' 1 270980)]))
lbl(270867)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 270898 270910)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(270898)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270910)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(563)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(270921)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 270952 270964)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(270952)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270964)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(567)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(270975)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(270980)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(270985)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270992)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(575)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270847)
lbl(271007)	definition(x(0) 271034 pid('EliminateDeadCode' 2 pos('./compiler/Assembler.oz' 578 3) nil 3) <Q: 1585> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1584> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
		endDefinition(271007)
lbl(271034)	definition(x(0) 275542 pid('Peephole' 2 pos('./compiler/Assembler.oz' 582 3) nil 10) <Q: 1586> [y(118)])
		match(x(0) ht(275527 [onScalar(nil 271043) onRecord('|' 2 271044)]))
lbl(271043)	return
lbl(271044)	getVarVar(x(2) x(3))
		match(x(2) ht(275503 [onScalar('skip' 271050) onScalar('failure' 271056) onScalar('return' 271122) onScalar('clause' 271146) onRecord('lbl' 1 271201) onRecord('definition' 6 271224) onRecord('definitionCopy' 6 271276) onRecord(clear 1 271328) onRecord('move' 2 271412) onRecord('createVariable' 1 271864) onRecord('putRecord' 3 272005) onRecord('setVoid' 1 272059) onRecord('getRecord' 3 272101) onRecord('unifyValue' 1 272255) onRecord('unifyVoid' 1 272328) onRecord('allocateL' 1 272370) onRecord('deAllocateL' 1 272515) onRecord('branch' 1 272592) onRecord('funReturn' 1 272657) onRecord('callBI' 2 272681) onRecord('genCall' 2 273248) onRecord('call' 2 273419) onRecord('genFastCall' 2 273641) onRecord('marshalledFastCall' 2 273834) onRecord('sendMsg' 4 274029) onRecord('applMeth' 2 274270) onRecord('shallowGuard' 1 274520) onRecord('testBI' 3 274724) onRecord('testRecord' 4 275046) onRecord('match' 2 275106) onRecord('getVariable' 1 275370) onRecord('getVoid' 1 275443)]))
lbl(271050)	move(x(3) x(0))
		genFastCall(<Q: 1586> 5)
lbl(271056)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271104)
lbl(271065)	getVarVar(x(0) x(2))
		shallowGuard(271104)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(4))
lbl(271076)	shallowThen
		move(x(2) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271104)	putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271122)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		putConstant('return' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271146)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271183)
lbl(271155)	getVarVar(x(0) x(2))
		testLiteral(x(0) 'wait' 271183)
		move(x(2) y(1))
		putConstant('emptyClause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271183)	putConstant('clause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271201)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		sendMsg(setLabel y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271224)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definition' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271276)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definitionCopy' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271328)	allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1579> 6)
		testList(y(2) 271357)
lbl(271344)	getVariable(x(0))
		shallowGuard(271357)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(271354)	shallowThen
		branch(271403)
lbl(271357)	definition(x(1) 271397 pid('' 1 pos('./compiler/Assembler.oz' 604 2) nil 2) unit [y(0)])
		shallowGuard(271384)
		getRecord(clear 1 x(0))
		unifyVariable(x(1))
lbl(271371)	shallowThen
		putRecord('clearY' 1 x(0))
		setValue(x(1))
		tailSendMsg(append g(0) 1 cache)
lbl(271384)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(271357)
lbl(271397)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(271403)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271412)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 271508)
lbl(271426)	getVarVar(x(4) x(5))
		shallowGuard(271508)
		getRecord('move' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		getRecord(x 1 x(4))
		unifyVoid(1)
		getRecord(y 1 x(6))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord('move' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(8))
		getRecord(x 1 x(5))
		unifyVoid(1)
		getRecord(y 1 x(8))
		unifyVariable(x(9))
lbl(271477)	shallowThen
		putRecord('moveMoveXYXY' 4 x(0))
		setValue(x(4))
		setValue(x(6))
		setValue(x(5))
		setValue(x(8))
		move(x(7) y(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271508)	testList(y(0) 271596)
lbl(271511)	getVarVar(x(0) x(1))
		shallowGuard(271596)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271562)	shallowThen
		putRecord('moveMoveYXYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271596)	testList(y(0) 271684)
lbl(271599)	getVarVar(x(0) x(1))
		shallowGuard(271684)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getRecord(y 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271650)	shallowThen
		putRecord('moveMoveXYYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271684)	testList(y(0) 271772)
lbl(271687)	getVarVar(x(0) x(1))
		shallowGuard(271772)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(x 1 x(1))
		unifyVoid(1)
		getRecord(y 1 x(4))
		unifyVariable(x(5))
lbl(271738)	shallowThen
		putRecord('moveMoveYXXY' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271772)	testList(y(0) 271846)
lbl(271775)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(271846)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('callBI' 2 x(1))
		unifyLiteral('funReturn')
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getList(x(1))
		unifyValue(x(2))
		unifyLiteral(nil)
lbl(271818)	shallowThen
		putRecord('funReturn' 1 x(2))
		setValue(x(0))
		move(x(3) y(2))
		move(x(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(271846)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271864)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 271927)
lbl(271878)	getVarVar(x(4) x(5))
		shallowGuard(271927)
		getRecord('createVariable' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord('move' 2 x(5))
		unifyValVar(x(4) x(5))
		getRecord(x 1 x(5))
		unifyVariable(x(7))
lbl(271908)	shallowThen
		putRecord('createVariableMove' 2 x(2))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(6))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271927)	testList(y(0) 271987)
lbl(271930)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(271987)
		getRecord('createVariable' 1 x(0))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('move' 2 x(1))
		unifyValVar(x(0) x(3))
lbl(271962)	shallowThen
		putRecord('createVariableMove' 2 x(1))
		setValue(x(3))
		setValue(x(0))
		putList(x(4))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271987)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272005)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testLiteral(x(0) '|' 272041)
lbl(272023)	testNumber(x(4) 2 272041)
lbl(272027)	putRecord('putList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(272050)
lbl(272041)	move(y(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272050)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272059)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1580> 8)
		putRecord('setVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272101)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) '|' 272237)
lbl(272119)	testNumber(x(4) 2 272237)
lbl(272123)	testRecord(x(5) x 1 272216)
lbl(272128)	move(x(5) y(1))
		testList(y(2) 272195)
lbl(272134)	getVarVar(x(0) x(2))
		shallowGuard(272195)
		getRecord('unifyValue' 1 x(0))
		unifyVariable(x(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('unifyVariable' 1 x(2))
		unifyVariable(x(2))
		getRecord(x 1 x(2))
		unifyVariable(x(6))
lbl(272163)	shallowThen
		putRecord('getListValVar' 3 x(3))
		setValue(y(1))
		setValue(x(0))
		setValue(x(2))
		move(x(4) y(2))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272195)	putRecord('getList' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272216)	putRecord('getList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272237)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272255)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 272310)
lbl(272269)	getVarVar(x(4) x(5))
		shallowGuard(272310)
		getRecord('unifyVariable' 1 x(4))
		unifyVariable(x(6))
lbl(272280)	shallowThen
		putRecord('unifyValVar' 2 x(2))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272310)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272328)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1581> 8)
		putRecord('unifyVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272370)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(272491 [onScalar(0 272506) onScalar(1 272381) onScalar(2 272392) onScalar(3 272403) onScalar(4 272414) onScalar(5 272425) onScalar(6 272436) onScalar(7 272447) onScalar(8 272458) onScalar(9 272469) onScalar(10 272480)]))
lbl(272381)	putConstant('allocateL1' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272392)	putConstant('allocateL2' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272403)	putConstant('allocateL3' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272414)	putConstant('allocateL4' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272425)	putConstant('allocateL5' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272436)	putConstant('allocateL6' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272447)	putConstant('allocateL7' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272458)	putConstant('allocateL8' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272469)	putConstant('allocateL9' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272480)	putConstant('allocateL10' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272506)
lbl(272491)	putRecord('allocateL' 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272506)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272515)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) y(2))
		testList(y(1) 272575)
lbl(272529)	getVarVar(x(2) x(4))
		shallowGuard(272575)
		getLiteral('return' x(2))
		getList(x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('lbl' 1 x(2))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('deAllocateL' 1 x(2))
		unifyValue(y(2))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(272567)	shallowThen
		move(x(4) x(0))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272575)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272592)	allocateL4
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(0) x(0))
		sendMsg(declareLabel y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1584> 6)
		testList(y(3) 272636)
lbl(272623)	getVariable(x(0))
		shallowGuard(272636)
		getRecord('lbl' 1 x(0))
		unifyValue(y(0))
lbl(272633)	shallowThen
		branch(272648)
lbl(272636)	putRecord('branch' 1 x(0))
		setValue(y(0))
		sendMsg(append y(1) 1 cache)
lbl(272648)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272657)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(272681)	getVarVar(x(0) x(4))
		inlineDot(x(1) debugInfoControl x(5) cache)
		testBool(x(5) 272718 273237)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272718)	testLiteral(x(0) 'funReturn' 272807)
lbl(272722)	allocateL3
		getRecord('#' 2 x(4))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testList(y(1) 272788)
lbl(272748)	getVarVar(x(0) x(4))
		shallowGuard(272788)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(5))
lbl(272759)	shallowThen
		putRecord('deAllocateL' 1 x(3))
		setValue(x(5))
		putRecord('funReturn' 1 x(7))
		setValue(y(2))
		putList(x(6))
		setValue(x(7))
		setValue(x(4))
		putList(x(0))
		setValue(x(3))
		setValue(x(6))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272788)	putRecord('funReturn' 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272807)	allocateL6
		move(g(0) x(5))
		inlineDot(x(5) getInfo x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(3) ht(273183 [onScalar('Int.\'+1\'' 272839) onScalar('Int.\'-1\'' 272875) onScalar('Number.\'+\'' 272911) onScalar('Number.\'-\'' 272955) onScalar('Value.\'>\'' 272999) onScalar('Value.\'>=\'' 273055) onScalar('Record.\'^\'' 273111) onScalar('getReturn' 273155)]))
lbl(272839)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlinePlus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(272875)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlineMinus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(272911)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlinePlus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(272955)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineMinus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(272999)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('Value.\'<\'')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(273055)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('Value.\'=<\'')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(273111)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineUparrow' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(273155)	getRecord('#' 2 y(4))
		unifyLiteral(nil)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		putRecord('getReturn' 1 x(0))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		branch(273192)
lbl(273183)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(273192)	move(y(5) x(0))
		putConstant(doesNotReturn x(1))
		putConstant(false x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		testBool(x(3) 273217 273226)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273217)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273226)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(760)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273237)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(728)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273248)	allocateL4
		getVarVar(x(0) x(4))
		getNumber(0 x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 273330)
lbl(273268)	getVarVar(x(4) x(5))
		shallowGuard(273330)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273285)	shallowThen
		move(x(6) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(273330)	testList(y(2) 273401)
lbl(273333)	getVarVar(x(0) x(1))
		shallowGuard(273401)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273356)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273401)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273419)	allocateL6
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		testList(y(1) 273525)
lbl(273436)	getVarVar(x(4) x(5))
		shallowGuard(273525)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273453)	shallowThen
		moveMoveXYXY(x(4) y(1) x(6) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273491)
lbl(273466)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(3))
		setValue(y(2))
		setValue(y(5))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		branch(273494)
lbl(273491)	unify(y(5) y(2))
lbl(273494)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273525)	testList(y(1) 273618)
lbl(273528)	getVarVar(x(0) x(1))
		shallowGuard(273618)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273551)	shallowThen
		move(x(1) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273584)
lbl(273562)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(273587)
lbl(273584)	unify(y(5) y(2))
lbl(273587)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273618)	putRecord('call' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273641)	getVarVar(x(0) x(4))
		putConstant(2 x(5))
		callBI('Int.mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 1 273678)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(273678)	allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 273751)
lbl(273695)	getVarVar(x(5) x(6))
		shallowGuard(273751)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273712)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(273751)	testList(y(2) 273816)
lbl(273754)	getVarVar(x(0) x(1))
		shallowGuard(273816)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273777)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273816)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273834)	allocateL5
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Value.isDet' [x(0)]#[x(5)] 274011)
lbl(273850)	testBI('Procedure.is' [x(0)]#[x(5)] 274011)
lbl(273854)	putConstant(2 x(5))
		callBI('Int.mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 0 274011)
lbl(273864)	moveMoveXYXY(x(0) y(3) x(4) y(4))
		testList(y(2) 273928)
lbl(273872)	getVarVar(x(5) x(6))
		shallowGuard(273928)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273889)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(273928)	testList(y(2) 273993)
lbl(273931)	getVarVar(x(0) x(1))
		shallowGuard(273993)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273954)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273993)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274011)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274029)	allocateL9
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1578> 4)
		testList(y(5) 274146)
lbl(274053)	getVarVar(x(0) x(1))
		shallowGuard(274146)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(0))
		getList(x(1))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(274070)	shallowThen
		moveMoveXYXY(x(0) y(5) x(2) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274108)
lbl(274083)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(3))
		setValue(y(1))
		setValue(y(8))
		move(x(3) x(0))
		sendMsg(append y(4) 1 cache)
		branch(274111)
lbl(274108)	unify(y(8) y(1))
lbl(274111)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1585> 5)
lbl(274146)	testList(y(5) 274243)
lbl(274149)	getVarVar(x(0) x(1))
		shallowGuard(274243)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274172)	shallowThen
		move(x(1) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274205)
lbl(274183)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(8))
		sendMsg(append y(4) 1 cache)
		branch(274208)
lbl(274205)	unify(y(8) y(1))
lbl(274208)	moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274243)	putRecord('sendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274270)	allocateL6
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 274391)
lbl(274290)	getVarVar(x(5) x(6))
		shallowGuard(274391)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(274307)	shallowThen
		moveMoveXYXY(x(5) y(1) x(7) y(2))
		createVariable(y(5))
		testRecord(y(4) y 1 274357)
lbl(274320)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274360)
lbl(274357)	unify(y(5) y(4))
lbl(274360)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(274391)	testList(y(2) 274502)
lbl(274394)	getVarVar(x(0) x(1))
		shallowGuard(274502)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274417)	shallowThen
		move(x(1) y(1))
		createVariable(y(5))
		testRecord(y(4) y 1 274468)
lbl(274428)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274471)
lbl(274468)	unify(y(5) y(4))
lbl(274471)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274502)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274520)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 274550)
lbl(274536)	getVarVar(x(4) x(5))
		testLiteral(x(4) 'shallowThen' 274550)
		move(x(5) x(0))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274550)	testList(y(2) 274628)
lbl(274553)	getVarVar(x(0) x(1))
		shallowGuard(274628)
		getRecord('getNumber' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274596)	shallowThen
		putRecord('testNumber' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274628)	testList(y(2) 274706)
lbl(274631)	getVarVar(x(0) x(1))
		shallowGuard(274706)
		getRecord('getLiteral' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274674)	shallowThen
		putRecord('testLiteral' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274706)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274724)	allocateL10
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		testList(y(5) 274827)
lbl(274743)	getVarVar(x(0) x(4))
		shallowGuard(274827)
		getRecord('branch' 1 x(0))
		unifyVariable(x(5))
lbl(274754)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) getInfo x(6) cache)
		moveMoveXYXY(x(5) y(7) x(4) y(8))
		move(y(0) x(0))
		createVariableMove(y(9) x(1))
		call(x(6) 2)
		move(y(9) x(0))
		putConstant(negated x(1))
		putConstant(unit x(2))
		callBI('Value.condSelect' [x(0) x(1) x(2)]#[x(3)])
		match(x(3) ht(274793 [onScalar(unit 274827)]))
lbl(274793)	getList(y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('testBI' 3 x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		unifyValue(y(7))
		getList(x(1))
		unifyLiteral('skip')
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyValue(y(8))
		getRecord('branch' 1 x(4))
		unifyValue(y(2))
lbl(274827)	move(y(6) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 274841)
		move(y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(274841)	match(y(0) ht(275028 [onScalar('Value.\'<\'' 274844) onScalar('Value.\'=<\'' 274890) onScalar('Value.\'>=\'' 274936) onScalar('Value.\'>\'' 274982)]))
lbl(274844)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275037)
lbl(274890)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275037)
lbl(274936)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275037)
lbl(274982)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275037)
lbl(275028)	move(y(4) x(0))
		sendMsg(append y(3) 1 cache)
lbl(275037)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(275046)	allocateL3
		getVarVar(x(0) x(4))
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(4) '|' 275088)
lbl(275065)	testNumber(x(5) 2 275088)
lbl(275069)	putRecord('testList' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		branch(275097)
lbl(275088)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(275097)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(275106)	allocateL8
		getVarVar(x(0) x(4))
		getRecord('ht' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		move(x(4) y(5))
		testList(y(0) 275240)
lbl(275134)	getVarVar(x(5) x(6))
		shallowGuard(275240)
		getRecord('onScalar' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getLiteral(nil x(6))
lbl(275150)	shallowThen
		testList(y(3) 275222)
lbl(275154)	getVariable(x(6))
		shallowGuard(275222)
		getRecord('lbl' 1 x(6))
		unifyValue(x(7))
lbl(275164)	shallowThen
		testBI('Number.is' [x(5)]#[x(6)] 275190)
		putRecord('testNumber' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
		branch(275213)
lbl(275190)	testBI('Literal.is' [x(5)]#[x(6)] 275213)
		putRecord('testLiteral' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
lbl(275213)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275222)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275240)	testList(y(0) 275352)
lbl(275243)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(275352)
		getRecord('onRecord' 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(275263)	shallowThen
		testList(y(3) 275334)
lbl(275267)	getVariable(x(1))
		shallowGuard(275334)
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
lbl(275277)	shallowThen
		moveMoveXYXY(x(0) y(6) x(2) y(7))
		testLiteral(y(6) '|' 275307)
lbl(275287)	testNumber(y(7) 2 275307)
lbl(275291)	putRecord('testList' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
		branch(275325)
lbl(275307)	putRecord('testRecord' 4 x(0))
		setValue(y(4))
		setValue(y(6))
		setValue(y(7))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
lbl(275325)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275334)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275352)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275370)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 275425)
lbl(275384)	getVarVar(x(4) x(5))
		shallowGuard(275425)
		getRecord('getVariable' 1 x(4))
		unifyVariable(x(6))
lbl(275395)	shallowThen
		putRecord('getVarVar' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(3))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275425)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275443)	allocateL5
		getVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1582> 8)
		testList(y(4) 275494)
lbl(275471)	getVariable(x(0))
		shallowGuard(275494)
		getRecord('getVariable' 1 x(0))
		unifyVariable(x(1))
lbl(275481)	shallowThen
		putRecord('getVoid' 1 x(0))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
lbl(275494)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(275503)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(275527)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1000)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(271034)
lbl(275542)	definition(x(0) 275708 pid('InternalAssemble' 3 pos('./compiler/Assembler.oz' 1003 3) nil 9) <Q: 1587> [y(1)])
		allocateL5
		putConstant(profile x(3))
		putConstant(false x(4))
		callBI('Value.condSelect' [x(1) x(3) x(4)]#[x(5)])
		putConstant(debuginfocontrol x(3))
		putConstant(false x(4))
		callBI('Value.condSelect' [x(1) x(3) x(4)]#[x(6)])
		putConstant(verify x(3))
		putConstant(true x(4))
		callBI('Value.condSelect' [x(1) x(3) x(4)]#[x(7)])
		putConstant(peephole x(3))
		putConstant(true x(4))
		callBI('Value.condSelect' [x(1) x(3) x(4)]#[x(8)])
		move(g(0) x(1))
		callBI('Object.newObject' [x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(3) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(1))
		testBool(y(3) 275633 275668)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		branch(275679)
lbl(275633)	definition(x(1) 275660 pid('' 1 pos('./compiler/Assembler.oz' 1015 3) nil 2) unit [y(1)])
		testRecord(x(0) 'lbl' 1 275652)
lbl(275644)	getVariable(x(0))
		tailSendMsg(setLabel g(0) 1 cache)
lbl(275652)	tailSendMsg(append g(0) 1 cache)
		endDefinition(275633)
lbl(275660)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		branch(275679)
lbl(275668)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1011)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275679)	testBool(y(2) 275693 275695)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(checkLabels x(0) 0 cache)
lbl(275693)	deAllocateL5
		return
lbl(275695)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1023)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(275542)
lbl(275708)	definition(x(1) 275746 pid('Assemble' 4 pos('./compiler/Assembler.oz' 1028 3) nil 4) <Q: 1588> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1587> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(load x(2) 2 cache)
		endDefinition(275708)
lbl(275746)	getRecord('export' [assemble internalAssemble] g(9))
		unifyValue(x(1))
		unifyValue(x(0))
		deAllocateL
		return
		endDefinition(259288)
lbl(275758)	tailCall(x(3) 0)
		endDefinition(258994)
lbl(275763)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putList(x(8))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(7))
		setConstant(printName)
		setValue(x(8))
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord('import' ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		putConstant('procedure/4' x(4))
		putConstant('procedure/3' x(5))
		putRecord('export' [assemble internalAssemble] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(98) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(env ['Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'All' 'AllTail' 'And' 'Append' 'Arity' 'Array' 'Asin' 'Assign' 'Atan' 'Atan2' 'Atom' 'AtomToString' 'BaseObject' 'BitArray' 'Bool' 'ByNeed' 'Ceil' 'Cell' 'Char' 'Chunk' 'Class' 'CondSelect' 'Cos' 'Delay' 'Dictionary' 'Exception' 'Exchange' 'Exp' 'Filter' 'Flatten' 'Float' 'FloatToInt' 'FloatToString' 'Floor' 'FoldL' 'FoldLTail' 'FoldR' 'FoldRTail' 'For' 'ForAll' 'ForAllTail' 'ForThread' 'ForeignPointer' 'Functor' 'Get' 'HasFeature' 'Int' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBitArray' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsClass' 'IsDet' 'IsDictionary' 'IsEven' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNat' 'IsNumber' 'IsObject' 'IsOdd' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsThread' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Length' 'List' 'Literal' 'Lock' 'Log' 'Loop' 'MakeList' 'MakeRecord' 'MakeTuple' 'Map' 'Max' 'Member' 'Merge' 'Min' 'Name' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'Not' 'Nth' 'Number' 'Object' 'Or' 'Port' 'Pow' 'Procedure' 'ProcedureArity' 'Put' 'Raise' 'Record' 'Reverse' 'Round' 'Send' 'Sin' 'Some' 'Sort' 'Space' 'Sqrt' 'String' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread' 'Time' 'Tuple' 'Unit' 'Value' 'VirtualString' 'Wait' 'WaitOr' 'Width' 'WidthC' '`false`' '`true`' '`unit`'] x(4))
		setValue(y(88))
		setValue(y(34))
		setValue(y(75))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setValue(y(226))
		setValue(y(119))
		setValue(y(121))
		setValue(y(43))
		setValue(y(108))
		setValue(y(135))
		setValue(y(84))
		setValue(y(74))
		setValue(y(33))
		setValue(y(76))
		setValue(y(77))
		setValue(y(19))
		setValue(y(39))
		setValue(y(194))
		setValue(y(182))
		setValue(y(21))
		setValue(y(12))
		setValue(y(68))
		setValue(y(17))
		setValue(y(25))
		setValue(y(167))
		setValue(y(197))
		setValue(y(10))
		setValue(y(72))
		setValue(y(227))
		setValue(y(103))
		setValue(y(105))
		setValue(y(32))
		setValue(y(65))
		setValue(y(123))
		setValue(y(126))
		setValue(y(63))
		setValue(y(78))
		setValue(y(79))
		setValue(y(69))
		setValue(y(114))
		setValue(y(116))
		setValue(y(115))
		setValue(y(117))
		setValue(y(129))
		setValue(y(118))
		setValue(y(120))
		setValue(y(130))
		setValue(y(195))
		setValue(y(231))
		setValue(y(178))
		setValue(y(11))
		setValue(y(56))
		setValue(y(61))
		setValue(y(62))
		setValue(y(176))
		setValue(y(38))
		setValue(y(202))
		setValue(y(42))
		setValue(y(30))
		setValue(y(50))
		setValue(y(173))
		setValue(y(201))
		setValue(y(7))
		setValue(y(131))
		setValue(y(60))
		setValue(y(64))
		setValue(y(203))
		setValue(y(5))
		setValue(y(57))
		setValue(y(6))
		setValue(y(107))
		setValue(y(26))
		setValue(y(28))
		setValue(y(40))
		setValue(y(58))
		setValue(y(86))
		setValue(y(180))
		setValue(y(59))
		setValue(y(35))
		setValue(y(127))
		setValue(y(133))
		setValue(y(138))
		setValue(y(179))
		setValue(y(46))
		setValue(y(204))
		setValue(y(90))
		setValue(y(27))
		setValue(y(174))
		setValue(y(83))
		setValue(y(110))
		setValue(y(93))
		setValue(y(14))
		setValue(y(16))
		setValue(y(66))
		setValue(y(102))
		setValue(y(106))
		setValue(y(134))
		setValue(y(89))
		setValue(y(113))
		setValue(y(9))
		setValue(y(109))
		setValue(y(125))
		setValue(y(8))
		setValue(y(20))
		setValue(y(181))
		setValue(y(175))
		setValue(y(31))
		setValue(y(172))
		setValue(y(132))
		setValue(y(29))
		setValue(y(41))
		setValue(y(36))
		setValue(y(45))
		setValue(y(111))
		setValue(y(80))
		setValue(y(199))
		setValue(y(44))
		setValue(y(18))
		setValue(y(87))
		setValue(y(101))
		setValue(y(128))
		setValue(y(177))
		setValue(y(200))
		setValue(y(141))
		setValue(y(112))
		setValue(y(70))
		setValue(y(37))
		setValue(y(71))
		setValue(y(122))
		setValue(y(124))
		setValue(y(171))
		setValue(y(67))
		setValue(y(22))
		setValue(y(47))
		setValue(y(49))
		setValue(y(48))
		setValue(y(73))
		setValue(y(140))
		setValue(y(196))
		setValue(y(229))
		setValue(y(85))
		setValue(y(15))
		setValue(y(13))
		setValue(y(51))
		setValue(y(3))
		setValue(y(4))
		setValue(y(81))
		setValue(y(139))
		setConstant(false)
		setConstant(true)
		setConstant(unit)
lbl(276149)	definition(x(2) 303207 pid('' 2 pos('./compiler/Main.oz' 25 3) nil 4) <P: 1589> [y(39) y(168) y(187) y(186) y(1) y(143) y(47) y(170) y(104) y(148) y(154) y(162) y(149) y(150) y(156) y(153) y(152) x(4) y(223) y(225) y(94) y(128) y(174) y(38) y(42) y(57) y(133) y(198)])
		putList(x(2))
		setPredicateRef(<Q: 1590>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1591>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1592>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1593>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MaxWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TabSize>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Stack>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Line>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Len>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: VS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Col>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GlueItem>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GlueIndent>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrintDepth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PrintWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: StackOpsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StackOpsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AppendTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AppendSeparated>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FormatLine>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecStackOps>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1594>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1595>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1596>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1597>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1598>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1599>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1600>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1601>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1602>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ErrorCount>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HeapUsed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TimeUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ThisPhaseLevel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Raised>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Wrapper>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ToTop>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ProfileStart>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ProfileEnd>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1603>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1604>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1605>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1606>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1607>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1608>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1609>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1610>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1611>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1612>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1613>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1614>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1615>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1616>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1617>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1618>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1619>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1620>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1621>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1622>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1623>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1624>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1625>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1626>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1627>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1628>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1629>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1630>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1631>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1632>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1633>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1634>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1635>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1636>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1637>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1638>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1639>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1640>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1641>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1642>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1643>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1644>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1645>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1646>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1647>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1648>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1649>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1650>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1651>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1652>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1653>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1654>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MergeEnv>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1655>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1656>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1657>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1658>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1659>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1660>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1661>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1662>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1663>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1664>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1665>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1666>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1667>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1668>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1669>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1670>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1671>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1672>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1673>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1674>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1675>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1676>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1677>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptException>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ParseFile>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ParseVirtualString>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecutingThread>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CatchResult>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Feed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FeedSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CompileQuery>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ExecProtected>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1692>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1693>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1694>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Registered>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentQuery>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueriesHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: QueriesTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextId>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegistrationLock>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueueLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Compiler>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NotifyQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enqueue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ClearQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dequeue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RunQueue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1695>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1696>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1697>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1698>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1699>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1700>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1701>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1702>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1703>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1704>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1705>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1706>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1707>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1708>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1709>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1710>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1711>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1712>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1713>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Port>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ServerThread>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1721>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Verbose>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: History>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InsertedFiles>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SourceVS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HasErrors>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HasBeenTopped>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Serve>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1722>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1723>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1724>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1725>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1726>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1727>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1728>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1729>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1730>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1731>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1732>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1733>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1734>)
		setValue(x(2))
lbl(277403)	definitionCopy(x(3) 303202 pid('/body' 0 pos('./compiler/Main.oz' 25 3) [once] 642) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) x(1)])
		allocateL(17)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'Type' x(8) cache)
		inlineDot(x(0) 'PrintName' x(9) cache)
		inlineDot(x(0) 'Builtins' x(10) cache)
		inlineDot(x(0) 'Unnester' x(11) cache)
		inlineDot(x(0) 'Core' x(12) cache)
		inlineDot(x(0) 'Assembler' x(13) cache)
		inlineDot(x(0) 'RunTime' x(14) cache)
lbl(277498)	definition(x(15) 277775 pid('EscapeVariableChar' 3 pos('./compiler/FormatStrings.oz' 30 6) nil 6) <Q: 1590> nil)
		shallowGuard(277762)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(277512)	shallowThen
		testLiteral(x(4) nil 277524)
		getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(277524)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 277551)
lbl(277537)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277551)	testNumber(y(2) 92 277557)
		branch(277537)
lbl(277557)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 277601)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(277601)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 277652)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277652)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 277703)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277703)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 277754)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277754)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277762)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(30)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(277498)
lbl(277775)	definition(x(16) 277828 pid('PrintNameToVirtualString' 2 pos('./compiler/FormatStrings.oz' 41 6) nil 4) <Q: 1591> [g(1) x(15)])
		allocateL3
		callBI('Atom.toString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 277821)
lbl(277793)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 277821)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(277821)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(277775)
lbl(277828)	definition(x(15) 277900 pid('IndentSub' 3 pos('./compiler/FormatStrings.oz' 50 6) nil 5) <Q: 1592> nil)
		putConstant(8 x(3))
		testLE(x(3) x(0) x(4) 277866)
		putConstant(8 x(3))
		inlineMinus(x(0) x(3) x(4))
		putRecord('#' 2 x(3))
		setValue(x(1))
		setConstant('\t')
		move(x(4) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277866)	putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 277894)
		inlineMinus1(x(0) x(3))
		putRecord('#' 2 x(4))
		setValue(x(1))
		setConstant(' ')
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277894)	unify(x(2) x(1))
		return
		endDefinition(277828)
lbl(277900)	definition(x(15) 277917 pid('Indent' 2 pos('./compiler/FormatStrings.oz' 57 6) nil 3) <Q: 1593> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1592> 7)
		endDefinition(277900)
lbl(277917)	putList(x(15))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: Col> <M: GlueIndent> <M: GlueItem> <M: Len> <M: Line> <M: MaxWidth> <M: PrintDepth> <M: PrintWidth> <M: Stack> <M: StackOpsHd> <M: StackOpsTl> <M: TabSize> <M: VS>] x(16))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord(messagePattern [indent printDepth printWidth tabsize width] x(17))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(277967)	definition(x(18) 278308 pid('Formatter,init' 1 pos('./compiler/FormatStrings.oz' 82 6) nil 3) unit [x(17) x(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(width x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 278006)
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(1))
		branch(278009)
lbl(278006)	getNumber(80 y(1))
lbl(278009)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(tabsize x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 278032)
		inlineDot(x(0) tabsize x(1) cache)
		unify(x(1) y(2))
		branch(278035)
lbl(278032)	getNumber(3 y(2))
lbl(278035)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(indent x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 278058)
		inlineDot(x(0) indent x(1) cache)
		unify(x(1) y(3))
		branch(278061)
lbl(278058)	getNumber(0 y(3))
lbl(278061)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(printDepth x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 278084)
		inlineDot(x(0) printDepth x(1) cache)
		unify(x(1) y(4))
		branch(278087)
lbl(278084)	getLiteral(unit y(4))
lbl(278087)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(printWidth x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 278110)
		inlineDot(x(0) printWidth x(1) cache)
		unify(x(1) y(5))
		branch(278113)
lbl(278110)	getLiteral(unit y(5))
lbl(278113)	move(y(1) x(0))
		inlineAssign(<M: MaxWidth> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: TabSize> x(0) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		inlineAssign(<M: Stack> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Line> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: Len> x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1593> 4)
		move(y(0) x(0))
		inlineAssign(<M: VS> x(0) cache)
		move(y(3) x(0))
		inlineAssign(<M: Col> x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		createVariable(y(0))
		testLiteral(y(4) unit 278232)
lbl(278200)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) depth x(1) cache)
		unify(x(1) y(0))
		branch(278235)
lbl(278232)	unify(y(0) y(4))
lbl(278235)	move(y(0) x(0))
		inlineAssign(<M: PrintDepth> x(0) cache)
		createVariable(y(0))
		testLiteral(y(5) unit 278281)
lbl(278249)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(0))
		branch(278284)
lbl(278281)	unify(y(0) y(5))
lbl(278284)	move(y(0) x(0))
		inlineAssign(<M: PrintWidth> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		deAllocateL6
		return
		endDefinition(277967)
lbl(278308)	putList(x(17))
		setConstant(init)
		setValue(x(18))
		createVariable(y(0))
lbl(278316)	definition(x(18) 278726 pid('Formatter,append/fast' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 6) <Q: 1594> [g(2) y(0) x(5)])
		match(x(0) ht(278378 [onScalar('#' 278325) onScalar(nil 278326) onRecord('|' 2 278327)]))
lbl(278325)	return
lbl(278326)	return
lbl(278327)	allocateL3
		inlineAt(<M: Len> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278378)	allocateL3
		move(x(0) y(0))
		testBI('Atom.is' [x(0)]#[x(1)] 278436)
lbl(278386)	inlineAt(<M: Len> x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278436)	testBI('Number.is' [x(0)]#[x(1)] 278442)
		branch(278386)
lbl(278442)	testBI('Tuple.is' [x(0)]#[x(1)] 278463)
lbl(278446)	callBI('Record.label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 278463)
lbl(278453)	callBI('Record.width' [x(0)]#[x(2)])
		putConstant(1 x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendTuple> true 3) 0)
lbl(278463)	match(y(0) ht(278711 [onRecord(pn 1 278466) onRecord(oz 1 278481) onRecord(list 2 278518) onRecord(format 1 278525)]))
lbl(278466)	getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1591> 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278481)	getVariable(x(0))
		move(g(2) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		inlineAt(<M: PrintDepth> x(5) cache)
		inlineAt(<M: PrintWidth> x(2) cache)
		move(x(5) x(1))
		createVariableMove(y(0) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278518)	getVarVar(x(0) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendSeparated> true 2) 0)
lbl(278525)	getVariable(x(0))
		match(x(0) ht(278698 [onScalar(break 278530) onScalar(indent 278585) onScalar(exdent 278606) onScalar(push 278627) onScalar(pop 278662) onRecord(glue 1 278683)]))
lbl(278530)	genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		inlineAt(<M: Stack> x(2) cache)
		inlineDot(x(2) 1 x(0) cache)
		inlineAt(<M: VS> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1593> 4)
		putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('\n')
		setValue(y(2))
		inlineAssign(<M: VS> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: Col> x(0) cache)
		deAllocateL3
		return
lbl(278585)	putList(x(0))
		setConstant(indent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278606)	putList(x(0))
		setConstant(exdent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278627)	putRecord(push 1 x(1))
		setVariable(x(2))
		putList(x(0))
		setValue(x(1))
		setVariable(x(3))
		inlineAt(<M: StackOpsTl> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<M: Len> x(0) cache)
		unify(x(0) x(2))
		inlineAssign(<M: StackOpsTl> x(3) cache)
		deAllocateL3
		return
lbl(278662)	putList(x(0))
		setConstant(pop)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278683)	getVariable(y(0))
		genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL3
		return
lbl(278698)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(145)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(278711)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(146)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(278316)
lbl(278726)	definition(x(19) 278752 pid('Formatter,append/slow' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1594> 3)
		endDefinition(278726)
lbl(278752)	putRecord('#' [1 2 fast] x(20))
		setConstant(append)
		setValue(x(19))
		setValue(x(18))
lbl(278762)	definition(x(18) 278791 pid('Formatter,get/fast' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) <Q: 1595> [y(0)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FormatLine> false 0) 0)
		putConstant(<M: VS> x(0))
		putConstant(nil x(1))
		callBI('Object.ooExch' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL1
		return
		endDefinition(278762)
lbl(278791)	definition(x(19) 278817 pid('Formatter,get/slow' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1595> 3)
		endDefinition(278791)
lbl(278817)	putRecord('#' [1 2 fast] x(21))
		setConstant(get)
		setValue(x(19))
		setValue(x(18))
lbl(278827)	definition(x(18) 278874 pid('Formatter,AppendTuple/fast' 3 pos('./compiler/FormatStrings.oz' 155 6) nil 4) <Q: 1596> [y(0)])
		testLE(x(1) x(2) x(3) 278871)
		allocateL3
		callBI('Record.\'.\'' [x(0) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true append false 1) 0)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: AppendTuple> true 3) 0)
lbl(278871)	return
		endDefinition(278827)
lbl(278874)	definition(x(19) 278915 pid('Formatter,AppendTuple/slow' 1 pos('./compiler/FormatStrings.oz' 155 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1596> 7)
		endDefinition(278874)
lbl(278915)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: AppendTuple>)
		setValue(x(19))
		setValue(x(18))
lbl(278925)	definition(x(18) 278993 pid('Formatter,AppendSeparated/fast' 2 pos('./compiler/FormatStrings.oz' 161 6) nil 2) <Q: 1597> [y(0)])
		match(x(0) ht(278978 [onScalar(nil 278934) onRecord('|' 2 278935)]))
lbl(278934)	return
lbl(278935)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) true append false 1) 0)
		match(y(0) ht(278965 [onScalar(nil 278948) onRecord('|' 2 278950)]))
lbl(278948)	deAllocateL2
		return
lbl(278950)	move(y(1) x(0))
		genCall(gci(g(0) true append false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AppendSeparated> true 2) 0)
lbl(278965)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(168)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(278978)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(278925)
lbl(278993)	definition(x(19) 279028 pid('Formatter,AppendSeparated/slow' 1 pos('./compiler/FormatStrings.oz' 161 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1597> 5)
		endDefinition(278993)
lbl(279028)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AppendSeparated>)
		setValue(x(19))
		setValue(x(18))
lbl(279038)	definition(x(18) 279315 pid('Formatter,FormatLine/fast' 0 pos('./compiler/FormatStrings.oz' 172 6) nil 4) <Q: 1598> [y(0)])
		allocateL2
		inlineAt(<M: GlueItem> x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAt(<M: Len> x(0) cache)
		inlinePlus(x(2) x(0) x(3))
		inlineAt(<M: MaxWidth> x(0) cache)
		testLE(x(3) x(0) x(2) 279136)
lbl(279087)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueItem> x(1) cache)
		inlineAt(<M: Line> x(2) cache)
		putRecord('#' 3 x(3))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		inlineAssign(<M: VS> x(3) cache)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		branch(279205)
lbl(279136)	inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		testLT(x(2) x(0) x(3) 279087)
lbl(279151)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1593> 4)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('\n')
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: VS> x(1) cache)
		inlineAt(<M: GlueIndent> x(0) cache)
		inlineAssign(<M: Col> x(0) cache)
lbl(279205)	putConstant(nil x(3))
		inlineAt(<M: StackOpsTl> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: StackOpsHd> x(0) cache)
		inlineAt(<M: Stack> x(1) cache)
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: ExecStackOps> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: Stack> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: Len> x(1) cache)
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		putConstant(nil x(0))
		inlineAssign(<M: Line> x(0) cache)
		putConstant(0 x(0))
		inlineAssign(<M: Len> x(0) cache)
		inlineAt(<M: Stack> x(0) cache)
		inlineDot(x(0) 1 x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL2
		return
		endDefinition(279038)
lbl(279315)	definition(x(19) 279329 pid('Formatter,FormatLine/slow' 1 pos('./compiler/FormatStrings.oz' 172 6) nil 1) unit nil)
		getLiteral(<M: FormatLine> x(0))
		genFastCall(<Q: 1598> 1)
		endDefinition(279315)
lbl(279329)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: FormatLine>)
		setValue(x(19))
		setValue(x(18))
lbl(279339)	definition(x(18) 279509 pid('Formatter,ExecStackOps/fast' 3 pos('./compiler/FormatStrings.oz' 191 6) nil 8) <Q: 1599> [y(0)])
		match(x(0) ht(279494 [onScalar(nil 279348) onRecord('|' 2 279352)]))
lbl(279348)	unify(x(2) x(1))
		return
lbl(279352)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(279469 [onScalar(pop 279366) onScalar(indent 279377) onScalar(exdent 279412) onRecord(push 1 279447)]))
lbl(279366)	inlineDot(x(1) 2 x(0) cache)
		unify(x(0) y(2))
		branch(279482)
lbl(279377)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlinePlus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279482)
lbl(279412)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlineMinus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279482)
lbl(279447)	getVariable(x(0))
		getList(y(2))
		unifyVariable(x(4))
		unifyValue(x(1))
		inlineAt(<M: Col> x(1) cache)
		inlinePlus(x(1) x(0) x(5))
		unify(x(5) x(4))
		branch(279482)
lbl(279469)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(201)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(279482)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: ExecStackOps> true 3) 0)
lbl(279494)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(204)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279339)
lbl(279509)	definition(x(19) 279550 pid('Formatter,ExecStackOps/slow' 1 pos('./compiler/FormatStrings.oz' 191 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1599> 7)
		endDefinition(279509)
lbl(279550)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: ExecStackOps>)
		setValue(x(19))
		setValue(x(18))
		putRecord('#' 7 x(18))
		setValue(x(17))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		moveMoveXYXY(x(7) y(7) x(8) y(8))
		moveMoveXYXY(x(9) y(9) x(10) y(10))
		moveMoveXYXY(x(11) y(11) x(12) y(12))
		moveMoveXYXY(x(13) y(13) x(14) y(14))
		move(x(18) x(1))
		move(x(16) x(2))
		move(x(15) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('Formatter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(279637)	definition(x(7) 279691 pid('FormatStringToVirtualString' 2 pos('./compiler/FormatStrings.oz' 208 3) nil 4) <Q: 1600> [y(0)])
		allocateL3
		move(g(0) x(2))
		callBI('Object.newObject' [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		putConstant(79 x(0))
		sendMsg(init y(2) [width] cache)
		move(y(0) x(0))
		sendMsg(append y(2) 1 cache)
		move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(get x(1) 1 cache)
		endDefinition(279637)
lbl(279691)	definition(x(7) 279717 pid('GetUsedHeap' 1 pos('./compiler/Reporter.oz' 31 3) nil 3) <Q: 1601> [y(4)])
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) x(1))
		putConstant('heap.used' x(0))
		tailCall(x(2) 2)
		endDefinition(279691)
lbl(279717)	definition(x(7) 279829 pid('NormalizeCoord' 2 pos('./compiler/Reporter.oz' 35 3) nil 4) <Q: 1602> nil)
		match(x(0) ht(279814 [onScalar(unit 279726) onRecord('pos' 3 279730) onRecord('pos' 6 279734) onRecord(fineStep 3 279750) onRecord(fineStep 6 279766) onRecord(coarseStep 3 279782) onRecord(coarseStep 6 279798)]))
lbl(279726)	getLiteral(unit x(1))
		return
lbl(279730)	unify(x(1) x(0))
		return
lbl(279734)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279750)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279766)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279782)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279798)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279814)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(43)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279717)
lbl(279829)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ErrorCount> <M: HeapUsed> <M: Raised> <M: ThisPhaseLevel> <M: TimeUsed>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Compiler> <M: Wrapper>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(0))
lbl(279859)	definition(x(7) 279901 pid('Reporter,init/fast' 2 pos('./compiler/Reporter.oz' 50 6) nil 4) <Q: 1603> [y(0)])
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(2) cache)
		unify(x(2) x(1))
		genCall(gci(g(0) true clearErrors false 0) 0)
		putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		return
		endDefinition(279859)
lbl(279901)	definition(x(8) 279936 pid('Reporter,init/slow' 1 pos('./compiler/Reporter.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1603> 5)
		endDefinition(279901)
lbl(279936)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(279946)	definition(x(7) 279971 pid('Reporter,clearErrors/fast' 0 pos('./compiler/Reporter.oz' 56 6) nil 1) <Q: 1604> nil)
		putConstant(0 x(0))
		inlineAssign(<M: ErrorCount> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
		endDefinition(279946)
lbl(279971)	definition(x(8) 279985 pid('Reporter,clearErrors/slow' 1 pos('./compiler/Reporter.oz' 56 6) nil 1) unit nil)
		getLiteral(clearErrors x(0))
		genFastCall(<Q: 1604> 1)
		endDefinition(279971)
lbl(279985)	putRecord('#' [1 2 fast] x(10))
		setConstant(clearErrors)
		setValue(x(8))
		setValue(x(7))
lbl(279995)	definition(x(7) 280084 pid('Reporter,ToTop/fast' 1 pos('./compiler/Reporter.oz' 60 6) nil 2) <Q: 1605> nil)
		inlineAt(<M: Raised> x(1) cache)
		testBool(x(1) 280011 280071)
		return
lbl(280011)	testBool(x(0) 280045 280034)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		sendMsg(notify x(1) 1 cache)
		branch(280045)
lbl(280034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(63)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280045)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(toTop x(0))
		sendMsg(notify x(1) 1 cache)
		putConstant(true x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
lbl(280071)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(61)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(279995)
lbl(280084)	definition(x(8) 280110 pid('Reporter,ToTop/slow' 1 pos('./compiler/Reporter.oz' 60 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1605> 3)
		endDefinition(280084)
lbl(280110)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: ToTop>)
		setValue(x(8))
		setValue(x(7))
lbl(280120)	definition(x(7) 280280 pid('Reporter,ProfileStart/fast' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) <Q: 1606> [y(4) y(5)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280207 280196)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAssign(<M: TimeUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		branch(280207)
lbl(280196)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280207)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280265 280267)
		move(g(1) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(y(1) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
lbl(280265)	deAllocateL2
		return
lbl(280267)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280120)
lbl(280280)	definition(x(8) 280306 pid('Reporter,ProfileStart/slow' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1606> 3)
		endDefinition(280280)
lbl(280306)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: ProfileStart>)
		setValue(x(8))
		setValue(x(7))
lbl(280316)	definition(x(7) 280629 pid('Reporter,ProfileEnd/fast' 0 pos('./compiler/Reporter.oz' 80 6) nil 3) <Q: 1607> [y(4) y(0) y(5)])
		allocateL3
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280614 280616)
lbl(280347)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		testLiteral(x(0) none 280358)
lbl(280356)	deAllocateL3
		return
lbl(280358)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		createVariable(y(0))
		match(x(0) ht(280378 [onScalar(phase 280368) onScalar(subphase 280373)]))
lbl(280368)	getLiteral('%%%         ' y(0))
		branch(280391)
lbl(280373)	getLiteral('%%%             ' y(0))
		branch(280391)
lbl(280378)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(280391)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280493 280482)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAt(<M: TimeUsed> x(1) cache)
		inlineMinus(x(0) x(1) x(2))
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('time: ')
		setValue(x(2))
		setConstant(' msec\n')
		move(x(0) y(1))
		move(x(1) x(0))
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: TimeUsed> x(0) cache)
		branch(280493)
lbl(280482)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280493)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280604 280593)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(g(2) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(2) x(0))
		genFastCall(<Q: 1601> 2)
		inlineAt(<M: HeapUsed> x(0) cache)
		move(y(1) x(1))
		inlineMinus(x(1) x(0) x(2))
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('heap allocation: ')
		setValue(x(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('active size: ')
		setValue(y(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(2) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		branch(280604)
lbl(280593)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(93)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280604)	putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		deAllocateL3
		return
lbl(280614)	deAllocateL3
		return
lbl(280616)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(81)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280316)
lbl(280629)	definition(x(8) 280643 pid('Reporter,ProfileEnd/slow' 1 pos('./compiler/Reporter.oz' 80 6) nil 1) unit nil)
		getLiteral(<M: ProfileEnd> x(0))
		genFastCall(<Q: 1607> 1)
		endDefinition(280629)
lbl(280643)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: ProfileEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(280653)	definition(x(7) 280763 pid('Reporter,logDeclare/fast' 1 pos('./compiler/Reporter.oz' 106 6) nil 6) <Q: 1608> [y(6) y(0)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280748 280750)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1602> 4)
		testRecord(y(1) 'pos' 3 280741)
lbl(280701)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) formatPos x(5) cache)
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		call(x(5) 5)
		putRecord('#' 3 x(0))
		setConstant('%%% processing query in ')
		setValue(y(0))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 2) 0)
lbl(280741)	putConstant('%%% processing query' x(0))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280748)	deAllocateL2
		return
lbl(280750)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(107)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280653)
lbl(280763)	definition(x(8) 280789 pid('Reporter,logDeclare/slow' 1 pos('./compiler/Reporter.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1608> 3)
		endDefinition(280763)
lbl(280789)	putRecord('#' [1 2 fast] x(14))
		setConstant(logDeclare)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
lbl(280807)	definition(x(8) 280933 pid('Reporter,logInsert' 1 pos('./compiler/Reporter.oz' 117 6) nil 4) unit [x(7) y(0)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 280855)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(280858)
lbl(280855)	getLiteral(unit y(2))
lbl(280858)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(insert 2 x(0))
		setValue(y(1))
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showinsert x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280918 280920)
		putRecord('#' 3 x(0))
		setConstant('%%%         inserted file "')
		setValue(y(1))
		setConstant('"\n')
		deAllocateL3
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280918)	deAllocateL3
		return
lbl(280920)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280807)
lbl(280933)	putList(x(7))
		setConstant(logInsert)
		setValue(x(8))
lbl(280939)	definition(x(8) 281011 pid('Reporter,logPhase/fast' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) <Q: 1609> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(phase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280996 280998)
		putRecord('#' 3 x(0))
		setConstant('%%%     ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(280996)	deAllocateL2
		return
lbl(280998)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(126)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280939)
lbl(281011)	definition(x(15) 281037 pid('Reporter,logPhase/slow' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1609> 3)
		endDefinition(281011)
lbl(281037)	putRecord('#' [1 2 fast] x(16))
		setConstant(logPhase)
		setValue(x(15))
		setValue(x(8))
lbl(281047)	definition(x(8) 281119 pid('Reporter,logSubPhase/fast' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) <Q: 1610> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(subphase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 281104 281106)
		putRecord('#' 3 x(0))
		setConstant('%%%         ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(281104)	deAllocateL2
		return
lbl(281106)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(133)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(281047)
lbl(281119)	definition(x(15) 281145 pid('Reporter,logSubPhase/slow' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1610> 3)
		endDefinition(281119)
lbl(281145)	putRecord('#' [1 2 fast] x(17))
		setConstant(logSubPhase)
		setValue(x(15))
		setValue(x(8))
lbl(281155)	definition(x(8) 281172 pid('Reporter,logAccept/fast' 0 pos('./compiler/Reporter.oz' 137 6) nil 1) <Q: 1611> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- accepted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281155)
lbl(281172)	definition(x(15) 281186 pid('Reporter,logAccept/slow' 1 pos('./compiler/Reporter.oz' 137 6) nil 1) unit nil)
		getLiteral(logAccept x(0))
		genFastCall(<Q: 1611> 1)
		endDefinition(281172)
lbl(281186)	putRecord('#' [1 2 fast] x(18))
		setConstant(logAccept)
		setValue(x(15))
		setValue(x(8))
lbl(281196)	definition(x(8) 281281 pid('Reporter,logReject/fast' 0 pos('./compiler/Reporter.oz' 141 6) nil 3) <Q: 1612> [y(0)])
		allocateL1
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		createVariable(y(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 281262)
		getRecord('#' 5 y(0))
		unifyLiteral(' (')
		unifyVariable(x(0))
		unifyLiteral(' error')
		unifyVariable(x(1))
		unifyLiteral(')')
		inlineAt(<M: ErrorCount> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<M: ErrorCount> x(0) cache)
		testNumber(x(0) 1 281257)
		getLiteral(nil x(1))
		branch(281265)
lbl(281257)	getLiteral(s x(1))
		branch(281265)
lbl(281262)	getLiteral(nil y(0))
lbl(281265)	putRecord('#' 3 x(0))
		setConstant('%** ------------------ rejected')
		setValue(y(0))
		setConstant('\n')
		deAllocateL1
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281196)
lbl(281281)	definition(x(15) 281295 pid('Reporter,logReject/slow' 1 pos('./compiler/Reporter.oz' 141 6) nil 1) unit nil)
		getLiteral(logReject x(0))
		genFastCall(<Q: 1612> 1)
		endDefinition(281281)
lbl(281295)	putRecord('#' [1 2 fast] x(19))
		setConstant(logReject)
		setValue(x(15))
		setValue(x(8))
lbl(281305)	definition(x(8) 281339 pid('Reporter,logAbort/fast' 0 pos('./compiler/Reporter.oz' 150 6) nil 2) <Q: 1613> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ aborted\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281305)
lbl(281339)	definition(x(15) 281353 pid('Reporter,logAbort/slow' 1 pos('./compiler/Reporter.oz' 150 6) nil 1) unit nil)
		getLiteral(logAbort x(0))
		genFastCall(<Q: 1613> 1)
		endDefinition(281339)
lbl(281353)	putRecord('#' [1 2 fast] x(20))
		setConstant(logAbort)
		setValue(x(15))
		setValue(x(8))
lbl(281363)	definition(x(8) 281386 pid('Reporter,logCrash/fast' 0 pos('./compiler/Reporter.oz' 155 6) nil 1) <Q: 1614> [y(0) g(3)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ compiler crashed\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> true 1) 0)
		endDefinition(281363)
lbl(281386)	definition(x(15) 281400 pid('Reporter,logCrash/slow' 1 pos('./compiler/Reporter.oz' 155 6) nil 1) unit nil)
		getLiteral(logCrash x(0))
		genFastCall(<Q: 1614> 1)
		endDefinition(281386)
lbl(281400)	putRecord('#' [1 2 fast] x(21))
		setConstant(logCrash)
		setValue(x(15))
		setValue(x(8))
lbl(281410)	definition(x(8) 281427 pid('Reporter,logHalt/fast' 0 pos('./compiler/Reporter.oz' 160 6) nil 1) <Q: 1615> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- halting\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281410)
lbl(281427)	definition(x(15) 281441 pid('Reporter,logHalt/slow' 1 pos('./compiler/Reporter.oz' 160 6) nil 1) unit nil)
		getLiteral(logHalt x(0))
		genFastCall(<Q: 1615> 1)
		endDefinition(281427)
lbl(281441)	putRecord('#' [1 2 fast] x(22))
		setConstant(logHalt)
		setValue(x(15))
		setValue(x(8))
lbl(281451)	definition(x(8) 281468 pid('Reporter,logInterrupt/fast' 0 pos('./compiler/Reporter.oz' 164 6) nil 1) <Q: 1616> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- interrupted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281451)
lbl(281468)	definition(x(15) 281482 pid('Reporter,logInterrupt/slow' 1 pos('./compiler/Reporter.oz' 164 6) nil 1) unit nil)
		getLiteral(logInterrupt x(0))
		genFastCall(<Q: 1616> 1)
		endDefinition(281468)
lbl(281482)	putRecord('#' [1 2 fast] x(23))
		setConstant(logInterrupt)
		setValue(x(15))
		setValue(x(8))
lbl(281492)	definition(x(8) 281527 pid('Reporter,displaySource/fast' 3 pos('./compiler/Reporter.oz' 168 6) nil 5) <Q: 1617> nil)
		getSelf(x(3))
		inlineDot(x(3) <M: Wrapper> x(3) cache)
		putRecord(displaySource 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		tailSendMsg(notify x(3) 1 cache)
		endDefinition(281492)
lbl(281527)	definition(x(15) 281568 pid('Reporter,displaySource/slow' 1 pos('./compiler/Reporter.oz' 168 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1617> 7)
		endDefinition(281527)
lbl(281568)	putRecord('#' [1 2 fast] x(24))
		setConstant(displaySource)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(281586)	definition(x(15) 281687 pid('Reporter,userInfo' 1 pos('./compiler/Reporter.oz' 171 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 281634)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(281637)
lbl(281634)	getLiteral(unit y(2))
lbl(281637)	testLiteral(y(2) unit 281662)
lbl(281641)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 1 x(0))
		setValue(y(1))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
lbl(281662)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281586)
lbl(281687)	putList(x(8))
		setConstant(userInfo)
		setValue(x(15))
		putRecord(messagePattern [abort coord items kind msg] x(15))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(281707)	definition(x(25) 282008 pid('Reporter,error' 1 pos('./compiler/Reporter.oz' 179 6) nil 3) unit [x(15) y(0) g(3)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 281746)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(281749)
lbl(281746)	getLiteral(nil y(1))
lbl(281749)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 281772)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(281775)
lbl(281772)	getLiteral(unit y(2))
lbl(281775)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 281798)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(281801)
lbl(281798)	getLiteral(unit y(3))
lbl(281801)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 281824)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(281827)
lbl(281824)	getLiteral(unit y(4))
lbl(281827)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(abort x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 281850)
		inlineDot(x(0) abort x(1) cache)
		unify(x(1) y(5))
		branch(281853)
lbl(281850)	getLiteral(true y(5))
lbl(281853)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(6))
		testLiteral(y(0) unit 281890)
lbl(281885)	unify(y(6) y(1))
		branch(281904)
lbl(281890)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(281904)	putRecord(error [items kind msg] x(2))
		setValue(y(6))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		sendMsg(notify y(2) 1 cache)
		inlineAt(<M: ErrorCount> x(0) cache)
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ErrorCount> x(1) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getMaxNumberOfErrors x(1) 1 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		testLE(x(1) x(0) x(2) 282004)
lbl(281969)	inlineAt(<M: ErrorCount> x(1) cache)
		testLT(x(0) x(1) x(2) 282002)
lbl(281979)	testBool(y(5) 281989 281991)
lbl(281983)	putConstant(tooManyErrors x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(281989)	deAllocateL7
		return
lbl(281991)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(282002)	deAllocateL7
		return
lbl(282004)	deAllocateL7
		return
		endDefinition(281707)
lbl(282008)	putList(x(15))
		setConstant(error)
		setValue(x(25))
		putRecord(messagePattern [coord items kind msg] x(25))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(282026)	definition(x(26) 282227 pid('Reporter,warn' 1 pos('./compiler/Reporter.oz' 199 6) nil 3) unit [x(25) y(0) g(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 282065)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(282068)
lbl(282065)	getLiteral(nil y(1))
lbl(282068)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 282091)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(282094)
lbl(282091)	getLiteral(unit y(2))
lbl(282094)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 282117)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(282120)
lbl(282117)	getLiteral(unit y(3))
lbl(282120)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(1)] 282143)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(282146)
lbl(282143)	getLiteral(unit y(4))
lbl(282146)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(5))
		testLiteral(y(0) unit 282183)
lbl(282178)	unify(y(5) y(1))
		branch(282197)
lbl(282183)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		genFastCall(<P: 21> 6)
lbl(282197)	putRecord(warn [items kind msg] x(2))
		setValue(y(5))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL6
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(282026)
lbl(282227)	putList(x(25))
		setConstant(warn)
		setValue(x(26))
lbl(282233)	definition(x(26) 282270 pid('Reporter,addErrors/fast' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) <Q: 1618> [y(0) g(3)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> false 1) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: ErrorCount> x(2) cache)
		deAllocateL1
		return
		endDefinition(282233)
lbl(282270)	definition(x(27) 282296 pid('Reporter,addErrors/slow' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1618> 3)
		endDefinition(282270)
lbl(282296)	putRecord('#' [1 2 fast] x(28))
		setConstant(addErrors)
		setValue(x(27))
		setValue(x(26))
lbl(282306)	definition(x(26) 282329 pid('Reporter,hasSeenError/fast' 1 pos('./compiler/Reporter.oz' 215 6) nil 4) <Q: 1619> nil)
		inlineAt(<M: ErrorCount> x(1) cache)
		putConstant(0 x(2))
		callBI('Value.\'<\'' [x(2) x(1)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(282306)
lbl(282329)	definition(x(27) 282355 pid('Reporter,hasSeenError/slow' 1 pos('./compiler/Reporter.oz' 215 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1619> 3)
		endDefinition(282329)
lbl(282355)	putRecord('#' [1 2 fast] x(29))
		setConstant(hasSeenError)
		setValue(x(27))
		setValue(x(26))
		putRecord('#' 21 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(8))
		setValue(x(15))
		setValue(x(25))
		setValue(x(28))
		setValue(x(29))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('Reporter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(8) x(0))
		inlineDot(x(0) 'ask' x(3) cache)
		inlineDot(x(3) generic x(3) cache)
		move(y(9) x(1))
		inlineDot(x(1) is x(4) cache)
		move(x(4) x(0))
		putConstant(printName x(1))
		createVariableMove(y(15) x(2))
		call(x(3) 3)
		createVariable(x(7))
lbl(282461)	definition(x(8) 282480 pid('File' 1 pos('./compiler/CheckTupleSyntax.oz' 25 3) nil 2) <Q: 1620> [x(7)])
		match(x(0) ht(282472 [onScalar(parseError 282470) onScalar(fileNotFound 282471)]))
lbl(282470)	return
lbl(282471)	return
lbl(282472)	move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(282461)
lbl(282480)	createVariable(x(8))
lbl(282482)	definition(x(0) 282529 pid('Query' 1 pos('./compiler/CheckTupleSyntax.oz' 32 3) nil 2) <Q: 1621> [x(8)])
		match(x(0) ht(282524 [onScalar(dirLocalSwitches 282491) onScalar(dirPushSwitches 282492) onScalar(dirPopSwitches 282493) onRecord(dirSwitch 1 282494) onRecord(fDeclare 3 282502)]))
lbl(282491)	return
lbl(282492)	return
lbl(282493)	return
lbl(282494)	getVariable(x(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
lbl(282502)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282524)	genFastCall(<Q: 1623> 3)
		endDefinition(282482)
lbl(282529)	unify(x(0) x(7))
lbl(282532)	definition(x(0) 282614 pid('Switch' 1 pos('./compiler/CheckTupleSyntax.oz' 42 3) nil 3) <Q: 1622> [y(8)])
		match(x(0) ht(282599 [onRecord(on 2 282541) onRecord(off 2 282570)]))
lbl(282541)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282570)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282599)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(45)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(282532)
lbl(282614)	unify(x(0) x(8))
		createVariable(x(7))
		createVariable(x(8))
		createVariable(x(9))
		createVariable(x(10))
		createVariable(x(11))
		createVariable(x(12))
		createVariable(x(13))
		createVariable(x(14))
		createVariable(x(15))
		createVariable(x(16))
lbl(282637)	definition(x(0) 283607 pid('Phrase' 1 pos('./compiler/CheckTupleSyntax.oz' 48 3) nil 3) <Q: 1623> [y(8) x(7) y(15) x(8) x(9) x(10) x(11) x(12) x(13) x(14) x(15) x(16)])
		match(x(0) ht(283602 [onRecord(fStepPoint 3 282646) onRecord(fAnd 2 282683) onRecord(fEq 3 282697) onRecord(fAssign 3 282719) onRecord(fOrElse 3 282741) onRecord(fAndThen 3 282763) onRecord(fOpApply 3 282785) onRecord(fOpApplyStatement 3 282825) onRecord(fObjApply 3 282865) onRecord(fAt 2 282887) onRecord(fAtom 2 282901) onRecord(fVar 2 282930) onRecord(fEscape 2 282944) onRecord(fWildcard 1 282987) onRecord(fSelf 1 282992) onRecord(fDollar 1 282997) onRecord(fInt 2 283002) onRecord(fFloat 2 283031) onRecord(fRecord 2 283060) onRecord(fOpenRecord 2 283077) onRecord(fApply 3 283094) onRecord(fProc 5 283119) onRecord(fFun 5 283162) onRecord(fFunctor 3 283205) onRecord(fClass 4 283230) onRecord(fLocal 3 283265) onRecord(fBoolCase 4 283287) onRecord(fCase 4 283316) onRecord(fLockThen 3 283354) onRecord(fLock 2 283376) onRecord(fThread 2 283390) onRecord(fTry 4 283404) onRecord(fRaise 2 283433) onRecord(fRaiseWith 3 283447) onRecord(fSkip 1 283469) onRecord(fFail 1 283474) onRecord(fNot 2 283479) onRecord(fCond 3 283493) onRecord(fOr 3 283518) onRecord(fCondis 2 283574)]))
lbl(282646)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282683)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(282697)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282719)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282741)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282763)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282785)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282825)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282865)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282887)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282901)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282930)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(2) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282944)	allocateL2
		getVarVar(x(0) y(0))
		testRecord(x(0) fVar 2 282967)
lbl(282953)	getVarVar(x(0) y(1))
		genCall(gci(g(2) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		branch(282980)
lbl(282967)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(282980)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282987)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(282992)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(282997)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(283002)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) int x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283031)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) float x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283060)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1624> 2)
		move(y(0) x(0))
		move(g(3) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(283077)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1624> 2)
		move(y(0) x(0))
		move(g(3) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(283094)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283119)	allocateL4
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		move(g(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1652> 3)
lbl(283162)	allocateL4
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		move(g(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1652> 3)
lbl(283205)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(5) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283230)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(6) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		move(g(7) x(1))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283265)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283287)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1651> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283316)	allocateL2
		getVarVar(x(0) y(0))
		getVoid(1)
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
lbl(283327)	definition(x(1) 283341 pid('' 1 pos('./compiler/CheckTupleSyntax.oz' 87 25) nil 2) unit [g(8)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(283327)
lbl(283341)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283354)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283376)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283390)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283404)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1646> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1647> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283433)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283447)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283469)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(283474)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(283479)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283493)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(9) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genFastCall(<Q: 1651> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283518)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		move(x(2) y(0))
		match(x(1) ht(283554 [onScalar(for 283530) onScalar(fdis 283538) onScalar(fchoice 283546)]))
lbl(283530)	move(g(10) x(1))
		genFastCall(<P: 34> 4)
		branch(283567)
lbl(283538)	move(g(9) x(1))
		genFastCall(<P: 34> 4)
		branch(283567)
lbl(283546)	move(g(9) x(1))
		genFastCall(<P: 34> 4)
		branch(283567)
lbl(283554)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(103)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(283567)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283574)	allocateL1
		getVarVar(x(0) y(0))
lbl(283578)	definition(x(1) 283592 pid('' 1 pos('./compiler/CheckTupleSyntax.oz' 106 15) nil 2) unit [g(11)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(283578)
lbl(283592)	genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283602)	genFastCall(<Q: 1632> 3)
		endDefinition(282637)
lbl(283607)	unify(x(0) x(7))
lbl(283610)	definition(x(17) 283677 pid('Label' 1 pos('./compiler/CheckTupleSyntax.oz' 111 3) nil 3) <Q: 1624> [y(8) y(15)])
		match(x(0) ht(283662 [onRecord(fAtom 2 283619) onRecord(fVar 2 283648)]))
lbl(283619)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283648)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283662)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(114)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283610)
lbl(283677)	definition(x(0) 283732 pid('Atom' 1 pos('./compiler/CheckTupleSyntax.oz' 117 3) nil 3) <Q: 1625> [y(8)])
		testRecord(x(0) fAtom 2 283717)
lbl(283688)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283717)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283677)
lbl(283732)	unify(x(0) x(9))
lbl(283735)	definition(x(0) 283765 pid('RecordArgument' 1 pos('./compiler/CheckTupleSyntax.oz' 121 3) nil 1) <Q: 1626> nil)
		testRecord(x(0) fColon 2 283760)
lbl(283746)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1642> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(283760)	genFastCall(<Q: 1623> 3)
		endDefinition(283735)
lbl(283765)	unify(x(0) x(8))
		createVariable(x(8))
		createVariable(x(9))
lbl(283772)	definition(x(0) 283908 pid('FunctorDescriptor' 1 pos('./compiler/CheckTupleSyntax.oz' 127 3) nil 2) <Q: 1627> [x(8) x(9) x(7)])
		match(x(0) ht(283893 [onRecord(fRequire 2 283781) onRecord(fPrepare 3 283798) onRecord(fImport 2 283820) onRecord(fExport 2 283837) onRecord(fProp 2 283854) onRecord(fDefine 3 283871)]))
lbl(283781)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283798)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283820)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283837)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283854)	allocateL1
		getVarVar(x(0) y(0))
		move(g(2) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283871)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283893)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283772)
lbl(283908)	unify(x(0) x(10))
		createVariable(x(10))
lbl(283913)	definition(x(0) 283995 pid('ImportDecl' 1 pos('./compiler/CheckTupleSyntax.oz' 137 3) nil 6) <Q: 1628> [y(15) x(10)])
		allocateL3
		move(x(0) y(0))
		testRecord(y(0) fImportItem 3 283980)
lbl(283928)	getVarVar(x(1) x(2))
		getVariable(x(3))
		shallowGuard(283980)
		getRecord(fVar 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(283943)	shallowThen
		moveMoveXYXY(x(5) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1630> 3)
lbl(283980)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(140)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(283913)
lbl(283995)	unify(x(0) x(8))
lbl(283998)	definition(x(0) 284060 pid('AliasedFeature' 1 pos('./compiler/CheckTupleSyntax.oz' 143 3) nil 5) <Q: 1629> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) '#' 2 284051)
lbl(284013)	getVarVar(x(1) x(2))
		shallowGuard(284051)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(284026)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1643> 3)
lbl(284051)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1643> 3)
		endDefinition(283998)
lbl(284060)	unify(x(0) x(10))
lbl(284063)	definition(x(8) 284093 pid('At' 1 pos('./compiler/CheckTupleSyntax.oz' 149 3) nil 2) <Q: 1630> nil)
		match(x(0) ht(284078 [onScalar(fNoImportAt 284072) onRecord(fImportAt 1 284073)]))
lbl(284072)	return
lbl(284073)	getVariable(x(0))
		genFastCall(<Q: 1625> 3)
lbl(284078)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(152)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284063)
lbl(284093)	definition(x(0) 284189 pid('ExportDecl' 1 pos('./compiler/CheckTupleSyntax.oz' 155 3) nil 2) <Q: 1631> [y(15)])
		testRecord(x(0) fExportItem 1 284174)
lbl(284104)	getVariable(x(0))
		match(x(0) ht(284161 [onRecord(fColon 2 284109) onRecord(fVar 2 284147)]))
lbl(284109)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1643> 2)
		testRecord(y(0) fVar 2 284134)
lbl(284121)	getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284134)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(159)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(284147)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284161)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(161)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(284174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(162)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284093)
lbl(284189)	unify(x(0) x(9))
lbl(284192)	definition(x(0) 284304 pid('FDExpression' 1 pos('./compiler/CheckTupleSyntax.oz' 165 3) nil 3) <Q: 1632> [y(8)])
		match(x(0) ht(284289 [onRecord(fFdCompare 4 284201) onRecord(fFdIn 4 284245)]))
lbl(284201)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284245)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284289)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284192)
lbl(284304)	unify(x(0) x(16))
		createVariable(x(8))
lbl(284309)	definition(x(0) 284401 pid('ClassDescriptor' 1 pos('./compiler/CheckTupleSyntax.oz' 173 3) nil 2) <Q: 1633> [x(7) x(8)])
		match(x(0) ht(284386 [onRecord(fFrom 2 284318) onRecord(fProp 2 284335) onRecord(fAttr 2 284352) onRecord(fFeat 2 284369)]))
lbl(284318)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284335)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284352)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284369)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284386)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284309)
lbl(284401)	unify(x(0) x(11))
lbl(284404)	definition(x(0) 284434 pid('AttrFeat' 1 pos('./compiler/CheckTupleSyntax.oz' 181 3) nil 1) <Q: 1634> nil)
		testRecord(x(0) '#' 2 284429)
lbl(284415)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1644> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(284429)	genFastCall(<Q: 1623> 3)
		endDefinition(284404)
lbl(284434)	unify(x(0) x(8))
lbl(284437)	definition(x(0) 284485 pid('Meth' 1 pos('./compiler/CheckTupleSyntax.oz' 187 3) nil 2) <Q: 1635> nil)
		testRecord(x(0) fMeth 3 284470)
lbl(284448)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1636> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284470)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(188)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284437)
lbl(284485)	unify(x(0) x(12))
lbl(284488)	definition(x(7) 284561 pid('MethHead' 1 pos('./compiler/CheckTupleSyntax.oz' 191 3) nil 6) <Q: 1636> [y(15)])
		allocateL3
		move(x(0) y(0))
		testRecord(y(0) fEq 3 284552)
lbl(284503)	getVarVar(x(1) x(2))
		getVariable(x(3))
		shallowGuard(284552)
		getRecord(fVar 2 x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(284518)	shallowThen
		moveMoveXYXY(x(4) y(0) x(5) y(1))
		move(x(3) y(2))
		move(x(1) x(0))
		genFastCall(<Q: 1637> 2)
		move(y(0) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284552)	move(y(0) x(0))
		deAllocateL3
		genFastCall(<Q: 1637> 3)
		endDefinition(284488)
lbl(284561)	createVariable(x(7))
lbl(284563)	definition(x(8) 284707 pid('MethHead1' 1 pos('./compiler/CheckTupleSyntax.oz' 198 3) nil 3) <Q: 1637> [y(8) y(15) x(7)])
		match(x(0) ht(284692 [onRecord(fAtom 2 284572) onRecord(fVar 2 284601) onRecord(fEscape 2 284615) onRecord(fRecord 2 284658) onRecord(fOpenRecord 2 284675)]))
lbl(284572)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284601)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284615)	allocateL2
		getVarVar(x(0) y(0))
		testRecord(x(0) fVar 2 284638)
lbl(284624)	getVarVar(x(0) y(1))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		branch(284651)
lbl(284638)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(284651)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284658)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1638> 2)
		move(y(0) x(0))
		move(g(2) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(284675)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1638> 2)
		move(y(0) x(0))
		move(g(2) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(284692)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284563)
lbl(284707)	definition(x(8) 284769 pid('MethHeadLabel' 1 pos('./compiler/CheckTupleSyntax.oz' 210 3) nil 5) <Q: 1638> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) fEscape 2 284760)
lbl(284722)	getVarVar(x(1) x(2))
		shallowGuard(284760)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(284735)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284760)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1624> 3)
		endDefinition(284707)
lbl(284769)	definition(x(0) 284829 pid('MethHeadArgument' 1 pos('./compiler/CheckTupleSyntax.oz' 217 3) nil 2) <Q: 1639> nil)
		match(x(0) ht(284814 [onRecord(fMethArg 2 284778) onRecord(fMethColonArg 3 284792)]))
lbl(284778)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1640> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1641> 3)
lbl(284792)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1642> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1640> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1641> 3)
lbl(284814)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(220)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284769)
lbl(284829)	unify(x(0) x(7))
lbl(284832)	definition(x(7) 284880 pid('MethHeadTerm' 1 pos('./compiler/CheckTupleSyntax.oz' 223 3) nil 2) <Q: 1640> [y(15)])
		match(x(0) ht(284865 [onRecord(fVar 2 284841) onRecord(fWildcard 1 284855) onRecord(fDollar 1 284860)]))
lbl(284841)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284855)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(284860)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(284865)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(227)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284832)
lbl(284880)	definition(x(7) 284919 pid('Default' 1 pos('./compiler/CheckTupleSyntax.oz' 230 3) nil 2) <Q: 1641> nil)
		match(x(0) ht(284904 [onScalar(fNoDefault 284889) onRecord(fDefault 2 284890)]))
lbl(284889)	return
lbl(284890)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284904)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(233)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284880)
lbl(284919)	definition(x(7) 284949 pid('Feature' 1 pos('./compiler/CheckTupleSyntax.oz' 236 3) nil 1) <Q: 1642> [y(15)])
		testRecord(x(0) fVar 2 284944)
lbl(284930)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284944)	genFastCall(<Q: 1643> 3)
		endDefinition(284919)
lbl(284949)	definition(x(7) 285031 pid('FeatureNoVar' 1 pos('./compiler/CheckTupleSyntax.oz' 242 3) nil 3) <Q: 1643> [y(8)])
		match(x(0) ht(285016 [onRecord(fAtom 2 284958) onRecord(fInt 2 284987)]))
lbl(284958)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284987)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) int x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(285016)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284949)
lbl(285031)	definition(x(7) 285093 pid('EscapedFeature' 1 pos('./compiler/CheckTupleSyntax.oz' 248 3) nil 5) <Q: 1644> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) fEscape 2 285084)
lbl(285046)	getVarVar(x(1) x(2))
		shallowGuard(285084)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(285059)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(285084)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1642> 3)
		endDefinition(285031)
lbl(285093)	definition(x(0) 285133 pid('CaseClause' 1 pos('./compiler/CheckTupleSyntax.oz' 255 3) nil 2) <Q: 1645> nil)
		testRecord(x(0) fCaseClause 2 285118)
lbl(285104)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(285118)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285093)
lbl(285133)	unify(x(0) x(13))
lbl(285136)	definition(x(7) 285178 pid('Catch' 1 pos('./compiler/CheckTupleSyntax.oz' 259 3) nil 2) <Q: 1646> [x(13)])
		match(x(0) ht(285163 [onScalar(fNoCatch 285145) onRecord(fCatch 2 285146)]))
lbl(285145)	return
lbl(285146)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(285163)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(262)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285136)
lbl(285178)	definition(x(7) 285194 pid('Finally' 1 pos('./compiler/CheckTupleSyntax.oz' 265 3) nil 1) <Q: 1647> nil)
		testLiteral(x(0) fNoFinally 285189)
lbl(285188)	return
lbl(285189)	genFastCall(<Q: 1623> 3)
		endDefinition(285178)
lbl(285194)	definition(x(0) 285242 pid('Clause' 1 pos('./compiler/CheckTupleSyntax.oz' 271 3) nil 2) <Q: 1648> nil)
		testRecord(x(0) fClause 3 285227)
lbl(285205)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1623> 3)
lbl(285227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(272)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285194)
lbl(285242)	unify(x(0) x(14))
lbl(285245)	definition(x(0) 285293 pid('ClauseOptThen' 1 pos('./compiler/CheckTupleSyntax.oz' 275 3) nil 2) <Q: 1649> nil)
		testRecord(x(0) fClause 3 285278)
lbl(285256)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1650> 3)
lbl(285278)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(278)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285245)
lbl(285293)	unify(x(0) x(15))
lbl(285296)	definition(x(7) 285317 pid('OptThen' 1 pos('./compiler/CheckTupleSyntax.oz' 281 3) nil 1) <Q: 1650> nil)
		testRecord(x(0) fNoThen 1 285312)
lbl(285307)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(285312)	genFastCall(<Q: 1623> 3)
		endDefinition(285296)
lbl(285317)	definition(x(7) 285338 pid('OptElse' 1 pos('./compiler/CheckTupleSyntax.oz' 287 3) nil 1) <Q: 1651> nil)
		testRecord(x(0) fNoElse 1 285333)
lbl(285328)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(285333)	genFastCall(<Q: 1623> 3)
		endDefinition(285317)
lbl(285338)	definition(x(7) 286242 pid('Coord' 1 pos('./compiler/CheckTupleSyntax.oz' 293 3) nil 4) <Q: 1652> [y(8)])
		match(x(0) ht(286227 [onScalar(unit 285347) onRecord('pos' 3 285348) onRecord('pos' 6 285446) onRecord(fineStep 3 285641) onRecord(fineStep 6 285739) onRecord(coarseStep 3 285934) onRecord(coarseStep 6 286032)]))
lbl(285347)	return
lbl(285348)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(285446)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(285641)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(285739)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(285934)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(286032)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('Value.\'<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('Value.\'=<\'' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(286227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(316)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285338)
lbl(286242)	definition(x(7) 286400 pid('CheckTupleSyntax' 1 pos('./compiler/CheckTupleSyntax.oz' 319 3) nil 3) <Q: 1653> [g(5)])
		allocateL2
		move(x(0) y(0))
		exHandler(286389)
		move(x(0) y(0))
		createCond(286302)
lbl(286259)	lastClause
		clause
		thread(286292)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(kernel 2 x(1))
		unifyLiteral(noElse)
		unifyVoid(1)
		deAllocateL2
		return
lbl(286292)	ask
lbl(286293)	putRecord(compiler 1 x(0))
		setConstant(malformedSyntaxTree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286302)	createCond(286353)
lbl(286304)	lastClause
		clause
		createVariable(y(1))
		thread(286341)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(kernel 3 x(1))
		unifyLiteral(noElse)
		unifyVoid(1)
		unifyValue(y(1))
		deAllocateL2
		return
lbl(286341)	ask
lbl(286342)	putRecord(compiler 2 x(0))
		setConstant(malformedSyntaxTree)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286353)	createCond(286383)
lbl(286355)	lastClause
		clause
		thread(286373)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(286373)	ask
lbl(286374)	putRecord(compiler 1 x(0))
		setConstant(malformedSyntaxTree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286383)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(286389)	move(y(0) x(0))
		genFastCall(<Q: 1620> 2)
		popEx
		deAllocateL2
		return
		endDefinition(286242)
lbl(286400)	definition(x(7) 286527 pid('EnumerateVersionNumbers' 3 pos('./compiler/CompilerClass.oz' 27 3) nil 5) <Q: 1654> [g(6) g(7)])
		allocateL5
lbl(286407)	definition(x(4) 286425 pid('' 2 pos('./compiler/CompilerClass.oz' 28 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(286407)
lbl(286425)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(4) x(2))
		callBI('String.toAtom' [x(2)]#[x(3)])
		unify(x(3) x(0))
		match(y(3) ht(286512 [onScalar(nil 286471) onRecord('|' 2 286476)]))
lbl(286471)	getLiteral(nil x(1))
		deAllocateL5
		return
lbl(286476)	getVoid(1)
		getVariable(y(0))
		putList(x(3))
		setConstant(95)
		setConstant(nil)
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1654> 7)
lbl(286512)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(33)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286400)
lbl(286527)	putRecord(switches [allowdeprecated codegen compilerpasses core debuginfocontrol debuginfonamevars debuginfovarnames debugtype debugvalue echoqueries expression feedtoemulator gump gumpparseroutputsimplified gumpparserverbose gumpscannerbackup gumpscannerbestfit gumpscannercaseless gumpscannernowarn gumpscannerperfreport gumpscannerstatistics outputcode ozma profile realcore runwithdebugger showcompilememory showcompiletime showdeclares showinsert staticanalysis threadedqueries unnest warnforward warnopt warnredecl warnunused warnunusedformals watchdog] x(7))
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord('attr' [defines localSwitches maxNumberOfErrors productionTemplates savedSwitches switches] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(17)
		setConstant(unit)
		setConstant(nil)
		setValue(x(7))
		putRecord('feat' [values variables] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(15))
lbl(286635)	definition(x(7) 286770 pid('CompilerStateClass,init/fast' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 4) <Q: 1655> [g(1) y(4) y(15)])
		allocateL3
		move(g(1) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		callBI('Atom.toString' [x(0)]#[x(3)])
lbl(286669)	definition(x(1) 286689 pid('' 2 pos('./compiler/CompilerClass.oz' 113 8) nil 2) unit nil)
		testNumber(x(0) 46 286683)
lbl(286679)	getNumber(95 x(1))
		return
lbl(286683)	unify(x(1) x(0))
		return
		endDefinition(286669)
lbl(286689)	move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(2))
		setConstant(95)
		setConstant(nil)
		putList(x(0))
		setConstant(122)
		setValue(x(2))
		putList(x(1))
		setConstant(79)
		setValue(x(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1654> 6)
		move(y(2) x(0))
		inlineAssign(defines x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) variables x(0) cache)
		callBI('Dictionary.new' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		callBI('Dictionary.new' nil#[x(1)])
		unify(x(1) x(0))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(2) true putEnv true 1) 0)
		endDefinition(286635)
lbl(286770)	definition(x(8) 286796 pid('CompilerStateClass,init/slow' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1655> 3)
		endDefinition(286770)
lbl(286796)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(286806)	definition(x(7) 286881 pid('CompilerStateClass,macroDefine/fast' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 4) <Q: 1656> [g(7) g(8)])
		allocateL2
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('String.toAtom' [x(0)]#[x(1)])
		inlineAt(defines x(3) cache)
		moveMoveXYYX(x(1) y(0) y(0) x(0))
		move(x(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 286850 286868)
		deAllocateL2
		return
lbl(286850)	inlineAt(defines x(0) cache)
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(defines x(1) cache)
		deAllocateL2
		return
lbl(286868)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(123)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286806)
lbl(286881)	definition(x(8) 286907 pid('CompilerStateClass,macroDefine/slow' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1656> 3)
		endDefinition(286881)
lbl(286907)	putRecord('#' [1 2 fast] x(10))
		setConstant(macroDefine)
		setValue(x(8))
		setValue(x(7))
lbl(286917)	definition(x(7) 286977 pid('CompilerStateClass,macroUndef/fast' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 4) <Q: 1657> [g(7) g(8)])
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('String.toAtom' [x(0)]#[x(3)])
		inlineAt(defines x(0) cache)
lbl(286941)	definition(x(1) 286959 pid('' 2 pos('./compiler/CompilerClass.oz' 129 30) nil 4) unit [x(3)])
		move(g(0) x(2))
		callBI('Value.\'\\=\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(286941)
lbl(286959)	createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(defines x(0) cache)
		deAllocateL1
		return
		endDefinition(286917)
lbl(286977)	definition(x(8) 287003 pid('CompilerStateClass,macroUndef/slow' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1657> 3)
		endDefinition(286977)
lbl(287003)	putRecord('#' [1 2 fast] x(11))
		setConstant(macroUndef)
		setValue(x(8))
		setValue(x(7))
lbl(287013)	definition(x(7) 287030 pid('CompilerStateClass,getDefines/fast' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 2) <Q: 1658> nil)
		inlineAt(defines x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(287013)
lbl(287030)	definition(x(8) 287056 pid('CompilerStateClass,getDefines/slow' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1658> 3)
		endDefinition(287030)
lbl(287056)	putRecord('#' [1 2 fast] x(12))
		setConstant(getDefines)
		setValue(x(8))
		setValue(x(7))
lbl(287066)	definition(x(7) 287083 pid('CompilerStateClass,on/fast' 2 pos('./compiler/CompilerClass.oz' 135 6) nil 3) <Q: 1659> [y(15) g(3)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(287066)
lbl(287083)	definition(x(8) 287118 pid('CompilerStateClass,on/slow' 1 pos('./compiler/CompilerClass.oz' 135 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1659> 5)
		endDefinition(287083)
lbl(287118)	putRecord('#' [1 2 fast] x(13))
		setConstant(on)
		setValue(x(8))
		setValue(x(7))
lbl(287128)	definition(x(7) 287145 pid('CompilerStateClass,off/fast' 2 pos('./compiler/CompilerClass.oz' 138 6) nil 3) <Q: 1660> [y(15) g(4)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(287128)
lbl(287145)	definition(x(8) 287180 pid('CompilerStateClass,off/slow' 1 pos('./compiler/CompilerClass.oz' 138 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1660> 5)
		endDefinition(287145)
lbl(287180)	putRecord('#' [1 2 fast] x(14))
		setConstant(off)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 3 x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(287200)	definition(x(8) 287558 pid('CompilerStateClass,setSwitch' 1 pos('./compiler/CompilerClass.oz' 141 6) nil 9) unit [x(7)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariable(y(3))
		putConstant(3 x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(4)] 287256)
		inlineDot(x(0) 3 x(3) cache)
		unify(x(3) y(3))
		branch(287259)
lbl(287256)	getLiteral(unit y(3))
lbl(287259)	match(y(1) ht(287403 [onScalar(verbose 287262) onScalar(debuginfo 287322)]))
lbl(287262)	inlineAt(switches x(0) cache)
		putRecord(switches [compilerpasses showinsert] x(1))
		setValue(y(2))
		setValue(y(2))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(compilerpasses)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(showinsert)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(287322)	inlineAt(switches x(0) cache)
		putRecord(switches [debuginfocontrol debuginfovarnames runwithdebugger] x(1))
		setValue(y(2))
		setValue(y(2))
		setValue(y(2))
		callBI('Record.adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(runwithdebugger)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(287403)	inlineAt(switches x(0) cache)
		move(y(1) x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 287451)
		inlineAt(switches x(0) cache)
		move(y(2) x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		inlineAssign(switches x(3) cache)
		inlineAt(wrapper x(3) cache)
		putRecord(switch 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(3) 1 cache)
lbl(287451)	testLiteral(y(3) unit 287525)
		inlineAt(reporter x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		putRecord(setSwitch 2 x(8))
		setValue(y(1))
		setValue(y(2))
		putRecord(oz 1 x(7))
		setValue(x(8))
		putRecord(hint [l m] x(6))
		setConstant('Query')
		setValue(x(7))
		putList(x(2))
		setValue(x(6))
		setConstant(nil)
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(3))
		sendMsg(error x(5) [abort coord items kind msg] cache)
		inlineAt(reporter x(0) cache)
		deAllocateL4
		tailSendMsg(logReject x(0) 0 cache)
lbl(287525)	inlineAt(reporter x(4) cache)
		putRecord('#' 3 x(3))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler directive error' x(2))
		deAllocateL4
		tailSendMsg(error x(4) [abort coord kind msg] cache)
		endDefinition(287200)
lbl(287558)	putList(x(7))
		setConstant(setSwitch)
		setValue(x(8))
lbl(287564)	definition(x(8) 287584 pid('CompilerStateClass,getSwitch/fast' 2 pos('./compiler/CompilerClass.oz' 172 6) nil 4) <Q: 1661> nil)
		inlineAt(switches x(2) cache)
		callBI('Record.\'.\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(287564)
lbl(287584)	definition(x(15) 287619 pid('CompilerStateClass,getSwitch/slow' 1 pos('./compiler/CompilerClass.oz' 172 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1661> 5)
		endDefinition(287584)
lbl(287619)	putRecord('#' [1 2 fast] x(16))
		setConstant(getSwitch)
		setValue(x(15))
		setValue(x(8))
lbl(287629)	definition(x(8) 287668 pid('CompilerStateClass,localSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 175 6) nil 3) <Q: 1662> nil)
		inlineAt(localSwitches x(0) cache)
		testLiteral(x(0) unit 287665)
lbl(287644)	inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(localSwitches x(2) cache)
lbl(287665)	return
		endDefinition(287629)
lbl(287668)	definition(x(15) 287682 pid('CompilerStateClass,localSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 175 6) nil 1) unit nil)
		getLiteral(localSwitches x(0))
		genFastCall(<Q: 1662> 1)
		endDefinition(287668)
lbl(287682)	putRecord('#' [1 2 fast] x(17))
		setConstant(localSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287692)	definition(x(8) 287744 pid('CompilerStateClass,unlocalSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 181 6) nil 2) <Q: 1663> nil)
		inlineAt(localSwitches x(0) cache)
		match(x(0) ht(287729 [onScalar(unit 287706) onRecord('|' 2 287707)]))
lbl(287706)	return
lbl(287707)	getVarVar(x(0) x(1))
		inlineAssign(switches x(0) cache)
		inlineAssign(savedSwitches x(1) cache)
		putConstant(unit x(0))
		inlineAssign(localSwitches x(0) cache)
		return
lbl(287729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(187)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(287692)
lbl(287744)	definition(x(15) 287758 pid('CompilerStateClass,unlocalSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 181 6) nil 1) unit nil)
		getLiteral(unlocalSwitches x(0))
		genFastCall(<Q: 1663> 1)
		endDefinition(287744)
lbl(287758)	putRecord('#' [1 2 fast] x(18))
		setConstant(unlocalSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287768)	definition(x(8) 287798 pid('CompilerStateClass,pushSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 189 6) nil 3) <Q: 1664> nil)
		inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedSwitches x(2) cache)
		return
		endDefinition(287768)
lbl(287798)	definition(x(15) 287812 pid('CompilerStateClass,pushSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 189 6) nil 1) unit nil)
		getLiteral(pushSwitches x(0))
		genFastCall(<Q: 1664> 1)
		endDefinition(287798)
lbl(287812)	putRecord('#' [1 2 fast] x(19))
		setConstant(pushSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287822)	definition(x(8) 287893 pid('CompilerStateClass,popSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 192 6) nil 3) <Q: 1665> nil)
		inlineAt(savedSwitches x(0) cache)
		match(x(0) ht(287878 [onScalar(nil 287836) onRecord('|' 2 287837)]))
lbl(287836)	return
lbl(287837)	allocateL1
		getVarVar(x(1) y(0))
		inlineAssign(switches x(1) cache)
		inlineAt(wrapper x(1) cache)
		inlineAt(switches x(2) cache)
		putRecord(switches 1 x(0))
		setValue(x(2))
		sendMsg(notify x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(savedSwitches x(0) cache)
		deAllocateL1
		return
lbl(287878)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(198)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(287822)
lbl(287893)	definition(x(15) 287907 pid('CompilerStateClass,popSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 192 6) nil 1) unit nil)
		getLiteral(popSwitches x(0))
		genFastCall(<Q: 1665> 1)
		endDefinition(287893)
lbl(287907)	putRecord('#' [1 2 fast] x(20))
		setConstant(popSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287917)	definition(x(8) 287950 pid('CompilerStateClass,setMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) <Q: 1666> nil)
		inlineAssign(maxNumberOfErrors x(0) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(maxNumberOfErrors 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(287917)
lbl(287950)	definition(x(15) 287976 pid('CompilerStateClass,setMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1666> 3)
		endDefinition(287950)
lbl(287976)	putRecord('#' [1 2 fast] x(21))
		setConstant(setMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
lbl(287986)	definition(x(8) 288003 pid('CompilerStateClass,getMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 2) <Q: 1667> nil)
		inlineAt(maxNumberOfErrors x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(287986)
lbl(288003)	definition(x(15) 288029 pid('CompilerStateClass,getMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1667> 3)
		endDefinition(288003)
lbl(288029)	putRecord('#' [1 2 fast] x(22))
		setConstant(getMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 3 x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(288049)	definition(x(15) 288175 pid('CompilerStateClass,enter' 1 pos('./compiler/CompilerClass.oz' 209 6) nil 4) unit [x(8) y(15) g(9)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 288095)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(288095)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(3 x(3))
		testBI('Value.hasFeature' [x(0) x(3)]#[x(1)] 288118)
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(3))
		branch(288121)
lbl(288118)	getLiteral(true y(3))
lbl(288121)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		genCall(gci(g(1) true <M: Enter> false 3) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288049)
lbl(288175)	putList(x(8))
		setConstant(enter)
		setValue(x(15))
lbl(288181)	definition(x(15) 288257 pid('CompilerStateClass,enterMultiple/fast' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 4) <Q: 1668> [y(15) g(3) g(9)])
		allocateL2
		getSelf(x(2))
lbl(288190)	definition(x(1) 288211 pid('' 1 pos('./compiler/CompilerClass.oz' 214 13) nil 3) unit [x(2) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(2) x(2))
		createVariable(x(1))
		genCall(gci(g(1) true <M: Enter> true 3) 0)
		endDefinition(288190)
lbl(288211)	genFastCall(<P: 34> 4)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288181)
lbl(288257)	definition(x(23) 288283 pid('CompilerStateClass,enterMultiple/slow' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1668> 3)
		endDefinition(288257)
lbl(288283)	putRecord('#' [1 2 fast] x(24))
		setConstant(enterMultiple)
		setValue(x(23))
		setValue(x(15))
lbl(288293)	definition(x(15) 288410 pid('CompilerStateClass,Enter/fast' 3 pos('./compiler/CompilerClass.oz' 217 6) nil 5) <Q: 1669> [g(10) y(3)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) variables x(0) cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		move(y(1) x(3))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		callBI('Value.isDet' [x(3)]#[x(0)])
		testBI('Bool.not' [x(0)]#[x(4)] 288386)
lbl(288354)	testBool(y(2) 288386 288375)
lbl(288358)	move(g(1) x(0))
		inlineDot(x(0) nameVariable x(4) cache)
		move(y(1) x(0))
		call(x(4) 2)
		branch(288386)
lbl(288375)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(221)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288386)	putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(288293)
lbl(288410)	definition(x(23) 288451 pid('CompilerStateClass,Enter/slow' 1 pos('./compiler/CompilerClass.oz' 217 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1669> 7)
		endDefinition(288410)
lbl(288451)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: Enter>)
		setValue(x(23))
		setValue(x(15))
lbl(288461)	definition(x(15) 288536 pid('CompilerStateClass,putEnv/fast' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 4) <Q: 1670> [g(11) y(15) g(9)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		getSelf(x(1))
		inlineDot(x(1) values x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		genCall(gci(g(1) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288461)
lbl(288536)	definition(x(23) 288562 pid('CompilerStateClass,putEnv/slow' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1670> 3)
		endDefinition(288536)
lbl(288562)	putRecord('#' [1 2 fast] x(26))
		setConstant(putEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288572)	definition(x(15) 288625 pid('CompilerStateClass,mergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 4) <Q: 1671> [y(15) g(9)])
		allocateL2
		genCall(gci(g(0) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288572)
lbl(288625)	definition(x(23) 288651 pid('CompilerStateClass,mergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1671> 3)
		endDefinition(288625)
lbl(288651)	putRecord('#' [1 2 fast] x(27))
		setConstant(mergeEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288661)	definition(x(15) 288729 pid('CompilerStateClass,MergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) <Q: 1672> [g(12) y(12) y(15) g(3)])
		getSelf(x(2))
lbl(288669)	definition(x(1) 288724 pid('' 2 pos('./compiler/CompilerClass.oz' 239 3) nil 6) unit [x(2) g(1) g(2) g(3)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		move(g(1) x(3))
		inlineDot(x(3) variable x(4) cache)
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(1) 3 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(g(3) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: Enter> true 3) 0)
		endDefinition(288669)
lbl(288724)	genFastCall(<P: 175> 5)
		endDefinition(288661)
lbl(288729)	definition(x(23) 288755 pid('CompilerStateClass,MergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1672> 3)
		endDefinition(288729)
lbl(288755)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: MergeEnv>)
		setValue(x(23))
		setValue(x(15))
lbl(288765)	definition(x(15) 288831 pid('CompilerStateClass,annotateEnv/fast' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) <Q: 1673> [g(13)])
		getSelf(x(2))
lbl(288773)	definition(x(1) 288826 pid('' 1 pos('./compiler/CompilerClass.oz' 246 3) nil 3) unit [x(2) g(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(valToSubst x(1) 1 cache)
		endDefinition(288773)
lbl(288826)	genFastCall(<P: 34> 5)
		endDefinition(288765)
lbl(288831)	definition(x(23) 288857 pid('CompilerStateClass,annotateEnv/slow' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1673> 3)
		endDefinition(288831)
lbl(288857)	putRecord('#' [1 2 fast] x(29))
		setConstant(annotateEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288867)	definition(x(15) 288892 pid('CompilerStateClass,getEnv/fast' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 4) <Q: 1674> [g(9)])
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) x(2))
		putConstant(env x(0))
		genFastCall(<P: 108> 7)
		endDefinition(288867)
lbl(288892)	definition(x(23) 288918 pid('CompilerStateClass,getEnv/slow' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1674> 3)
		endDefinition(288892)
lbl(288918)	putRecord('#' [1 2 fast] x(30))
		setConstant(getEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288928)	definition(x(15) 288954 pid('CompilerStateClass,lookupVariableInEnv/fast' 2 pos('./compiler/CompilerClass.oz' 255 6) nil 5) <Q: 1675> [g(14)])
		getSelf(x(2))
		inlineDot(x(2) variables x(2) cache)
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(288928)
lbl(288954)	definition(x(23) 288989 pid('CompilerStateClass,lookupVariableInEnv/slow' 1 pos('./compiler/CompilerClass.oz' 255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1675> 5)
		endDefinition(288954)
lbl(288989)	putRecord('#' [1 2 fast] x(31))
		setConstant(lookupVariableInEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288999)	definition(x(15) 289109 pid('CompilerStateClass,lookupInEnv' 1 pos('./compiler/CompilerClass.oz' 258 6) nil 9) unit [g(15) g(13)])
		putConstant(2 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		testBI('Dictionary.member' [x(3) x(1)]#[x(4)] 289053)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(289053)	inlineAt(reporter x(4) cache)
		putRecord(oz 1 x(5))
		setValue(x(1))
		putRecord('#' 2 x(3))
		setConstant('undeclared variable ')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(0))
		putRecord(hint [l m] x(7))
		setConstant('Query')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		tailSendMsg(error x(4) [abort items kind msg] cache)
		endDefinition(288999)
lbl(289109)	putList(x(23))
		setConstant(lookupInEnv)
		setValue(x(15))
lbl(289115)	definition(x(15) 289187 pid('CompilerStateClass,removeFromEnv/fast' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 4) <Q: 1676> [g(16) g(9)])
		allocateL2
		getSelf(x(3))
		inlineDot(x(3) variables x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(289115)
lbl(289187)	definition(x(32) 289213 pid('CompilerStateClass,removeFromEnv/slow' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1676> 3)
		endDefinition(289187)
lbl(289213)	putRecord('#' [1 2 fast] x(33))
		setConstant(removeFromEnv)
		setValue(x(32))
		setValue(x(15))
lbl(289223)	definition(x(15) 289246 pid('CompilerStateClass,getVars/fast' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) <Q: 1677> [g(17)])
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(289223)
lbl(289246)	definition(x(32) 289272 pid('CompilerStateClass,getVars/slow' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1677> 3)
		endDefinition(289246)
lbl(289272)	putRecord('#' [1 2 fast] x(34))
		setConstant(getVars)
		setValue(x(32))
		setValue(x(15))
		putRecord('#' 26 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(8))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(23))
		setValue(x(33))
		setValue(x(34))
		move(y(15) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('CompilerStateClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(15))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ExecutingThread> <M: InterruptLock> <M: ParseFile> <M: ParseVirtualString> reporter wrapper] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(3))
		createVariable(y(16))
lbl(289385)	definition(x(7) 289492 pid('CompilerInternal,init/fast' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 4) <Q: 1678> [g(18) y(15) y(0) y(3) y(16)])
		allocateL2
		inlineAssign(wrapper x(0) cache)
		putConstant('Boot.builtin' x(1))
		putConstant(3 x(2))
		callBI('Boot.builtin' [x(1) x(2)]#[x(3)])
		putRecord(env ['`Builtin`' '`Compiler`'] x(1))
		setValue(x(3))
		setValue(x(0))
		move(g(0) x(2))
		callBI('Record.adjoin' [x(2) x(1)]#[x(3)])
		move(x(0) y(0))
		move(x(3) x(0))
		genCall(gci(g(1) true init false 1) 0)
		move(g(2) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		inlineAssign(reporter x(0) cache)
		move(g(3) x(0))
		inlineAssign(<M: ParseFile> x(0) cache)
		move(g(4) x(1))
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		putConstant(unit x(2))
		inlineAssign(<M: ExecutingThread> x(2) cache)
		callBI('Lock.new' nil#[x(2)])
		inlineAssign(<M: InterruptLock> x(2) cache)
		deAllocateL2
		return
		endDefinition(289385)
lbl(289492)	definition(x(8) 289518 pid('CompilerInternal,init/slow' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1678> 3)
		endDefinition(289492)
lbl(289518)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(289528)	definition(x(7) 289545 pid('CompilerInternal,getReporter/fast' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 2) <Q: 1679> nil)
		inlineAt(reporter x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(289528)
lbl(289545)	definition(x(8) 289571 pid('CompilerInternal,getReporter/slow' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1679> 3)
		endDefinition(289545)
lbl(289571)	putRecord('#' [1 2 fast] x(10))
		setConstant(getReporter)
		setValue(x(8))
		setValue(x(7))
lbl(289581)	definition(x(7) 289695 pid('CompilerInternal,notifyOne/fast' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 4) <Q: 1680> [y(4) g(9)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putRecord('#' 3 x(1))
		setConstant('Mozart Compiler ')
		setValue(y(1))
		setConstant(' playing Oz 3\n\n')
		putRecord(info 1 x(0))
		setValue(x(1))
		move(y(0) x(1))
		callBI('Port.send' [x(1) x(0)]#nil)
		inlineAt(switches x(3) cache)
		putRecord(switches 1 x(0))
		setValue(x(3))
		callBI('Port.send' [x(1) x(0)]#nil)
		inlineAt(maxNumberOfErrors x(3) cache)
		putRecord(maxNumberOfErrors 1 x(0))
		setValue(x(3))
		callBI('Port.send' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		move(x(3) x(1))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		callBI('Port.send' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(289581)
lbl(289695)	definition(x(8) 289721 pid('CompilerInternal,notifyOne/slow' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1680> 3)
		endDefinition(289695)
lbl(289721)	putRecord('#' [1 2 fast] x(11))
		setConstant(notifyOne)
		setValue(x(8))
		setValue(x(7))
lbl(289731)	definition(x(7) 289762 pid('CompilerInternal,ping/fast' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 2) <Q: 1681> nil)
		allocateL1
		inlineAt(wrapper x(1) cache)
		move(x(0) y(0))
		putConstant(pong x(0))
		sendMsg(notify x(1) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(289731)
lbl(289762)	definition(x(8) 289788 pid('CompilerInternal,ping/slow' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1681> 3)
		endDefinition(289762)
lbl(289788)	putRecord('#' [1 2 fast] x(12))
		setConstant(ping)
		setValue(x(8))
		setValue(x(7))
lbl(289798)	definition(x(7) 289817 pid('CompilerInternal,setFrontEnd/fast' 2 pos('./compiler/CompilerClass.oz' 345 6) nil 2) <Q: 1682> nil)
		inlineAssign(<M: ParseFile> x(0) cache)
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		return
		endDefinition(289798)
lbl(289817)	definition(x(8) 289852 pid('CompilerInternal,setFrontEnd/slow' 1 pos('./compiler/CompilerClass.oz' 345 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1682> 5)
		endDefinition(289817)
lbl(289852)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFrontEnd)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(289864)	definition(x(7) 289931 pid('CompilerInternal,feedFile/fast' 2 pos('./compiler/CompilerClass.oz' 349 6) nil 4) <Q: 1683> [y(0)])
		getSelf(x(2))
lbl(289872)	definition(x(3) 289923 pid('' 0 pos('./compiler/CompilerClass.oz' 351 14) nil 3) unit [x(2) x(0) x(1) g(0)])
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		putRecord('#' 3 x(2))
		setConstant('%%% feeding file ')
		setValue(g(1))
		setConstant('\n')
		move(x(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		inlineAt(<M: ParseFile> x(0) cache)
		move(g(1) x(1))
		move(g(2) x(2))
		genCall(gci(g(3) true <M: Feed> true 3) 0)
		endDefinition(289872)
lbl(289923)	move(x(3) x(0))
		genCall(gci(g(0) true <M: CatchResult> true 1) 0)
		endDefinition(289864)
lbl(289931)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(289939)	definition(x(14) 290001 pid('CompilerInternal,feedFile/slow' 1 pos('./compiler/CompilerClass.oz' 349 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 289987)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(289990)
lbl(289987)	getLiteral('return' y(2))
lbl(289990)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1683> 5)
		endDefinition(289939)
lbl(290001)	putRecord(feedFile 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(15))
		setConstant(feedFile)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(290021)	definition(x(7) 290122 pid('CompilerInternal,feedVirtualString/fast' 2 pos('./compiler/CompilerClass.oz' 356 6) nil 4) <Q: 1684> [y(15) y(0)])
		getSelf(x(2))
lbl(290029)	definition(x(3) 290114 pid('' 0 pos('./compiler/CompilerClass.oz' 358 14) nil 3) unit [x(2) g(0) x(0) x(1) g(1)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		putConstant(echoqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 290070 290086)
		inlineAt(reporter x(1) cache)
		move(g(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(290097)
lbl(290070)	inlineAt(reporter x(1) cache)
		putConstant('%%% feeding virtual string\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(290097)
lbl(290086)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290097)	inlineAt(<M: ParseVirtualString> x(0) cache)
		move(g(2) x(1))
		move(g(3) x(2))
		deAllocateL1
		genCall(gci(g(4) true <M: Feed> true 3) 0)
		endDefinition(290029)
lbl(290114)	move(x(3) x(0))
		genCall(gci(g(1) true <M: CatchResult> true 1) 0)
		endDefinition(290021)
lbl(290122)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(290130)	definition(x(14) 290192 pid('CompilerInternal,feedVirtualString/slow' 1 pos('./compiler/CompilerClass.oz' 356 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 290178)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(290181)
lbl(290178)	getLiteral('return' y(2))
lbl(290181)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1684> 5)
		endDefinition(290130)
lbl(290192)	putRecord(feedVirtualString 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(16))
		setConstant(feedVirtualString)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(290212)	definition(x(7) 290312 pid('CompilerInternal,CatchResult/fast' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 2) <Q: 1685> nil)
		allocateL1
		move(x(0) y(0))
		exHandler(290293)
		match(x(0) ht(290290 [onScalar(tooManyErrors 290227) onScalar(rejected 290242) onScalar(aborted 290254) onScalar(crashed 290266) onScalar(<M: InterruptException> 290278)]))
lbl(290227)	inlineAt(reporter x(1) cache)
		putConstant('%** Too many errors, aborting compilation\n' x(0))
		deAllocateL1
		tailSendMsg(userInfo x(1) 1 cache)
lbl(290242)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logReject x(0) 0 cache)
lbl(290254)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logAbort x(0) 0 cache)
lbl(290266)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logCrash x(0) 0 cache)
lbl(290278)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logInterrupt x(0) 0 cache)
lbl(290290)	callBI('Exception.raise' [x(0)]#nil)
lbl(290293)	call(y(0) 0)
		inlineAt(reporter x(0) cache)
		sendMsg(logAccept x(0) 0 cache)
		popEx
		deAllocateL1
		return
		endDefinition(290212)
lbl(290312)	definition(x(8) 290338 pid('CompilerInternal,CatchResult/slow' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1685> 3)
		endDefinition(290312)
lbl(290338)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CatchResult>)
		setValue(x(8))
		setValue(x(7))
lbl(290348)	definition(x(7) 290856 pid('CompilerInternal,Feed/fast' 3 pos('./compiler/CompilerClass.oz' 383 6) nil 5) <Q: 1686> [g(19) y(15) y(3) y(16) y(0) g(4) g(3) y(12) y(11)])
		allocateL5
		callBI('Thread.this' nil#[x(3)])
		inlineAssign(<M: ExecutingThread> x(3) cache)
		inlineAt(reporter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		sendMsg(clearErrors x(3) 0 cache)
		createVariable(y(3))
		exHandler(290394)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(290834)
lbl(290394)	getSelf(x(0))
		createVariable(y(4))
lbl(290398)	definition(x(1) 290464 pid('DoParse' 0 pos('./compiler/CompilerClass.oz' 387 5) nil 5) unit [x(0) g(1) y(0) y(1) y(4)])
		allocateL3
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		getSelf(x(2))
lbl(290417)	definition(x(3) 290433 pid('' 2 pos('./compiler/CompilerClass.oz' 389 6) nil 3) unit [x(2) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true getSwitch true 2) 0)
		endDefinition(290417)
lbl(290433)	moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(1) true getDefines false 1) 0)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		move(g(4) x(4))
		deAllocateL3
		tailCall(g(2) 5)
		endDefinition(290398)
lbl(290464)	moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(g(2) x(2))
		testBI('Value.\'==\'' [x(0) x(2)]#[x(3)] 290495)
lbl(290476)	inlineAt(reporter x(1) cache)
		putConstant('parsing ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(1) 0)
		branch(290559)
lbl(290495)	move(g(3) x(3))
		testBI('Value.\'\\=\'' [x(0) x(3)]#[x(4)] 290476)
lbl(290502)	inlineAt(reporter x(4) cache)
		putConstant('acquiring syntax tree ...' x(0))
		sendMsg(logPhase x(4) 1 cache)
		move(y(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		putConstant('checking syntax tree for validity ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
lbl(290539)	definition(x(0) 290553 pid('' 0 pos('./compiler/CompilerClass.oz' 402 22) nil 1) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1653> 3)
		endDefinition(290539)
lbl(290553)	move(g(6) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
lbl(290559)	inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 290594 290583)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(290583)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290594)	putConstant(unnest x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(4) true getSwitch false 2) 0)
		testBool(y(0) 290830 290819)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		createVariable(y(1))
		testBool(y(0) 290688 290798)
		move(g(7) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`runTimeDict`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		callBI('Dictionary.new' nil#[x(1)])
		move(y(0) x(0))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(8) x(0))
		inlineDot(x(0) joinQueries x(3) cache)
		inlineAt(reporter x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		call(x(3) 3)
		branch(290809)
lbl(290688)	putConstant(expression x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 290782 290787)
		testLiteral(y(4) nil 290710)
lbl(290705)	getLiteral(nil y(1))
		branch(290809)
lbl(290710)	move(g(7) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`result`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		move(y(2) x(0))
		putConstant(result x(3))
		createVariable(x(1))
		callBI('Value.condSelect' [x(0) x(3) x(1)]#[x(4)])
		move(y(0) x(0))
		move(x(4) x(1))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(8) x(0))
		inlineDot(x(0) makeExpressionQuery x(2) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		call(x(2) 2)
		branch(290809)
lbl(290782)	unify(y(1) y(4))
		branch(290809)
lbl(290787)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(413)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290798)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(408)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290809)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(4) true <M: FeedSub> false 2) 0)
		branch(290830)
lbl(290819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290830)	getLiteral(unit y(3))
		popEx
lbl(290834)	putConstant(unit x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testRecord(y(3) ex 1 290852)
lbl(290847)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(290852)	deAllocateL5
		return
		endDefinition(290348)
lbl(290856)	definition(x(8) 290897 pid('CompilerInternal,Feed/slow' 1 pos('./compiler/CompilerClass.oz' 383 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1686> 7)
		endDefinition(290856)
lbl(290897)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: Feed>)
		setValue(x(8))
		setValue(x(7))
lbl(290907)	definition(x(7) 291089 pid('CompilerInternal,FeedSub/fast' 2 pos('./compiler/CompilerClass.oz' 432 6) nil 5) <Q: 1687> [g(19) g(20) y(0) y(15) g(3)])
		allocateL1
		callBI('Thread.this' nil#[x(2)])
		getSelf(x(3))
lbl(290919)	definition(x(4) 291041 pid('' 0 pos('./compiler/CompilerClass.oz' 436 16) nil 3) unit [x(3) g(1) x(2) g(2) x(0) g(3)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		createVariable(y(0))
		exHandler(290943)
		getRecord(ex 1 y(0))
		unifyValue(x(0))
		branch(291024)
lbl(290943)	exHandler(290995)
		match(x(0) ht(290992 [onScalar(tooManyErrors 290948) onScalar(rejected 290959) onScalar(aborted 290970) onScalar(crashed 290981)]))
lbl(290948)	move(g(2) x(0))
		putConstant(tooManyErrors x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291020)
lbl(290959)	move(g(2) x(0))
		putConstant(rejected x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291020)
lbl(290970)	move(g(2) x(0))
		putConstant(aborted x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291020)
lbl(290981)	move(g(2) x(0))
		putConstant(crashed x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291020)
lbl(290992)	callBI('Exception.raise' [x(0)]#nil)
lbl(290995)	getSelf(x(2))
lbl(290997)	definition(x(1) 291013 pid('' 1 pos('./compiler/CompilerClass.oz' 439 9) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: CompileQuery> true 1) 0)
		endDefinition(290997)
lbl(291013)	move(g(4) x(0))
		genFastCall(<P: 34> 4)
		popEx
lbl(291020)	getLiteral(unit y(0))
		popEx
lbl(291024)	genCall(gci(g(5) true unlocalSwitches false 0) 0)
		testRecord(y(0) ex 1 291037)
lbl(291032)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(291037)	deAllocateL1
		return
		endDefinition(290919)
lbl(291041)	move(x(4) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 291074 291076)
		putConstant(rejected x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(291074)	deAllocateL1
		return
lbl(291076)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(454)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(290907)
lbl(291089)	definition(x(8) 291124 pid('CompilerInternal,FeedSub/slow' 1 pos('./compiler/CompilerClass.oz' 432 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1687> 5)
		endDefinition(291089)
lbl(291124)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: FeedSub>)
		setValue(x(8))
		setValue(x(7))
lbl(291134)	definition(x(7) 293095 pid('CompilerInternal,CompileQuery/fast' 1 pos('./compiler/CompilerClass.oz' 458 6) nil 11) <Q: 1688> [y(15) y(11) y(13) g(21) y(0) y(1) y(4) g(19) g(4)])
		match(x(0) ht(291179 [onScalar(dirLocalSwitches 291143) onScalar(dirPushSwitches 291146) onScalar(dirPopSwitches 291149) onRecord(dirSwitch 1 291152) onRecord(fSynTopLevelProductionTemplates 1 291162)]))
lbl(291143)	genCall(gci(g(0) true localSwitches true 0) 0)
lbl(291146)	genCall(gci(g(0) true pushSwitches true 0) 0)
lbl(291149)	genCall(gci(g(0) true popSwitches true 0) 0)
lbl(291152)	getVariable(x(2))
		move(x(2) x(0))
		getSelf(x(1))
		genFastCall(<P: 34> 5)
lbl(291162)	inlineAt(reporter x(2) cache)
		putConstant('bootstrap compiler restriction' x(0))
		putConstant('Gump definitions not supported' x(1))
		tailSendMsg(error x(2) [kind msg] cache)
lbl(291179)	allocateL8
		move(x(0) y(0))
		testRecord(y(0) fDeclare 3 291206)
lbl(291188)	getVoid(2)
		getVariable(x(1))
		inlineAt(reporter x(2) cache)
		move(x(1) x(0))
		sendMsg(logDeclare x(2) 1 cache)
lbl(291206)	inlineAt(reporter x(1) cache)
		putConstant('transforming into graph representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) unnestQuery x(7) cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(3))
		getSelf(x(0))
		getSelf(x(2))
		createVariableMove(y(1) x(4))
		createVariableMove(y(2) x(5))
		createVariableMove(y(3) x(6))
		call(x(7) 7)
		getSelf(x(2))
		createVariable(x(3))
lbl(291257)	definition(x(0) 291325 pid('AnnotateGlobalVars' 0 pos('./compiler/CompilerClass.oz' 483 8) nil 3) unit [x(2) x(3) y(2)])
		move(g(0) x(0))
		setSelf(x(0))
		move(g(1) x(1))
		testBI('Value.isFree' [x(1)]#[x(2)] 291322)
		inlineAt(reporter x(2) cache)
		putConstant('determining nonlocal variables ...' x(0))
		sendMsg(logSubPhase x(2) 1 cache)
lbl(291289)	definition(x(1) 291313 pid('' 1 pos('./compiler/CompilerClass.oz' 488 8) nil 4) unit nil)
		move(x(0) x(3))
		putConstant(nil x(0))
		createVariable(x(1))
		createVariable(x(2))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(291289)
lbl(291313)	move(g(2) x(0))
		genFastCall(<P: 34> 4)
		getLiteral(unit g(1))
lbl(291322)	return
		endDefinition(291257)
lbl(291325)	move(x(0) y(0))
		putConstant(warnredecl x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 291521 291510)
		getSelf(x(2))
lbl(291343)	definition(x(1) 291502 pid('' 1 pos('./compiler/CompilerClass.oz' 495 2) nil 6) unit [x(2) g(0)])
		allocateL5
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true lookupVariableInEnv false 2) 0)
		testLiteral(y(2) undeclared 291382)
lbl(291380)	deAllocateL5
		return
lbl(291382)	createVariableMove(y(3) x(0))
		sendMsg(getCoord y(2) 1 cache)
		inlineAt(reporter x(1) cache)
		move(x(1) y(2))
		createVariable(y(4))
		testLiteral(y(3) unit 291434)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(line 1 x(0))
		unifyLiteral('previously declared via putEnv')
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
		move(x(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		branch(291470)
lbl(291434)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(2))
		unifyLiteral(unit)
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(line 1 x(4))
		unifyLiteral('previous declaration was')
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
		sendMsg(getCoord y(0) 1 cache)
lbl(291470)	putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('redeclaring top-level variable ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant(warning x(1))
		move(y(2) x(3))
		deAllocateL5
		tailSendMsg(warn x(3) [items kind msg] cache)
		endDefinition(291343)
lbl(291502)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(291521)
lbl(291510)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(493)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291521)	inlineAt(reporter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(4) 291556 291545)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(291545)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(514)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291556)	putConstant(staticanalysis x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 291651 291640)
		inlineAt(reporter x(1) cache)
		putConstant('static analysis ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(y(3) x(0))
		genCall(gci(g(0) true annotateEnv false 1) 0)
		call(y(0) 0)
		inlineAt(reporter x(1) cache)
		putConstant('value propagation ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		testList(y(2) 291627)
lbl(291609)	getVarVar(x(3) x(2))
		inlineAt(reporter x(0) cache)
		getSelf(x(1))
		sendMsg(staticAnalysis x(3) 3 cache)
		branch(291651)
lbl(291627)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(524)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291640)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(517)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291651)	inlineAt(reporter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(3) 291686 291675)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(291675)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291686)	putConstant(warnunused x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 291779 291768)
		inlineAt(reporter x(1) cache)
		putConstant('classifying variable occurrences ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		putConstant(warnunusedformals x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		getSelf(x(2))
lbl(291727)	definition(x(1) 291760 pid('' 1 pos('./compiler/CompilerClass.oz' 533 19) nil 4) unit [x(2) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(markFirst x(3) 2 cache)
		endDefinition(291727)
lbl(291760)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		branch(291779)
lbl(291768)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(529)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291779)	putConstant(showdeclares x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 291966 291955)
lbl(291792)	move(y(1) x(0))
		putConstant(nil x(1))
		callBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)])
		move(x(2) y(3))
		testBool(y(3) 291966 291955)
lbl(291808)	inlineAt(reporter x(1) cache)
		putConstant('Declared variables:\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
lbl(291822)	definition(x(1) 291870 pid('' 3 pos('./compiler/CompilerClass.oz' 540 3) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('Value.\'<\'' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(291822)
lbl(291870)	move(y(1) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 44> 6)
		getSelf(x(2))
lbl(291881)	definition(x(1) 291947 pid('' 1 pos('./compiler/CompilerClass.oz' 543 2) nil 3) unit [x(2)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(outputDebugType y(0) 1 cache)
		putRecord('#' 5 x(0))
		setConstant('  ')
		setValue(y(2))
		setConstant(': ')
		setValue(y(3))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(userInfo x(1) 1 cache)
		endDefinition(291881)
lbl(291947)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(291966)
lbl(291955)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(535)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291966)	putConstant(core x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 292269 292258)
		inlineAt(reporter x(1) cache)
		putConstant('writing core representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		putRecord(debug [debugType debugValue realcore] y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(x(1))
		putConstant(realcore x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(5) x(1))
		putConstant(debugvalue x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(4) x(1))
		putConstant(debugtype x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(3) x(0))
		putConstant(realcore x(1))
		putConstant(true x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(format 1 x(6))
		setConstant(break)
		putRecord(list 2 x(4))
		setVariable(x(5))
		setValue(x(6))
		putRecord('#' 2 x(1))
		setVariable(x(2))
		setValue(x(4))
		moveMoveXYXY(x(1) y(4) x(5) y(5))
		testLiteral(y(1) nil 292075)
lbl(292070)	getLiteral(nil x(2))
		branch(292192)
lbl(292075)	definition(x(4) 292095 pid('' 2 pos('./compiler/CompilerClass.oz' 560 9) nil 3) unit [x(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(292075)
lbl(292095)	moveMoveXYYX(x(2) y(6) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 6 y(6))
		unifyLiteral('declare')
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyLiteral('in')
		unifyVariable(x(3))
		getRecord(format 1 x(0))
		unifyVariable(x(4))
		getRecord(glue 1 x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(list 2 x(1))
		unifyValVar(y(7) x(6))
		getRecord(format 1 x(6))
		unifyVariable(x(7))
		getRecord(glue 1 x(7))
		unifyVariable(x(8))
		getList(x(8))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(2))
		unifyVariable(x(9))
		getRecord(glue 1 x(9))
		unifyVariable(x(10))
		getList(x(10))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(3))
		unifyLiteral(break)
lbl(292192)	definition(x(1) 292212 pid('' 2 pos('./compiler/CompilerClass.oz' 565 19) nil 3) unit [y(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(292192)
lbl(292212)	moveMoveYXYX(y(2) x(0) y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(3) y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1600> 4)
		putRecord('#' 2 x(2))
		setValue(y(5))
		setConstant('\n')
		putConstant('Oz Compiler: Core Output' x(0))
		putConstant('.ozi' x(1))
		sendMsg(displaySource y(3) 3 cache)
		branch(292269)
lbl(292258)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(548)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292269)	putConstant(codegen x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 293080 293082)
		inlineAt(reporter x(1) cache)
		putConstant('generating code ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true getVars false 1) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(1) x(4))
		getSelf(x(1))
		createVariableMove(y(5) x(5))
		createVariableMove(y(6) x(6))
		sendMsg(startCodeGen y(0) 7 cache)
		inlineAt(reporter x(1) cache)
		putConstant('assembling ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) internalAssemble x(1) cache)
		move(x(1) y(0))
		putConstant(profile x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putRecord(switches [debuginfocontrol peephole profile verify] x(1))
		setValue(y(3))
		setConstant(true)
		setValue(y(2))
		setConstant(false)
		move(y(6) x(0))
		createVariableMove(y(2) x(2))
		call(y(0) 3)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 292576 293069)
		testLiteral(y(5) nil 292474)
lbl(292430)	inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		deAllocateL8
		tailSendMsg(displaySource x(3) 3 cache)
lbl(292474)	putList(x(0))
		setConstant('`runTimeDict`')
		setConstant(nil)
		move(y(5) x(1))
		testBI('Value.\'\\=\'' [x(1) x(0)]#[x(2)] 292430)
lbl(292487)	getList(y(5))
		unifyVariable(x(4))
		unifyVariable(x(0))
		inlineAt(reporter x(1) cache)
lbl(292498)	definition(x(5) 292523 pid('' 3 pos('./compiler/CompilerClass.oz' 600 13) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral(' ')
		unifyValue(x(1))
		getRecord(pn 1 x(2))
		unifyValue(x(0))
		return
		endDefinition(292498)
lbl(292523)	putRecord(pn 1 x(2))
		setValue(x(4))
		move(x(1) y(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
		putRecord('#' 2 x(2))
		setConstant('No free variables allowed ')
		setConstant('when compiling for Ozma')
		putRecord(hint [l m] x(4))
		setConstant('Found')
		setValue(y(1))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('Ozma error' x(1))
		move(y(0) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [items kind msg] cache)
lbl(292576)	putConstant(outputcode x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 292724 292713)
		inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		putRecord('#' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(2) y(3))
		testLiteral(y(5) nil 292625)
lbl(292620)	getLiteral('%% No Global Registers\n' x(1))
		branch(292682)
lbl(292625)	definition(x(4) 292667 pid('' 4 pos('./compiler/CompilerClass.oz' 610 9) nil 5) unit nil)
		getRecord('#' 6 x(3))
		unifyValue(x(1))
		unifyLiteral('%%    g(')
		unifyVariable(x(3))
		unifyLiteral(') = ')
		unifyVariable(x(4))
		unifyLiteral('\n')
		inlineMinus1(x(0) x(1))
		unify(x(1) x(3))
		putRecord(pn 1 x(0))
		setValue(x(2))
		move(x(4) x(1))
		genFastCall(<Q: 1600> 5)
		endDefinition(292625)
lbl(292667)	move(y(5) x(0))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant('%% Assignment of Global Registers:\n' x(2))
		genFastCall(<P: 82> 8)
lbl(292682)	move(y(3) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		sendMsg(displaySource x(3) 3 cache)
		branch(292724)
lbl(292713)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(605)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292724)	putConstant(feedtoemulator x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 293056 293058)
		inlineAt(reporter x(1) cache)
		putConstant('loading ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		getSelf(x(1))
		createVariable(x(2))
		createVariable(y(0))
lbl(292757)	definition(x(0) 292818 pid('Proc' 0 pos('./compiler/CompilerClass.oz' 624 7) nil 4) unit [x(1) y(1) g(0) y(5) x(2) y(2) y(0)])
		move(g(0) x(0))
		setSelf(x(0))
		match(g(1) ht(292771 [onScalar(nil 292777)]))
lbl(292771)	move(g(1) x(0))
		genCall(gci(g(2) true enterMultiple false 1) 0)
lbl(292777)	getSelf(x(3))
lbl(292779)	definition(x(1) 292795 pid('' 2 pos('./compiler/CompilerClass.oz' 630 7) nil 3) unit [x(3) g(2)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true lookupInEnv true 2) 0)
		endDefinition(292779)
lbl(292795)	move(g(3) x(0))
		move(g(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(4) x(0))
		move(g(6) x(1))
		tailSendMsg(load g(5) 2 cache)
		endDefinition(292757)
lbl(292818)	genCall(gci(g(4) true <M: ExecuteUninterruptible> false 1) 0)
		putConstant(runwithdebugger x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		createVariable(y(2))
		testBool(y(1) 292864 292869)
lbl(292836)	definition(x(0) 292859 pid('P' 0 pos('./compiler/CompilerClass.oz' 638 3) nil 2) unit [g(5) y(0)])
		move(g(0) x(0))
		inlineDot(x(0) breakpoint x(1) cache)
		call(x(1) 0)
		tailCall(g(1) 0)
		endDefinition(292836)
lbl(292859)	unify(x(0) y(2))
		branch(292880)
lbl(292864)	unify(y(2) y(0))
		branch(292880)
lbl(292869)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(637)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292880)	putConstant(threadedqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 293016 293045)
		move(g(6) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		inlineAt(reporter x(1) cache)
		putConstant('executing in an independent thread ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(0) x(0))
		putConstant(false x(1))
		callBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		testBool(y(1) 293005 292994)
lbl(292944)	createVariableMove(y(1) x(0))
		sendMsg(getCompiler y(0) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(1) x(1))
		callBI('Value.\'==\'' [x(1) x(0)]#[x(2)])
		move(x(2) y(0))
		testBool(y(0) 293005 292994)
lbl(292971)	move(g(5) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(293005)
lbl(292994)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(647)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293005)	thread(293014)
		move(y(2) x(0))
		deAllocateL8
		tailCall(x(0) 0)
lbl(293014)	deAllocateL8
		return
lbl(293016)	inlineAt(reporter x(1) cache)
		putRecord('#' 2 x(0))
		setConstant('executing and waiting for ')
		setConstant('completion ...')
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(2) x(0))
		move(g(8) x(1))
		deAllocateL8
		genCall(gci(g(4) true <M: ExecProtected> true 2) 0)
lbl(293045)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293056)	deAllocateL8
		return
lbl(293058)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(619)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293080)	deAllocateL8
		return
lbl(293082)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(570)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(291134)
lbl(293095)	definition(x(8) 293121 pid('CompilerInternal,CompileQuery/slow' 1 pos('./compiler/CompilerClass.oz' 458 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1688> 3)
		endDefinition(293095)
lbl(293121)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: CompileQuery>)
		setValue(x(8))
		setValue(x(7))
lbl(293131)	definition(x(7) 293165 pid('CompilerInternal,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 672 6) nil 2) <Q: 1689> [g(20)])
		inlineAt(<M: ExecutingThread> x(0) cache)
		testLiteral(x(0) unit 293147)
lbl(293146)	return
lbl(293147)	inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(293162 x(1))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		return
lbl(293162)	return
		endDefinition(293131)
lbl(293165)	definition(x(8) 293179 pid('CompilerInternal,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 672 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1689> 1)
		endDefinition(293165)
lbl(293179)	putRecord('#' [1 2 fast] x(20))
		setConstant(interrupt)
		setValue(x(8))
		setValue(x(7))
lbl(293189)	definition(x(7) 293210 pid('CompilerInternal,ExecuteUninterruptible/fast' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 2) <Q: 1690> nil)
		inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(293207 x(1))
		call(x(0) 0)
		return
lbl(293207)	return
		endDefinition(293189)
lbl(293210)	definition(x(8) 293236 pid('CompilerInternal,ExecuteUninterruptible/slow' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1690> 3)
		endDefinition(293210)
lbl(293236)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(8))
		setValue(x(7))
lbl(293246)	definition(x(7) 293646 pid('CompilerInternal,ExecProtected/fast' 2 pos('./compiler/CompilerClass.oz' 683 6) nil 9) <Q: 1691> [g(19) y(15) y(6) y(8) y(10) y(11) y(13) y(14) y(1) y(4) g(20)])
		allocateL7
		callBI('Thread.this' nil#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		createVariable(y(4))
		thread(293529)
		callBI('Thread.this' nil#[x(0)])
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testBool(y(1) 293365 293354)
lbl(293282)	putConstant(watchdog x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(5) 293365 293354)
lbl(293295)	move(g(2) x(0))
		callBI('Value.wait' [x(0)]#nil)
		move(g(3) x(1))
		callBI('Value.wait' [x(1)]#nil)
		move(g(4) x(2))
		callBI('Value.wait' [x(2)]#nil)
		move(g(5) x(3))
		callBI('Value.wait' [x(3)]#nil)
		move(g(6) x(4))
		callBI('Value.wait' [x(4)]#nil)
		move(g(7) x(5))
		callBI('Value.wait' [x(5)]#nil)
		move(g(8) x(6))
		inlineDot(x(6) setRaiseOnBlock x(7) cache)
		callBI('Thread.this' nil#[x(8)])
		move(x(8) x(0))
		putConstant(true x(1))
		call(x(7) 2)
		branch(293365)
lbl(293354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(693)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293365)	move(g(9) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(5) x(2))
		call(x(3) 3)
		move(y(5) x(0))
		putConstant(false x(1))
		callBI('Value.\'\\=\'' [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBool(y(6) 293463 293452)
lbl(293402)	createVariableMove(y(6) x(0))
		sendMsg(getCompiler y(5) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(6) x(1))
		callBI('Value.\'==\'' [x(1) x(0)]#[x(2)])
		move(x(2) y(5))
		testBool(y(5) 293463 293452)
lbl(293429)	move(g(8) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(293463)
lbl(293452)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(708)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293463)	createVariable(y(5))
		exHandler(293475)
		getRecord(ex 1 y(5))
		unifyValue(x(0))
		branch(293506)
lbl(293475)	exHandler(293495)
		testLiteral(x(0) <M: InterruptException> 293492)
lbl(293481)	move(y(2) x(0))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293502)
lbl(293492)	callBI('Exception.raise' [x(0)]#nil)
lbl(293495)	call(y(0) 0)
		getLiteral(true y(4))
		popEx
lbl(293502)	getLiteral(unit y(5))
		popEx
lbl(293506)	move(y(2) x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		getLiteral(true y(3))
		testRecord(y(5) ex 1 293527)
lbl(293522)	getVariable(x(1))
		callBI('Exception.raise' [x(1)]#nil)
lbl(293527)	deAllocateL7
		return
lbl(293529)	move(g(8) x(0))
		inlineDot(x(0) getRaiseOnBlock x(3) cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		call(x(3) 2)
		move(g(8) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		move(y(2) x(0))
		putConstant(false x(1))
		call(x(2) 2)
		move(y(3) x(0))
		callBI('Value.wait' [x(0)]#nil)
		move(g(8) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(y(4) x(0))
		callBI('Value.isFree' [x(0)]#[x(1)])
		testBool(x(1) 293631 293633)
		createVariable(y(0))
		testBool(y(1) 293609 293614)
		getLiteral(crashed y(0))
		branch(293625)
lbl(293609)	getLiteral(aborted y(0))
		branch(293625)
lbl(293614)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(727)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293625)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(293631)	deAllocateL7
		return
lbl(293633)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(726)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(293246)
lbl(293646)	definition(x(8) 293681 pid('CompilerInternal,ExecProtected/slow' 1 pos('./compiler/CompilerClass.oz' 683 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1691> 5)
		endDefinition(293646)
lbl(293681)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ExecProtected>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 14 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('CompilerInternal' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(293735)	definition(x(7) 293799 pid('TypeCheck' 4 pos('./compiler/CompilerClass.oz' 732 3) nil 6) <Q: 1692> [g(5)])
		allocateL4
		callBI('Record.\'.\'' [x(1) x(2)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(5))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		testBool(y(3) 293771 293786)
		deAllocateL4
		return
lbl(293771)	putRecord(compiler 4 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293786)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(733)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(293735)
lbl(293799)	definition(x(7) 293839 pid('IsEnv' 2 pos('./compiler/CompilerClass.oz' 738 3) nil 5) <Q: 1693> [y(9)])
		testBI('Record.is' [x(0)]#[x(2)] 293833)
		callBI('Record.arity' [x(0)]#[x(3)])
		move(g(0) x(0))
		inlineDot(x(0) is x(4) cache)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 35> 7)
lbl(293833)	getLiteral(false x(1))
		return
		endDefinition(293799)
lbl(293839)	definition(x(8) 293868 pid('IsProcedure5' 2 pos('./compiler/CompilerClass.oz' 742 3) nil 4) <Q: 1694> [g(22)])
		testBI('Procedure.is' [x(0)]#[x(2)] 293862)
		callBI('Procedure.arity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('Value.\'==\'' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(293862)	getLiteral(false x(1))
		return
		endDefinition(293839)
lbl(293868)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: CurrentQuery> <M: NextId> <M: QueriesHd> <M: QueriesTl> <M: Registered>] x(2))
		setConstant(unit)
		setConstant(1)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		putRecord('feat' [<M: Compiler> <M: QueueLock> <M: RegistrationLock>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(1))
lbl(293900)	definition(x(9) 293987 pid('Engine,init/fast' 0 pos('./compiler/CompilerClass.oz' 750 6) nil 3) <Q: 1695> [y(0) y(1)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		callBI('Lock.new' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		callBI('Lock.new' nil#[x(1)])
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		inlineAssign(<M: QueriesTl> x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(0) cache)
		move(g(0) x(1))
		callBI('Object.newObject' [x(1)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		thread(293983)
		deAllocateL2
		genCall(gci(g(1) true <M: RunQueue> true 0) 0)
lbl(293983)	deAllocateL2
		return
		endDefinition(293900)
lbl(293987)	definition(x(10) 294001 pid('Engine,init/slow' 1 pos('./compiler/CompilerClass.oz' 750 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 1695> 1)
		endDefinition(293987)
lbl(294001)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
lbl(294011)	definition(x(9) 294173 pid('Engine,register/fast' 1 pos('./compiler/CompilerClass.oz' 765 6) nil 4) <Q: 1696> [g(5) y(1)])
		allocateL1
		move(x(0) y(0))
		testBI('Port.is' [x(0)]#[x(1)] 294027)
		branch(294038)
lbl(294027)	putRecord(compiler 2 x(1))
		setConstant(register)
		setValue(y(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(294038)	getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		lockThread(294169 x(0))
		inlineAt(<M: Registered> x(1) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(1))
		inlineAssign(<M: Registered> x(2) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(0) x(0))
		sendMsg(notifyOne x(1) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(294168 x(0))
		inlineAt(<M: CurrentQuery> x(0) cache)
		testLiteral(x(0) unit 294113)
lbl(294102)	move(y(0) x(0))
		putConstant(idle x(2))
		callBI('Port.send' [x(0) x(2)]#nil)
		branch(294156)
lbl(294113)	testRecord(x(0) '#' 2 294143)
lbl(294118)	getVarVar(x(0) x(1))
		move(y(0) x(2))
		putConstant(busy x(3))
		callBI('Port.send' [x(2) x(3)]#nil)
		putRecord(runQuery 2 x(3))
		setValue(x(0))
		setValue(x(1))
		callBI('Port.send' [x(2) x(3)]#nil)
		branch(294156)
lbl(294143)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(778)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(294156)	inlineAt(<M: QueriesHd> x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(1) true <M: NotifyQueue> false 2) 0)
		return
lbl(294168)	return
lbl(294169)	deAllocateL1
		return
		endDefinition(294011)
lbl(294173)	definition(x(10) 294199 pid('Engine,register/slow' 1 pos('./compiler/CompilerClass.oz' 765 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1696> 3)
		endDefinition(294173)
lbl(294199)	putRecord('#' [1 2 fast] x(12))
		setConstant(register)
		setValue(x(10))
		setValue(x(9))
lbl(294209)	definition(x(9) 294253 pid('Engine,NotifyQueue/fast' 2 pos('./compiler/CompilerClass.oz' 783 6) nil 5) <Q: 1697> [y(1)])
		testBI('Value.isDet' [x(0)]#[x(2)] 294250)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		putRecord(newQuery 2 x(0))
		setValue(x(3))
		setValue(x(4))
		callBI('Port.send' [x(1) x(0)]#nil)
		move(x(2) x(0))
		genCall(gci(g(0) true <M: NotifyQueue> true 2) 0)
lbl(294250)	return
		endDefinition(294209)
lbl(294253)	definition(x(10) 294288 pid('Engine,NotifyQueue/slow' 1 pos('./compiler/CompilerClass.oz' 783 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1697> 5)
		endDefinition(294253)
lbl(294288)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: NotifyQueue>)
		setValue(x(10))
		setValue(x(9))
lbl(294298)	definition(x(9) 294361 pid('Engine,unregister/fast' 1 pos('./compiler/CompilerClass.oz' 789 6) nil 4) <Q: 1698> nil)
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: RegistrationLock> x(1) cache)
		lockThread(294357 x(1))
		inlineAt(<M: Registered> x(3) cache)
lbl(294321)	definition(x(1) 294339 pid('' 2 pos('./compiler/CompilerClass.oz' 791 39) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(294321)
lbl(294339)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(<M: Registered> x(0) cache)
		return
lbl(294357)	deAllocateL1
		return
		endDefinition(294298)
lbl(294361)	definition(x(10) 294387 pid('Engine,unregister/slow' 1 pos('./compiler/CompilerClass.oz' 789 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1698> 3)
		endDefinition(294361)
lbl(294387)	putRecord('#' [1 2 fast] x(14))
		setConstant(unregister)
		setValue(x(10))
		setValue(x(9))
lbl(294397)	definition(x(9) 294444 pid('Engine,notify/fast' 1 pos('./compiler/CompilerClass.oz' 794 6) nil 3) <Q: 1699> nil)
		getSelf(x(2))
		inlineDot(x(2) <M: RegistrationLock> x(1) cache)
		lockThread(294441 x(1))
		inlineAt(<M: Registered> x(2) cache)
lbl(294419)	definition(x(1) 294434 pid('' 1 pos('./compiler/CompilerClass.oz' 796 25) nil 2) unit [x(0)])
		move(g(0) x(1))
		callBI('Port.send' [x(0) x(1)]#nil)
		return
		endDefinition(294419)
lbl(294434)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		return
lbl(294441)	return
		endDefinition(294397)
lbl(294444)	definition(x(10) 294470 pid('Engine,notify/slow' 1 pos('./compiler/CompilerClass.oz' 794 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1699> 3)
		endDefinition(294444)
lbl(294470)	putRecord('#' [1 2 fast] x(15))
		setConstant(notify)
		setValue(x(10))
		setValue(x(9))
lbl(294480)	definition(x(9) 294585 pid('Engine,enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 804 6) nil 4) <Q: 1700> [g(5) y(1)])
		match(x(0) ht(294580 [onScalar(nil 294489) onRecord('|' 2 294493)]))
lbl(294489)	getLiteral(nil x(1))
		return
lbl(294493)	allocateL3
		getVoid(1)
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 294518 294529)
		branch(294540)
lbl(294518)	putRecord(compiler 2 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294529)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(806)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294540)	getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(0) cache)
		lockThread(294578 x(0))
		getSelf(x(3))
lbl(294553)	definition(x(1) 294569 pid('' 2 pos('./compiler/CompilerClass.oz' 810 22) nil 3) unit [x(3) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(294553)
lbl(294569)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		genFastCall(<P: 29> 6)
		return
lbl(294578)	deAllocateL3
		return
lbl(294580)	genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(294480)
lbl(294585)	putRecord(messagePattern 2 x(10))
		setConstant(unit)
		setConstant(unit)
lbl(294593)	definition(x(16) 294650 pid('Engine,enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 804 6) nil 4) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 294639)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(294639)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1700> 5)
		endDefinition(294593)
lbl(294650)	putRecord(enqueue 2 x(10))
		setConstant(<U: ooRequiredArg>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(17))
		setConstant(enqueue)
		setValue(x(16))
		setValue(x(10))
		setValue(x(9))
lbl(294670)	definition(x(9) 295122 pid('Engine,Enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 818 6) nil 5) <Q: 1701> [g(23) g(24) g(25) g(26) y(9) x(7) x(8) g(27) g(5) y(1)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: QueueLock> x(2) cache)
		lockThread(295118 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(295046 [onScalar(pushSwitches 295057) onScalar(popSwitches 295057) onRecord(macroDefine 1 294696) onRecord(macroUndef 1 294713) onRecord(getDefines 1 294730) onRecord(getSwitch 2 294732) onRecord(setSwitch 2 294749) onRecord(getMaxNumberOfErrors 1 294781) onRecord(setMaxNumberOfErrors 1 294783) onRecord(addToEnv 2 294800) onRecord(lookupInEnv 2 294826) onRecord(removeFromEnv 1 294852) onRecord(putEnv 1 294878) onRecord(mergeEnv 1 294895) onRecord(getEnv 1 294912) onRecord(setFrontEnd 2 294914) onRecord(feedVirtualString 1 294946) onRecord(feedVirtualString 2 294963) onRecord(feedFile 1 294995) onRecord(feedFile 2 295012) onRecord(ping 1 295044)]))
lbl(294696)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294713)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294730)	branch(295057)
lbl(294732)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294749)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1692> 8)
		move(g(2) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(bool x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294781)	branch(295057)
lbl(294783)	move(g(3) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(int x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294800)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294826)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294852)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294878)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294895)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294912)	branch(295057)
lbl(294914)	move(g(6) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(6) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294946)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294963)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(294995)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(295012)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1692> 8)
		branch(295057)
lbl(295044)	branch(295057)
lbl(295046)	putRecord(compiler 2 x(2))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(295057)	inlineAt(<M: NextId> x(0) cache)
		unify(x(0) y(1))
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextId> x(1) cache)
		putRecord('#' 2 x(2))
		setValue(y(1))
		setValue(y(0))
		putList(x(1))
		setValue(x(2))
		setVariable(x(3))
		inlineAt(<M: QueriesTl> x(2) cache)
		unify(x(2) x(1))
		inlineAssign(<M: QueriesTl> x(3) cache)
		putRecord(newQuery 2 x(1))
		setValue(y(1))
		setValue(y(0))
		move(x(1) x(0))
		genCall(gci(g(9) true notify false 1) 0)
		return
lbl(295118)	deAllocateL2
		return
		endDefinition(294670)
lbl(295122)	definition(x(7) 295157 pid('Engine,Enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 818 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1701> 5)
		endDefinition(295122)
lbl(295157)	putRecord('#' [1 2 fast] x(8))
		setConstant(<M: Enqueue>)
		setValue(x(7))
		setValue(x(9))
lbl(295167)	definition(x(7) 295189 pid('Engine,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 870 6) nil 1) <Q: 1702> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Compiler> x(0) cache)
		tailSendMsg(interrupt x(0) 0 cache)
		endDefinition(295167)
lbl(295189)	definition(x(9) 295203 pid('Engine,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 870 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1702> 1)
		endDefinition(295189)
lbl(295203)	putRecord('#' [1 2 fast] x(10))
		setConstant(interrupt)
		setValue(x(9))
		setValue(x(7))
lbl(295213)	definition(x(7) 295261 pid('Engine,dequeue/fast' 1 pos('./compiler/CompilerClass.oz' 873 6) nil 4) <Q: 1703> [y(1)])
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(1) cache)
		lockThread(295257 x(1))
		inlineAt(<M: QueriesHd> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: Dequeue> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		return
lbl(295257)	deAllocateL1
		return
		endDefinition(295213)
lbl(295261)	definition(x(9) 295287 pid('Engine,dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 873 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1703> 3)
		endDefinition(295261)
lbl(295287)	putRecord('#' [1 2 fast] x(16))
		setConstant(dequeue)
		setValue(x(9))
		setValue(x(7))
lbl(295297)	definition(x(7) 295326 pid('Engine,clearQueue/fast' 0 pos('./compiler/CompilerClass.oz' 878 6) nil 2) <Q: 1704> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295323 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		genCall(gci(g(0) true <M: ClearQueue> false 1) 0)
		return
lbl(295323)	return
		endDefinition(295297)
lbl(295326)	definition(x(9) 295340 pid('Engine,clearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 878 6) nil 1) unit nil)
		getLiteral(clearQueue x(0))
		genFastCall(<Q: 1704> 1)
		endDefinition(295326)
lbl(295340)	putRecord('#' [1 2 fast] x(18))
		setConstant(clearQueue)
		setValue(x(9))
		setValue(x(7))
lbl(295350)	definition(x(7) 295399 pid('Engine,ClearQueue/fast' 1 pos('./compiler/CompilerClass.oz' 883 6) nil 2) <Q: 1705> [y(1)])
		testBI('Value.isDet' [x(0)]#[x(1)] 295391)
		allocateL1
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(y(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVoid(1)
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: ClearQueue> true 1) 0)
lbl(295391)	inlineAssign(<M: QueriesHd> x(0) cache)
		return
		endDefinition(295350)
lbl(295399)	definition(x(9) 295425 pid('Engine,ClearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 883 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1705> 3)
		endDefinition(295399)
lbl(295425)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ClearQueue>)
		setValue(x(9))
		setValue(x(7))
lbl(295435)	definition(x(7) 295491 pid('Engine,Dequeue/fast' 3 pos('./compiler/CompilerClass.oz' 891 6) nil 6) <Q: 1706> [y(1)])
		testBI('Value.isDet' [x(0)]#[x(3)] 295485)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		testBI('Value.\'==\'' [x(1) x(4)]#[x(5)] 295475)
		unify(x(2) x(3))
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify true 1) 0)
lbl(295475)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Dequeue> true 3) 0)
lbl(295485)	unify(x(2) x(0))
		return
		endDefinition(295435)
lbl(295491)	definition(x(9) 295532 pid('Engine,Dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 891 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1706> 7)
		endDefinition(295491)
lbl(295532)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: Dequeue>)
		setValue(x(9))
		setValue(x(7))
lbl(295542)	definition(x(7) 295854 pid('Engine,RunQueue/fast' 0 pos('./compiler/CompilerClass.oz' 907 6) nil 7) <Q: 1707> [y(1) y(6)])
		allocateL4
		inlineAt(<M: QueriesHd> x(0) cache)
		testBI('Value.isFree' [x(0)]#[x(1)] 295578)
		putConstant(idle x(0))
		genCall(gci(g(0) true notify false 1) 0)
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('Value.wait' [x(0)]#nil)
		putConstant(busy x(0))
		genCall(gci(g(0) true notify false 1) 0)
lbl(295578)	exHandler(295782)
		testRecord(x(0) query 2 295779)
lbl(295585)	getVarVar(y(0) y(1))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295624 x(0))
		putRecord(runQuery 2 x(0))
		setValue(y(0))
		setValue(y(1))
		genCall(gci(g(0) true notify false 1) 0)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(<M: CurrentQuery> x(0) cache)
		return
lbl(295624)	exHandler(295735)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getReporter x(1) 1 cache)
		putRecord('#' 2 x(3))
		setConstant('execution of query raised an exception ')
		setConstant('-- description follows')
		putRecord(oz 1 x(6))
		setValue(y(1))
		putRecord(hint [l m] x(5))
		setConstant('Query')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		sendMsg(error y(3) [abort items kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) formatExc x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		putConstant(footer x(1))
		putConstant(false x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(message 2 x(0))
		setValue(x(3))
		setConstant(unit)
		genCall(gci(g(0) true notify false 1) 0)
		sendMsg(logReject y(3) 0 cache)
		branch(295750)
lbl(295735)	getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		popEx
lbl(295750)	getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295848 x(0))
		putConstant(unit x(1))
		inlineAssign(<M: CurrentQuery> x(1) cache)
		putRecord(removeQuery 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true notify false 1) 0)
		return
lbl(295779)	callBI('Exception.raise' [x(0)]#nil)
lbl(295782)	getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(295847 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('Value.isDet' [x(0)]#[x(1)])
		testBool(x(1) 295846 295835)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineAssign(<M: QueriesHd> x(1) cache)
		putRecord(query 2 x(0))
		setValue(x(2))
		setValue(x(3))
		callBI('Exception.raise' [x(0)]#nil)
lbl(295835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(916)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295846)	return
lbl(295847)	popEx
lbl(295848)	deAllocateL4
		genCall(gci(g(0) true <M: RunQueue> true 0) 0)
		endDefinition(295542)
lbl(295854)	definition(x(9) 295868 pid('Engine,RunQueue/slow' 1 pos('./compiler/CompilerClass.oz' 907 6) nil 1) unit nil)
		getLiteral(<M: RunQueue> x(0))
		genFastCall(<Q: 1707> 1)
		endDefinition(295854)
lbl(295868)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RunQueue>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(17))
		setValue(x(8))
		setValue(x(10))
		setValue(x(16))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('Engine' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) file x(7) cache)
		inlineDot(x(0) virtualString x(8) cache)
		putList(x(15))
		setConstant(39)
		setConstant(nil)
		putList(x(14))
		setConstant(69)
		setValue(x(15))
		putList(x(13))
		setConstant(77)
		setValue(x(14))
		putList(x(12))
		setConstant(65)
		setValue(x(13))
		putList(x(11))
		setConstant(78)
		setValue(x(12))
		putList(x(10))
		setConstant(72)
		setValue(x(11))
		putList(x(6))
		setConstant(67)
		setValue(x(10))
		putList(x(5))
		setConstant(84)
		setValue(x(6))
		putList(x(4))
		setConstant(73)
		setValue(x(5))
		putList(x(3))
		setConstant(87)
		setValue(x(4))
		putList(x(2))
		setConstant(83)
		setValue(x(3))
		putList(x(1))
		setConstant(96)
		setValue(x(2))
		putList(x(26))
		setConstant(101)
		setConstant(nil)
		putList(x(25))
		setConstant(109)
		setValue(x(26))
		putList(x(24))
		setConstant(97)
		setValue(x(25))
		putList(x(23))
		setConstant(110)
		setValue(x(24))
		putList(x(22))
		setConstant(32)
		setValue(x(23))
		putList(x(21))
		setConstant(104)
		setValue(x(22))
		putList(x(20))
		setConstant(99)
		setValue(x(21))
		putList(x(19))
		setConstant(116)
		setValue(x(20))
		putList(x(18))
		setConstant(105)
		setValue(x(19))
		putList(x(17))
		setConstant(119)
		setValue(x(18))
		putList(x(16))
		setConstant(115)
		setValue(x(17))
		putRecord('#' 2 x(0))
		setValue(x(1))
		setValue(x(16))
		putList(x(36))
		setConstant(39)
		setConstant(nil)
		putList(x(35))
		setConstant(77)
		setValue(x(36))
		putList(x(34))
		setConstant(79)
		setValue(x(35))
		putList(x(33))
		setConstant(84)
		setValue(x(34))
		putList(x(32))
		setConstant(65)
		setValue(x(33))
		putList(x(31))
		setConstant(90)
		setValue(x(32))
		putList(x(30))
		setConstant(79)
		setValue(x(31))
		putList(x(29))
		setConstant(96)
		setValue(x(30))
		putList(x(40))
		setConstant(109)
		setConstant(nil)
		putList(x(39))
		setConstant(111)
		setValue(x(40))
		putList(x(38))
		setConstant(116)
		setValue(x(39))
		putList(x(37))
		setConstant(97)
		setValue(x(38))
		putRecord('#' 2 x(28))
		setValue(x(29))
		setValue(x(37))
		putList(x(54))
		setConstant(39)
		setConstant(nil)
		putList(x(53))
		setConstant(76)
		setValue(x(54))
		putList(x(52))
		setConstant(69)
		setValue(x(53))
		putList(x(51))
		setConstant(66)
		setValue(x(52))
		putList(x(50))
		setConstant(65)
		setValue(x(51))
		putList(x(49))
		setConstant(76)
		setValue(x(50))
		putList(x(48))
		setConstant(95)
		setValue(x(49))
		putList(x(47))
		setConstant(77)
		setValue(x(48))
		putList(x(46))
		setConstant(79)
		setValue(x(47))
		putList(x(45))
		setConstant(84)
		setValue(x(46))
		putList(x(44))
		setConstant(65)
		setValue(x(45))
		putList(x(43))
		setConstant(96)
		setValue(x(44))
		putList(x(64))
		setConstant(108)
		setConstant(nil)
		putList(x(63))
		setConstant(101)
		setValue(x(64))
		putList(x(62))
		setConstant(98)
		setValue(x(63))
		putList(x(61))
		setConstant(97)
		setValue(x(62))
		putList(x(60))
		setConstant(108)
		setValue(x(61))
		putList(x(59))
		setConstant(32)
		setValue(x(60))
		putList(x(58))
		setConstant(109)
		setValue(x(59))
		putList(x(57))
		setConstant(111)
		setValue(x(58))
		putList(x(56))
		setConstant(116)
		setValue(x(57))
		putList(x(55))
		setConstant(97)
		setValue(x(56))
		putRecord('#' 2 x(42))
		setValue(x(43))
		setValue(x(55))
		putList(x(75))
		setConstant(39)
		setConstant(nil)
		putList(x(74))
		setConstant(84)
		setValue(x(75))
		putList(x(73))
		setConstant(65)
		setValue(x(74))
		putList(x(72))
		setConstant(79)
		setValue(x(73))
		putList(x(71))
		setConstant(76)
		setValue(x(72))
		putList(x(70))
		setConstant(70)
		setValue(x(71))
		putList(x(69))
		setConstant(90)
		setValue(x(70))
		putList(x(68))
		setConstant(79)
		setValue(x(69))
		putList(x(67))
		setConstant(96)
		setValue(x(68))
		putList(x(80))
		setConstant(116)
		setConstant(nil)
		putList(x(79))
		setConstant(97)
		setValue(x(80))
		putList(x(78))
		setConstant(111)
		setValue(x(79))
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(102)
		setValue(x(77))
		putRecord('#' 2 x(66))
		setValue(x(67))
		setValue(x(76))
		putList(x(89))
		setConstant(39)
		setConstant(nil)
		putList(x(88))
		setConstant(84)
		setValue(x(89))
		putList(x(87))
		setConstant(78)
		setValue(x(88))
		putList(x(86))
		setConstant(73)
		setValue(x(87))
		putList(x(85))
		setConstant(90)
		setValue(x(86))
		putList(x(84))
		setConstant(79)
		setValue(x(85))
		putList(x(83))
		setConstant(96)
		setValue(x(84))
		putList(x(96))
		setConstant(114)
		setConstant(nil)
		putList(x(95))
		setConstant(101)
		setValue(x(96))
		putList(x(94))
		setConstant(103)
		setValue(x(95))
		putList(x(93))
		setConstant(101)
		setValue(x(94))
		putList(x(92))
		setConstant(116)
		setValue(x(93))
		putList(x(91))
		setConstant(110)
		setValue(x(92))
		putList(x(90))
		setConstant(105)
		setValue(x(91))
		putRecord('#' 2 x(82))
		setValue(x(83))
		setValue(x(90))
		putList(x(106))
		setConstant(39)
		setConstant(nil)
		putList(x(105))
		setConstant(71)
		setValue(x(106))
		putList(x(104))
		setConstant(78)
		setValue(x(105))
		putList(x(103))
		setConstant(73)
		setValue(x(104))
		putList(x(102))
		setConstant(82)
		setValue(x(103))
		putList(x(101))
		setConstant(84)
		setValue(x(102))
		putList(x(100))
		setConstant(83)
		setValue(x(101))
		putList(x(99))
		setConstant(96)
		setValue(x(100))
		putList(x(112))
		setConstant(103)
		setConstant(nil)
		putList(x(111))
		setConstant(110)
		setValue(x(112))
		putList(x(110))
		setConstant(105)
		setValue(x(111))
		putList(x(109))
		setConstant(114)
		setValue(x(110))
		putList(x(108))
		setConstant(116)
		setValue(x(109))
		putList(x(107))
		setConstant(115)
		setValue(x(108))
		putRecord('#' 2 x(98))
		setValue(x(99))
		setValue(x(107))
		putList(x(121))
		setConstant(39)
		setConstant(nil)
		putList(x(120))
		setConstant(82)
		setValue(x(121))
		putList(x(119))
		setConstant(69)
		setValue(x(120))
		putList(x(118))
		setConstant(80)
		setValue(x(119))
		putList(x(117))
		setConstant(77)
		setValue(x(118))
		putList(x(116))
		setConstant(65)
		setValue(x(117))
		putList(x(115))
		setConstant(96)
		setValue(x(116))
		putList(x(124))
		setConstant(39)
		setConstant(nil)
		putList(x(123))
		setConstant(38)
		setValue(x(124))
		putList(x(122))
		setConstant(96)
		setValue(x(123))
		putRecord('#' 2 x(114))
		setValue(x(115))
		setValue(x(122))
		putList(x(136))
		setConstant(39)
		setConstant(nil)
		putList(x(135))
		setConstant(69)
		setValue(x(136))
		putList(x(134))
		setConstant(76)
		setValue(x(135))
		putList(x(133))
		setConstant(66)
		setValue(x(134))
		putList(x(132))
		setConstant(65)
		setValue(x(133))
		putList(x(131))
		setConstant(73)
		setValue(x(132))
		putList(x(130))
		setConstant(82)
		setValue(x(131))
		putList(x(129))
		setConstant(65)
		setValue(x(130))
		putList(x(128))
		setConstant(86)
		setValue(x(129))
		putList(x(127))
		setConstant(96)
		setValue(x(128))
		putList(x(144))
		setConstant(101)
		setConstant(nil)
		putList(x(143))
		setConstant(108)
		setValue(x(144))
		putList(x(142))
		setConstant(98)
		setValue(x(143))
		putList(x(141))
		setConstant(97)
		setValue(x(142))
		putList(x(140))
		setConstant(105)
		setValue(x(141))
		putList(x(139))
		setConstant(114)
		setValue(x(140))
		putList(x(138))
		setConstant(97)
		setValue(x(139))
		putList(x(137))
		setConstant(118)
		setValue(x(138))
		putRecord('#' 2 x(126))
		setValue(x(127))
		setValue(x(137))
		putList(x(162))
		setConstant(39)
		setConstant(nil)
		putList(x(161))
		setConstant(76)
		setValue(x(162))
		putList(x(160))
		setConstant(69)
		setValue(x(161))
		putList(x(159))
		setConstant(66)
		setValue(x(160))
		putList(x(158))
		setConstant(65)
		setValue(x(159))
		putList(x(157))
		setConstant(76)
		setValue(x(158))
		putList(x(156))
		setConstant(95)
		setValue(x(157))
		putList(x(155))
		setConstant(69)
		setValue(x(156))
		putList(x(154))
		setConstant(76)
		setValue(x(155))
		putList(x(153))
		setConstant(66)
		setValue(x(154))
		putList(x(152))
		setConstant(65)
		setValue(x(153))
		putList(x(151))
		setConstant(73)
		setValue(x(152))
		putList(x(150))
		setConstant(82)
		setValue(x(151))
		putList(x(149))
		setConstant(65)
		setValue(x(150))
		putList(x(148))
		setConstant(86)
		setValue(x(149))
		putList(x(147))
		setConstant(96)
		setValue(x(148))
		putList(x(176))
		setConstant(108)
		setConstant(nil)
		putList(x(175))
		setConstant(101)
		setValue(x(176))
		putList(x(174))
		setConstant(98)
		setValue(x(175))
		putList(x(173))
		setConstant(97)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(32)
		setValue(x(172))
		putList(x(170))
		setConstant(101)
		setValue(x(171))
		putList(x(169))
		setConstant(108)
		setValue(x(170))
		putList(x(168))
		setConstant(98)
		setValue(x(169))
		putList(x(167))
		setConstant(97)
		setValue(x(168))
		putList(x(166))
		setConstant(105)
		setValue(x(167))
		putList(x(165))
		setConstant(114)
		setValue(x(166))
		putList(x(164))
		setConstant(97)
		setValue(x(165))
		putList(x(163))
		setConstant(118)
		setValue(x(164))
		putRecord('#' 2 x(146))
		setValue(x(147))
		setValue(x(163))
		putList(x(187))
		setConstant(39)
		setConstant(nil)
		putList(x(186))
		setConstant(84)
		setValue(x(187))
		putList(x(185))
		setConstant(76)
		setValue(x(186))
		putList(x(184))
		setConstant(85)
		setValue(x(185))
		putList(x(183))
		setConstant(65)
		setValue(x(184))
		putList(x(182))
		setConstant(70)
		setValue(x(183))
		putList(x(181))
		setConstant(69)
		setValue(x(182))
		putList(x(180))
		setConstant(68)
		setValue(x(181))
		putList(x(179))
		setConstant(96)
		setValue(x(180))
		putList(x(191))
		setConstant(39)
		setConstant(nil)
		putList(x(190))
		setConstant(61)
		setValue(x(191))
		putList(x(189))
		setConstant(60)
		setValue(x(190))
		putList(x(188))
		setConstant(96)
		setValue(x(189))
		putRecord('#' 2 x(178))
		setValue(x(179))
		setValue(x(188))
		putList(x(201))
		setConstant(39)
		setConstant(nil)
		putList(x(200))
		setConstant(69)
		setValue(x(201))
		putList(x(199))
		setConstant(67)
		setValue(x(200))
		putList(x(198))
		setConstant(73)
		setValue(x(199))
		putList(x(197))
		setConstant(79)
		setValue(x(198))
		putList(x(196))
		setConstant(72)
		setValue(x(197))
		putList(x(195))
		setConstant(67)
		setValue(x(196))
		putList(x(194))
		setConstant(96)
		setValue(x(195))
		putList(x(205))
		setConstant(39)
		setConstant(nil)
		putList(x(204))
		setConstant(93)
		setValue(x(205))
		putList(x(203))
		setConstant(91)
		setValue(x(204))
		putList(x(202))
		setConstant(96)
		setValue(x(203))
		putRecord('#' 2 x(193))
		setValue(x(194))
		setValue(x(202))
		putList(x(214))
		setConstant(39)
		setConstant(nil)
		putList(x(213))
		setConstant(83)
		setValue(x(214))
		putList(x(212))
		setConstant(84)
		setValue(x(213))
		putList(x(211))
		setConstant(79)
		setValue(x(212))
		putList(x(210))
		setConstant(68)
		setValue(x(211))
		putList(x(209))
		setConstant(76)
		setValue(x(210))
		putList(x(208))
		setConstant(96)
		setValue(x(209))
		putList(x(219))
		setConstant(39)
		setConstant(nil)
		putList(x(218))
		setConstant(46)
		setValue(x(219))
		putList(x(217))
		setConstant(46)
		setValue(x(218))
		putList(x(216))
		setConstant(46)
		setValue(x(217))
		putList(x(215))
		setConstant(96)
		setValue(x(216))
		putRecord('#' 2 x(207))
		setValue(x(208))
		setValue(x(215))
		putList(x(231))
		setConstant(39)
		setConstant(nil)
		putList(x(230))
		setConstant(78)
		setValue(x(231))
		putList(x(229))
		setConstant(71)
		setValue(x(230))
		putList(x(228))
		setConstant(73)
		setValue(x(229))
		putList(x(227))
		setConstant(83)
		setValue(x(228))
		putList(x(226))
		setConstant(83)
		setValue(x(227))
		putList(x(225))
		setConstant(65)
		setValue(x(226))
		putList(x(224))
		setConstant(79)
		setValue(x(225))
		putList(x(223))
		setConstant(79)
		setValue(x(224))
		putList(x(222))
		setConstant(96)
		setValue(x(223))
		putList(x(235))
		setConstant(39)
		setConstant(nil)
		putList(x(234))
		setConstant(45)
		setValue(x(235))
		putList(x(233))
		setConstant(60)
		setValue(x(234))
		putList(x(232))
		setConstant(96)
		setValue(x(233))
		putRecord('#' 2 x(221))
		setValue(x(222))
		setValue(x(232))
		putList(x(245))
		setConstant(39)
		setConstant(nil)
		putList(x(244))
		setConstant(78)
		setValue(x(245))
		putList(x(243))
		setConstant(71)
		setValue(x(244))
		putList(x(242))
		setConstant(73)
		setValue(x(243))
		putList(x(241))
		setConstant(83)
		setValue(x(242))
		putList(x(240))
		setConstant(83)
		setValue(x(241))
		putList(x(239))
		setConstant(65)
		setValue(x(240))
		putList(x(238))
		setConstant(96)
		setValue(x(239))
		putList(x(249))
		setConstant(39)
		setConstant(nil)
		putList(x(248))
		setConstant(61)
		setValue(x(249))
		putList(x(247))
		setConstant(58)
		setValue(x(248))
		putList(x(246))
		setConstant(96)
		setValue(x(247))
		putRecord('#' 2 x(237))
		setValue(x(238))
		setValue(x(246))
		putList(x(260))
		setConstant(39)
		setConstant(nil)
		putList(x(259))
		setConstant(69)
		setValue(x(260))
		putList(x(258))
		setConstant(82)
		setValue(x(259))
		putList(x(257))
		setConstant(65)
		setValue(x(258))
		putList(x(256))
		setConstant(80)
		setValue(x(257))
		putList(x(255))
		setConstant(77)
		setValue(x(256))
		putList(x(254))
		setConstant(79)
		setValue(x(255))
		putList(x(253))
		setConstant(67)
		setValue(x(254))
		putList(x(252))
		setConstant(96)
		setValue(x(253))
		putList(x(279))
		setConstant(114)
		setConstant(nil)
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(116)
		setValue(x(278))
		putList(x(276))
		setConstant(97)
		setValue(x(277))
		putList(x(275))
		setConstant(114)
		setValue(x(276))
		putList(x(274))
		setConstant(101)
		setValue(x(275))
		putList(x(273))
		setConstant(112)
		setValue(x(274))
		putList(x(272))
		setConstant(111)
		setValue(x(273))
		putList(x(271))
		setConstant(32)
		setValue(x(272))
		putList(x(270))
		setConstant(110)
		setValue(x(271))
		putList(x(269))
		setConstant(111)
		setValue(x(270))
		putList(x(268))
		setConstant(115)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(114)
		setValue(x(267))
		putList(x(265))
		setConstant(97)
		setValue(x(266))
		putList(x(264))
		setConstant(112)
		setValue(x(265))
		putList(x(263))
		setConstant(109)
		setValue(x(264))
		putList(x(262))
		setConstant(111)
		setValue(x(263))
		putList(x(261))
		setConstant(99)
		setValue(x(262))
		putRecord('#' 2 x(251))
		setValue(x(252))
		setValue(x(261))
		putList(x(292))
		setConstant(39)
		setConstant(nil)
		putList(x(291))
		setConstant(69)
		setValue(x(292))
		putList(x(290))
		setConstant(82)
		setValue(x(291))
		putList(x(289))
		setConstant(65)
		setValue(x(290))
		putList(x(288))
		setConstant(80)
		setValue(x(289))
		putList(x(287))
		setConstant(77)
		setValue(x(288))
		putList(x(286))
		setConstant(79)
		setValue(x(287))
		putList(x(285))
		setConstant(67)
		setValue(x(286))
		putList(x(284))
		setConstant(68)
		setValue(x(285))
		putList(x(283))
		setConstant(70)
		setValue(x(284))
		putList(x(282))
		setConstant(96)
		setValue(x(283))
		putList(x(325))
		setConstant(114)
		setConstant(nil)
		putList(x(324))
		setConstant(111)
		setValue(x(325))
		putList(x(323))
		setConstant(116)
		setValue(x(324))
		putList(x(322))
		setConstant(97)
		setValue(x(323))
		putList(x(321))
		setConstant(114)
		setValue(x(322))
		putList(x(320))
		setConstant(101)
		setValue(x(321))
		putList(x(319))
		setConstant(112)
		setValue(x(320))
		putList(x(318))
		setConstant(111)
		setValue(x(319))
		putList(x(317))
		setConstant(32)
		setValue(x(318))
		putList(x(316))
		setConstant(110)
		setValue(x(317))
		putList(x(315))
		setConstant(111)
		setValue(x(316))
		putList(x(314))
		setConstant(115)
		setValue(x(315))
		putList(x(313))
		setConstant(105)
		setValue(x(314))
		putList(x(312))
		setConstant(114)
		setValue(x(313))
		putList(x(311))
		setConstant(97)
		setValue(x(312))
		putList(x(310))
		setConstant(112)
		setValue(x(311))
		putList(x(309))
		setConstant(109)
		setValue(x(310))
		putList(x(308))
		setConstant(111)
		setValue(x(309))
		putList(x(307))
		setConstant(99)
		setValue(x(308))
		putList(x(306))
		setConstant(32)
		setValue(x(307))
		putList(x(305))
		setConstant(110)
		setValue(x(306))
		putList(x(304))
		setConstant(105)
		setValue(x(305))
		putList(x(303))
		setConstant(97)
		setValue(x(304))
		putList(x(302))
		setConstant(109)
		setValue(x(303))
		putList(x(301))
		setConstant(111)
		setValue(x(302))
		putList(x(300))
		setConstant(100)
		setValue(x(301))
		putList(x(299))
		setConstant(32)
		setValue(x(300))
		putList(x(298))
		setConstant(101)
		setValue(x(299))
		putList(x(297))
		setConstant(116)
		setValue(x(298))
		putList(x(296))
		setConstant(105)
		setValue(x(297))
		putList(x(295))
		setConstant(110)
		setValue(x(296))
		putList(x(294))
		setConstant(105)
		setValue(x(295))
		putList(x(293))
		setConstant(102)
		setValue(x(294))
		putRecord('#' 2 x(281))
		setValue(x(282))
		setValue(x(293))
		putList(x(333))
		setConstant(39)
		setConstant(nil)
		putList(x(332))
		setConstant(78)
		setValue(x(333))
		putList(x(331))
		setConstant(73)
		setValue(x(332))
		putList(x(330))
		setConstant(68)
		setValue(x(331))
		putList(x(329))
		setConstant(70)
		setValue(x(330))
		putList(x(328))
		setConstant(96)
		setValue(x(329))
		putList(x(365))
		setConstant(114)
		setConstant(nil)
		putList(x(364))
		setConstant(111)
		setValue(x(365))
		putList(x(363))
		setConstant(116)
		setValue(x(364))
		putList(x(362))
		setConstant(97)
		setValue(x(363))
		putList(x(361))
		setConstant(114)
		setValue(x(362))
		putList(x(360))
		setConstant(101)
		setValue(x(361))
		putList(x(359))
		setConstant(112)
		setValue(x(360))
		putList(x(358))
		setConstant(111)
		setValue(x(359))
		putList(x(357))
		setConstant(32)
		setValue(x(358))
		putList(x(356))
		setConstant(110)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(105)
		setValue(x(355))
		putList(x(353))
		setConstant(115)
		setValue(x(354))
		putList(x(352))
		setConstant(117)
		setValue(x(353))
		putList(x(351))
		setConstant(108)
		setValue(x(352))
		putList(x(350))
		setConstant(99)
		setValue(x(351))
		putList(x(349))
		setConstant(110)
		setValue(x(350))
		putList(x(348))
		setConstant(105)
		setValue(x(349))
		putList(x(347))
		setConstant(32)
		setValue(x(348))
		putList(x(346))
		setConstant(110)
		setValue(x(347))
		putList(x(345))
		setConstant(105)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(111)
		setValue(x(343))
		putList(x(341))
		setConstant(100)
		setValue(x(342))
		putList(x(340))
		setConstant(32)
		setValue(x(341))
		putList(x(339))
		setConstant(101)
		setValue(x(340))
		putList(x(338))
		setConstant(116)
		setValue(x(339))
		putList(x(337))
		setConstant(105)
		setValue(x(338))
		putList(x(336))
		setConstant(110)
		setValue(x(337))
		putList(x(335))
		setConstant(105)
		setValue(x(336))
		putList(x(334))
		setConstant(102)
		setValue(x(335))
		putRecord('#' 2 x(327))
		setValue(x(328))
		setValue(x(334))
		putList(x(372))
		setConstant(39)
		setConstant(nil)
		putList(x(371))
		setConstant(68)
		setValue(x(372))
		putList(x(370))
		setConstant(68)
		setValue(x(371))
		putList(x(369))
		setConstant(65)
		setValue(x(370))
		putList(x(368))
		setConstant(96)
		setValue(x(369))
		putList(x(382))
		setConstant(39)
		setConstant(nil)
		putList(x(381))
		setConstant(45)
		setValue(x(382))
		putList(x(380))
		setConstant(96)
		setValue(x(381))
		putList(x(379))
		setConstant(32)
		setValue(x(380))
		putList(x(378))
		setConstant(114)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(32)
		setValue(x(377))
		putList(x(375))
		setConstant(39)
		setValue(x(376))
		putList(x(374))
		setConstant(43)
		setValue(x(375))
		putList(x(373))
		setConstant(96)
		setValue(x(374))
		putRecord('#' 2 x(367))
		setValue(x(368))
		setValue(x(373))
		putList(x(391))
		setConstant(39)
		setConstant(nil)
		putList(x(390))
		setConstant(76)
		setValue(x(391))
		putList(x(389))
		setConstant(85)
		setValue(x(390))
		putList(x(388))
		setConstant(77)
		setValue(x(389))
		putList(x(387))
		setConstant(68)
		setValue(x(388))
		putList(x(386))
		setConstant(70)
		setValue(x(387))
		putList(x(385))
		setConstant(96)
		setValue(x(386))
		putList(x(401))
		setConstant(39)
		setConstant(nil)
		putList(x(400))
		setConstant(47)
		setValue(x(401))
		putList(x(399))
		setConstant(96)
		setValue(x(400))
		putList(x(398))
		setConstant(32)
		setValue(x(399))
		putList(x(397))
		setConstant(114)
		setValue(x(398))
		putList(x(396))
		setConstant(111)
		setValue(x(397))
		putList(x(395))
		setConstant(32)
		setValue(x(396))
		putList(x(394))
		setConstant(39)
		setValue(x(395))
		putList(x(393))
		setConstant(42)
		setValue(x(394))
		putList(x(392))
		setConstant(96)
		setValue(x(393))
		putRecord('#' 2 x(384))
		setValue(x(385))
		setValue(x(392))
		putList(x(413))
		setConstant(39)
		setConstant(nil)
		putList(x(412))
		setConstant(76)
		setValue(x(413))
		putList(x(411))
		setConstant(85)
		setValue(x(412))
		putList(x(410))
		setConstant(77)
		setValue(x(411))
		putList(x(409))
		setConstant(82)
		setValue(x(410))
		putList(x(408))
		setConstant(69)
		setValue(x(409))
		putList(x(407))
		setConstant(72)
		setValue(x(408))
		putList(x(406))
		setConstant(84)
		setValue(x(407))
		putList(x(405))
		setConstant(79)
		setValue(x(406))
		putList(x(404))
		setConstant(96)
		setValue(x(405))
		putList(x(427))
		setConstant(39)
		setConstant(nil)
		putList(x(426))
		setConstant(100)
		setValue(x(427))
		putList(x(425))
		setConstant(111)
		setValue(x(426))
		putList(x(424))
		setConstant(109)
		setValue(x(425))
		putList(x(423))
		setConstant(96)
		setValue(x(424))
		putList(x(422))
		setConstant(32)
		setValue(x(423))
		putList(x(421))
		setConstant(114)
		setValue(x(422))
		putList(x(420))
		setConstant(111)
		setValue(x(421))
		putList(x(419))
		setConstant(32)
		setValue(x(420))
		putList(x(418))
		setConstant(39)
		setValue(x(419))
		putList(x(417))
		setConstant(118)
		setValue(x(418))
		putList(x(416))
		setConstant(105)
		setValue(x(417))
		putList(x(415))
		setConstant(100)
		setValue(x(416))
		putList(x(414))
		setConstant(96)
		setValue(x(415))
		putRecord('#' 2 x(403))
		setValue(x(404))
		setValue(x(414))
		putList(x(442))
		setConstant(39)
		setConstant(nil)
		putList(x(441))
		setConstant(76)
		setValue(x(442))
		putList(x(440))
		setConstant(69)
		setValue(x(441))
		putList(x(439))
		setConstant(66)
		setValue(x(440))
		putList(x(438))
		setConstant(65)
		setValue(x(439))
		putList(x(437))
		setConstant(76)
		setValue(x(438))
		putList(x(436))
		setConstant(95)
		setValue(x(437))
		putList(x(435))
		setConstant(69)
		setValue(x(436))
		putList(x(434))
		setConstant(83)
		setValue(x(435))
		putList(x(433))
		setConstant(76)
		setValue(x(434))
		putList(x(432))
		setConstant(65)
		setValue(x(433))
		putList(x(431))
		setConstant(70)
		setValue(x(432))
		putList(x(430))
		setConstant(96)
		setValue(x(431))
		putList(x(458))
		setConstant(108)
		setConstant(nil)
		putList(x(457))
		setConstant(101)
		setValue(x(458))
		putList(x(456))
		setConstant(98)
		setValue(x(457))
		putList(x(455))
		setConstant(97)
		setValue(x(456))
		putList(x(454))
		setConstant(108)
		setValue(x(455))
		putList(x(453))
		setConstant(32)
		setValue(x(454))
		putList(x(452))
		setConstant(115)
		setValue(x(453))
		putList(x(451))
		setConstant(97)
		setValue(x(452))
		putList(x(450))
		setConstant(32)
		setValue(x(451))
		putList(x(449))
		setConstant(39)
		setValue(x(450))
		putList(x(448))
		setConstant(101)
		setValue(x(449))
		putList(x(447))
		setConstant(115)
		setValue(x(448))
		putList(x(446))
		setConstant(108)
		setValue(x(447))
		putList(x(445))
		setConstant(97)
		setValue(x(446))
		putList(x(444))
		setConstant(102)
		setValue(x(445))
		putList(x(443))
		setConstant(96)
		setValue(x(444))
		putRecord('#' 2 x(429))
		setValue(x(430))
		setValue(x(443))
		putList(x(472))
		setConstant(39)
		setConstant(nil)
		putList(x(471))
		setConstant(76)
		setValue(x(472))
		putList(x(470))
		setConstant(69)
		setValue(x(471))
		putList(x(469))
		setConstant(66)
		setValue(x(470))
		putList(x(468))
		setConstant(65)
		setValue(x(469))
		putList(x(467))
		setConstant(76)
		setValue(x(468))
		putList(x(466))
		setConstant(95)
		setValue(x(467))
		putList(x(465))
		setConstant(69)
		setValue(x(466))
		putList(x(464))
		setConstant(85)
		setValue(x(465))
		putList(x(463))
		setConstant(82)
		setValue(x(464))
		putList(x(462))
		setConstant(84)
		setValue(x(463))
		putList(x(461))
		setConstant(96)
		setValue(x(462))
		putList(x(487))
		setConstant(108)
		setConstant(nil)
		putList(x(486))
		setConstant(101)
		setValue(x(487))
		putList(x(485))
		setConstant(98)
		setValue(x(486))
		putList(x(484))
		setConstant(97)
		setValue(x(485))
		putList(x(483))
		setConstant(108)
		setValue(x(484))
		putList(x(482))
		setConstant(32)
		setValue(x(483))
		putList(x(481))
		setConstant(115)
		setValue(x(482))
		putList(x(480))
		setConstant(97)
		setValue(x(481))
		putList(x(479))
		setConstant(32)
		setValue(x(480))
		putList(x(478))
		setConstant(39)
		setValue(x(479))
		putList(x(477))
		setConstant(101)
		setValue(x(478))
		putList(x(476))
		setConstant(117)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(96)
		setValue(x(474))
		putRecord('#' 2 x(460))
		setValue(x(461))
		setValue(x(473))
		putList(x(501))
		setConstant(39)
		setConstant(nil)
		putList(x(500))
		setConstant(76)
		setValue(x(501))
		putList(x(499))
		setConstant(69)
		setValue(x(500))
		putList(x(498))
		setConstant(66)
		setValue(x(499))
		putList(x(497))
		setConstant(65)
		setValue(x(498))
		putList(x(496))
		setConstant(76)
		setValue(x(497))
		putList(x(495))
		setConstant(95)
		setValue(x(496))
		putList(x(494))
		setConstant(84)
		setValue(x(495))
		putList(x(493))
		setConstant(73)
		setValue(x(494))
		putList(x(492))
		setConstant(78)
		setValue(x(493))
		putList(x(491))
		setConstant(85)
		setValue(x(492))
		putList(x(490))
		setConstant(96)
		setValue(x(491))
		putList(x(516))
		setConstant(108)
		setConstant(nil)
		putList(x(515))
		setConstant(101)
		setValue(x(516))
		putList(x(514))
		setConstant(98)
		setValue(x(515))
		putList(x(513))
		setConstant(97)
		setValue(x(514))
		putList(x(512))
		setConstant(108)
		setValue(x(513))
		putList(x(511))
		setConstant(32)
		setValue(x(512))
		putList(x(510))
		setConstant(115)
		setValue(x(511))
		putList(x(509))
		setConstant(97)
		setValue(x(510))
		putList(x(508))
		setConstant(32)
		setValue(x(509))
		putList(x(507))
		setConstant(39)
		setValue(x(508))
		putList(x(506))
		setConstant(116)
		setValue(x(507))
		putList(x(505))
		setConstant(105)
		setValue(x(506))
		putList(x(504))
		setConstant(110)
		setValue(x(505))
		putList(x(503))
		setConstant(117)
		setValue(x(504))
		putList(x(502))
		setConstant(96)
		setValue(x(503))
		putRecord('#' 2 x(489))
		setValue(x(490))
		setValue(x(502))
		putList(x(526))
		setConstant(39)
		setConstant(nil)
		putList(x(525))
		setConstant(84)
		setValue(x(526))
		putList(x(524))
		setConstant(78)
		setValue(x(525))
		putList(x(523))
		setConstant(73)
		setValue(x(524))
		putList(x(522))
		setConstant(84)
		setValue(x(523))
		putList(x(521))
		setConstant(79)
		setValue(x(522))
		putList(x(520))
		setConstant(68)
		setValue(x(521))
		putList(x(519))
		setConstant(96)
		setValue(x(520))
		putList(x(552))
		setConstant(114)
		setConstant(nil)
		putList(x(551))
		setConstant(101)
		setValue(x(552))
		putList(x(550))
		setConstant(103)
		setValue(x(551))
		putList(x(549))
		setConstant(101)
		setValue(x(550))
		putList(x(548))
		setConstant(116)
		setValue(x(549))
		putList(x(547))
		setConstant(110)
		setValue(x(548))
		putList(x(546))
		setConstant(105)
		setValue(x(547))
		putList(x(545))
		setConstant(32)
		setValue(x(546))
		putList(x(544))
		setConstant(110)
		setValue(x(545))
		putList(x(543))
		setConstant(97)
		setValue(x(544))
		putList(x(542))
		setConstant(32)
		setValue(x(543))
		putList(x(541))
		setConstant(121)
		setValue(x(542))
		putList(x(540))
		setConstant(98)
		setValue(x(541))
		putList(x(539))
		setConstant(32)
		setValue(x(540))
		putList(x(538))
		setConstant(100)
		setValue(x(539))
		putList(x(537))
		setConstant(101)
		setValue(x(538))
		putList(x(536))
		setConstant(119)
		setValue(x(537))
		putList(x(535))
		setConstant(111)
		setValue(x(536))
		putList(x(534))
		setConstant(108)
		setValue(x(535))
		putList(x(533))
		setConstant(108)
		setValue(x(534))
		putList(x(532))
		setConstant(111)
		setValue(x(533))
		putList(x(531))
		setConstant(102)
		setValue(x(532))
		putList(x(530))
		setConstant(32)
		setValue(x(531))
		putList(x(529))
		setConstant(39)
		setValue(x(530))
		putList(x(528))
		setConstant(46)
		setValue(x(529))
		putList(x(527))
		setConstant(96)
		setValue(x(528))
		putRecord('#' 2 x(518))
		setValue(x(519))
		setValue(x(527))
		putList(x(561))
		setConstant(39)
		setConstant(nil)
		putList(x(560))
		setConstant(70)
		setValue(x(561))
		putList(x(559))
		setConstant(69)
		setValue(x(560))
		putList(x(558))
		setConstant(82)
		setValue(x(559))
		putList(x(557))
		setConstant(69)
		setValue(x(558))
		putList(x(556))
		setConstant(68)
		setValue(x(557))
		putList(x(555))
		setConstant(96)
		setValue(x(556))
		putList(x(565))
		setConstant(39)
		setConstant(nil)
		putList(x(564))
		setConstant(33)
		setValue(x(565))
		putList(x(563))
		setConstant(33)
		setValue(x(564))
		putList(x(562))
		setConstant(96)
		setValue(x(563))
		putRecord('#' 2 x(554))
		setValue(x(555))
		setValue(x(562))
		putList(x(578))
		setConstant(39)
		setConstant(nil)
		putList(x(577))
		setConstant(69)
		setValue(x(578))
		putList(x(576))
		setConstant(76)
		setValue(x(577))
		putList(x(575))
		setConstant(73)
		setValue(x(576))
		putList(x(574))
		setConstant(70)
		setValue(x(575))
		putList(x(573))
		setConstant(70)
		setValue(x(574))
		putList(x(572))
		setConstant(79)
		setValue(x(573))
		putList(x(571))
		setConstant(68)
		setValue(x(572))
		putList(x(570))
		setConstant(78)
		setValue(x(571))
		putList(x(569))
		setConstant(69)
		setValue(x(570))
		putList(x(568))
		setConstant(96)
		setValue(x(569))
		putList(x(589))
		setConstant(101)
		setConstant(nil)
		putList(x(588))
		setConstant(108)
		setValue(x(589))
		putList(x(587))
		setConstant(105)
		setValue(x(588))
		putList(x(586))
		setConstant(102)
		setValue(x(587))
		putList(x(585))
		setConstant(45)
		setValue(x(586))
		putList(x(584))
		setConstant(102)
		setValue(x(585))
		putList(x(583))
		setConstant(111)
		setValue(x(584))
		putList(x(582))
		setConstant(45)
		setValue(x(583))
		putList(x(581))
		setConstant(100)
		setValue(x(582))
		putList(x(580))
		setConstant(110)
		setValue(x(581))
		putList(x(579))
		setConstant(101)
		setValue(x(580))
		putRecord('#' 2 x(567))
		setValue(x(568))
		setValue(x(579))
		putList(x(598))
		setConstant(39)
		setConstant(nil)
		putList(x(597))
		setConstant(88)
		setValue(x(598))
		putList(x(596))
		setConstant(69)
		setValue(x(597))
		putList(x(595))
		setConstant(71)
		setValue(x(596))
		putList(x(594))
		setConstant(69)
		setValue(x(595))
		putList(x(593))
		setConstant(82)
		setValue(x(594))
		putList(x(592))
		setConstant(96)
		setValue(x(593))
		putList(x(616))
		setConstant(110)
		setConstant(nil)
		putList(x(615))
		setConstant(111)
		setValue(x(616))
		putList(x(614))
		setConstant(105)
		setValue(x(615))
		putList(x(613))
		setConstant(115)
		setValue(x(614))
		putList(x(612))
		setConstant(115)
		setValue(x(613))
		putList(x(611))
		setConstant(101)
		setValue(x(612))
		putList(x(610))
		setConstant(114)
		setValue(x(611))
		putList(x(609))
		setConstant(112)
		setValue(x(610))
		putList(x(608))
		setConstant(120)
		setValue(x(609))
		putList(x(607))
		setConstant(101)
		setValue(x(608))
		putList(x(606))
		setConstant(32)
		setValue(x(607))
		putList(x(605))
		setConstant(114)
		setValue(x(606))
		putList(x(604))
		setConstant(97)
		setValue(x(605))
		putList(x(603))
		setConstant(108)
		setValue(x(604))
		putList(x(602))
		setConstant(117)
		setValue(x(603))
		putList(x(601))
		setConstant(103)
		setValue(x(602))
		putList(x(600))
		setConstant(101)
		setValue(x(601))
		putList(x(599))
		setConstant(114)
		setValue(x(600))
		putRecord('#' 2 x(591))
		setValue(x(592))
		setValue(x(599))
		putList(x(626))
		setConstant(39)
		setConstant(nil)
		putList(x(625))
		setConstant(69)
		setValue(x(626))
		putList(x(624))
		setConstant(67)
		setValue(x(625))
		putList(x(623))
		setConstant(85)
		setValue(x(624))
		putList(x(622))
		setConstant(68)
		setValue(x(623))
		putList(x(621))
		setConstant(69)
		setValue(x(622))
		putList(x(620))
		setConstant(82)
		setValue(x(621))
		putList(x(619))
		setConstant(96)
		setValue(x(620))
		putList(x(630))
		setConstant(39)
		setConstant(nil)
		putList(x(629))
		setConstant(62)
		setValue(x(630))
		putList(x(628))
		setConstant(61)
		setValue(x(629))
		putList(x(627))
		setConstant(96)
		setValue(x(628))
		putRecord('#' 2 x(618))
		setValue(x(619))
		setValue(x(627))
		putList(x(637))
		setConstant(39)
		setConstant(nil)
		putList(x(636))
		setConstant(80)
		setValue(x(637))
		putList(x(635))
		setConstant(69)
		setValue(x(636))
		putList(x(634))
		setConstant(83)
		setValue(x(635))
		putList(x(633))
		setConstant(96)
		setValue(x(634))
		putList(x(641))
		setConstant(39)
		setConstant(nil)
		putList(x(640))
		setConstant(47)
		setValue(x(641))
		putList(x(639))
		setConstant(47)
		setValue(x(640))
		putList(x(638))
		setConstant(96)
		setValue(x(639))
		putRecord('#' 2 x(632))
		setValue(x(633))
		setValue(x(638))
		putList(x(631))
		setValue(x(632))
		setConstant(nil)
		putList(x(617))
		setValue(x(618))
		setValue(x(631))
		putList(x(590))
		setValue(x(591))
		setValue(x(617))
		putList(x(566))
		setValue(x(567))
		setValue(x(590))
		putList(x(553))
		setValue(x(554))
		setValue(x(566))
		putList(x(517))
		setValue(x(518))
		setValue(x(553))
		putList(x(488))
		setValue(x(489))
		setValue(x(517))
		putList(x(459))
		setValue(x(460))
		setValue(x(488))
		putList(x(428))
		setValue(x(429))
		setValue(x(459))
		putList(x(402))
		setValue(x(403))
		setValue(x(428))
		putList(x(383))
		setValue(x(384))
		setValue(x(402))
		putList(x(366))
		setValue(x(367))
		setValue(x(383))
		putList(x(326))
		setValue(x(327))
		setValue(x(366))
		putList(x(280))
		setValue(x(281))
		setValue(x(326))
		putList(x(250))
		setValue(x(251))
		setValue(x(280))
		putList(x(236))
		setValue(x(237))
		setValue(x(250))
		putList(x(220))
		setValue(x(221))
		setValue(x(236))
		putList(x(206))
		setValue(x(207))
		setValue(x(220))
		putList(x(192))
		setValue(x(193))
		setValue(x(206))
		putList(x(177))
		setValue(x(178))
		setValue(x(192))
		putList(x(145))
		setValue(x(146))
		setValue(x(177))
		putList(x(125))
		setValue(x(126))
		setValue(x(145))
		putList(x(113))
		setValue(x(114))
		setValue(x(125))
		putList(x(97))
		setValue(x(98))
		setValue(x(113))
		putList(x(81))
		setValue(x(82))
		setValue(x(97))
		putList(x(65))
		setValue(x(66))
		setValue(x(81))
		putList(x(41))
		setValue(x(42))
		setValue(x(65))
		putList(x(27))
		setValue(x(28))
		setValue(x(41))
		putList(x(9))
		setValue(x(0))
		setValue(x(27))
lbl(299833)	definition(x(10) 299897 pid('DetachPrefix' 3 pos('./compiler/ParseOz.oz' 57 6) nil 5) <Q: 1708> nil)
		match(x(0) ht(299882 [onScalar(nil 299842) onRecord('|' 2 299846)]))
lbl(299842)	unify(x(2) x(1))
		return
lbl(299846)	allocateL2
		getVarVar(x(0) x(3))
		move(x(2) y(0))
		testList(x(1) 299877)
lbl(299856)	getVarVar(x(1) x(4))
		createVariable(y(1))
		shallowGuard(299877)
		unify(x(0) x(1))
lbl(299866)	shallowThen
		move(x(3) x(0))
		move(x(4) x(1))
		deAllocateL2
		genFastCall(<Q: 1708> 7)
lbl(299877)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(299882)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299833)
lbl(299897)	definition(x(10) 299985 pid('BeautifyPrefix' 3 pos('./compiler/ParseOz.oz' 67 6) nil 4) <Q: 1709> nil)
		match(x(0) ht(299970 [onScalar(nil 299906) onRecord('|' 2 299910)]))
lbl(299906)	unify(x(2) x(1))
		return
lbl(299910)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1708> 6)
		testLiteral(y(4) false 299949)
lbl(299937)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1709> 7)
lbl(299949)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1710> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(299970)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(73)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299897)
lbl(299985)	definition(x(10) 300255 pid('Beautify' 2 pos('./compiler/ParseOz.oz' 76 6) nil 5) <Q: 1710> [g(6) x(9)])
		match(x(0) ht(300240 [onScalar(nil 299994) onRecord('|' 2 299998)]))
lbl(299994)	getLiteral(nil x(1))
		return
lbl(299998)	allocateL4
		getVarVar(x(2) y(0))
		testNumber(x(2) 96 300229)
lbl(300006)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		testList(y(0) 300114)
lbl(300014)	getVarVar(x(2) x(3))
		testNumber(x(2) 95 300114)
lbl(300021)	definition(x(4) 300039 pid('' 2 pos('./compiler/ParseOz.oz' 81 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(300021)
lbl(300039)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 300101)
lbl(300057)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(300101)
		getNumber(95 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(300073)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1710> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(300101)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300114)	testList(y(0) 300217)
lbl(300117)	getVarVar(x(0) x(1))
		testNumber(x(0) 39 300217)
lbl(300124)	definition(x(4) 300142 pid('' 2 pos('./compiler/ParseOz.oz' 88 28) nil 4) unit nil)
		putConstant(39 x(2))
		callBI('Value.\'\\=\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(300124)
lbl(300142)	move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 300204)
lbl(300160)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(300204)
		getNumber(39 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(300176)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1710> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(300204)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300217)	move(g(1) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1709> 7)
lbl(300229)	getListValVar(x(1) x(2) x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300240)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299985)
lbl(300255)	definition(x(9) 300373 pid('Output' 2 pos('./compiler/ParseOz.oz' 101 6) nil 2) <Q: 1711> [g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
lbl(300271)	definition(x(1) 300364 pid('' 1 pos('./compiler/ParseOz.oz' 103 3) nil 4) unit [g(0) y(0)])
		allocateL2
		move(x(0) y(0))
		createCond(300355)
lbl(300283)	lastClause
		clause
		thread(300314)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		putConstant('parse error' x(1))
		inlineUparrow(x(2) x(0) x(3))
		unify(x(3) x(1))
		deAllocateL2
		return
lbl(300314)	ask
lbl(300315)	move(y(0) x(0))
		inlineDot(x(0) msg x(1) cache)
		callBI('Atom.toString' [x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1710> 4)
		move(y(0) x(0))
		putConstant(msg x(1))
		move(y(1) x(2))
		callBI('Record.adjoinAt' [x(0) x(1) x(2)]#[x(3)])
		move(x(3) x(0))
		deAllocateL2
		tailCall(g(1) 1)
lbl(300355)	move(y(0) x(0))
		deAllocateL2
		tailCall(g(1) 1)
		endDefinition(300271)
lbl(300364)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(300255)
lbl(300373)	definition(x(0) 300475 pid('ParseOzFile' 5 pos('./compiler/ParseOz.oz' 113 3) nil 5) <Q: 1712> [x(7)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1711> 4)
		testLiteral(y(1) fileNotFound 300468)
lbl(300449)	putRecord('#' 3 x(1))
		setConstant('could not open file "')
		setValue(y(3))
		setConstant('" for reading')
		putConstant('compiler directive error' x(0))
		sendMsg(error y(4) [kind msg] cache)
lbl(300468)	unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(300373)
lbl(300475)	unify(x(0) y(3))
lbl(300478)	definition(x(0) 300557 pid('ParseOzVirtualString' 5 pos('./compiler/ParseOz.oz' 129 3) nil 5) <Q: 1713> [x(8)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1711> 4)
		unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(300478)
lbl(300557)	unify(x(0) y(16))
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<M: Compiler> <M: Port> <M: ServerThread>] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(300578)	definition(x(7) 300678 pid('GenericInterface,init/fast' 2 pos('./compiler/GenericInterface.oz' 25 3) nil 5) <Q: 1714> [y(0) g(19)])
		allocateL3
		createVariable(x(2))
		callBI('Object.ooGetLock' [x(2)]#nil)
		lockThread(300674 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true exit false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		createVariable(x(1))
		callBI('Port.new' [x(1)]#[x(2)])
		inlineAssign(<M: Port> x(2) cache)
		inlineAt(<M: Port> x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		sendMsg(register y(0) 1 cache)
		thread(300673)
		callBI('Thread.this' nil#[x(4)])
		inlineAssign(<M: ServerThread> x(4) cache)
		putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(1) x(0))
		putConstant(1 x(2))
		createVariableMove(y(0) x(3))
		marshalledFastCall(<R: tuple> 8)
		getSelf(x(1))
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(1) 1)
lbl(300673)	return
lbl(300674)	deAllocateL3
		return
		endDefinition(300578)
lbl(300678)	definition(x(8) 300713 pid('GenericInterface,init/slow' 1 pos('./compiler/GenericInterface.oz' 25 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1714> 5)
		endDefinition(300678)
lbl(300713)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(300723)	definition(x(7) 300805 pid('GenericInterface,exit/fast' 0 pos('./compiler/GenericInterface.oz' 37 3) nil 2) <Q: 1715> [g(28)])
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(300802 x(0))
		inlineAt(<M: Compiler> x(0) cache)
		match(x(0) ht(300745 [onScalar(unit 300793)]))
lbl(300745)	inlineAt(<M: ServerThread> x(0) cache)
		genFastCall(<P: 263> 2)
		inlineAt(<M: Compiler> x(1) cache)
		inlineAt(<M: Port> x(0) cache)
		sendMsg(unregister x(1) 1 cache)
		putConstant(unit x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: Port> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: ServerThread> x(0) cache)
lbl(300793)	getSelf(x(1))
		sendMsg(reset x(1) 0 cache)
		return
lbl(300802)	return
		endDefinition(300723)
lbl(300805)	definition(x(8) 300819 pid('GenericInterface,exit/slow' 1 pos('./compiler/GenericInterface.oz' 37 3) nil 1) unit nil)
		getLiteral(exit x(0))
		genFastCall(<Q: 1715> 1)
		endDefinition(300805)
lbl(300819)	putRecord('#' [1 2 fast] x(10))
		setConstant(exit)
		setValue(x(8))
		setValue(x(7))
lbl(300829)	definition(x(7) 300838 pid('GenericInterface,reset/fast' 0 pos('./compiler/GenericInterface.oz' 50 3) nil 0) <Q: 1716> nil)
		return
		endDefinition(300829)
lbl(300838)	definition(x(8) 300852 pid('GenericInterface,reset/slow' 1 pos('./compiler/GenericInterface.oz' 50 3) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1716> 1)
		endDefinition(300838)
lbl(300852)	putRecord('#' [1 2 fast] x(11))
		setConstant(reset)
		setValue(x(8))
		setValue(x(7))
lbl(300862)	definition(x(7) 300879 pid('GenericInterface,getCompiler/fast' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 2) <Q: 1717> nil)
		inlineAt(<M: Compiler> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(300862)
lbl(300879)	definition(x(8) 300905 pid('GenericInterface,getCompiler/slow' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1717> 3)
		endDefinition(300879)
lbl(300905)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCompiler)
		setValue(x(8))
		setValue(x(7))
lbl(300915)	definition(x(7) 300932 pid('GenericInterface,getPort/fast' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 2) <Q: 1718> nil)
		inlineAt(<M: Port> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(300915)
lbl(300932)	definition(x(8) 300958 pid('GenericInterface,getPort/slow' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1718> 3)
		endDefinition(300932)
lbl(300958)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPort)
		setValue(x(8))
		setValue(x(7))
lbl(300968)	definition(x(7) 300987 pid('GenericInterface,enqueue/fast' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 2) <Q: 1719> nil)
		inlineAt(<M: Compiler> x(1) cache)
		tailSendMsg(enqueue x(1) 1 cache)
		endDefinition(300968)
lbl(300987)	definition(x(8) 301013 pid('GenericInterface,enqueue/slow' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1719> 3)
		endDefinition(300987)
lbl(301013)	putRecord('#' [1 2 fast] x(14))
		setConstant(enqueue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('GenericInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(301054)	definition(x(7) 301182 pid('MessageToVS' 2 pos('./compiler/QuietInterface.oz' 23 3) nil 6) <Q: 1720> [y(6)])
		match(x(0) ht(301167 [onRecord(info 1 301063) onRecord(info 2 301069) onRecord(message 2 301075)]))
lbl(301063)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(301069)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(301075)	allocateL2
		getVariable(x(2))
		putConstant(nil x(3))
		callBI('Cell.new' [x(3)]#[x(0)])
		move(g(0) x(3))
		inlineDot(x(3) msg x(4) cache)
lbl(301093)	definition(x(5) 301142 pid('' 1 pos('./compiler/QuietInterface.oz' 29 3) nil 5) unit [x(0) g(0)])
		allocateL2
		move(g(0) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Cell.assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(301093)
lbl(301142)	moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(5) x(0))
		move(x(2) x(1))
		call(x(4) 2)
		move(y(1) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(301167)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(34)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(301054)
lbl(301182)	definition(x(7) 301227 pid('HistoryToVS' 2 pos('./compiler/QuietInterface.oz' 37 3) nil 5) <Q: 1721> nil)
lbl(301188)	definition(x(4) 301213 pid('' 3 pos('./compiler/QuietInterface.oz' 39 7) nil 3) unit nil)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1720> 5)
		endDefinition(301188)
lbl(301213)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(301182)
lbl(301227)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: HasBeenTopped> <M: HasErrors> <M: History> <M: InsertedFiles> <M: SourceVS> <M: Verbose>] x(2))
		setConstant(false)
		setConstant(false)
		setConstant(nil)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
		putConstant(<M: Serve> x(8))
lbl(301266)	definition(x(9) 301337 pid('QuietInterface,init' 1 pos('./compiler/QuietInterface.oz' 49 6) nil 4) unit [x(7) y(0) x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('Value.hasFeature' [x(0) x(2)]#[x(3)] 301314)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(301317)
lbl(301314)	getLiteral(false y(2))
lbl(301317)	move(y(2) x(0))
		inlineAssign(<M: Verbose> x(0) cache)
		move(y(1) x(0))
		move(g(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true init true 2) 0)
		endDefinition(301266)
lbl(301337)	putList(x(7))
		setConstant(init)
		setValue(x(9))
lbl(301343)	definition(x(8) 301401 pid('QuietInterface,reset/fast' 0 pos('./compiler/QuietInterface.oz' 53 6) nil 1) <Q: 1722> nil)
		createVariable(x(0))
		callBI('Object.ooGetLock' [x(0)]#nil)
		lockThread(301398 x(0))
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: InsertedFiles> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: SourceVS> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		return
lbl(301398)	return
		endDefinition(301343)
lbl(301401)	definition(x(9) 301415 pid('QuietInterface,reset/slow' 1 pos('./compiler/QuietInterface.oz' 53 6) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1722> 1)
		endDefinition(301401)
lbl(301415)	putRecord('#' [1 2 fast] x(10))
		setConstant(reset)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(2))
lbl(301427)	definition(x(8) 301718 pid('QuietInterface,Serve/fast' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 4) <Q: 1723> [y(5) y(2)])
		testList(x(0) 301703)
lbl(301436)	allocateL4
		getVarVar(x(0) x(1))
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(301552 [onScalar(errorFound 301448) onScalar(toTop 301461) onRecord(info 1 301474) onRecord(info 2 301479) onRecord(message 2 301484) onRecord(insert 2 301489) onRecord(displaySource 3 301512)]))
lbl(301448)	putConstant(true x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		getLiteral(unit y(1))
		branch(301555)
lbl(301461)	putConstant(true x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		getLiteral(unit y(1))
		branch(301555)
lbl(301474)	unify(y(1) x(0))
		branch(301555)
lbl(301479)	unify(y(1) x(0))
		branch(301555)
lbl(301484)	unify(y(1) x(0))
		branch(301555)
lbl(301489)	getVariable(x(0))
		inlineAt(<M: InsertedFiles> x(2) cache)
		putList(x(3))
		setValue(x(0))
		setValue(x(2))
		inlineAssign(<M: InsertedFiles> x(3) cache)
		getLiteral(unit y(1))
		branch(301555)
lbl(301512)	getVoid(2)
		getVariable(x(0))
		inlineAt(<M: SourceVS> x(2) cache)
		testLiteral(x(2) nil 301532)
lbl(301525)	inlineAssign(<M: SourceVS> x(0) cache)
		branch(301547)
lbl(301532)	putRecord('#' 3 x(3))
		setValue(x(2))
		setConstant('\n\n')
		setValue(x(0))
		inlineAssign(<M: SourceVS> x(3) cache)
lbl(301547)	getLiteral(unit y(1))
		branch(301555)
lbl(301552)	getLiteral(unit y(1))
lbl(301555)	match(y(1) ht(301558 [onScalar(unit 301696)]))
lbl(301558)	inlineAt(<M: Verbose> x(0) cache)
		match(x(0) ht(301680 [onScalar(true 301566) onScalar(auto 301594)]))
lbl(301566)	move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1720> 4)
		move(y(3) x(0))
		call(y(2) 1)
		branch(301696)
lbl(301594)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
		inlineAt(<M: HasBeenTopped> x(0) cache)
		testBool(x(0) 301696 301669)
		move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		inlineAt(<M: History> x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1721> 4)
		move(y(2) x(0))
		call(y(1) 1)
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: Verbose> x(1) cache)
		branch(301696)
lbl(301669)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(301680)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
lbl(301696)	move(y(0) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: Serve> true 1) 0)
lbl(301703)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(103)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(301427)
lbl(301718)	definition(x(9) 301744 pid('QuietInterface,Serve/slow' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1723> 3)
		endDefinition(301718)
lbl(301744)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: Serve>)
		setValue(x(9))
		setValue(x(8))
lbl(301754)	definition(x(8) 301768 pid('QuietInterface,setVerbosity/fast' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 1) <Q: 1724> nil)
		inlineAssign(<M: Verbose> x(0) cache)
		return
		endDefinition(301754)
lbl(301768)	definition(x(9) 301794 pid('QuietInterface,setVerbosity/slow' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1724> 3)
		endDefinition(301768)
lbl(301794)	putRecord('#' [1 2 fast] x(12))
		setConstant(setVerbosity)
		setValue(x(9))
		setValue(x(8))
lbl(301804)	definition(x(8) 301821 pid('QuietInterface,hasErrors/fast' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 2) <Q: 1725> nil)
		inlineAt(<M: HasErrors> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(301804)
lbl(301821)	definition(x(9) 301847 pid('QuietInterface,hasErrors/slow' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1725> 3)
		endDefinition(301821)
lbl(301847)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasErrors)
		setValue(x(9))
		setValue(x(8))
lbl(301857)	definition(x(8) 301874 pid('QuietInterface,hasBeenTopped/fast' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 2) <Q: 1726> nil)
		inlineAt(<M: HasBeenTopped> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(301857)
lbl(301874)	definition(x(9) 301900 pid('QuietInterface,hasBeenTopped/slow' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1726> 3)
		endDefinition(301874)
lbl(301900)	putRecord('#' [1 2 fast] x(14))
		setConstant(hasBeenTopped)
		setValue(x(9))
		setValue(x(8))
lbl(301910)	definition(x(8) 301932 pid('QuietInterface,getVS/fast' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) <Q: 1727> nil)
		inlineAt(<M: History> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1721> 5)
		endDefinition(301910)
lbl(301932)	definition(x(9) 301958 pid('QuietInterface,getVS/slow' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1727> 3)
		endDefinition(301932)
lbl(301958)	putRecord('#' [1 2 fast] x(15))
		setConstant(getVS)
		setValue(x(9))
		setValue(x(8))
lbl(301968)	definition(x(8) 302019 pid('QuietInterface,getMessages/fast' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 5) <Q: 1728> nil)
		inlineAt(<M: History> x(4) cache)
lbl(301979)	definition(x(1) 302005 pid('' 3 pos('./compiler/QuietInterface.oz' 120 3) nil 3) unit nil)
		testRecord(x(1) message 2 301999)
lbl(301990)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(301999)	unify(x(2) x(0))
		return
		endDefinition(301979)
lbl(302005)	move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(301968)
lbl(302019)	definition(x(9) 302045 pid('QuietInterface,getMessages/slow' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1728> 3)
		endDefinition(302019)
lbl(302045)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMessages)
		setValue(x(9))
		setValue(x(8))
lbl(302055)	definition(x(8) 302082 pid('QuietInterface,formatMessages/fast' 2 pos('./compiler/QuietInterface.oz' 126 6) nil 2) <Q: 1729> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1721> 5)
		endDefinition(302055)
lbl(302082)	definition(x(9) 302117 pid('QuietInterface,formatMessages/slow' 1 pos('./compiler/QuietInterface.oz' 126 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Record.width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1729> 5)
		endDefinition(302082)
lbl(302117)	putRecord('#' [1 2 fast] x(17))
		setConstant(formatMessages)
		setValue(x(9))
		setValue(x(8))
lbl(302127)	definition(x(8) 302149 pid('QuietInterface,getInsertedFiles/fast' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) <Q: 1730> nil)
		inlineAt(<M: InsertedFiles> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 28> 5)
		endDefinition(302127)
lbl(302149)	definition(x(9) 302175 pid('QuietInterface,getInsertedFiles/slow' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1730> 3)
		endDefinition(302149)
lbl(302175)	putRecord('#' [1 2 fast] x(18))
		setConstant(getInsertedFiles)
		setValue(x(9))
		setValue(x(8))
lbl(302185)	definition(x(8) 302202 pid('QuietInterface,getSource/fast' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 2) <Q: 1731> nil)
		inlineAt(<M: SourceVS> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(302185)
lbl(302202)	definition(x(9) 302228 pid('QuietInterface,getSource/slow' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Record.width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1731> 3)
		endDefinition(302202)
lbl(302228)	putRecord('#' [1 2 fast] x(19))
		setConstant(getSource)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		move(y(2) x(6))
		putConstant('feat' x(3))
		putConstant('QuietInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(302276)	definition(x(0) 302504 pid('EvalExpression' 4 pos('./compiler/Abstractions.oz' 1 0) nil 6) <Q: 1732> [y(1) y(2) g(19) g(28) g(5)])
		allocateL6
		move(g(0) x(4))
		callBI('Object.newObject' [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(1) x(0))
		callBI('Object.newObject' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(expression)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord('return' [result] x(2))
		setValue(y(3))
		putRecord(feedVirtualString 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue y(4) 1 cache)
		createVariable(y(1))
		thread(302494)
		callBI('Thread.this' nil#[x(1)])
lbl(302392)	definition(x(0) 302422 pid('Kill' 0 pos('./compiler/Abstractions.oz' 10 6) nil 1) unit [y(4) g(3) x(1) y(1)])
		sendMsg(clearQueue g(0) 0 cache)
		sendMsg(interrupt g(0) 0 cache)
		move(g(2) x(0))
		genFastCall(<P: 263> 2)
		getLiteral(unit g(3))
		return
		endDefinition(302392)
lbl(302422)	unify(x(0) y(2))
		putRecord(ping 1 x(0))
		setVariable(y(2))
		sendMsg(enqueue y(4) 1 cache)
		move(y(2) x(0))
		callBI('Value.wait' [x(0)]#nil)
		createVariableMove(y(2) x(0))
		sendMsg(hasErrors y(5) 1 cache)
		testBool(y(2) 302489 302478)
		createVariableMove(y(2) x(0))
		sendMsg(getMessages y(5) 1 cache)
		putRecord(compiler 3 x(0))
		setConstant(evalExpression)
		setValue(y(0))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(302478)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(17)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(302489)	getLiteral(unit y(1))
		deAllocateL6
		return
lbl(302494)	move(y(1) x(0))
		callBI('Value.wait' [x(0)]#nil)
		deAllocateL6
		return
		endDefinition(302276)
lbl(302504)	definition(x(1) 302523 pid('VirtualStringToValue' 2 pos('./compiler/Abstractions.oz' 26 0) nil 4) <Q: 1733> nil)
		move(x(1) x(3))
		putConstant(env x(1))
		createVariable(x(2))
		genFastCall(<Q: 1732> 9)
		endDefinition(302504)
lbl(302523)	move(y(7) x(2))
		inlineDot(x(2) put x(2) cache)
lbl(302532)	definition(x(3) 303155 pid('' 2 pos('./compiler/Errors.oz' 26 1) nil 12) <Q: 1734> [y(6)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('compiler engine error' y(3))
		testRecord(y(2) compiler 2 302630)
lbl(302567)	getVarVar(x(0) x(1))
		testLiteral(x(0) internal 302630)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Additional information')
		setValue(x(4))
		putRecord(line 1 x(7))
		setConstant('please send a bug report to oz-bugs@ps.uni-sb.de')
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(6))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal compiler error' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302630)	testRecord(y(2) compiler 2 302686)
lbl(302635)	getVarVar(x(0) x(1))
		testLiteral(x(0) invalidQuery 302686)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Query')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Invalid query' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302686)	testRecord(y(2) compiler 4 302776)
lbl(302691)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) invalidQuery 302776)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(7))
		setValue(x(1))
		putRecord(hint [l m] x(4))
		setConstant('Query')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('At argument')
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Expected type')
		setValue(x(3))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(4))
		setValue(x(8))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ill-typed query argument' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302776)	testRecord(y(2) compiler 2 302832)
lbl(302781)	getVarVar(x(0) x(1))
		testLiteral(x(0) register 302832)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Argument')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Trying to register a non-port' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302832)	testRecord(y(2) compiler 3 303036)
lbl(302837)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) evalExpression 303036)
		move(g(0) x(0))
		inlineDot(x(0) format x(2) cache)
lbl(302856)	definition(x(3) 303001 pid('' 2 pos('./compiler/Errors.oz' 57 2) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createCond(302931)
lbl(302870)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(302912)
		putConstant(error x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(302912)	ask
lbl(302913)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(302931)	createCond(302994)
lbl(302933)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(302975)
		putConstant(warn x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI('Record.tellRecordSize' [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(302975)	ask
lbl(302976)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(302994)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(302856)
lbl(303001)	move(x(2) y(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant('Compiler.evalExpression applied to an erroneous query' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303036)	testRecord(y(2) compiler 1 303074)
lbl(303041)	getVariable(x(0))
		testLiteral(x(0) malformedSyntaxTree 303074)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Malformed syntax tree' x(1))
		putConstant(nil x(2))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303074)	testRecord(y(2) compiler 2 303132)
lbl(303079)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) malformedSyntaxTree 303132)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Matching')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Malformed syntax tree' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303132)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(302532)
lbl(303155)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(3) x(1))
		putConstant(compiler x(0))
		call(x(2) 2)
		move(y(13) x(0))
		inlineDot(x(0) assemble x(0) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(29))
		unifyValue(x(0))
		unifyValue(y(1))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unifyValue(y(16))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL
		return
		endDefinition(277403)
lbl(303202)	tailCall(x(3) 0)
		endDefinition(276149)
lbl(303207)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(5))
		setConstant(nameVariable)
		setConstant(nil)
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putList(x(7))
		setConstant(variable)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord(info ['from' type] x(8))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(9))
		setConstant(nil)
		putList(x(11))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(10))
		setValue(x(11))
		putRecord(info ['from' type] x(12))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putList(x(14))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(13))
		setValue(x(14))
		putList(x(17))
		setConstant(condGet)
		setConstant(nil)
		putList(x(16))
		setConstant(get)
		setValue(x(17))
		putRecord(info [type] x(15))
		setValue(x(16))
		putRecord(info [type] x(18))
		setConstant(nil)
		putList(x(22))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(21))
		setConstant(printError)
		setValue(x(22))
		putList(x(20))
		setConstant(gcDo)
		setValue(x(21))
		putRecord(info [type] x(19))
		setValue(x(20))
		putRecord(info [type] x(23))
		setConstant(nil)
		putRecord(info [type] x(24))
		setConstant(nil)
		putRecord('import' ['Assembler' 'Builtins' 'CompilerSupport' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Parser' 'PrintName' 'Property' 'RunTime' 'System' 'Type' 'Unnester'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(6))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(23))
		setValue(x(24))
		putConstant(value x(4))
		putConstant('class' x(5))
		putConstant('procedure/4' x(6))
		putConstant('class' x(7))
		putConstant('procedure/5' x(8))
		putConstant('procedure/5' x(9))
		putConstant('class' x(10))
		putConstant('procedure/2' x(11))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(303433)	definition(x(2) 303909 pid('' 2 pos('./compiler/FunMain.oz' 1 0) nil 3) <P: 1735> [y(54) y(185) y(100) y(95) y(96) y(97) y(2) y(98) y(1)])
		putConstant(nil x(2))
lbl(303442)	definitionCopy(x(2) 303904 pid('/body' 0 pos('./compiler/FunMain.oz' 1 0) [once] 15) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(17)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'FS' x(8) cache)
		inlineDot(x(0) 'FD' x(9) cache)
		inlineDot(x(0) 'Module' x(10) cache)
		inlineDot(x(0) 'Type' x(11) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(12) cache)
		move(g(1) x(13))
		inlineDot(x(13) apply x(14) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		moveMoveXYXY(x(11) y(10) x(12) y(11))
		putConstant(c x(0))
		createVariableMove(y(12) x(1))
		call(x(14) 2)
		move(g(2) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant(c x(0))
		createVariableMove(y(13) x(1))
		call(x(2) 2)
		move(g(3) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'RunTime' 'System' 'Type'] x(3))
		setValue(y(13))
		setValue(y(2))
		setVariable(y(14))
		setValue(y(8))
		setValue(y(7))
		setVariable(y(15))
		setValue(y(4))
		setValue(y(10))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(4) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'RunTime' 'System'] x(3))
		setValue(y(13))
		setValue(y(2))
		setValue(y(14))
		setValue(y(15))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(16) x(1))
		call(x(2) 2)
		move(g(5) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CodeGen' 'StaticAnalysis' 'System'] x(3))
		setValue(y(16))
		setValue(y(7))
		setValue(y(4))
		move(x(3) x(0))
		move(y(14) x(1))
		call(x(2) 2)
		move(g(6) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Core' 'Module' 'RunTimeLibrary'] x(3))
		setValue(y(14))
		setValue(y(9))
		setValue(y(11))
		move(x(3) x(0))
		move(y(15) x(1))
		call(x(2) 2)
		move(g(7) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CompilerSupport' 'Core' 'FD' 'PrintName' 'RunTime'] x(3))
		setValue(y(2))
		setValue(y(14))
		setValue(y(8))
		setValue(y(12))
		setValue(y(15))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(13))
		setValue(y(2))
		setValue(y(11))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(g(9) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Assembler' 'Builtins' 'CompilerSupport' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Parser' 'PrintName' 'Property' 'RunTime' 'System' 'Type' 'Unnester'] x(3))
		setValue(y(8))
		setValue(y(13))
		setValue(y(2))
		setValue(y(14))
		setValue(y(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(1))
		setValue(y(12))
		setValue(y(3))
		setValue(y(15))
		setValue(y(4))
		setValue(y(10))
		setValue(y(7))
		move(x(3) x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(y(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		inlineDot(x(0) parseOzFile x(2) cache)
		inlineDot(x(0) parseOzVirtualString x(3) cache)
		inlineDot(x(0) genericInterface x(4) cache)
		inlineDot(x(0) quietInterface x(5) cache)
		inlineDot(x(0) evalExpression x(6) cache)
		inlineDot(x(0) virtualStringToValue x(7) cache)
		inlineDot(x(0) assemble x(0) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(10))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(6))
		unifyValue(x(4))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(5))
		unifyValue(x(7))
		deAllocateL
		return
		endDefinition(303442)
lbl(303904)	tailCall(x(2) 0)
		endDefinition(303433)
lbl(303909)	putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info ['from' type] x(3))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord(info [type] x(6))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord(info ['from' type] x(9))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putRecord(info [type] x(10))
		setConstant(nil)
		putRecord(info [type] x(11))
		setConstant(nil)
		putRecord(info [type] x(12))
		setConstant(nil)
		putRecord(info [type] x(13))
		setConstant(nil)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FS' 'Module' 'Parser' 'Property' 'RunTimeLibrary' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(value x(4))
		putConstant(value x(5))
		putConstant(value x(6))
		putConstant(value x(7))
		putConstant(value x(8))
		putConstant(value x(9))
		putConstant(value x(10))
		putConstant(value x(11))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(url ['functor' home pickle] y(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
		putConstant('Boot.manager' x(4))
		putConstant(2 x(5))
		callBI('Boot.builtin' [x(4) x(5)]#[x(6)])
		putConstant('Pickle' x(4))
		callBI('Boot.manager' [x(4)]#[x(5)])
		inlineDot(x(5) save x(0) cache)
lbl(304096)	definition(x(2) 312604 pid('' 2 pos('./MakeAssembly.oz' 92 1) nil 3) <P: 1736> [y(230) y(191) y(224) y(91) y(92) y(159) y(184) y(1) y(146) y(47) y(24) y(48) y(23) y(49) y(53) y(39) y(52) y(55) y(158) y(0)])
		putList(x(0))
		setPredicateRef(<Q: 1737>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 1738>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1740>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1742>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1743>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1744>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1745>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1746>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1747>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1748>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1749>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1750>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1751>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1752>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1753>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1754>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1755>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1756>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1757>)
		setValue(x(2))
lbl(304228)	definitionCopy(x(0) 312599 pid('/body' 0 pos('./MakeAssembly.oz' 92 1) [once] 511) unit [g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) x(1)])
		allocateL(20)
		putRecord('export' [open] x(0))
		setConstant(unit)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FDB' 'FDP' 'FS' 'FSB' 'FSP' 'Module' 'OS' 'Open' 'Parser' 'Pickle' 'Property' 'Resolve' 'RunTimeLibrary' 'System' 'Type'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setValue(x(0))
		setValue(g(0))
		setVariable(y(17))
		setVariable(y(18))
		putConstant('Boot.manager' x(2))
		putConstant(2 x(3))
		callBI('Boot.builtin' [x(2) x(3)]#[x(0)])
lbl(304295)	definition(x(1) 304332 pid('' 1 pos('./MakeAssembly.oz' 139 5) nil 3) <Q: 1737> nil)
		shallowGuard(304319)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304311)	shallowThen
		callBI('Boot.manager' [x(1)]#[x(0)])
		unify(x(0) x(2))
		return
lbl(304319)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304295)
lbl(304332)	putRecord('#' 2 x(3))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(5))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(7))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(9))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(11))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(13))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(15))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(17))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(19))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(21))
		setConstant('CompilerSupport')
		setValue(y(1))
		putRecord('#' 2 x(23))
		setConstant('Property')
		setValue(y(16))
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		move(x(0) y(19))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
lbl(304495)	definition(x(1) 304554 pid('' 1 pos('./MakeAssembly.oz' 152 5) nil 3) <Q: 1738> [y(0)])
		shallowGuard(304541)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304511)	shallowThen
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		thread(304539)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(2) 2)
lbl(304539)	deAllocateL2
		return
lbl(304541)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(152)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304495)
lbl(304554)	putRecord('#' 2 x(2))
		setValue(y(4))
		setValue(g(1))
		putRecord('#' 2 x(4))
		setValue(y(3))
		setValue(g(2))
		putRecord('#' 2 x(6))
		setValue(y(5))
		setValue(g(3))
		putRecord('#' 2 x(8))
		setValue(y(8))
		setValue(g(4))
		putRecord('#' 2 x(10))
		setValue(y(13))
		setValue(g(5))
		putRecord('#' 2 x(12))
		setValue(y(18))
		setValue(g(6))
		putRecord('#' 2 x(14))
		setVariable(y(0))
		setValue(g(7))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(b [manager] x(1))
		setValue(y(19))
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(3))
		setValue(x(1))
		setValue(y(12))
		setValue(y(15))
		setValue(y(17))
		move(x(3) x(0))
		move(y(11) x(1))
		call(x(2) 2)
lbl(304691)	definition(x(1) 304750 pid('' 1 pos('./MakeAssembly.oz' 168 5) nil 5) <Q: 1739> [y(11)])
		shallowGuard(304737)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304707)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		putRecord('#' 2 x(4))
		setConstant('x-oz://boot/')
		setValue(x(1))
		move(x(2) x(0))
		move(x(4) x(1))
		tailSendMsg(enter x(3) [1 url] cache)
lbl(304737)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(168)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304691)
lbl(304750)	putRecord('#' 2 x(2))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(4))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(6))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(8))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(10))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(12))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(14))
		setConstant('CompilerSupport')
		setValue(y(1))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(304851)	definition(x(1) 304899 pid('' 1 pos('./MakeAssembly.oz' 183 5) nil 4) <Q: 1740> [y(11)])
		shallowGuard(304886)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304867)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		move(x(2) x(0))
		tailSendMsg(enter x(3) [1 name] cache)
lbl(304886)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(183)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304851)
lbl(304899)	putRecord('#' 2 x(2))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(4))
		setConstant('Property')
		setValue(y(16))
		putRecord('#' 2 x(6))
		setConstant('ErrorRegistry')
		setValue(y(4))
		putRecord('#' 2 x(8))
		setConstant('Error')
		setValue(y(3))
		putRecord('#' 2 x(10))
		setConstant('FD')
		setValue(y(5))
		putRecord('#' 2 x(12))
		setConstant('FS')
		setValue(y(8))
		putRecord('#' 2 x(14))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(16))
		setConstant('Open')
		setValue(y(13))
		putRecord('#' 2 x(18))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(20))
		setConstant('Compiler')
		setValue(y(0))
		putRecord('#' 2 x(22))
		setConstant('Module')
		setValue(y(11))
		putList(x(21))
		setValue(x(22))
		setConstant(nil)
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(305056)	definition(x(2) 305196 pid('ConvertBooleanOpts' 2 pos('./BatchCompile.oz' 29 6) nil 12) <Q: 1741> nil)
		match(x(0) ht(305181 [onScalar(nil 305065) onRecord('|' 2 305069)]))
lbl(305065)	getLiteral(nil x(1))
		return
lbl(305069)	getVarVar(x(0) x(2))
		getRecord('#' 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		putConstant(type x(6))
		putConstant(unit x(7))
		callBI('Value.condSelect' [x(5) x(6) x(7)]#[x(8)])
		testLiteral(x(8) bool 305171)
lbl(305095)	getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(x(3))
		unifyValVar(x(4) x(6))
		getList(x(1))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord('#' 3 x(7))
		unifyLiteral(unit)
		unifyVariable(x(9))
		unifyVariable(x(10))
		getList(x(9))
		unifyNumber(110)
		unifyVariable(x(11))
		getList(x(11))
		unifyNumber(111)
		unifyValue(x(4))
		putConstant(value x(3))
		putConstant(true x(4))
		callBI('Record.adjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(6))
		putConstant(value x(3))
		putConstant(false x(4))
		callBI('Record.adjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(10))
		move(x(2) x(0))
		move(x(8) x(1))
		genFastCall(<Q: 1741> 5)
lbl(305171)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1741> 5)
lbl(305181)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(40)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(305056)
lbl(305196)	putList(x(5))
		setConstant(101)
		setConstant(nil)
		putList(x(4))
		setConstant(114)
		setValue(x(5))
		putList(x(3))
		setConstant(111)
		setValue(x(4))
		putList(x(2))
		setConstant(99)
		setValue(x(3))
		putRecord(mode [value] x(6))
		setConstant(core)
		putRecord('#' 3 x(1))
		setConstant(69)
		setValue(x(2))
		setValue(x(6))
		putList(x(18))
		setConstant(101)
		setConstant(nil)
		putList(x(17))
		setConstant(100)
		setValue(x(18))
		putList(x(16))
		setConstant(111)
		setValue(x(17))
		putList(x(15))
		setConstant(99)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(117)
		setValue(x(14))
		putList(x(12))
		setConstant(112)
		setValue(x(13))
		putList(x(11))
		setConstant(116)
		setValue(x(12))
		putList(x(10))
		setConstant(117)
		setValue(x(11))
		putList(x(9))
		setConstant(111)
		setValue(x(10))
		putRecord(mode [value] x(19))
		setConstant(outputcode)
		putRecord('#' 3 x(8))
		setConstant(83)
		setValue(x(9))
		setValue(x(19))
		putList(x(25))
		setConstant(97)
		setConstant(nil)
		putList(x(24))
		setConstant(109)
		setValue(x(25))
		putList(x(23))
		setConstant(122)
		setValue(x(24))
		putList(x(22))
		setConstant(111)
		setValue(x(23))
		putRecord(mode [value] x(26))
		setConstant(ozma)
		putRecord('#' 3 x(21))
		setConstant(115)
		setValue(x(22))
		setValue(x(26))
		putList(x(42))
		setConstant(114)
		setConstant(nil)
		putList(x(41))
		setConstant(111)
		setValue(x(42))
		putList(x(40))
		setConstant(116)
		setValue(x(41))
		putList(x(39))
		setConstant(97)
		setValue(x(40))
		putList(x(38))
		setConstant(108)
		setValue(x(39))
		putList(x(37))
		setConstant(117)
		setValue(x(38))
		putList(x(36))
		setConstant(109)
		setValue(x(37))
		putList(x(35))
		setConstant(101)
		setValue(x(36))
		putList(x(34))
		setConstant(111)
		setValue(x(35))
		putList(x(33))
		setConstant(116)
		setValue(x(34))
		putList(x(32))
		setConstant(100)
		setValue(x(33))
		putList(x(31))
		setConstant(101)
		setValue(x(32))
		putList(x(30))
		setConstant(101)
		setValue(x(31))
		putList(x(29))
		setConstant(102)
		setValue(x(30))
		putRecord(mode [value] x(43))
		setConstant(feedtoemulator)
		putRecord('#' 3 x(28))
		setConstant(101)
		setValue(x(29))
		setValue(x(43))
		putList(x(49))
		setConstant(112)
		setConstant(nil)
		putList(x(48))
		setConstant(109)
		setValue(x(49))
		putList(x(47))
		setConstant(117)
		setValue(x(48))
		putList(x(46))
		setConstant(100)
		setValue(x(47))
		putRecord(mode [value] x(50))
		setConstant(dump)
		putRecord('#' 3 x(45))
		setConstant(99)
		setValue(x(46))
		setValue(x(50))
		putList(x(58))
		setConstant(116)
		setConstant(nil)
		putList(x(57))
		setConstant(101)
		setValue(x(58))
		putList(x(56))
		setConstant(108)
		setValue(x(57))
		putList(x(55))
		setConstant(115)
		setValue(x(56))
		putList(x(54))
		setConstant(121)
		setValue(x(55))
		putList(x(53))
		setConstant(115)
		setValue(x(54))
		putRecord(mode [value] x(59))
		setConstant(syslet)
		putRecord('#' 3 x(52))
		setConstant(120)
		setValue(x(53))
		setValue(x(59))
		putList(x(71))
		setConstant(100)
		setConstant(nil)
		putList(x(70))
		setConstant(110)
		setValue(x(71))
		putList(x(69))
		setConstant(101)
		setValue(x(70))
		putList(x(68))
		setConstant(112)
		setValue(x(69))
		putList(x(67))
		setConstant(101)
		setValue(x(68))
		putList(x(66))
		setConstant(100)
		setValue(x(67))
		putList(x(65))
		setConstant(101)
		setValue(x(66))
		putList(x(64))
		setConstant(107)
		setValue(x(65))
		putList(x(63))
		setConstant(97)
		setValue(x(64))
		putList(x(62))
		setConstant(109)
		setValue(x(63))
		putRecord(makedepend [type] x(72))
		setConstant(bool)
		putRecord('#' 3 x(61))
		setConstant(77)
		setValue(x(62))
		setValue(x(72))
		putList(x(78))
		setConstant(112)
		setConstant(nil)
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(101)
		setValue(x(77))
		putList(x(75))
		setConstant(104)
		setValue(x(76))
		putRecord(help [value] x(79))
		setConstant(unit)
		putRecord('#' 3 x(74))
		setConstant(104)
		setValue(x(75))
		setValue(x(79))
		putRecord(help [value] x(82))
		setConstant(unit)
		putRecord('#' 3 x(81))
		setConstant(63)
		setConstant(unit)
		setValue(x(82))
		putList(x(90))
		setConstant(101)
		setConstant(nil)
		putList(x(89))
		setConstant(110)
		setValue(x(90))
		putList(x(88))
		setConstant(105)
		setValue(x(89))
		putList(x(87))
		setConstant(102)
		setValue(x(88))
		putList(x(86))
		setConstant(101)
		setValue(x(87))
		putList(x(85))
		setConstant(100)
		setValue(x(86))
		putRecord('define' [type] x(91))
		setConstant(atom)
		putRecord('#' 3 x(84))
		setConstant(68)
		setValue(x(85))
		setValue(x(91))
		putList(x(101))
		setConstant(101)
		setConstant(nil)
		putList(x(100))
		setConstant(110)
		setValue(x(101))
		putList(x(99))
		setConstant(105)
		setValue(x(100))
		putList(x(98))
		setConstant(102)
		setValue(x(99))
		putList(x(97))
		setConstant(101)
		setValue(x(98))
		putList(x(96))
		setConstant(100)
		setValue(x(97))
		putList(x(95))
		setConstant(110)
		setValue(x(96))
		putList(x(94))
		setConstant(117)
		setValue(x(95))
		putRecord(undef [type] x(102))
		setConstant(atom)
		putRecord('#' 3 x(93))
		setConstant(85)
		setValue(x(94))
		setValue(x(102))
		putList(x(111))
		setConstant(101)
		setConstant(nil)
		putList(x(110))
		setConstant(115)
		setValue(x(111))
		putList(x(109))
		setConstant(111)
		setValue(x(110))
		putList(x(108))
		setConstant(98)
		setValue(x(109))
		putList(x(107))
		setConstant(114)
		setValue(x(108))
		putList(x(106))
		setConstant(101)
		setValue(x(107))
		putList(x(105))
		setConstant(118)
		setValue(x(106))
		putRecord(verbose [value] x(112))
		setConstant(true)
		putRecord('#' 3 x(104))
		setConstant(118)
		setValue(x(105))
		setValue(x(112))
		putList(x(119))
		setConstant(116)
		setConstant(nil)
		putList(x(118))
		setConstant(101)
		setValue(x(119))
		putList(x(117))
		setConstant(105)
		setValue(x(118))
		putList(x(116))
		setConstant(117)
		setValue(x(117))
		putList(x(115))
		setConstant(113)
		setValue(x(116))
		putRecord(verbose [value] x(120))
		setConstant(false)
		putRecord('#' 3 x(114))
		setConstant(113)
		setValue(x(115))
		setValue(x(120))
		putList(x(132))
		setConstant(101)
		setConstant(nil)
		putList(x(131))
		setConstant(108)
		setValue(x(132))
		putList(x(130))
		setConstant(105)
		setValue(x(131))
		putList(x(129))
		setConstant(102)
		setValue(x(130))
		putList(x(128))
		setConstant(116)
		setValue(x(129))
		putList(x(127))
		setConstant(117)
		setValue(x(128))
		putList(x(126))
		setConstant(112)
		setValue(x(127))
		putList(x(125))
		setConstant(116)
		setValue(x(126))
		putList(x(124))
		setConstant(117)
		setValue(x(125))
		putList(x(123))
		setConstant(111)
		setValue(x(124))
		putRecord(outputfile [type] x(133))
		setConstant(string)
		putRecord('#' 3 x(122))
		setConstant(111)
		setValue(x(123))
		setValue(x(133))
		putList(x(146))
		setConstant(116)
		setConstant(nil)
		putList(x(145))
		setConstant(110)
		setValue(x(146))
		putList(x(144))
		setConstant(101)
		setValue(x(145))
		putList(x(143))
		setConstant(109)
		setValue(x(144))
		putList(x(142))
		setConstant(110)
		setValue(x(143))
		putList(x(141))
		setConstant(111)
		setValue(x(142))
		putList(x(140))
		setConstant(114)
		setValue(x(141))
		putList(x(139))
		setConstant(105)
		setValue(x(140))
		putList(x(138))
		setConstant(118)
		setValue(x(139))
		putList(x(137))
		setConstant(110)
		setValue(x(138))
		putList(x(136))
		setConstant(101)
		setValue(x(137))
		putRecord(environment [type] x(147))
		setConstant(string)
		putRecord('#' 3 x(135))
		setConstant(108)
		setValue(x(136))
		setValue(x(147))
		putList(x(155))
		setConstant(114)
		setConstant(nil)
		putList(x(154))
		setConstant(105)
		setValue(x(155))
		putList(x(153))
		setConstant(100)
		setValue(x(154))
		putList(x(152))
		setConstant(99)
		setValue(x(153))
		putList(x(151))
		setConstant(110)
		setValue(x(152))
		putList(x(150))
		setConstant(105)
		setValue(x(151))
		putRecord(incdir [type] x(156))
		setConstant(string)
		putRecord('#' 3 x(149))
		setConstant(73)
		setValue(x(150))
		setValue(x(156))
		putList(x(165))
		setConstant(101)
		setConstant(nil)
		putList(x(164))
		setConstant(100)
		setValue(x(165))
		putList(x(163))
		setConstant(117)
		setValue(x(164))
		putList(x(162))
		setConstant(108)
		setValue(x(163))
		putList(x(161))
		setConstant(99)
		setValue(x(162))
		putList(x(160))
		setConstant(110)
		setValue(x(161))
		putList(x(159))
		setConstant(105)
		setValue(x(160))
		putRecord(include [type] x(166))
		setConstant(string)
		putRecord('#' 3 x(158))
		setConstant(unit)
		setValue(x(159))
		setValue(x(166))
		putList(x(180))
		setConstant(120)
		setConstant(nil)
		putList(x(179))
		setConstant(105)
		setValue(x(180))
		putList(x(178))
		setConstant(102)
		setValue(x(179))
		putList(x(177))
		setConstant(101)
		setValue(x(178))
		putList(x(176))
		setConstant(114)
		setValue(x(177))
		putList(x(175))
		setConstant(112)
		setValue(x(176))
		putList(x(174))
		setConstant(116)
		setValue(x(175))
		putList(x(173))
		setConstant(101)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(115)
		setValue(x(172))
		putList(x(170))
		setConstant(121)
		setValue(x(171))
		putList(x(169))
		setConstant(115)
		setValue(x(170))
		putRecord(sysletprefix [type] x(181))
		setConstant(string)
		putRecord('#' 3 x(168))
		setConstant(unit)
		setValue(x(169))
		setValue(x(181))
		putList(x(192))
		setConstant(115)
		setConstant(nil)
		putList(x(191))
		setConstant(114)
		setValue(x(192))
		putList(x(190))
		setConstant(111)
		setValue(x(191))
		putList(x(189))
		setConstant(114)
		setValue(x(190))
		putList(x(188))
		setConstant(114)
		setValue(x(189))
		putList(x(187))
		setConstant(101)
		setValue(x(188))
		putList(x(186))
		setConstant(120)
		setValue(x(187))
		putList(x(185))
		setConstant(97)
		setValue(x(186))
		putList(x(184))
		setConstant(109)
		setValue(x(185))
		putRecord(maxerrors [type] x(193))
		setConstant(int)
		putRecord('#' 3 x(183))
		setConstant(unit)
		setValue(x(184))
		setValue(x(193))
		putList(x(209))
		setConstant(115)
		setConstant(nil)
		putList(x(208))
		setConstant(101)
		setValue(x(209))
		putList(x(207))
		setConstant(115)
		setValue(x(208))
		putList(x(206))
		setConstant(115)
		setValue(x(207))
		putList(x(205))
		setConstant(97)
		setValue(x(206))
		putList(x(204))
		setConstant(112)
		setValue(x(205))
		putList(x(203))
		setConstant(114)
		setValue(x(204))
		putList(x(202))
		setConstant(101)
		setValue(x(203))
		putList(x(201))
		setConstant(108)
		setValue(x(202))
		putList(x(200))
		setConstant(105)
		setValue(x(201))
		putList(x(199))
		setConstant(112)
		setValue(x(200))
		putList(x(198))
		setConstant(109)
		setValue(x(199))
		putList(x(197))
		setConstant(111)
		setValue(x(198))
		putList(x(196))
		setConstant(99)
		setValue(x(197))
		putRecord(compilerpasses [type] x(210))
		setConstant(bool)
		putRecord('#' 3 x(195))
		setConstant(unit)
		setValue(x(196))
		setValue(x(210))
		putList(x(222))
		setConstant(116)
		setConstant(nil)
		putList(x(221))
		setConstant(114)
		setValue(x(222))
		putList(x(220))
		setConstant(101)
		setValue(x(221))
		putList(x(219))
		setConstant(115)
		setValue(x(220))
		putList(x(218))
		setConstant(110)
		setValue(x(219))
		putList(x(217))
		setConstant(105)
		setValue(x(218))
		putList(x(216))
		setConstant(119)
		setValue(x(217))
		putList(x(215))
		setConstant(111)
		setValue(x(216))
		putList(x(214))
		setConstant(104)
		setValue(x(215))
		putList(x(213))
		setConstant(115)
		setValue(x(214))
		putRecord(showinsert [type] x(223))
		setConstant(bool)
		putRecord('#' 3 x(212))
		setConstant(unit)
		setValue(x(213))
		setValue(x(223))
		putList(x(236))
		setConstant(115)
		setConstant(nil)
		putList(x(235))
		setConstant(101)
		setValue(x(236))
		putList(x(234))
		setConstant(105)
		setValue(x(235))
		putList(x(233))
		setConstant(114)
		setValue(x(234))
		putList(x(232))
		setConstant(101)
		setValue(x(233))
		putList(x(231))
		setConstant(117)
		setValue(x(232))
		putList(x(230))
		setConstant(113)
		setValue(x(231))
		putList(x(229))
		setConstant(111)
		setValue(x(230))
		putList(x(228))
		setConstant(104)
		setValue(x(229))
		putList(x(227))
		setConstant(99)
		setValue(x(228))
		putList(x(226))
		setConstant(101)
		setValue(x(227))
		putRecord(echoqueries [type] x(237))
		setConstant(bool)
		putRecord('#' 3 x(225))
		setConstant(unit)
		setValue(x(226))
		setValue(x(237))
		putList(x(251))
		setConstant(115)
		setConstant(nil)
		putList(x(250))
		setConstant(101)
		setValue(x(251))
		putList(x(249))
		setConstant(114)
		setValue(x(250))
		putList(x(248))
		setConstant(97)
		setValue(x(249))
		putList(x(247))
		setConstant(108)
		setValue(x(248))
		putList(x(246))
		setConstant(99)
		setValue(x(247))
		putList(x(245))
		setConstant(101)
		setValue(x(246))
		putList(x(244))
		setConstant(100)
		setValue(x(245))
		putList(x(243))
		setConstant(119)
		setValue(x(244))
		putList(x(242))
		setConstant(111)
		setValue(x(243))
		putList(x(241))
		setConstant(104)
		setValue(x(242))
		putList(x(240))
		setConstant(115)
		setValue(x(241))
		putRecord(showdeclares [type] x(252))
		setConstant(bool)
		putRecord('#' 3 x(239))
		setConstant(unit)
		setValue(x(240))
		setValue(x(252))
		putList(x(269))
		setConstant(101)
		setConstant(nil)
		putList(x(268))
		setConstant(109)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(116)
		setValue(x(267))
		putList(x(265))
		setConstant(101)
		setValue(x(266))
		putList(x(264))
		setConstant(108)
		setValue(x(265))
		putList(x(263))
		setConstant(105)
		setValue(x(264))
		putList(x(262))
		setConstant(112)
		setValue(x(263))
		putList(x(261))
		setConstant(109)
		setValue(x(262))
		putList(x(260))
		setConstant(111)
		setValue(x(261))
		putList(x(259))
		setConstant(99)
		setValue(x(260))
		putList(x(258))
		setConstant(119)
		setValue(x(259))
		putList(x(257))
		setConstant(111)
		setValue(x(258))
		putList(x(256))
		setConstant(104)
		setValue(x(257))
		putList(x(255))
		setConstant(115)
		setValue(x(256))
		putRecord(showcompiletime [type] x(270))
		setConstant(bool)
		putRecord('#' 3 x(254))
		setConstant(unit)
		setValue(x(255))
		setValue(x(270))
		putList(x(289))
		setConstant(121)
		setConstant(nil)
		putList(x(288))
		setConstant(114)
		setValue(x(289))
		putList(x(287))
		setConstant(111)
		setValue(x(288))
		putList(x(286))
		setConstant(109)
		setValue(x(287))
		putList(x(285))
		setConstant(101)
		setValue(x(286))
		putList(x(284))
		setConstant(109)
		setValue(x(285))
		putList(x(283))
		setConstant(101)
		setValue(x(284))
		putList(x(282))
		setConstant(108)
		setValue(x(283))
		putList(x(281))
		setConstant(105)
		setValue(x(282))
		putList(x(280))
		setConstant(112)
		setValue(x(281))
		putList(x(279))
		setConstant(109)
		setValue(x(280))
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(99)
		setValue(x(278))
		putList(x(276))
		setConstant(119)
		setValue(x(277))
		putList(x(275))
		setConstant(111)
		setValue(x(276))
		putList(x(274))
		setConstant(104)
		setValue(x(275))
		putList(x(273))
		setConstant(115)
		setValue(x(274))
		putRecord(showcompilememory [type] x(290))
		setConstant(bool)
		putRecord('#' 3 x(272))
		setConstant(unit)
		setValue(x(273))
		setValue(x(290))
		putList(x(300))
		setConstant(103)
		setConstant(nil)
		putList(x(299))
		setConstant(111)
		setValue(x(300))
		putList(x(298))
		setConstant(100)
		setValue(x(299))
		putList(x(297))
		setConstant(104)
		setValue(x(298))
		putList(x(296))
		setConstant(99)
		setValue(x(297))
		putList(x(295))
		setConstant(116)
		setValue(x(296))
		putList(x(294))
		setConstant(97)
		setValue(x(295))
		putList(x(293))
		setConstant(119)
		setValue(x(294))
		putRecord(watchdog [type] x(301))
		setConstant(bool)
		putRecord('#' 3 x(292))
		setConstant(unit)
		setValue(x(293))
		setValue(x(301))
		putList(x(313))
		setConstant(108)
		setConstant(nil)
		putList(x(312))
		setConstant(99)
		setValue(x(313))
		putList(x(311))
		setConstant(101)
		setValue(x(312))
		putList(x(310))
		setConstant(100)
		setValue(x(311))
		putList(x(309))
		setConstant(101)
		setValue(x(310))
		putList(x(308))
		setConstant(114)
		setValue(x(309))
		putList(x(307))
		setConstant(110)
		setValue(x(308))
		putList(x(306))
		setConstant(114)
		setValue(x(307))
		putList(x(305))
		setConstant(97)
		setValue(x(306))
		putList(x(304))
		setConstant(119)
		setValue(x(305))
		putRecord(warnredecl [type] x(314))
		setConstant(bool)
		putRecord('#' 3 x(303))
		setConstant(unit)
		setValue(x(304))
		setValue(x(314))
		putList(x(326))
		setConstant(100)
		setConstant(nil)
		putList(x(325))
		setConstant(101)
		setValue(x(326))
		putList(x(324))
		setConstant(115)
		setValue(x(325))
		putList(x(323))
		setConstant(117)
		setValue(x(324))
		putList(x(322))
		setConstant(110)
		setValue(x(323))
		putList(x(321))
		setConstant(117)
		setValue(x(322))
		putList(x(320))
		setConstant(110)
		setValue(x(321))
		putList(x(319))
		setConstant(114)
		setValue(x(320))
		putList(x(318))
		setConstant(97)
		setValue(x(319))
		putList(x(317))
		setConstant(119)
		setValue(x(318))
		putRecord(warnunused [type] x(327))
		setConstant(bool)
		putRecord('#' 3 x(316))
		setConstant(unit)
		setValue(x(317))
		setValue(x(327))
		putList(x(346))
		setConstant(115)
		setConstant(nil)
		putList(x(345))
		setConstant(108)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(114)
		setValue(x(343))
		putList(x(341))
		setConstant(111)
		setValue(x(342))
		putList(x(340))
		setConstant(102)
		setValue(x(341))
		putList(x(339))
		setConstant(100)
		setValue(x(340))
		putList(x(338))
		setConstant(101)
		setValue(x(339))
		putList(x(337))
		setConstant(115)
		setValue(x(338))
		putList(x(336))
		setConstant(117)
		setValue(x(337))
		putList(x(335))
		setConstant(110)
		setValue(x(336))
		putList(x(334))
		setConstant(117)
		setValue(x(335))
		putList(x(333))
		setConstant(110)
		setValue(x(334))
		putList(x(332))
		setConstant(114)
		setValue(x(333))
		putList(x(331))
		setConstant(97)
		setValue(x(332))
		putList(x(330))
		setConstant(119)
		setValue(x(331))
		putRecord(warnunused [type] x(347))
		setConstant(bool)
		putRecord('#' 3 x(329))
		setConstant(unit)
		setValue(x(330))
		setValue(x(347))
		putList(x(360))
		setConstant(100)
		setConstant(nil)
		putList(x(359))
		setConstant(114)
		setValue(x(360))
		putList(x(358))
		setConstant(97)
		setValue(x(359))
		putList(x(357))
		setConstant(119)
		setValue(x(358))
		putList(x(356))
		setConstant(114)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(102)
		setValue(x(355))
		putList(x(353))
		setConstant(110)
		setValue(x(354))
		putList(x(352))
		setConstant(114)
		setValue(x(353))
		putList(x(351))
		setConstant(97)
		setValue(x(352))
		putList(x(350))
		setConstant(119)
		setValue(x(351))
		putRecord(warnforward [type] x(361))
		setConstant(bool)
		putRecord('#' 3 x(349))
		setConstant(unit)
		setValue(x(350))
		setValue(x(361))
		putList(x(370))
		setConstant(116)
		setConstant(nil)
		putList(x(369))
		setConstant(112)
		setValue(x(370))
		putList(x(368))
		setConstant(111)
		setValue(x(369))
		putList(x(367))
		setConstant(110)
		setValue(x(368))
		putList(x(366))
		setConstant(114)
		setValue(x(367))
		putList(x(365))
		setConstant(97)
		setValue(x(366))
		putList(x(364))
		setConstant(119)
		setValue(x(365))
		putRecord(warnopt [type] x(371))
		setConstant(bool)
		putRecord('#' 3 x(363))
		setConstant(unit)
		setValue(x(364))
		setValue(x(371))
		putList(x(388))
		setConstant(100)
		setConstant(nil)
		putList(x(387))
		setConstant(101)
		setValue(x(388))
		putList(x(386))
		setConstant(116)
		setValue(x(387))
		putList(x(385))
		setConstant(97)
		setValue(x(386))
		putList(x(384))
		setConstant(99)
		setValue(x(385))
		putList(x(383))
		setConstant(101)
		setValue(x(384))
		putList(x(382))
		setConstant(114)
		setValue(x(383))
		putList(x(381))
		setConstant(112)
		setValue(x(382))
		putList(x(380))
		setConstant(101)
		setValue(x(381))
		putList(x(379))
		setConstant(100)
		setValue(x(380))
		putList(x(378))
		setConstant(119)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(108)
		setValue(x(377))
		putList(x(375))
		setConstant(108)
		setValue(x(376))
		putList(x(374))
		setConstant(97)
		setValue(x(375))
		putRecord(allowdeprecated [type] x(389))
		setConstant(bool)
		putRecord('#' 3 x(373))
		setConstant(unit)
		setValue(x(374))
		setValue(x(389))
		putList(x(395))
		setConstant(112)
		setConstant(nil)
		putList(x(394))
		setConstant(109)
		setValue(x(395))
		putList(x(393))
		setConstant(117)
		setValue(x(394))
		putList(x(392))
		setConstant(103)
		setValue(x(393))
		putRecord(gump [type] x(396))
		setConstant(bool)
		putRecord('#' 3 x(391))
		setConstant(unit)
		setValue(x(392))
		setValue(x(396))
		putList(x(412))
		setConstant(115)
		setConstant(nil)
		putList(x(411))
		setConstant(105)
		setValue(x(412))
		putList(x(410))
		setConstant(115)
		setValue(x(411))
		putList(x(409))
		setConstant(121)
		setValue(x(410))
		putList(x(408))
		setConstant(108)
		setValue(x(409))
		putList(x(407))
		setConstant(97)
		setValue(x(408))
		putList(x(406))
		setConstant(110)
		setValue(x(407))
		putList(x(405))
		setConstant(97)
		setValue(x(406))
		putList(x(404))
		setConstant(99)
		setValue(x(405))
		putList(x(403))
		setConstant(105)
		setValue(x(404))
		putList(x(402))
		setConstant(116)
		setValue(x(403))
		putList(x(401))
		setConstant(97)
		setValue(x(402))
		putList(x(400))
		setConstant(116)
		setValue(x(401))
		putList(x(399))
		setConstant(115)
		setValue(x(400))
		putRecord(staticanalysis [type] x(413))
		setConstant(bool)
		putRecord('#' 3 x(398))
		setConstant(unit)
		setValue(x(399))
		setValue(x(413))
		putList(x(423))
		setConstant(101)
		setConstant(nil)
		putList(x(422))
		setConstant(114)
		setValue(x(423))
		putList(x(421))
		setConstant(111)
		setValue(x(422))
		putList(x(420))
		setConstant(99)
		setValue(x(421))
		putList(x(419))
		setConstant(108)
		setValue(x(420))
		putList(x(418))
		setConstant(97)
		setValue(x(419))
		putList(x(417))
		setConstant(101)
		setValue(x(418))
		putList(x(416))
		setConstant(114)
		setValue(x(417))
		putRecord(realcore [type] x(424))
		setConstant(bool)
		putRecord('#' 3 x(415))
		setConstant(unit)
		setValue(x(416))
		setValue(x(424))
		putList(x(436))
		setConstant(101)
		setConstant(nil)
		putList(x(435))
		setConstant(117)
		setValue(x(436))
		putList(x(434))
		setConstant(108)
		setValue(x(435))
		putList(x(433))
		setConstant(97)
		setValue(x(434))
		putList(x(432))
		setConstant(118)
		setValue(x(433))
		putList(x(431))
		setConstant(103)
		setValue(x(432))
		putList(x(430))
		setConstant(117)
		setValue(x(431))
		putList(x(429))
		setConstant(98)
		setValue(x(430))
		putList(x(428))
		setConstant(101)
		setValue(x(429))
		putList(x(427))
		setConstant(100)
		setValue(x(428))
		putRecord(debugvalue [type] x(437))
		setConstant(bool)
		putRecord('#' 3 x(426))
		setConstant(unit)
		setValue(x(427))
		setValue(x(437))
		putList(x(448))
		setConstant(101)
		setConstant(nil)
		putList(x(447))
		setConstant(112)
		setValue(x(448))
		putList(x(446))
		setConstant(121)
		setValue(x(447))
		putList(x(445))
		setConstant(116)
		setValue(x(446))
		putList(x(444))
		setConstant(103)
		setValue(x(445))
		putList(x(443))
		setConstant(117)
		setValue(x(444))
		putList(x(442))
		setConstant(98)
		setValue(x(443))
		putList(x(441))
		setConstant(101)
		setValue(x(442))
		putList(x(440))
		setConstant(100)
		setValue(x(441))
		putRecord(debugtype [type] x(449))
		setConstant(bool)
		putRecord('#' 3 x(439))
		setConstant(unit)
		setValue(x(440))
		setValue(x(449))
		putList(x(458))
		setConstant(101)
		setConstant(nil)
		putList(x(457))
		setConstant(108)
		setValue(x(458))
		putList(x(456))
		setConstant(105)
		setValue(x(457))
		putList(x(455))
		setConstant(102)
		setValue(x(456))
		putList(x(454))
		setConstant(111)
		setValue(x(455))
		putList(x(453))
		setConstant(114)
		setValue(x(454))
		putList(x(452))
		setConstant(112)
		setValue(x(453))
		putRecord(profile [type] x(459))
		setConstant(bool)
		putRecord('#' 3 x(451))
		setConstant(112)
		setValue(x(452))
		setValue(x(459))
		putList(x(477))
		setConstant(108)
		setConstant(nil)
		putList(x(476))
		setConstant(111)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(110)
		setValue(x(474))
		putList(x(472))
		setConstant(111)
		setValue(x(473))
		putList(x(471))
		setConstant(99)
		setValue(x(472))
		putList(x(470))
		setConstant(111)
		setValue(x(471))
		putList(x(469))
		setConstant(102)
		setValue(x(470))
		putList(x(468))
		setConstant(110)
		setValue(x(469))
		putList(x(467))
		setConstant(105)
		setValue(x(468))
		putList(x(466))
		setConstant(103)
		setValue(x(467))
		putList(x(465))
		setConstant(117)
		setValue(x(466))
		putList(x(464))
		setConstant(98)
		setValue(x(465))
		putList(x(463))
		setConstant(101)
		setValue(x(464))
		putList(x(462))
		setConstant(100)
		setValue(x(463))
		putRecord(debuginfocontrol [type] x(478))
		setConstant(bool)
		putRecord('#' 3 x(461))
		setConstant(unit)
		setValue(x(462))
		setValue(x(478))
		putList(x(497))
		setConstant(115)
		setConstant(nil)
		putList(x(496))
		setConstant(101)
		setValue(x(497))
		putList(x(495))
		setConstant(109)
		setValue(x(496))
		putList(x(494))
		setConstant(97)
		setValue(x(495))
		putList(x(493))
		setConstant(110)
		setValue(x(494))
		putList(x(492))
		setConstant(114)
		setValue(x(493))
		putList(x(491))
		setConstant(97)
		setValue(x(492))
		putList(x(490))
		setConstant(118)
		setValue(x(491))
		putList(x(489))
		setConstant(111)
		setValue(x(490))
		putList(x(488))
		setConstant(102)
		setValue(x(489))
		putList(x(487))
		setConstant(110)
		setValue(x(488))
		putList(x(486))
		setConstant(105)
		setValue(x(487))
		putList(x(485))
		setConstant(103)
		setValue(x(486))
		putList(x(484))
		setConstant(117)
		setValue(x(485))
		putList(x(483))
		setConstant(98)
		setValue(x(484))
		putList(x(482))
		setConstant(101)
		setValue(x(483))
		putList(x(481))
		setConstant(100)
		setValue(x(482))
		putRecord(debuginfovarnames [type] x(498))
		setConstant(bool)
		putRecord('#' 3 x(480))
		setConstant(unit)
		setValue(x(481))
		setValue(x(498))
		putList(x(509))
		setConstant(111)
		setConstant(nil)
		putList(x(508))
		setConstant(102)
		setValue(x(509))
		putList(x(507))
		setConstant(110)
		setValue(x(508))
		putList(x(506))
		setConstant(105)
		setValue(x(507))
		putList(x(505))
		setConstant(103)
		setValue(x(506))
		putList(x(504))
		setConstant(117)
		setValue(x(505))
		putList(x(503))
		setConstant(98)
		setValue(x(504))
		putList(x(502))
		setConstant(101)
		setValue(x(503))
		putList(x(501))
		setConstant(100)
		setValue(x(502))
		putRecord(debuginfo [type] x(510))
		setConstant(bool)
		putRecord('#' 3 x(500))
		setConstant(103)
		setValue(x(501))
		setValue(x(510))
		putList(x(499))
		setValue(x(500))
		setConstant(nil)
		putList(x(479))
		setValue(x(480))
		setValue(x(499))
		putList(x(460))
		setValue(x(461))
		setValue(x(479))
		putList(x(450))
		setValue(x(451))
		setValue(x(460))
		putList(x(438))
		setValue(x(439))
		setValue(x(450))
		putList(x(425))
		setValue(x(426))
		setValue(x(438))
		putList(x(414))
		setValue(x(415))
		setValue(x(425))
		putList(x(397))
		setValue(x(398))
		setValue(x(414))
		putList(x(390))
		setValue(x(391))
		setValue(x(397))
		putList(x(372))
		setValue(x(373))
		setValue(x(390))
		putList(x(362))
		setValue(x(363))
		setValue(x(372))
		putList(x(348))
		setValue(x(349))
		setValue(x(362))
		putList(x(328))
		setValue(x(329))
		setValue(x(348))
		putList(x(315))
		setValue(x(316))
		setValue(x(328))
		putList(x(302))
		setValue(x(303))
		setValue(x(315))
		putList(x(291))
		setValue(x(292))
		setValue(x(302))
		putList(x(271))
		setValue(x(272))
		setValue(x(291))
		putList(x(253))
		setValue(x(254))
		setValue(x(271))
		putList(x(238))
		setValue(x(239))
		setValue(x(253))
		putList(x(224))
		setValue(x(225))
		setValue(x(238))
		putList(x(211))
		setValue(x(212))
		setValue(x(224))
		putList(x(194))
		setValue(x(195))
		setValue(x(211))
		putList(x(182))
		setValue(x(183))
		setValue(x(194))
		putList(x(167))
		setValue(x(168))
		setValue(x(182))
		putList(x(157))
		setValue(x(158))
		setValue(x(167))
		putList(x(148))
		setValue(x(149))
		setValue(x(157))
		putList(x(134))
		setValue(x(135))
		setValue(x(148))
		putList(x(121))
		setValue(x(122))
		setValue(x(134))
		putList(x(113))
		setValue(x(114))
		setValue(x(121))
		putList(x(103))
		setValue(x(104))
		setValue(x(113))
		putList(x(92))
		setValue(x(93))
		setValue(x(103))
		putList(x(83))
		setValue(x(84))
		setValue(x(92))
		putList(x(80))
		setValue(x(81))
		setValue(x(83))
		putList(x(73))
		setValue(x(74))
		setValue(x(80))
		putList(x(60))
		setValue(x(61))
		setValue(x(73))
		putList(x(51))
		setValue(x(52))
		setValue(x(60))
		putList(x(44))
		setValue(x(45))
		setValue(x(51))
		putList(x(27))
		setValue(x(28))
		setValue(x(44))
		putList(x(20))
		setValue(x(21))
		setValue(x(27))
		putList(x(7))
		setValue(x(8))
		setValue(x(20))
		putList(x(0))
		setValue(x(1))
		setValue(x(7))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1741> 4)
		putRecord('#' 53 y(2))
		setConstant('You have to choose one of the following modes of operation:\n')
		setConstant('-h, -?, --help                Output usage information and exit.\n')
		setConstant('-E, --core                    Transform a statement into core language\n')
		setConstant('                              (file extension: .ozi).\n')
		setConstant('-S, --outputcode              Compile a statement to assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-s, --ozma                    Compile a statement to Ozma assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-e, --feedtoemulator          Compile and execute a statement.\n')
		setConstant('                              This is the default mode.\n')
		setConstant('-c, --dump                    Compile and evaluate an expression,\n')
		setConstant('                              pickling the result\n')
		setConstant('                              (file extension: .ozf).\n')
		setConstant('-x, --syslet                  Compile and evaluate an expression,\n')
		setConstant('                              making a syslet of the result\n')
		setConstant('                              (file extension: none).\n')
		setConstant('\n')
		setConstant('Additionally, you may specify the following options:\n')
		setConstant('-M, --makedepend              Instead of executing, write a list\n')
		setConstant('                              of dependencies to stdout.\n')
		setConstant('-D NAME, --define=NAME        Define macro name NAME.\n')
		setConstant('-U NAME, --undefine=NAME      Undefine macro name NAME.\n')
		setConstant('-v, --verbose                 Display all compiler messages.\n')
		setConstant('-q, --quiet                   Inhibit compiler messages\n')
		setConstant('                              unless an error is encountered.\n')
		setConstant('-o FILE, --outputfile=FILE    Write output to FILE (`-\' for stdout).\n')
		setConstant('-l FNCS, --environment=FNCS   Make functors FNCS (a comma-separated\n')
		setConstant('                              pair list VAR=URL) available in the\n')
		setConstant('                              environment.\n')
		setConstant('-I DIR, --incdir=DIR          Add DIR to the head of OZPATH.\n')
		setConstant('--include=FILE                Compile and execute the statement in FILE\n')
		setConstant('                              before processing the remaining options.\n')
		setConstant('--sysletprefix=STRING         Use STRING as prefix to syslets (default:\n')
		setConstant('                              "#!/bin/sh\\nexec ozengine $0 "$@"\\n").')
		setConstant('\n')
		setConstant('The following compiler switches have the described effects when set:\n')
		setConstant('--maxerrors=N                 Limit the number of errors reported to N.\n')
		setConstant('--(no)compilerpasses          Show compiler passes.\n')
		setConstant('--(no)warnredecl              Warn about top-level redeclarations.\n')
		setConstant('--(no)warnunused              Warn about unused variables.\n')
		setConstant('--(no)warnunusedformals       Warn about unused variables and formals.\n')
		setConstant('--(no)warnforward             Warn about oo forward declarations.\n')
		setConstant('--(no)warnopt                 Warn about missed optimizations.\n')
		setConstant('--(no)allowdeprecated         Allow use of deprecated syntax.\n')
		setConstant('--(no)gump                    Allow Gump definitions.\n')
		setConstant('--(no)staticanalysis          Run static analysis.\n')
		setConstant('--(no)realcore                Output the real non-fancy core syntax.\n')
		setConstant('--(no)debugvalue              Annotate variable values in core output.\n')
		setConstant('--(no)debugtype               Annotate variable types in core output.\n')
		setConstant('-p, --(no)profile             Include profiling information.\n')
		setConstant('--(no)debuginfocontrol        Include control flow information.\n')
		setConstant('--(no)debuginfovarnames       Include variable information.\n')
		setConstant('-g, --(no)debuginfo           Both of the above.\n')
lbl(308542)	definition(x(0) 308579 pid('SignConvert' 2 pos('./BatchCompile.oz' 143 6) nil 4) <Q: 1742> nil)
lbl(308548)	definition(x(3) 308568 pid('' 2 pos('./BatchCompile.oz' 144 9) nil 2) unit nil)
		testNumber(x(0) 45 308562)
		getNumber(126 x(1))
		return
lbl(308562)	unify(x(1) x(0))
		return
		endDefinition(308548)
lbl(308568)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(308542)
lbl(308579)	definition(x(0) 308814 pid('ParseOptArg' 4 pos('./BatchCompile.oz' 147 6) nil 6) <Q: 1743> [g(9) g(10) g(11) g(12) g(13)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		putConstant(value x(4))
		testBI('Value.hasFeature' [x(0) x(4)]#[x(5)] 308614)
		inlineDot(x(0) value x(4) cache)
		unify(x(4) y(2))
		unify(x(3) x(1))
		branch(308793)
lbl(308614)	match(x(1) ht(308780 [onScalar(nil 308617) onRecord('|' 2 308626)]))
lbl(308617)	putRecord(usage 1 x(1))
		setConstant('missing argument')
		callBI('Exception.raise' [x(1)]#nil)
lbl(308626)	getVarVar(x(1) x(4))
		inlineDot(x(0) type x(5) cache)
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		match(x(5) ht(308762 [onScalar(string 308643) onScalar(atom 308648) onScalar(int 308656) onScalar(float 308709)]))
lbl(308643)	unify(y(2) x(1))
		branch(308775)
lbl(308648)	callBI('String.toAtom' [x(1)]#[x(5)])
		unify(x(5) y(2))
		branch(308775)
lbl(308656)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1742> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 5> 4)
		testBool(y(6) 308689 308698)
		move(y(5) x(0))
		callBI('String.toInt' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(308775)
lbl(308689)	putRecord(usage 1 x(0))
		setConstant('integer argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(308698)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(158)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(308709)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1742> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 6> 4)
		testBool(y(6) 308742 308751)
		move(y(5) x(0))
		callBI('String.toFloat' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(308775)
lbl(308742)	putRecord(usage 1 x(0))
		setConstant('float argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(308751)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(164)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(308762)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(308775)	unify(y(3) y(4))
		branch(308793)
lbl(308780)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(173)
		setValue(x(1))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(308793)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Record.label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL7
		return
		endDefinition(308579)
lbl(308814)	definition(x(0) 308869 pid('GetOptSpec' 3 pos('./BatchCompile.oz' 178 6) nil 6) <Q: 1744> nil)
		match(x(0) ht(308854 [onScalar(nil 308823) onRecord('|' 2 308827)]))
lbl(308823)	getLiteral(unit x(2))
		return
lbl(308827)	getVarVar(x(0) x(3))
		getRecord('#' 3 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(5)] 308848)
		unify(x(2) x(4))
		return
lbl(308848)	move(x(3) x(0))
		genFastCall(<Q: 1744> 7)
lbl(308854)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(184)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(308814)
lbl(308869)	definition(x(0) 309012 pid('ParseOpt' 5 pos('./BatchCompile.oz' 187 6) nil 5) <Q: 1745> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1744> 6)
		testLiteral(y(5) unit 308930)
lbl(308905)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord('#' 3 x(1))
		setConstant('unknown option `-')
		setValue(x(2))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(308930)	testLiteral(y(1) nil 308948)
lbl(308934)	moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1743> 9)
lbl(308948)	move(y(5) x(0))
		putConstant(value x(1))
		testBI('Value.hasFeature' [x(0) x(1)]#[x(2)] 308995)
		getRecord('#' 2 y(3))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('Record.label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(2))
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyNumber(45)
		unifyValue(y(1))
		deAllocateL6
		return
lbl(308995)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1743> 9)
		endDefinition(308869)
lbl(309012)	definition(x(0) 309115 pid('IsPrefix' 5 pos('./BatchCompile.oz' 204 6) nil 8) <Q: 1746> nil)
		match(x(0) ht(309100 [onScalar(nil 309021) onRecord('|' 2 309037)]))
lbl(309021)	putConstant(nil x(0))
		callBI('Value.\'==\'' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		getLiteral(unit x(3))
		getLiteral(true x(4))
		return
lbl(309037)	getVarVar(x(0) x(5))
		testNumber(x(0) 61 309060)
lbl(309044)	putConstant(nil x(0))
		callBI('Value.\'==\'' [x(1) x(0)]#[x(6)])
		unify(x(6) x(2))
		unify(x(3) x(5))
		getLiteral(true x(4))
		return
lbl(309060)	match(x(1) ht(309087 [onScalar(nil 309063) onRecord('|' 2 309067)]))
lbl(309063)	getLiteral(false x(4))
		return
lbl(309067)	getVarVar(x(1) x(6))
		testBI('Value.\'==\'' [x(0) x(1)]#[x(7)] 309083)
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 1746> 11)
lbl(309083)	getLiteral(false x(4))
		return
lbl(309087)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309100)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(218)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309012)
lbl(309115)	definition(x(0) 309330 pid('GetLongOptSpec' 5 pos('./BatchCompile.oz' 221 6) nil 7) <Q: 1747> nil)
		match(x(0) ht(309315 [onScalar(nil 309124) onRecord('|' 2 309128)]))
lbl(309124)	getLiteral(unit x(4))
		return
lbl(309128)	allocateL10
		getVarVar(x(0) x(5))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(x(0) unit 309176)
lbl(309159)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL10
		genFastCall(<Q: 1747> 11)
lbl(309176)	move(x(6) y(5))
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1746> 10)
		testBool(y(8) 309159 309304)
lbl(309201)	testBool(y(6) 309216 309293)
		getLiteral(true y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(309216)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genFastCall(<Q: 1747> 10)
		testLiteral(y(9) unit 309248)
		getLiteral(false y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(309248)	testBool(y(6) 309263 309282)
		getLiteral(true y(1))
		unify(y(2) y(8))
		unify(y(9) y(3))
		deAllocateL10
		return
lbl(309263)	putRecord('#' 3 x(1))
		setConstant('ambiguous option prefix `')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(309282)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309293)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309304)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(226)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309315)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309115)
lbl(309330)	definition(x(0) 309478 pid('ParseLongOpt' 4 pos('./BatchCompile.oz' 255 6) nil 5) <Q: 1748> [y(1)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1747> 10)
		testLiteral(y(5) unit 309387)
lbl(309368)	putRecord('#' 3 x(1))
		setConstant('unknown option `--')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(309387)	createVariable(y(6))
		testLiteral(y(4) unit 309427)
lbl(309393)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('Value.hasFeature' [x(0) x(4)]#[x(1)] 309408)
		unify(y(6) y(1))
		branch(309462)
lbl(309408)	putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' expects an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(309427)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('Value.hasFeature' [x(0) x(4)]#[x(1)] 309456)
		putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' does not expect an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(309456)	getList(y(6))
		unifyValue(y(4))
		unifyValue(y(1))
lbl(309462)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<Q: 1743> 9)
		endDefinition(309330)
lbl(309478)	definition(x(0) 309633 pid('ParseArgs' 3 pos('./BatchCompile.oz' 281 6) nil 6) <Q: 1749> nil)
		match(x(0) ht(309618 [onScalar(nil 309487) onRecord('|' 2 309494)]))
lbl(309487)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(309494)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testList(y(0) 309604)
lbl(309509)	getVarVar(x(3) x(4))
		testNumber(x(3) 45 309604)
		createVariable(y(0))
		createVariable(y(4))
		move(x(4) y(5))
		testList(y(5) 309549)
lbl(309526)	getVarVar(x(3) x(5))
		testNumber(x(3) 45 309549)
		move(x(5) x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		move(y(4) x(3))
		genFastCall(<Q: 1748> 8)
		branch(309590)
lbl(309549)	match(y(5) ht(309577 [onScalar(nil 309552) onRecord('|' 2 309561)]))
lbl(309552)	putRecord(usage 1 x(0))
		setConstant('bad option syntax `-\'')
		callBI('Exception.raise' [x(0)]#nil)
lbl(309561)	getVarVar(x(0) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(4) x(4))
		genFastCall(<Q: 1745> 10)
		branch(309590)
lbl(309577)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(290)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309590)	getList(y(1))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1749> 7)
lbl(309604)	getList(y(2))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genFastCall(<Q: 1749> 7)
lbl(309618)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309478)
lbl(309633)	definition(x(0) 309722 pid('GetVerbose' 2 pos('./BatchCompile.oz' 304 3) nil 5) <Q: 1750> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 309688)
lbl(309648)	getVarVar(x(2) x(3))
		shallowGuard(309688)
		getRecord('#' 2 x(2))
		unifyLiteral(verbose)
		unifyVariable(x(4))
lbl(309661)	shallowThen
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1750> 4)
		testLiteral(y(2) auto 309683)
lbl(309678)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(309683)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(309688)	match(y(0) ht(309707 [onScalar(nil 309691) onRecord('|' 2 309696)]))
lbl(309691)	getLiteral(auto y(1))
		deAllocateL3
		return
lbl(309696)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1750> 5)
lbl(309707)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(313)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(309633)
lbl(309722)	definition(x(0) 309748 pid('IsIDChar' 2 pos('./BatchCompile.oz' 317 6) nil 4) <Q: 1751> [g(14)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 309736)
		getLiteral(true x(1))
		return
lbl(309736)	putConstant(95 x(2))
		callBI('Value.\'==\'' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(309722)
lbl(309748)	definition(x(1) 309819 pid('IsQuotedVariable' 2 pos('./BatchCompile.oz' 321 6) nil 3) <Q: 1752> nil)
		match(x(0) ht(309804 [onScalar(nil 309757) onRecord('|' 2 309761)]))
lbl(309757)	getLiteral(false x(1))
		return
lbl(309761)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 309786)
lbl(309777)	testLiteral(y(2) nil 309786)
lbl(309781)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(309786)	testNumber(y(1) 0 309795)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(309795)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1752> 5)
lbl(309804)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309748)
lbl(309819)	definition(x(1) 309891 pid('IsPrintName' 2 pos('./BatchCompile.oz' 331 6) nil 4) <Q: 1753> [g(15) g(16) x(0)])
		testBI('Atom.is' [x(0)]#[x(2)] 309885)
		callBI('Atom.toString' [x(0)]#[x(2)])
		match(x(2) ht(309872 [onScalar(nil 309835) onRecord('|' 2 309839)]))
lbl(309835)	getLiteral(false x(1))
		return
lbl(309839)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 309852)
lbl(309846)	move(x(2) x(0))
		genFastCall(<Q: 1752> 5)
lbl(309852)	testBI('Char.isUpper' [x(0)]#[x(3)] 309868)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(309868)	getLiteral(false x(1))
		return
lbl(309872)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(343)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309885)	getLiteral(false x(1))
		return
		endDefinition(309819)
lbl(309891)	move(y(11) x(0))
		inlineDot(x(0) manager x(0) cache)
		callBI('Object.newObject' [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		createVariable(x(2))
lbl(309914)	definition(x(3) 310160 pid('IncludeFunctors' 2 pos('./BatchCompile.oz' 350 6) nil 6) <Q: 1754> [g(17) g(9) y(1) x(2) g(18)])
		match(x(0) ht(310145 [onScalar(nil 309923) onRecord('|' 2 309924)]))
lbl(309923)	return
lbl(309924)	allocateL6
		move(x(1) y(0))
		putConstant(44 x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 2> 8)
		move(y(1) x(0))
		putConstant(61 x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 2> 8)
		move(y(3) x(0))
		callBI('String.toAtom' [x(0)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(5))
		testLiteral(y(4) nil 309983)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		sendMsg(link g(2) [1 name] cache)
		branch(309994)
lbl(309983)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(link g(2) [1 url] cache)
lbl(309994)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1753> 4)
		testBool(y(4) 310047 310090)
		putRecord(mergeEnv 1 x(1))
		setVariable(x(2))
		putRecord(enqueue 1 x(0))
		setValue(x(1))
		putRecord('#' 2 x(1))
		setValue(y(1))
		setValue(y(5))
		putList(x(3))
		setValue(x(1))
		setConstant(nil)
		putConstant(env x(1))
		callBI('Record.record' [x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		call(y(0) 1)
		branch(310101)
lbl(310047)	putRecord('#' 3 x(2))
		setConstant('illegal variable identifier `')
		setValue(y(3))
		setConstant('\' specified')
		putRecord('#' 2 x(5))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(4))
		setConstant('Hint')
		setValue(x(5))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('command line option error' x(1))
		sendMsg(error g(3) [items kind msg] cache)
		branch(310101)
lbl(310090)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310101)	definition(x(1) 310115 pid('' 3 pos('./BatchCompile.oz' 369 5) nil 3) unit nil)
		move(x(2) x(1))
		genFastCall(<Q: 1753> 5)
		endDefinition(310101)
lbl(310115)	move(y(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 178> 6)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1754> 5)
lbl(310145)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309914)
lbl(310160)	definition(x(3) 310242 pid('ChangeExtension' 3 pos('./BatchCompile.oz' 376 3) nil 5) <Q: 1755> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 310204)
lbl(310178)	getVarVar(x(3) x(4))
		shallowGuard(310204)
		getNumber(46 x(3))
		getList(x(4))
		unifyNumber(111)
		unifyVariable(x(3))
		getList(x(3))
		unifyNumber(122)
		unifyLiteral(nil)
lbl(310198)	shallowThen
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(310204)	match(y(0) ht(310227 [onScalar(nil 310207) onRecord('|' 2 310212)]))
lbl(310207)	unify(y(2) y(1))
		deAllocateL3
		return
lbl(310212)	getVarVar(x(3) x(0))
		getList(y(2))
		unifyValVar(x(3) x(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1755> 7)
lbl(310227)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(381)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(310160)
lbl(310242)	definition(x(0) 310319 pid('Report' 1 pos('./BatchCompile.oz' 384 3) nil 4) <Q: 1756> [y(3) y(17)])
		move(g(0) x(1))
		inlineDot(x(1) msg x(2) cache)
lbl(310257)	definition(x(3) 310302 pid('' 1 pos('./BatchCompile.oz' 386 7) nil 5) unit [g(1) g(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) printError x(2) cache)
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(310257)
lbl(310302)	move(x(0) x(1))
		move(x(3) x(0))
		call(x(2) 2)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(310242)
lbl(310319)	unify(x(0) x(2))
lbl(310322)	definition(x(2) 312535 pid('BatchCompile' 2 pos('./BatchCompile.oz' 392 3) nil 7) <Q: 1757> [y(0) y(16) y(17) y(2) y(12) y(13) y(3) y(15) g(19)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(310353)
		match(x(0) ht(310350 [onScalar(error 310340) onScalar(success 310345)]))
lbl(310340)	getNumber(1 y(1))
		deAllocateL
		return
lbl(310345)	getNumber(0 y(1))
		deAllocateL
		return
lbl(310350)	callBI('Exception.raise' [x(0)]#nil)
lbl(310353)	createVariable(y(2))
		createVariable(y(3))
		exHandler(310406)
		testRecord(x(0) usage 1 310403)
lbl(310364)	getVariable(x(1))
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(2))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1756> 2)
		branch(310418)
lbl(310403)	callBI('Exception.raise' [x(0)]#nil)
lbl(310406)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1749> 6)
		popEx
lbl(310418)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1750> 4)
		move(g(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		callBI('Object.newObject' [x(1)]#[x(2)])
		move(x(2) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(0) x(0))
		inlineDot(x(0) quietInterface x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		move(y(0) x(1))
		sendMsg(init y(5) 2 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(showdeclares)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(warnunused)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putConstant(feedtoemulator x(2))
		callBI('Cell.new' [x(2)]#[x(0)])
		putConstant(unit x(2))
		callBI('Cell.new' [x(2)]#[x(1)])
		putConstant(false x(2))
		callBI('Cell.new' [x(2)]#[x(3)])
		putConstant(nil x(2))
		callBI('Cell.new' [x(2)]#[x(4)])
		putConstant(unit x(2))
		callBI('Cell.new' [x(2)]#[x(5)])
		createVariable(x(2))
lbl(310548)	definition(x(6) 311016 pid('' 1 pos('./BatchCompile.oz' 418 3) nil 5) unit [g(1) g(2) g(3) y(4) x(4) y(5) x(5) x(2) x(0) x(3) x(1)])
		shallowGuard(311003)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(310564)	shallowThen
		match(x(1) ht(310989 [onScalar(help 310568) onScalar('define' 310620) onScalar(undef 310632) onScalar(maxerrors 310644) onScalar(environment 310656) onScalar(incdir 310665) onScalar(include 310681) onScalar(sysletprefix 310834) onScalar(verbose 310886) onScalar(mode 310887) onScalar(makedepend 310942) onScalar(outputfile 310949) onScalar(debuginfo 310956)]))
lbl(310568)	allocateL1
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('root.url' x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(g(1) x(0))
		inlineDot(x(0) printInfo x(4) cache)
		move(y(0) x(1))
		move(g(2) x(3))
		putConstant('Usage: ' x(0))
		putConstant(' [options] [file] ...\n' x(2))
		sendMsg('#' x(4) 4 cache)
		putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(310620)	putRecord(macroDefine 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310632)	putRecord(macroUndef 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310644)	putRecord(setMaxNumberOfErrors 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310656)	move(x(2) x(0))
		move(g(3) x(1))
		genFastCall(<Q: 1754> 5)
lbl(310665)	move(g(4) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		putList(x(3))
		setValue(x(2))
		setValue(x(1))
		callBI('Cell.assign' [x(0) x(3)]#nil)
		return
lbl(310681)	allocateL2
		move(x(2) y(0))
		putConstant(pushSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(3) 1 cache)
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setConstant('return')
		sendMsg(enqueue g(3) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(3) 1 cache)
		move(y(0) x(0))
		callBI('Value.wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(5) 1 cache)
		testBool(y(0) 310802 310791)
		move(g(1) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getVS g(5) 1 cache)
		move(y(1) x(0))
		call(y(0) 1)
		branch(310802)
lbl(310791)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(439)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310802)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(5) 1 cache)
		testBool(y(0) 310821 310823)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(310821)	deAllocateL2
		return
lbl(310823)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(442)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310834)	move(g(6) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 310848)
lbl(310844)	callBI('Cell.assign' [x(0) x(2)]#nil)
		return
lbl(310848)	putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('syslet prefix may only be given once')
		move(x(1) x(0))
		genFastCall(<Q: 1756> 3)
lbl(310886)	return
lbl(310887)	move(g(7) x(0))
		testBI('Value.isDet' [x(0)]#[x(1)] 310932)
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('mode specified multiply on command line')
		move(x(1) x(0))
		genFastCall(<Q: 1756> 3)
lbl(310932)	move(g(8) x(1))
		callBI('Cell.assign' [x(1) x(2)]#nil)
		getLiteral(true g(7))
		return
lbl(310942)	move(g(9) x(0))
		callBI('Cell.assign' [x(0) x(2)]#nil)
		return
lbl(310949)	move(g(10) x(0))
		callBI('Cell.assign' [x(0) x(2)]#nil)
		return
lbl(310956)	allocateL1
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(x(2))
		move(x(2) y(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(0))
		deAllocateL1
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310989)	putRecord(setSwitch 2 x(0))
		setValue(x(1))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(311003)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(418)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(310548)
lbl(311016)	moveMoveXYXY(x(0) y(0) x(1) y(6))
		moveMoveXYXY(x(3) y(7) x(4) y(8))
		moveMoveXYYX(x(5) y(9) y(2) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		move(g(4) x(0))
		inlineDot(x(0) putEnv x(1) cache)
		move(y(8) x(2))
		callBI('Cell.access' [x(2)]#[x(3)])
lbl(311052)	definition(x(2) 311075 pid('' 3 pos('./BatchCompile.oz' 481 4) nil 4) unit nil)
		putList(x(3))
		setConstant(58)
		setValue(x(0))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<P: 21> 7)
		endDefinition(311052)
lbl(311075)	inlineDot(x(0) getEnv x(4) cache)
		moveMoveXYXY(x(1) y(2) x(3) y(8))
		move(x(2) y(10))
		putConstant('OZPATH' x(0))
		createVariableMove(y(11) x(1))
		call(x(4) 2)
		putConstant('OZPATH' y(12))
		createVariable(y(13))
		testLiteral(y(11) false 311115)
lbl(311107)	getList(y(13))
		unifyNumber(46)
		unifyLiteral(nil)
		branch(311118)
lbl(311115)	unify(y(13) y(11))
lbl(311118)	moveMoveYXYX(y(8) x(0) y(10) x(1))
		move(y(13) x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(12) x(0) y(11) x(1))
		call(y(2) 2)
		testLiteral(y(3) nil 311181)
		putRecord('#' 2 x(3))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(2))
		setConstant('Hint')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('command line option error')
		setConstant('no input files given')
		genFastCall(<Q: 1756> 2)
		branch(312527)
lbl(311181)	move(y(6) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('Value.\'\\=\'' [x(1) x(2)]#[x(3)] 311204)
lbl(311197)	callBI('Cell.access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 312488)
lbl(311204)	definition(x(1) 312480 pid('' 1 pos('./BatchCompile.oz' 500 6) nil 8) unit [y(5) y(6) y(0) y(7) y(4) g(2) g(5) g(6) g(7) g(8) g(4) y(9)])
		allocateL6
		move(x(0) y(0))
		sendMsg(reset g(0) 0 cache)
		move(g(1) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		createVariable(y(1))
		testLiteral(x(1) unit 311469)
		move(g(2) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		match(x(2) ht(311456 [onScalar(core 311241) onScalar(outputcode 311279) onScalar(ozma 311317) onScalar(feedtoemulator 311355) onScalar(dump 311405) onScalar(syslet 311443)]))
lbl(311241)	putList(x(5))
		setConstant(105)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311572)
lbl(311279)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311572)
lbl(311317)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311572)
lbl(311355)	move(g(3) x(2))
		callBI('Cell.access' [x(2)]#[x(3)])
		testBool(x(3) 311400 311389)
		putRecord('#' 2 x(4))
		setConstant('--makedepend with --feedtoemulator ')
		setConstant('needs an --outputfile')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1756> 2)
		branch(311400)
lbl(311389)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(510)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(311400)	getLiteral(unit y(1))
		branch(311572)
lbl(311405)	putList(x(5))
		setConstant(102)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311572)
lbl(311443)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1755> 6)
		branch(311572)
lbl(311456)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(521)
		setValue(x(2))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(311469)	callBI('Cell.access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('Value.\'==\'' [x(1) x(2)]#[x(3)] 311519)
		move(g(2) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		testLiteral(x(2) dump 311505)
lbl(311492)	putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setConstant('dumping to stdout is not possible')
		genFastCall(<Q: 1756> 2)
		branch(311572)
lbl(311505)	callBI('Cell.access' [x(1)]#[x(2)])
		testLiteral(x(2) syslet 311514)
		branch(311492)
lbl(311514)	getLiteral(stdout y(1))
		branch(311572)
lbl(311519)	move(g(2) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		testLiteral(x(2) feedtoemulator 311563)
lbl(311529)	move(g(3) x(2))
		callBI('Cell.access' [x(2)]#[x(3)])
		testBI('Bool.not' [x(3)]#[x(4)] 311563)
lbl(311539)	putRecord('#' 2 x(4))
		setConstant('no output file name must be ')
		setConstant('specified for --feedtoemulator')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1756> 2)
		branch(311572)
lbl(311563)	move(g(1) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		unify(x(1) y(1))
lbl(311572)	putConstant(pushSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		move(g(3) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		testBool(x(1) 311621 311610)
		putRecord(setSwitch 2 x(2))
		setConstant(unnest)
		setConstant(false)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311621)
lbl(311610)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(541)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(311621)	move(g(2) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		match(x(1) ht(311734 [onScalar(core 311630) onScalar(outputcode 311663) onScalar(ozma 311696) onScalar(feedtoemulator 311715)]))
lbl(311630)	putRecord(setSwitch 2 x(2))
		setConstant(core)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(codegen)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(311765)
lbl(311663)	putRecord(setSwitch 2 x(2))
		setConstant(outputcode)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(311765)
lbl(311696)	putRecord(setSwitch 2 x(2))
		setConstant(ozma)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311765)
lbl(311715)	putRecord(setSwitch 2 x(2))
		setConstant(feedtoemulator)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311765)
lbl(311734)	putRecord(setSwitch 2 x(2))
		setConstant(expression)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(4) 1 cache)
lbl(311765)	putRecord('return' [result] x(2))
		setVariable(y(2))
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue g(4) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(4) 1 cache)
		move(y(0) x(0))
		callBI('Value.wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(0) 1 cache)
		testBool(y(0) 311865 311854)
		move(g(5) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(3) x(0))
		sendMsg(getVS g(0) 1 cache)
		move(y(3) x(0))
		call(y(0) 1)
		branch(311865)
lbl(311854)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(565)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311865)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(0) 1 cache)
		testBool(y(0) 311895 311884)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(311884)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(568)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311895)	move(g(3) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		testBool(x(1) 312040 312467)
		move(g(6) x(1))
		inlineDot(x(1) file x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(3)])
		putList(x(4))
		setConstant(write)
		setConstant(nil)
		move(x(3) y(0))
		move(x(4) x(0))
		putConstant(stdout x(1))
		sendMsg(init y(0) [flags name] cache)
		putRecord('#' 4 y(2))
		setValue(y(1))
		setConstant(':')
		setVariable(y(3))
		setConstant('\n')
		createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
		match(y(1) ht(312008 [onScalar(nil 311962) onRecord('|' 2 311967)]))
lbl(311962)	getLiteral(nil y(3))
		branch(312021)
lbl(311967)	createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
lbl(311976)	definition(x(1) 311995 pid('' 3 pos('./BatchCompile.oz' 576 8) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' \\\n\t')
		unifyValue(x(1))
		return
		endDefinition(311976)
lbl(311995)	moveMoveYXYX(y(1) x(0) y(3) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 30> 8)
		branch(312021)
lbl(312008)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(578)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312021)	move(y(2) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(312040)	move(g(2) x(1))
		callBI('Cell.access' [x(1)]#[x(2)])
		match(x(2) ht(312394 [onScalar(dump 312049) onScalar(syslet 312089) onScalar(feedtoemulator 312392)]))
lbl(312049)	exHandler(312069)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312069)	move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(x(2) 2)
		popEx
		deAllocateL6
		return
lbl(312089)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 279> 4)
		testBool(y(0) 312104 312139)
		branch(312150)
lbl(312104)	putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(2))
		setConstant('Value found')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('syslets can only be built from functors')
		genFastCall(<Q: 1756> 2)
		branch(312150)
lbl(312139)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(590)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312150)	move(g(10) x(0))
		inlineDot(x(0) tmpnam x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		createVariable(y(3))
		exHandler(312177)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(312365)
lbl(312177)	exHandler(312197)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312197)	move(g(6) x(0))
		inlineDot(x(0) file x(2) cache)
		callBI('Object.newObject' [x(2)]#[x(1)])
		putList(x(5))
		setConstant(truncate)
		setConstant(nil)
		putList(x(4))
		setConstant(create)
		setValue(x(5))
		putList(x(3))
		setConstant(write)
		setValue(x(4))
		move(x(1) y(4))
		move(x(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(4) [flags name] cache)
		move(g(11) x(0))
		callBI('Cell.access' [x(0)]#[x(1)])
		createVariable(y(5))
		testLiteral(x(1) unit 312259)
lbl(312254)	getLiteral('#!/bin/sh\nexec ozengine $0 "$@"\n' y(5))
		branch(312262)
lbl(312259)	unify(y(5) x(1))
lbl(312262)	move(y(5) x(0))
		sendMsg(write y(4) [vs] cache)
		sendMsg(close y(4) 0 cache)
		move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(g(10) x(0))
		inlineDot(x(0) system x(2) cache)
		putRecord('#' 7 x(3))
		setConstant('cat ')
		setValue(y(0))
		setConstant(' >> ')
		setValue(y(1))
		setConstant('; ')
		setConstant('chmod +x ')
		setValue(y(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		match(y(1) ht(312333 [onScalar(0 312360)]))
lbl(312333)	putRecord(hint [l m] x(2))
		setConstant('Error code')
		setValue(y(1))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('writing syslet failed')
		genFastCall(<Q: 1756> 2)
lbl(312360)	popEx
lbl(312361)	getLiteral(unit y(3))
		popEx
lbl(312365)	move(g(10) x(0))
		inlineDot(x(0) unlink x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		testRecord(y(3) ex 1 312390)
lbl(312385)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312390)	deAllocateL6
		return
lbl(312392)	deAllocateL6
		return
lbl(312394)	move(g(6) x(2))
		inlineDot(x(2) file x(3) cache)
		callBI('Object.newObject' [x(3)]#[x(4)])
		putList(x(7))
		setConstant(truncate)
		setConstant(nil)
		putList(x(6))
		setConstant(create)
		setValue(x(7))
		putList(x(5))
		setConstant(write)
		setValue(x(6))
		move(x(4) y(0))
		move(x(5) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) [flags name] cache)
		createVariableMove(y(1) x(0))
		sendMsg(getSource g(0) 1 cache)
		move(y(1) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(312467)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(571)
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(311204)
lbl(312480)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(312527)
lbl(312488)	move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(2) x(0))
		putConstant(1 x(1))
		testLT(x(1) x(0) x(2) 311204)
lbl(312508)	putRecord('#' 2 x(1))
		setConstant('only one input file allowed when ')
		setConstant('an output file name is given')
		putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1756> 2)
lbl(312527)	putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(310322)
lbl(312535)	move(y(17) x(0))
		inlineDot(x(0) exit x(0) cache)
		move(y(16) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant(argv x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		move(g(15) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1757> 4)
		move(y(1) x(0))
		call(y(0) 1)
		getLiteral('export' g(20))
		deAllocateL
		return
		endDefinition(304228)
lbl(312599)	tailCall(x(0) 0)
		endDefinition(304096)
lbl(312604)	move(x(0) y(0))
		putConstant('import' x(0))
		putConstant('export' x(1))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord('#' 2 x(1))
		setConstant(ozc)
		setConstant('.ozp')
		move(y(1) x(0))
		call(y(0) 2)
		putConstant('System' x(1))
		callBI('Boot.manager' [x(1)]#[x(2)])
		inlineDot(x(2) exit x(1) cache)
		putConstant(0 x(0))
		deAllocateL
		tailCall(x(1) 1)
		endDefinition(1)
lbl(312654)	tailCall(x(0) 0)
