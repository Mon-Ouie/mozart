# @(#) $Header$ (LBL)

#@SET_MAKE@

# Possible values for DEFS:
#
# By default, flex generates 8-bit scanners when using table compression,
# and 7-bit scanners when using uncompressed tables (-f or -F options).
# For flex to always generate 8-bit scanners, add "-DDEFAULT_CSIZE=256"
# to DEFS.
#
# For Vax/VMS, add "-DVMS" to DEFS.
#
# For MS-DOS, add "-DMS_DOS" to DEFS.  See the directory MISC/MSDOS for
# additional info.

BUILDTOP	= @BUILDTOP@
SRCTOP		= @SRCTOP@
CFLAGS		= @CFLAGS@
CPPFLAGS	= @CPPFLAGS@
DEFS		= @DEFS@
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
OZTOOL		= @OZTOOL@

FLEX = flex.exe

SHELL = /bin/sh
srcdir = @srcdir@
VPATH = @srcdir@

YACC = @YACC@

CC = @CC@

STRIP = @STRIP@

# You normally do not need to modify anything below this point.
# ------------------------------------------------------------

CPPFLAGS = -I. -I$(srcdir) @CPPFLAGS@

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $< -o $@

HEADERS = flexdef.h version.h

PARSEC  = $(srcdir)/parse.c
SCANC   = $(srcdir)/scan.c
SOURCES = ccl.c dfa.c ecs.c gen.c main.c misc.c nfa.c $(PARSEC)\
	$(SCANC) skel.c ssort.c sym.c tblcmp.c yylex.c
OBJECTS = ccl.o dfa.o ecs.o gen.o main.o misc.o nfa.o parse.o \
	scan.o skel.o ssort.o sym.o tblcmp.o yylex.o

LIBSRCS = libmain.c libyywrap.c
LIBOBJS = libmain.o libyywrap.o

DIST_NAME = flex

# which "flex" to use to generate scan.c from scan.l
FLEX_EXEC = ./$(FLEX)
FLEX_FLAGS = -t $(PERF_REPORT)
COMPRESSION =
PERF_REPORT = -p


all: $(FLEX)
	$(STRIP) $(FLEX)
include $(BUILDTOP)/share/Makefile.boot
bootstrap: cboot-all

$(FLEX): $(OBJECTS) $(FLEXLIB)
	$(CC) $(CFLAGS) -o $(FLEX) $(LDFLAGS) $(OBJECTS) $(FLEXLIB) $(LIBS)

.l.c:
	@echo -- Warning $< newer than $@
	@sleep 5

.y.c:
	@echo -- Warning $< newer than $@
	@sleep 5


new-parser:
	$(YACC) -d $(srcdir)/parse.y
	@sed '/extern char.*malloc/d' <y.tab.c >parse.tmp
	@mv parse.tmp $(PARSEC)
	@mv y.tab.h $(srcdir)/parse.h
	@rm -f y.tab.c

parse.h: $(PARSEC)

new-scanner:
	$(FLEX_EXEC) $(FLEX_FLAGS) $(COMPRESSION) $(srcdir)/scan.l > $(SCANC)
	@sed s,\"$(srcdir)/scan.l\",\"scan.l\", < $(SCANC) > scan.tmp
	@mv scan.tmp $(SCANC)

scan.o: $(SCANC) parse.h flexdef.h config.h
yylex.o: yylex.c parse.h flexdef.h config.h

skel.c: flex.skl mkskel.sh
	$(SHELL) $(srcdir)/mkskel.sh $(srcdir)/flex.skl >skel.c

main.o: main.c flexdef.h config.h version.h
ccl.o: ccl.c flexdef.h config.h
dfa.o: dfa.c flexdef.h config.h
ecs.o: ecs.c flexdef.h config.h
gen.o: gen.c flexdef.h config.h
misc.o: misc.c flexdef.h config.h
nfa.o: nfa.c flexdef.h config.h
parse.o: $(PARSEC) flexdef.h config.h
skel.o: skel.c flexdef.h config.h
ssort.o: ssort.c flexdef.h config.h
sym.o: sym.c flexdef.h config.h
tblcmp.o: tblcmp.c flexdef.h config.h

#alloca.o: alloca.c
#	$(CC) $(CPPFLAGS) $(CFLAGS) -c -Dxmalloc=yy_flex_xmalloc alloca.c

#alloca.c: $(srcdir)/MISC/alloca.c
#	@rm -f alloca.c
#	cp $(srcdir)/MISC/alloca.c .

tags: $(SOURCES)
	ctags $(SOURCES)

TAGS: $(SOURCES)
	etags $(SOURCES)

mostlyclean:
	rm -f a.out *.bak core errs scan.tmp

clean veryclean: mostlyclean
	rm -f flex *.o alloca.c *.lint lex.yy.c lex.yy.cc \
		$(FLEXLIB) config.log config.cache

distclean: clean
	rm -f $(FLEX) tags TAGS Makefile config.status config.h stamp.h

maintainer-clean: distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	rm -f $(FLEX).man skel.c flex*.tar.gz flex*.tar.Z

# For an explanation of the following Makefile rules, see node
# `Automatic Remaking' in GNU Autoconf documentation.
Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status
config.status: configure
	./config.status --recheck
configure: configure.in
	cd $(srcdir) && autoconf
config.h: stamp-h
stamp-h: conf.in config.status
	CONFIG_FILES= CONFIG_HEADERS=config.h:conf.in ./config.status
	echo timestamp >stamp-h

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
